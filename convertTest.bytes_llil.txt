/*
Type: Mapped
Platform: x86
Architecture: x86

Segments:
r-x  0x10001000-0x10022508 
---  0x10022510-0x10022524 

Sections:
0x0098b5c0-0x0098b6c4  .idata  {Writable data}
0x0098b62c-0x0098c496  .rdata  {Read-only data}
0x0098b9a8-0x009919a7  .data  {Writable data}
0x009903e0-0x009903e0  .reloc  {External}
0x10001000-0x10007a00  .text
0x10022510-0x10022524  .synthetic_builtins  {External}
*/

.text section started  {0x10001000-0x10007a00}

10001000  int32_t sub_10001000()

   0 @ 10001000  jump([&data_100080f8].d)  {"FlushInstructionCache"}


10001006  int32_t sub_10001006()

   0 @ 10001006  jump([&data_100080ec[8]].d)

1000100c  int32_t data_1000100c = -0x7f27da01
10001010  int32_t data_10001010 = 0x25ff1000
10001014  int32_t data_10001014 = 0x100080e8

10001018  void sub_10001018()

   0 @ 10001018  push(ebp)
   1 @ 10001019  ebp = esp {__saved_ebp}
   2 @ 1000101b  esp = esp - 0x10
   3 @ 1000101e  eax = [&data_10009000].d
   4 @ 10001023  [ebp - 8 {var_c}].d = 0
   5 @ 10001027  [ebp - 4 {var_8}].d = 0
   6 @ 1000102b  push(ebx)
   7 @ 1000102c  push(edi)
   8 @ 1000102d  edi = 0xbb40e64e
   9 @ 10001032  cond:0 = eax == edi
  10 @ 10001034  ebx = 0xffff0000
  11 @ 10001039  if (cond:0) then 12 @ 0x10001048 else 31 @ 0x1000103d

  12 @ 10001048  push(esi)
  13 @ 10001049  eax = ebp - 8 {var_c}
  14 @ 1000104c  push(eax)
  15 @ 1000104d  call([&data_10008068[4]].d)  {"temInfo"}
  16 @ 10001053  esi = [ebp - 4 {var_8}].d
  17 @ 10001056  esi = esi ^ [ebp - 8 {var_c}].d
  18 @ 10001059  call([&data_10008068[8]].d)  {"nfo"}
  19 @ 1000105f  esi = esi ^ eax
  20 @ 10001061  call([&data_10008018].d)
  21 @ 10001067  esi = esi ^ eax
  22 @ 10001069  call([&data_10008024[4]].d)  {"uleBaseNameA"}
  23 @ 1000106f  esi = esi ^ eax
  24 @ 10001071  eax = ebp - 0x10 {var_14}
  25 @ 10001074  push(eax)
  26 @ 10001075  call([&data_10008074].d)
  27 @ 1000107b  eax = [ebp - 0xc {var_10}].d
  28 @ 1000107e  eax = eax ^ [ebp - 0x10 {var_14}].d
  29 @ 10001081  esi = esi ^ eax
  30 @ 10001085  if (esi != edi) then 32 @ 0x10001090 else 33 @ 0x10001087

  31 @ 1000103d  if ((ebx & eax) == 0) then 12 @ 0x10001048 else 35 @ 0x1000103f

  32 @ 10001090  if ((ebx & esi) != 0) then 38 @ 0x10001099 else 43 @ 0x10001092

  33 @ 10001087  esi = 0xbb40e64f
  34 @ 1000108c  goto 38 @ 0x10001099

  35 @ 1000103f  eax = not.d(eax)
  36 @ 10001041  [&data_10009004].d = eax
  37 @ 10001046  goto 47 @ 0x100010a8

  38 @ 10001099  [&data_10009000].d = esi
  39 @ 1000109f  esi = not.d(esi)
  40 @ 100010a1  [&data_10009004].d = esi
  41 @ 100010a7  esi = pop {var_14}
  42 @ 100010a7  goto 47 @ 0x100010a8

  43 @ 10001092  eax = esi
  44 @ 10001094  eax = eax << 0x10
  45 @ 10001097  esi = esi | eax
  46 @ 10001097  goto 38 @ 0x10001099

  47 @ 100010a8  edi = pop
  48 @ 100010a9  ebx = pop
  49 @ 100010aa  esp = ebp
  50 @ 100010aa  ebp = pop
  51 @ 100010ab  <return> jump(pop)


100010ac  int32_t sub_100010ac()

   0 @ 100010ac  push(esi)
   1 @ 100010ad  push(0x80)
   2 @ 100010b2  call([&data_1000809c].d)  {"TlsAlloc"}
   3 @ 100010b8  esi = eax
   4 @ 100010ba  push(esi)
   5 @ 100010bb  call([&data_1000808c[0xc]].d)
   6 @ 100010c1  cond:0 = esi != 0
   7 @ 100010c3  ecx = pop
   8 @ 100010c4  ecx = pop
   9 @ 100010c5  [&data_1000e45c].d = eax
  10 @ 100010ca  [&data_1000e458].d = eax
  11 @ 100010cf  if (cond:0) then 12 @ 0x100010d6 else 22 @ 0x100010d1

  12 @ 100010d6  [esi].d = 0
  13 @ 100010d9  call(sub_100014b6)
  14 @ 100010de  push(sub_100014da)
  15 @ 100010e3  call(sub_100014a4)
  16 @ 100010e8  [esp {var_8}].d = sub_100013f3
  17 @ 100010ef  call(sub_100014a4)
  18 @ 100010f4  ecx = pop
  19 @ 100010f5  eax = 0
  20 @ 100010f7  esi = pop
  21 @ 100010f8  <return> jump(pop)

  22 @ 100010d1  eax = 0
  23 @ 100010d3  eax = eax + 1
  24 @ 100010d4  esi = pop
  25 @ 100010d5  <return> jump(pop)


100010f9  int32_t __stdcall sub_100010f9(int32_t arg1)

   0 @ 100010f9  eax = [esp + 8 {arg1}].d
   1 @ 100010fd  push(ebp)
   2 @ 100010fe  ebp = 0
   3 @ 10001102  if (eax != ebp) then 4 @ 0x10001112 else 12 @ 0x1000110a

   4 @ 10001112  cond:0 = eax != 1
   5 @ 10001115  ecx = [&data_100080b4].d  {"sFree"}
   6 @ 1000111b  ecx = [ecx {0x65724673}].d
   7 @ 1000111d  push(ebx)
   8 @ 1000111e  push(esi)
   9 @ 1000111f  push(edi)
  10 @ 10001120  [&data_1000e44c].d = ecx
  11 @ 10001126  if (cond:0) then 13 @ 0x10001202 else 14 @ 0x1000112c

  12 @ 1000110a  if ([&data_10009be0].d s<= ebp) then 20 @ 0x10001146 else 22 @ &data_1000110c

  13 @ 10001202  if (eax != ebp) then 24 @ 0x100012b2 else 27 @ 0x10001208

  14 @ 1000112c  eax = [fsbase + 0x18].d
  15 @ 10001132  esi = [eax + 4].d
  16 @ 10001135  ebx = [&data_10008008].d
  17 @ 1000113b  [esp + 0x18 {arg1}].d = ebp
  18 @ 1000113f  edi = 0x1000e454
  19 @ 10001144  goto 30 @ 0x1000115c

  20 @ 10001146  eax = 0
  21 @ 10001148  goto 35 @ 0x100012b8

  22 @ 1000110c  [&data_10009be0].d = [&data_10009be0].d - 1
  23 @ 1000110c  goto 4 @ 0x10001112

  24 @ 100012b2  eax = 0
  25 @ 100012b4  eax = eax + 1
  26 @ 100012b4  goto 39 @ 0x100012b5

  27 @ 10001208  esi = [&data_10008008].d
  28 @ 1000120e  edi = 0x1000e454
  29 @ 10001213  goto 43 @ 0x10001220

  30 @ 1000115c  push(ebp)
  31 @ 1000115d  push(esi)
  32 @ 1000115e  push(edi)
  33 @ 1000115f  call(ebx)
  34 @ 10001163  if (eax != ebp) then 48 @ 0x1000114f else 49 @ 0x10001165

  35 @ 100012b8  ebp = pop
  36 @ 100012b9  temp0.d = pop
  37 @ 100012b9  esp = esp + 0xc
  38 @ 100012b9  <return> jump(temp0.d)

  39 @ 100012b5  edi = pop
  40 @ 100012b6  esi = pop
  41 @ 100012b7  ebx = pop
  42 @ 100012b7  goto 35 @ 0x100012b8

  43 @ 10001220  push(ebp)
  44 @ 10001221  push(zx.d(1))
  45 @ 10001223  push(edi)
  46 @ 10001224  call(esi)
  47 @ 10001228  if (eax != 0) then 50 @ &data_10001214+1 else 53 @ 0x1000122a

  48 @ 1000114f  if (eax == esi) then 55 @ 0x10001167 else 57 @ 0x10001151

  49 @ 10001165  goto 60 @ 0x1000116f

  50 @ 10001215  push(0x3e8)
  51 @ 1000121a  call([&data_10008064].d)
  52 @ 1000121a  goto 43 @ 0x10001220

  53 @ 1000122a  eax = [&data_1000e450].d
  54 @ 10001232  if (eax == 2) then 65 @ 0x1000123e else 72 @ 0x10001234

  55 @ 10001167  [esp + 0x18].d = 1
  56 @ 10001167  goto 60 @ 0x1000116f

  57 @ 10001151  push(0x3e8)
  58 @ 10001156  call([&data_10008064].d)
  59 @ 10001156  goto 30 @ 0x1000115c

  60 @ 1000116f  eax = [&data_1000e450].d
  61 @ 10001174  cond:1 = eax == 0
  62 @ 10001176  push(zx.d(2))
  63 @ 10001178  esi = pop
  64 @ 10001179  if (cond:1) then 76 @ 0x10001184 else 84 @ 0x1000117b

  65 @ 1000123e  push([&data_1000e45c].d)
  66 @ 10001244  ebx = [&data_1000809c[8]].d
  67 @ 1000124a  call(ebx)
  68 @ 1000124c  ebp = eax
  69 @ 1000124e  cond:2 = ebp == 0
  70 @ 10001250  ecx = pop
  71 @ 10001251  if (cond:2) then 87 @ 0x1000129f else 92 @ 0x10001253

  72 @ 10001234  push(zx.d(0x1f))
  73 @ 10001236  call(sub_10001648), esp += 4
  74 @ 1000123b  ecx = pop
  75 @ 1000123c  goto 24 @ 0x100012b2

  76 @ 10001184  push(&data_10008110[8])  {"rror"}
  77 @ 10001189  push(&data_10008110)  {"GetLastError"}
  78 @ 1000118e  [&data_1000e450].d = 1
  79 @ 10001198  call(sub_10001642)
  80 @ 1000119d  cond:3 = eax == 0
  81 @ 1000119f  ecx = pop
  82 @ 100011a0  ecx = pop
  83 @ 100011a1  if (cond:3) then 97 @ 0x100011aa else 103 @ 0x100011a3

  84 @ 1000117b  push(zx.d(0x1f))
  85 @ 1000117d  call(sub_10001648), esp += 4
  86 @ 10001182  goto 105 @ 0x100011c0

  87 @ 1000129f  push(zx.d(0))
  88 @ 100012a1  push(edi)
  89 @ 100012a2  [&data_1000e450].d = 0
  90 @ 100012ac  call([&data_10008068].d)  {"tSystemInfo"}
  91 @ 100012ac  goto 24 @ 0x100012b2

  92 @ 10001253  push([&data_1000e458].d)
  93 @ 10001259  call(ebx)
  94 @ 1000125b  ecx = pop
  95 @ 1000125c  esi = eax
  96 @ 1000125e  goto 108 @ 0x10001280

  97 @ 100011aa  push(&data_100080f8[0x14])  {"e"}
  98 @ 100011af  push(&data_100080f8[0x10])  {"Cache"}
  99 @ 100011b4  call(sub_1000163c), esp += 4
 100 @ 100011b9  ecx = pop
 101 @ 100011ba  [&data_1000e450].d = esi
 102 @ 100011ba  goto 105 @ 0x100011c0

 103 @ 100011a3  eax = 0
 104 @ 100011a5  goto 39 @ 0x100012b5

 105 @ 100011c0  cond:4 = [esp + 0x1c].d != ebp
 106 @ 100011c4  ecx = pop
 107 @ 100011c5  if (cond:4) then 110 @ 0x100011d5 else 111 @ &data_100011c4+3

 108 @ 10001280  esi = esi - 4
 109 @ 10001285  if (esi u>= ebp) then 115 @ 0x10001263 else 116 @ 0x10001287

 110 @ 100011d5  if ([&data_1000e460].d == ebp) then 123 @ 0x100011f5 else 125 @ 0x100011d7

 111 @ 100011c7  push(ebp)
 112 @ 100011c8  push(edi)
 113 @ 100011c9  call([&data_10008068].d)  {"tSystemInfo"}
 114 @ 100011c9  goto 110 @ 0x100011d5

 115 @ 10001263  if ([esi].d == 0) then 108 @ 0x10001280 else 130 @ 0x10001265

 116 @ 10001287  push(ebp)
 117 @ 10001288  call([&data_100080d8].d)
 118 @ 1000128e  ecx = pop
 119 @ 1000128f  call([&data_1000809c[4]].d)  {"lloc"}
 120 @ 10001295  [&data_1000e458].d = eax
 121 @ 1000129a  [&data_1000e45c].d = eax
 122 @ 1000129a  goto 87 @ 0x1000129f

 123 @ 100011f5  [&data_10009be0].d = [&data_10009be0].d + 1
 124 @ 100011fb  goto 24 @ 0x100012b2

 125 @ 100011d7  push(&data_1000e460)
 126 @ 100011dc  call(sub_10001580)
 127 @ 100011e1  cond:5 = eax == 0
 128 @ 100011e3  ecx = pop
 129 @ 100011e4  if (cond:5) then 123 @ 0x100011f5 else 134 @ 0x100011e6

 130 @ 10001265  eax = [esi].d
 131 @ 10001267  [esp + 0x18].d = eax
 132 @ 1000126b  call([&data_1000809c[4]].d)  {"lloc"}
 133 @ 10001275  if ([esp + 0x18].d == eax) then 108 @ 0x10001280 else 139 @ 0x10001277

 134 @ 100011e6  push([esp + 0x1c].d)
 135 @ 100011ea  push(esi)
 136 @ 100011eb  push([esp + 0x1c].d)
 137 @ 100011ef  call([&data_1000e460].d)
 138 @ 100011ef  goto 123 @ 0x100011f5

 139 @ 10001277  push([esp + 0x18].d)
 140 @ 1000127b  call(ebx)
 141 @ 1000127d  ecx = pop
 142 @ 1000127e  call(eax)
 143 @ 1000127e  goto 108 @ 0x10001280


100012bc  int32_t sub_100012bc()
// This function has unresolved stack usage. View graph of stack usage to resolve.

   0 @ 100012bc  push(zx.d(0x10))
   1 @ 100012be  push(&data_10008528)
   2 @ 100012c3  call(sub_10001674)
   3 @ 100012c8  edi = ecx
   4 @ 100012ca  esi = edx
   5 @ 100012cc  ebx = [ebp + 8].d
   6 @ 100012cf  eax = 0
   7 @ 100012d1  eax = eax + 1
   8 @ 100012d2  [ebp - 0x1c].d = eax
   9 @ 100012d5  ecx = 0
  10 @ 100012d7  [ebp - 4].d = ecx
  11 @ 100012da  [&data_10009008].d = esi
  12 @ 100012e0  [ebp - 4].d = eax
  13 @ 100012e5  if (esi != ecx) then 14 @ 0x100012f9 else 15 @ 0x100012ed

  14 @ 100012f9  if (esi == eax) then 16 @ 0x10001300 else 18 @ 0x100012fe

  15 @ 100012ed  if ([&data_10009be0].d != ecx) then 14 @ 0x100012f9 else 19 @ 0x100012ef

  16 @ 10001300  eax = [&data_1000813c].d  {"GetProcAddress"}
  17 @ 10001307  if (eax == ecx) then 21 @ 0x10001315 else 22 @ 0x10001309

  18 @ 100012fe  if (esi != 2) then 28 @ 0x1000132e else 16 @ 0x10001300

  19 @ 100012ef  [ebp - 0x1c].d = ecx
  20 @ 100012f2  goto 34 @ 0x100013ae

  21 @ 10001315  if ([ebp - 0x1c].d == 0) then 34 @ 0x100013ae else 40 @ 0x1000131b

  22 @ 10001309  push(edi)
  23 @ 1000130a  push(esi)
  24 @ 1000130b  push(ebx)
  25 @ 1000130c  call(eax)
  26 @ 1000130e  [ebp - 0x1c].d = eax
  27 @ 1000130e  goto 21 @ 0x10001315

  28 @ 1000132e  push(edi)
  29 @ 1000132f  push(esi)
  30 @ 10001330  push(ebx)
  31 @ 10001331  call(sub_10001654), esp += 0xc
  32 @ 10001336  [ebp - 0x1c].d = eax
  33 @ 1000133c  if (esi != 1) then 46 @ 0x10001364 else 47 @ 0x10001340  {"u WPS"}

  34 @ 100013ae  [ebp - 4].d = 0
  35 @ 100013b2  [ebp - 4].d = -2
  36 @ 100013b9  call(sub_100013c7)
  37 @ 100013be  eax = [ebp - 0x1c].d
  38 @ 100013c1  call(sub_100016b9)
  39 @ 100013c6  <return> jump(pop)

  40 @ 1000131b  push(edi)
  41 @ 1000131c  push(esi)
  42 @ 1000131d  push(ebx)
  43 @ 1000131e  call(sub_100010f9), esp += 0xc
  44 @ 10001323  [ebp - 0x1c].d = eax
  45 @ 10001328  if (eax == 0) then 34 @ 0x100013ae else 28 @ 0x1000132e

  46 @ 10001364  if (esi == 0) then 48 @ 0x1000136b else 53 @ 0x10001369

  47 @ 10001340  if (eax != 0) then 46 @ 0x10001364 else 54 @ 0x10001342

  48 @ 1000136b  push(edi)
  49 @ 1000136c  push(esi)
  50 @ 1000136d  push(ebx)
  51 @ 1000136e  call(sub_100010f9), esp += 0xc
  52 @ 10001375  if (eax != 0) then 64 @ 0x1000137e else 65 @ 0x10001377

  53 @ 10001369  if (esi != 3) then 34 @ 0x100013ae else 48 @ 0x1000136b

  54 @ 10001342  push(edi)
  55 @ 10001343  push(eax)
  56 @ 10001344  push(ebx)
  57 @ 10001345  call(sub_10001654), esp += 0xc
  58 @ 1000134a  push(edi)
  59 @ 1000134b  push(zx.d(0))
  60 @ 1000134d  push(ebx)
  61 @ 1000134e  call(sub_100010f9), esp += 0xc
  62 @ 10001353  eax = [&data_1000813c].d  {"GetProcAddress"}
  63 @ 1000135a  if (eax == 0) then 46 @ 0x10001364 else 67 @ 0x1000135c

  64 @ 1000137e  if ([ebp - 0x1c].d == 0) then 34 @ 0x100013ae else 72 @ 0x10001380

  65 @ 10001377  [ebp - 0x1c].d = [ebp - 0x1c].d & eax
  66 @ 10001377  goto 64 @ 0x1000137e

  67 @ 1000135c  push(edi)
  68 @ 1000135d  push(zx.d(0))
  69 @ 1000135f  push(ebx)
  70 @ 10001360  call(eax)
  71 @ 10001360  goto 46 @ 0x10001364

  72 @ 10001380  eax = [&data_1000813c].d  {"GetProcAddress"}
  73 @ 10001387  if (eax == 0) then 34 @ 0x100013ae else 74 @ 0x10001389

  74 @ 10001389  push(edi)
  75 @ 1000138a  push(esi)
  76 @ 1000138b  push(ebx)
  77 @ 1000138c  call(eax)
  78 @ 1000138e  [ebp - 0x1c].d = eax
  79 @ 10001391  goto 34 @ 0x100013ae


10001393  int32_t sub_10001393(void* arg1 @ ebp)

   0 @ 10001393  eax = [ebp - 0x14].d
   1 @ 10001396  ecx = [eax].d
   2 @ 10001398  ecx = [ecx].d
   3 @ 1000139a  [ebp - 0x20].d = ecx
   4 @ 1000139d  push(eax)
   5 @ 1000139e  push(ecx)
   6 @ 1000139f  call(sub_1000164e)
   7 @ 100013a4  ecx = pop
   8 @ 100013a5  ecx = pop
   9 @ 100013a6  <return> jump(pop)


100013a7  int32_t sub_100013a7(void* arg1 @ ebp)

   0 @ 100013a7  esp = [ebp - 0x18].d
   1 @ 100013aa  [ebp - 0x1c].d = 0
   2 @ 100013ae  [ebp - 4].d = 0
   3 @ 100013b2  [ebp - 4].d = -2
   4 @ 100013b9  call(sub_100013c7)
   5 @ 100013be  eax = [ebp - 0x1c].d
   6 @ 100013c1  call(sub_100016b9)
   7 @ 100013c6  <return> jump(pop)


100013c7  int32_t sub_100013c7()

   0 @ 100013c7  [&data_10009008].d = -1
   1 @ 100013d1  <return> jump(pop)


100013d2  int32_t __stdcall sub_100013d2(int32_t arg1, int32_t arg2, int32_t arg3)

   0 @ 100013d7  if ([esp + 8 {arg2}].d != 1) then 1 @ 0x100013de else 9 @ 0x100013d9

   1 @ 100013de  push([esp + 4 {arg1}].d)
   2 @ 100013e2  ecx = [esp + 0x10 {arg3}].d
   3 @ 100013e6  edx = [esp + 0xc {arg2}].d
   4 @ 100013ea  call(sub_100012bc)
   5 @ 100013ef  ecx = pop
   6 @ 100013f0  temp0.d = pop
   7 @ 100013f0  esp = esp + 0xc
   8 @ 100013f0  <return> jump(temp0.d)

   9 @ 100013d9  call(sub_10001018)
  10 @ 100013d9  goto 1 @ 0x100013de


100013f3  int32_t sub_100013f3()

   0 @ 100013f3  push(0x10009be4)
   1 @ 100013f8  call(sub_100016f0)
   2 @ 100013fd  ecx = pop
   3 @ 100013fe  <return> jump(pop)


100013ff  int32_t sub_100013ff()

   0 @ 100013ff  push(zx.d(0x14))
   1 @ 10001401  push(&data_10008550)
   2 @ 10001406  call(sub_10001674), esp += 8
   3 @ 1000140b  push([&data_1000e45c].d)
   4 @ 10001411  esi = [&data_1000809c[8]].d
   5 @ 10001417  call(esi)
   6 @ 10001419  ecx = pop
   7 @ 1000141a  [ebp - 0x1c].d = eax
   8 @ 10001420  if (eax != -1) then 9 @ 0x1000142e else 43 @ 0x10001422

   9 @ 1000142e  push(zx.d(8))
  10 @ 10001430  call(sub_10001702)
  11 @ 10001435  ecx = pop
  12 @ 10001436  [ebp - 4].d = 0
  13 @ 1000143a  push([&data_1000e45c].d)
  14 @ 10001440  call(esi)
  15 @ 10001442  [ebp - 0x1c].d = eax
  16 @ 10001445  push([&data_1000e458].d)
  17 @ 1000144b  call(esi)
  18 @ 1000144d  ecx = pop
  19 @ 1000144e  ecx = pop
  20 @ 1000144f  [ebp - 0x20].d = eax
  21 @ 10001452  eax = ebp - 0x20
  22 @ 10001455  push(eax)
  23 @ 10001456  eax = ebp - 0x1c
  24 @ 10001459  push(eax)
  25 @ 1000145a  push([ebp + 8].d)
  26 @ 1000145d  esi = [&data_1000808c[0xc]].d
  27 @ 10001463  call(esi)
  28 @ 10001465  ecx = pop
  29 @ 10001466  push(eax)
  30 @ 10001467  call(sub_100016fc)
  31 @ 1000146c  [ebp - 0x24].d = eax
  32 @ 1000146f  push([ebp - 0x1c].d)
  33 @ 10001472  call(esi)
  34 @ 10001474  [&data_1000e45c].d = eax
  35 @ 10001479  push([ebp - 0x20].d)
  36 @ 1000147c  call(esi)
  37 @ 1000147e  esp = esp + 0x14
  38 @ 10001481  [&data_1000e458].d = eax
  39 @ 10001486  [ebp - 4].d = -2
  40 @ 1000148d  call(sub_1000149b)
  41 @ 10001492  eax = [ebp - 0x24].d
  42 @ 10001492  goto 47 @ 0x10001495

  43 @ 10001422  push([ebp + 8].d)
  44 @ 10001425  call([&data_100080cc].d)  {"VirtualFree"}
  45 @ 1000142b  ecx = pop
  46 @ 1000142c  goto 47 @ 0x10001495

  47 @ 10001495  call(sub_100016b9)
  48 @ 1000149a  <return> jump(pop)


1000149b  int32_t sub_1000149b()

   0 @ 1000149b  push(zx.d(8))
   1 @ 1000149d  call(sub_100016f6)
   2 @ 100014a2  ecx = pop
   3 @ 100014a3  <return> jump(pop)


100014a4  int32_t sub_100014a4(int32_t arg1)

   0 @ 100014a4  push([esp + 4 {arg1}].d)
   1 @ 100014a8  call(sub_100013ff)
   2 @ 100014ad  temp0.d = eax
   3 @ 100014ad  eax = neg.d(eax)
   4 @ 100014ad  flag:c = temp0.d != 0
   5 @ 100014af  eax = sbb.d(eax, eax, flag:c)
   6 @ 100014b1  eax = neg.d(eax)
   7 @ 100014b3  ecx = pop
   8 @ 100014b4  eax = eax - 1
   9 @ 100014b5  <return> jump(pop)


100014b6  void sub_100014b6()

   0 @ 100014b6  push(esi)
   1 @ 100014b7  push(edi)
   2 @ 100014b8  eax = &data_1000851c
   3 @ 100014bd  edi = &data_1000851c
   4 @ 100014c2  cond:0 = eax u>= edi
   5 @ 100014c4  esi = eax
   6 @ 100014c6  if (cond:0) then 7 @ 0x100014d7 else 10 @ 0x100014c8

   7 @ 100014d7  edi = pop
   8 @ 100014d8  esi = pop
   9 @ 100014d9  <return> jump(pop)

  10 @ 100014c8  eax = [esi].d
  11 @ 100014cc  if (eax == 0) then 12 @ 0x100014d0 else 14 @ 0x100014ce

  12 @ 100014d0  esi = esi + 4
  13 @ 100014d5  if (esi u< edi) then 10 @ 0x100014c8 else 7 @ 0x100014d7

  14 @ 100014ce  call(eax)
  15 @ 100014ce  goto 12 @ 0x100014d0


100014da  void sub_100014da()

   0 @ 100014da  push(esi)
   1 @ 100014db  push(edi)
   2 @ 100014dc  eax = &data_10008524
   3 @ 100014e1  edi = &data_10008524
   4 @ 100014e6  cond:0 = eax u>= edi
   5 @ 100014e8  esi = eax
   6 @ 100014ea  if (cond:0) then 7 @ 0x100014fb else 10 @ 0x100014ec

   7 @ 100014fb  edi = pop
   8 @ 100014fc  esi = pop
   9 @ 100014fd  <return> jump(pop)

  10 @ 100014ec  eax = [esi].d
  11 @ 100014f0  if (eax == 0) then 12 @ 0x100014f4 else 14 @ 0x100014f2

  12 @ 100014f4  esi = esi + 4
  13 @ 100014f9  if (esi u< edi) then 10 @ 0x100014ec else 7 @ 0x100014fb

  14 @ 100014f2  call(eax)
  15 @ 100014f2  goto 12 @ 0x100014f4

100014fe                                                                                            cc cc                                ..

10001500  int32_t sub_10001500(int16_t* arg1)

   0 @ 10001500  ecx = [esp + 4 {arg1}].d
   1 @ 10001509  if ([ecx].w == 0x5a4d) then 2 @ 0x1000150e else 5 @ 0x1000150b

   2 @ 1000150e  eax = [ecx + 0x3c].d
   3 @ 10001511  eax = eax + ecx
   4 @ 10001519  if ([eax].d != 0x4550) then 5 @ 0x1000150b else 7 @ 0x1000151b

   5 @ 1000150b  eax = 0
   6 @ 1000150d  <return> jump(pop)

   7 @ 1000151b  ecx = 0
   8 @ 10001523  cl = [eax + 0x18].w == 0x10b
   9 @ 10001526  eax = ecx
  10 @ 10001528  <return> jump(pop)

10001529                             cc cc cc cc cc cc cc                                                           .......

10001530  void* sub_10001530(void* arg1, int32_t arg2)

   0 @ 10001530  eax = [esp + 4 {arg1}].d
   1 @ 10001534  ecx = [eax + 0x3c].d
   2 @ 10001537  ecx = ecx + eax
   3 @ 10001539  eax = zx.d([ecx + 0x14].w)
   4 @ 1000153d  push(ebx)
   5 @ 1000153e  push(esi)
   6 @ 1000153f  esi = zx.d([ecx + 6].w)
   7 @ 10001543  edx = 0
   8 @ 10001545  cond:0 = esi u<= 0
   9 @ 10001547  push(edi)
  10 @ 10001548  eax = eax + ecx + 0x18
  11 @ 1000154c  if (cond:0) then 12 @ 0x1000156c else 14 @ 0x1000154e

  12 @ 1000156c  eax = 0
  13 @ 1000156c  goto 16 @ 0x1000156e

  14 @ 1000154e  edi = [esp + 0x14 {arg2}].d
  15 @ 1000154e  goto 20 @ 0x10001552

  16 @ 1000156e  edi = pop
  17 @ 1000156f  esi = pop
  18 @ 10001570  ebx = pop
  19 @ 10001571  <return> jump(pop)

  20 @ 10001552  ecx = [eax + 0xc].d
  21 @ 10001557  if (edi u< ecx) then 22 @ 0x10001562 else 25 @ 0x10001559

  22 @ 10001562  edx = edx + 1
  23 @ 10001565  eax = eax + 0x28
  24 @ 1000156a  if (edx u< esi) then 20 @ 0x10001552 else 12 @ 0x1000156c

  25 @ 10001559  ebx = [eax + 8].d
  26 @ 1000155c  ebx = ebx + ecx
  27 @ 10001560  if (edi u< ebx) then 16 @ 0x1000156e else 22 @ 0x10001562

10001572                                                        cc cc cc cc cc cc cc cc cc cc cc cc cc cc                    ..............

10001580  int32_t sub_10001580(int32_t arg1)

   0 @ 10001580  push(ebp)
   1 @ 10001581  ebp = esp {__saved_ebp}
   2 @ 10001583  push(zx.d(-2))
   3 @ 10001585  push(0x10008570)
   4 @ 1000158a  push(sub_100016cd)
   5 @ 1000158f  eax = [fsbase].d
   6 @ 10001595  push(eax)
   7 @ 10001596  esp = esp - 8
   8 @ 10001599  push(ebx)
   9 @ 1000159a  push(esi)
  10 @ 1000159b  push(edi)
  11 @ 1000159c  eax = [&data_10009000].d
  12 @ 100015a1  [ebp - 8 {var_c_1}].d = [ebp - 8 {var_c}].d ^ eax
  13 @ 100015a4  eax = eax ^ ebp {__saved_ebp}
  14 @ 100015a6  push(eax)
  15 @ 100015a7  eax = ebp - 0x10 {var_14}
  16 @ 100015aa  [fsbase].d = eax {var_14}
  17 @ 100015b0  [ebp - 0x18 {var_1c}].d = esp {var_2c}
  18 @ 100015b3  [ebp - 4 {var_8_1}].d = 0
  19 @ 100015ba  push(0x10000000)
  20 @ 100015bf  call(sub_10001500)
  21 @ 100015c4  esp = esp + 4
  22 @ 100015c9  if (eax == 0) then 23 @ 0x10001620 else 34 @ 0x100015cb

  23 @ 10001620  [ebp - 4 {var_8_3}].d = -2
  24 @ 10001627  eax = 0
  25 @ 10001629  ecx = [ebp - 0x10 {var_14}].d
  26 @ 1000162c  [fsbase].d = ecx
  27 @ 10001633  ecx = pop
  28 @ 10001634  edi = pop
  29 @ 10001635  esi = pop
  30 @ 10001636  ebx = pop
  31 @ 10001637  esp = ebp
  32 @ 10001639  ebp = pop
  33 @ 1000163a  <return> jump(pop)

  34 @ 100015cb  eax = [ebp + 8 {arg1}].d
  35 @ 100015ce  eax = eax - 0x10000000
  36 @ 100015d3  push(eax)
  37 @ 100015d4  push(0x10000000)
  38 @ 100015d9  call(sub_10001530)
  39 @ 100015de  esp = esp + 8
  40 @ 100015e3  if (eax == 0) then 23 @ 0x10001620 else 41 @ 0x100015e5

  41 @ 100015e5  eax = [eax + 0x24].d
  42 @ 100015e8  eax = eax u>> 0x1f
  43 @ 100015eb  eax = not.d(eax)
  44 @ 100015ed  eax = eax & 1
  45 @ 100015f0  [ebp - 4 {var_8_2}].d = -2
  46 @ 100015f7  ecx = [ebp - 0x10 {var_14}].d
  47 @ 100015fa  [fsbase].d = ecx
  48 @ 10001601  ecx = pop
  49 @ 10001602  edi = pop
  50 @ 10001603  esi = pop
  51 @ 10001604  ebx = pop
  52 @ 10001605  esp = ebp
  53 @ 10001607  ebp = pop
  54 @ 10001608  <return> jump(pop)


10001609  int32_t sub_10001609(void* arg1 @ ebp)

   0 @ 10001609  eax = [ebp - 0x14].d
   1 @ 1000160c  ecx = [eax].d
   2 @ 1000160e  eax = [ecx].d
   3 @ 10001610  edx = 0
   4 @ 10001617  dl = eax == -0x3ffffffb
   5 @ 1000161a  eax = edx
   6 @ 1000161c  <return> jump(pop)

1000161d                                                                                         8b 65 e8                               .e.
1000163b                                                                                   cc                                         .

1000163c  int32_t sub_1000163c()

   0 @ 1000163c  jump([&data_100080a8].d)  {"SleepEx"}


10001642  int32_t sub_10001642()

   0 @ 10001642  jump([&data_100080a8[4]].d)  {"pEx"}


10001648  int32_t sub_10001648()

   0 @ 10001648  jump([&data_100080b0].d)


1000164e  int32_t sub_1000164e()

   0 @ 1000164e  jump([&data_100080b4[4]].d)  {"e"}


10001654  int32_t __stdcall sub_10001654(int32_t arg1, int32_t arg2)

   0 @ 10001659  if ([esp + 8 {arg2}].d != 1) then 1 @ 0x1000166e else 6 @ 0x10001662

   1 @ 1000166e  eax = 0
   2 @ 10001670  eax = eax + 1
   3 @ 10001671  temp0.d = pop
   4 @ 10001671  esp = esp + 0xc
   5 @ 10001671  <return> jump(temp0.d)

   6 @ 10001662  if ([&data_1000813c].d != 0) then 1 @ 0x1000166e else 7 @ 0x10001664  {"GetProcAddress"}

   7 @ 10001664  push([esp + 4 {arg1}].d)
   8 @ 10001668  call([&data_10008004].d)
   9 @ 10001668  goto 1 @ 0x1000166e


10001674  void* sub_10001674(int32_t arg1 @ esi, int32_t arg2 @ edi, void* arg3)

   0 @ 10001674  push(sub_100016cd)
   1 @ 10001679  push([fsbase].d)
   2 @ 10001680  eax = [esp + 0x10 {arg_8}].d
   3 @ 10001684  [esp + 0x10 {arg_8}].d = ebp
   4 @ 10001688  ebp = esp + 0x10 {arg_8}
   5 @ 1000168c  esp = esp - eax
   6 @ 1000168e  push(ebx)
   7 @ 1000168f  push(esi)
   8 @ 10001690  push(edi)
   9 @ 10001691  eax = [&data_10009000].d
  10 @ 10001696  [ebp - 4 {arg3}].d = [ebp - 4 {arg3}].d ^ eax
  11 @ 10001699  eax = eax ^ ebp {arg_8}
  12 @ 1000169b  push(eax)
  13 @ 1000169c  [ebp - 0x18 {var_10}].d = esp
  14 @ 1000169f  push([ebp - 8 {__return_addr}].d)
  15 @ 100016a2  eax = [ebp - 4 {arg3}].d
  16 @ 100016a5  [ebp - 4 {arg3}].d = -2
  17 @ 100016ac  [ebp - 8 {__return_addr}].d = eax
  18 @ 100016af  eax = ebp - 0x10 {var_8}
  19 @ 100016b2  [fsbase].d = eax {var_8}
  20 @ 100016b8  <return> jump(pop)


100016b9  int32_t sub_100016b9(int32_t* arg1 @ ebp, int32_t arg2, int32_t arg3, int32_t arg4)

   0 @ 100016b9  ecx = [ebp - 0x10].d
   1 @ 100016bc  [fsbase].d = ecx
   2 @ 100016c3  ecx = pop
   3 @ 100016c4  edi = pop
   4 @ 100016c5  edi = pop
   5 @ 100016c6  esi = pop
   6 @ 100016c7  ebx = pop
   7 @ 100016c8  esp = ebp
   8 @ 100016ca  ebp = pop
   9 @ 100016cb  push(ecx)
  10 @ 100016cc  <return> jump(pop)


100016cd  int32_t sub_100016cd(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

   0 @ 100016cd  push([esp + 0x10 {arg4}].d)
   1 @ 100016d1  push([esp + 0x10 {arg3}].d)
   2 @ 100016d5  push([esp + 0x10 {arg2}].d)
   3 @ 100016d9  push([esp + 0x10 {arg1}].d)
   4 @ 100016dd  push(&data_10001708)
   5 @ 100016e2  push(&data_10009000)
   6 @ 100016e7  call(sub_10001718)
   7 @ 100016ec  esp = esp + 0x18
   8 @ 100016ef  <return> jump(pop)


100016f0  int32_t sub_100016f0()

   0 @ 100016f0  jump([&data_100080bc].d)  {"GetTickCount"}


100016f6  int32_t sub_100016f6()

   0 @ 100016f6  jump([&data_100080bc[4]].d)  {"ickCount"}


100016fc  int32_t sub_100016fc()

   0 @ 100016fc  jump([&data_100080bc[8]].d)  {"ount"}


10001702  int32_t sub_10001702()

   0 @ 10001702  jump([&data_100080bc[0xc]].d)

10001708  data_10001708:
10001708                          3b 0d 00 90 00 10 75 02 f3 c3 e9 07 00 00 00 cc                                  ;.....u.........

10001718  int32_t sub_10001718()

   0 @ 10001718  jump([&data_100080cc[4]].d)  {"ualFree"}

1000171e                                                                                            55 8b                                U.
10001720  ec 81 ec 28 03 00 00 a3 f8 9c 00 10 89 0d f4 9c 00 10 89 15 f0 9c 00 10 89 1d ec 9c 00 10 89 35  ...(...........................5
10001740  e8 9c 00 10 89 3d e4 9c 00 10 66 8c 15 10 9d 00 10 66 8c 0d 04 9d 00 10 66 8c 1d e0 9c 00 10 66  .....=....f......f......f......f
10001760  8c 05 dc 9c 00 10 66 8c 25 d8 9c 00 10 66 8c 2d d4 9c 00 10 9c 8f 05 08 9d 00 10 8b 45 00 a3 fc  ......f.%....f.-............E...
10001780  9c 00 10 8b 45 04 a3 00 9d 00 10 8d 45 08 a3 0c 9d 00 10 8b 85 e0 fc ff ff c7 05 48 9c 00 10 01  ....E.......E..............H....
100017a0  00 01 00 a1 00 9d 00 10 a3 fc 9b 00 10 c7 05 f0 9b 00 10 09 04 00 c0 c7 05 f4 9b 00 10 01 00 00  ................................
100017c0  00 a1 00 90 00 10 89 85 d8 fc ff ff a1 04 90 00 10 89 85 dc fc ff ff ff 15 5c 80 00 10 a3 40 9c  .........................\....@.
100017e0  00 10 6a 01 e8 39 00 00 00 59 6a 00 ff 15 60 80 00 10 68 40 81 00 10 ff 15 00 80 00 10 83 3d 40  ..j..9...Yj...`...h@..........=@
10001800  9c 00 10 00 75 08 6a 01 e8 15 00 00 00 59 68 09 04 00 c0 ff 15 54 80 00 10 50 ff 15 78 80 00 10  ....u.j......Yh......T...P..x...
10001820  c9 c3                                                                                            ..

10001822  int32_t sub_10001822()

   0 @ 10001822  jump([&data_100080cc[8]].d)  {"ree"}

10001828                          cc cc cc cc cc cc cc cc 33 c0 85 ff 74 02 89 07 66 81 3e 4d 5a 75 07 8b          ........3...t...f.>MZu..
10001840  4e 3c 03 ce eb 02 8b ce 81 39 50 45 00 00 74 0b 6a 0d ff 15 40 80 00 10 33 c0 c3 8b 91 80 00 00  N<.......9PE..t.j...@...3.......
10001860  00 85 d2 74 0f 85 ff 8d 04 32 74 08 8b 89 84 00 00 00 89 0f c3 cc cc cc cc cc cc cc cc cc cc cc  ...t.....2t.....................

10001880  int32_t __convention("regparm") sub_10001880(int32_t arg1, int32_t* arg2, int32_t arg3, int32_t* arg4)

   0 @ 10001880  eax = ecx
   1 @ 10001882  eax = neg.d(eax)
   2 @ 10001884  [edx].d = eax
   3 @ 10001886  eax = [esp + 4 {arg4}].d
   4 @ 1000188a  eax = [eax].d
   5 @ 1000188e  if (eax == 0) then 6 @ 0x10001895 else 8 @ 0x10001890

   6 @ 10001895  eax = 0
   7 @ 10001895  goto 10 @ 0x10001897

   8 @ 10001890  eax = [eax + 0xc].d
   9 @ 10001893  goto 10 @ 0x10001897

  10 @ 10001897  push(eax)
  11 @ 10001898  push(ecx)
  12 @ 10001899  push(0x100083fc)
  13 @ 1000189e  edx = edx + 0xc
  14 @ 100018a1  push(zx.d(0x41))
  15 @ 100018a3  push(edx)
  16 @ 100018a4  call([&data_1000808c[4]].d)  {"ThreadId"}
  17 @ 100018aa  esp = esp + 0x14
  18 @ 100018ad  eax = 1
  19 @ 100018b2  <return> jump(pop)

100018b3                                                           cc cc cc cc cc cc cc cc cc cc cc cc cc                     .............

100018c0  void __convention("regparm") sub_100018c0(char* arg1)

   0 @ 100018c3  if ([eax].b != -0x17) then 1 @ 0x100018cf else 2 @ 0x100018c5

   1 @ 100018cf  if ([eax].b != -1) then 5 @ 0x100018dc else 6 @ 0x100018d5

   2 @ 100018c5  ecx = [eax + 1].d
   3 @ 100018c8  eax = ecx + eax + 5
   4 @ 100018c8  goto 1 @ 0x100018cf

   5 @ 100018dc  <return> jump(pop)

   6 @ 100018d5  if ([eax + 1].b != 0x25) then 5 @ 0x100018dc else 7 @ 0x100018d7

   7 @ 100018d7  edx = [eax + 2].d
   8 @ 100018da  eax = [edx].d
   9 @ 100018da  goto 5 @ 0x100018dc

100018dd                                                                                         cc cc cc                               ...

100018e0  void* __convention("fastcall") sub_100018e0(int32_t arg1)

   0 @ 100018e0  esp = esp - 0x1c
   1 @ 100018e3  eax = 0
   2 @ 100018e5  [esp {s}].d = eax
   3 @ 100018e8  [esp + 4].d = eax
   4 @ 100018ec  [esp + 8].d = eax
   5 @ 100018f0  [esp + 0xc].d = eax
   6 @ 100018f4  [esp + 0x10].d = eax
   7 @ 100018f8  [esp + 0x14].d = eax
   8 @ 100018fc  [esp + 0x18].d = eax
   9 @ 10001900  push(zx.d(0x1c))
  10 @ 10001902  eax = esp + 4 {s}
  11 @ 10001906  push(eax)
  12 @ 10001907  push(ecx)
  13 @ 10001908  call([&data_10008014].d)
  14 @ 1000190e  temp0.d = eax
  15 @ 1000190e  eax = neg.d(eax)
  16 @ 1000190e  flag:c = temp0.d != 0
  17 @ 10001910  eax = sbb.d(eax, eax, flag:c)
  18 @ 10001912  eax = eax & [esp + 4 {var_24}].d
  19 @ 10001916  esp = esp + 0x1c
  20 @ 10001919  <return> jump(pop)

1000191a                                                                                cc cc cc cc cc cc                            ......

10001920  int32_t sub_10001920(int32_t arg1 @ esi, int32_t* arg2 @ edi)

   0 @ 10001920  eax = [edi].d
   1 @ 10001922  cond:0 = eax s< 0
   2 @ 10001924  push(ebx)
   3 @ 10001925  ebx = [&data_1000808c[4]].d  {"ThreadId"}
   4 @ 1000192b  if (cond:0) then 5 @ 0x10001940 else 14 @ 0x1000192d

   5 @ 10001940  ecx = edi + 0xc
   6 @ 10001943  push(ecx)
   7 @ 10001944  push(eax)
   8 @ 10001945  push(&data_100083c0)  {"bleThreadLibraryCalls"}
   9 @ 1000194a  push(0x1000)
  10 @ 1000194f  push(esi)
  11 @ 10001950  call(ebx)
  12 @ 10001952  esp = esp + 0x14
  13 @ 10001952  goto 21 @ 0x10001955

  14 @ 1000192d  push(eax)
  15 @ 1000192e  push(&data_10008398)
  16 @ 10001933  push(0x1000)
  17 @ 10001938  push(esi)
  18 @ 10001939  call(ebx)
  19 @ 1000193b  esp = esp + 0x10
  20 @ 1000193e  goto 21 @ 0x10001955

  21 @ 10001955  push(zx.d(0))
  22 @ 10001957  push(esi)
  23 @ 10001958  call([&data_1000808c].d)  {"rentThreadId"}
  24 @ 1000195e  edx = [edi + 4].d
  25 @ 10001961  cl = [edx].b
  26 @ 10001963  esp = esp + 8
  27 @ 10001968  if (cl == 0) then 28 @ 0x10001983 else 43 @ 0x1000196a

  28 @ 10001983  edx = [edi + 8].d
  29 @ 10001986  ecx = eax
  30 @ 10001988  push(edx)
  31 @ 10001989  ecx = ecx - esi
  32 @ 1000198b  ecx = ecx s>> 1
  33 @ 1000198d  ecx = ecx u>> 1
  34 @ 1000198f  edx = 0x1000
  35 @ 10001994  push(&data_100083f0)  {"LibraryA"}
  36 @ 10001999  edx = edx - ecx
  37 @ 1000199b  push(edx)
  38 @ 1000199c  push(eax)
  39 @ 1000199d  call(ebx)
  40 @ 1000199f  esp = esp + 0x10
  41 @ 100019a2  ebx = pop
  42 @ 100019a3  <return> jump(pop)

  43 @ 1000196a  ebx = ebx
  44 @ 1000196a  goto 45 @ 0x10001970

  45 @ 10001970  cx = sx.w(cl)
  46 @ 10001974  edx = edx + 1
  47 @ 10001977  [eax].w = cx
  48 @ 1000197a  cl = [edx].b
  49 @ 1000197c  eax = eax + 2
  50 @ 10001981  if (cl != 0) then 45 @ 0x10001970 else 28 @ 0x10001983

100019a4              cc cc cc cc cc cc cc cc cc cc cc cc                                                      ............

100019b0  int32_t __convention("regparm") sub_100019b0(int32_t* arg1, int32_t arg2)

   0 @ 100019b0  push(esi)
   1 @ 100019b1  push(edi)
   2 @ 100019b2  esi = eax
   3 @ 100019b4  call([&data_10008038[4]].d)  {"ProcessModules"}
   4 @ 100019ba  ecx = [esp + 0xc {arg2}].d
   5 @ 100019be  push(zx.d(0))
   6 @ 100019c0  push(zx.d(0x40))
   7 @ 100019c2  eax = neg.d(eax)
   8 @ 100019c4  edx = esi + 0xc
   9 @ 100019c7  push(edx)
  10 @ 100019c8  push(zx.d(0))
  11 @ 100019ca  [esi].d = eax
  12 @ 100019cc  eax = neg.d(eax)
  13 @ 100019ce  push(eax)
  14 @ 100019cf  push(zx.d(0))
  15 @ 100019d1  push(0x1200)
  16 @ 100019d6  [esi + 4].d = &data_10008430  {"Present"}
  17 @ 100019dd  [esi + 8].d = ecx
  18 @ 100019e0  call([&data_10008058].d)  {"TlsGetValue"}
  19 @ 100019e6  [esi + 0x8c].w = 0
  20 @ 100019ef  ecx = 0x24
  21 @ 100019f4  edi = ebx
  22 @ 100019f6  if (flag:d) then 23 else 25

  23 @ 100019f6  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
  24 @ 100019f6  goto 27 @ 0x100019f8

  25 @ 100019f6  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
  26 @ 100019f6  goto 27 @ 0x100019f8

  27 @ 100019f8  edi = pop
  28 @ 100019f9  eax = ebx
  29 @ 100019fb  esi = pop
  30 @ 100019fc  <return> jump(pop)

100019fd                                                                                         cc cc cc                               ...

10001a00  int32_t sub_10001a00(int32_t arg1) __noreturn

   0 @ 10001a00  esp = esp - 0xb8
   1 @ 10001a06  push(ebx)
   2 @ 10001a07  push(ebp)
   3 @ 10001a08  ebp = [esp + 0xc4 {arg1}].d
   4 @ 10001a0f  push(esi)
   5 @ 10001a10  push(edi)
   6 @ 10001a11  ebx = 0
   7 @ 10001a13  push(0x8c)
   8 @ 10001a18  esi = eax
   9 @ 10001a1a  eax = esp + 0x40 {var_8c}
  10 @ 10001a1e  push(ebx)
  11 @ 10001a1f  push(eax)
  12 @ 10001a20  edi = ecx
  13 @ 10001a22  [esp + 0x44 {var_90}].d = ebx
  14 @ 10001a26  call(sub_10007938)
  15 @ 10001a26  noreturn
{ Does not return }


10001a2b  int32_t sub_10001a2b(int32_t arg1 @ ebp, void* arg2 @ esi, int16_t* arg3 @ edi, int32_t arg4)

   0 @ 10001a2b  esp = esp + 0xc
   1 @ 10001a35  if ([esp + 0xd4 {arg4}].d == ebx) then 2 @ 0x10001a4d else 7 @ 0x10001a37

   2 @ 10001a4d  edx = [esi + 0x11c].d
   3 @ 10001a53  ecx = [esi + 0x110].d
   4 @ 10001a59  [esp + 0x18 {arg_24}].d = edx
   5 @ 10001a5d  [esp + 0x14 {arg_20}].d = ecx
   6 @ 10001a5d  goto 12 @ 0x10001a61

   7 @ 10001a37  ecx = [esi + 0x110].d
   8 @ 10001a3d  eax = [esi + 0x11c].d
   9 @ 10001a43  [esp + 0x18 {arg_24}].d = ecx
  10 @ 10001a47  [esp + 0x14 {arg_20}].d = eax
  11 @ 10001a4b  goto 12 @ 0x10001a61

  12 @ 10001a61  esi = 0
  13 @ 10001a68  if ([edi].w != 0x5a4d) then 14 @ 0x10001a71 else 16 @ 0x10001a6a

  14 @ 10001a71  eax = edi
  15 @ 10001a71  goto 19 @ 0x10001a79

  16 @ 10001a6a  eax = [edi + 0x3c].d
  17 @ 10001a6d  eax = eax + edi
  18 @ 10001a6f  goto 19 @ 0x10001a79

  19 @ 10001a79  if ([eax].d == 0x4550) then 20 @ 0x10001a90 else 22 @ 0x10001a7b

  20 @ 10001a90  eax = [eax + 0x80].d
  21 @ 10001a98  if (eax == ebx) then 26 @ 0x10001a9f else 27 @ 0x10001a9a

  22 @ 10001a7b  push(zx.d(0xd))
  23 @ 10001a7d  call([&data_10008038[8]].d)  {"essModules"}
  24 @ 10001a83  [esp + 0x40 {arg_48}].d = 0x112
  25 @ 10001a8b  goto 29 @ 0x10001b13

  26 @ 10001a9f  if (esi != ebx) then 31 @ 0x10001aab else 34 @ 0x10001aa1

  27 @ 10001a9a  esi = eax + edi
  28 @ 10001a9a  goto 26 @ 0x10001a9f

  29 @ 10001b13  [esp + 0x38].d = ebx
  30 @ 10001b13  goto 36 @ 0x10001b17

  31 @ 10001aab  cond:0 = [esi + 0xc].d == ebx
  32 @ 10001aae  eax = esi + 0xc
  33 @ 10001ab1  if (cond:0) then 38 @ 0x10001ae4 else 39 @ 0x10001ab3

  34 @ 10001aa1  [esp + 0x40 {arg_4c}].d = 0x112
  35 @ 10001aa9  goto 29 @ 0x10001b13

  36 @ 10001b17  [esp + 0x3c].d = &data_10008430  {"Present"}
  37 @ 10001b17  goto 42 @ 0x10001b1f

  38 @ 10001ae4  if ([esi + 0xc].d != ebx) then 46 @ 0x10001af0 else 49 @ 0x10001ae6

  39 @ 10001ab3  ebx = [&data_10008038[0xc]].d  {"odules"}
  40 @ 10001ab9  esp = esp
  41 @ 10001ab9  goto 51 @ 0x10001ac0

  42 @ 10001b1f  edi = ebp
  43 @ 10001b21  ecx = 0x24
  44 @ 10001b26  esi = esp + 0x38
  45 @ 10001b2a  if (flag:d) then 58 else 60

  46 @ 10001af0  esi = [esi + 0x10].d
  47 @ 10001af3  esi = esi + edi
  48 @ 10001af7  if ([esi].d == ebx) then 62 @ 0x10001b0b else 64 @ 0x10001af9

  49 @ 10001ae6  [esp + 0x40].d = 0x11b
  50 @ 10001aee  goto 29 @ 0x10001b13

  51 @ 10001ac0  eax = [eax].d
  52 @ 10001ac2  edx = [esp + 0xd0].d
  53 @ 10001ac9  eax = eax + edi
  54 @ 10001acb  push(edx)
  55 @ 10001acc  push(eax)
  56 @ 10001acd  call(ebx)
  57 @ 10001ad1  if (eax == 0) then 67 @ 0x10001adf else 69 @ 0x10001ad3

  58 @ 10001b2a  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
  59 @ 10001b2a  goto 73 @ 0x10001b2c

  60 @ 10001b2a  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
  61 @ 10001b2a  goto 73 @ 0x10001b2c

  62 @ 10001b0b  [esp + 0x40].d = 0x146
  63 @ 10001b0b  goto 29 @ 0x10001b13

  64 @ 10001af9  eax = [esp + 0x18].d
  65 @ 10001afd  ecx = ecx
  66 @ 10001afd  goto 80 @ 0x10001b02

  67 @ 10001adf  ebx = 0
  68 @ 10001adf  goto 38 @ 0x10001ae4

  69 @ 10001ad3  esi = esi + 0x14
  70 @ 10001ad6  cond:1 = [esi + 0xc].d != 0
  71 @ 10001ada  eax = esi + 0xc
  72 @ 10001add  if (cond:1) then 51 @ 0x10001ac0 else 67 @ 0x10001adf

  73 @ 10001b2c  edi = pop
  74 @ 10001b2d  esi = pop
  75 @ 10001b2e  eax = ebp
  76 @ 10001b30  ebp = pop
  77 @ 10001b31  ebx = pop
  78 @ 10001b32  esp = esp + 0xb8
  79 @ 10001b38  <return> jump(pop)

  80 @ 10001b02  if ([esi].d == eax) then 81 @ 0x10001b39 else 95 @ 0x10001b04

  81 @ 10001b39  eax = 0
  82 @ 10001b3b  [esp + 0x20].d = eax
  83 @ 10001b3f  [esp + 0x24].d = eax
  84 @ 10001b43  [esp + 0x28].d = eax
  85 @ 10001b47  [esp + 0x2c].d = eax
  86 @ 10001b4b  [esp + 0x30].d = eax
  87 @ 10001b4f  [esp + 0x34].d = eax
  88 @ 10001b53  push(zx.d(0x1c))
  89 @ 10001b55  eax = esp + 0x20
  90 @ 10001b59  push(eax)
  91 @ 10001b5a  push(esi)
  92 @ 10001b5b  [esp + 0x28].d = ebx
  93 @ 10001b5f  call([&data_10008014].d)
  94 @ 10001b67  if (eax != 0) then 97 @ 0x10001baa else 100 @ 0x10001b69

  95 @ 10001b04  esi = esi + 4
  96 @ 10001b09  if ([esi].d != ebx) then 80 @ 0x10001b02 else 62 @ 0x10001b0b

  97 @ 10001baa  cond:2 = ([esp + 0x30].b & 0x40) != 0
  98 @ 10001baf  edi = [&data_1000804c[4]].d  {"I.DLL"}
  99 @ 10001bb5  if (cond:2) then 103 @ 0x10001be9 else 121 @ 0x10001bb7

 100 @ 10001b69  call([&data_10008038[4]].d)  {"ProcessModules"}
 101 @ 10001b6f  [esp + 0x40].d = 0x136
 102 @ 10001b6f  goto 130 @ 0x10001b77

 103 @ 10001be9  ecx = [esp + 0x28].d
 104 @ 10001bed  edx = [esp + 0x1c].d
 105 @ 10001bf1  eax = [esp + 0x14].d
 106 @ 10001bf5  push(ecx)
 107 @ 10001bf6  push(edx)
 108 @ 10001bf7  [esi].d = eax
 109 @ 10001bf9  call([&data_1000804c[8]].d)  {"L"}
 110 @ 10001bff  push(eax)
 111 @ 10001c00  call([&data_10008038].d)  {"EnumProcessModules"}
 112 @ 10001c06  ecx = [esp + 0x28].d
 113 @ 10001c0a  edx = [esp + 0x1c].d
 114 @ 10001c0e  eax = esp + 0x30
 115 @ 10001c12  push(eax)
 116 @ 10001c13  push(zx.d(0x20))
 117 @ 10001c15  push(ecx)
 118 @ 10001c16  push(edx)
 119 @ 10001c17  call(edi)
 120 @ 10001c1b  if (eax != 0) then 135 @ 0x10001c30 else 138 @ 0x10001c1d

 121 @ 10001bb7  eax = [esp + 0x28].d
 122 @ 10001bbb  ecx = [esp + 0x1c].d
 123 @ 10001bbf  edx = esp + 0x30
 124 @ 10001bc3  push(edx)
 125 @ 10001bc4  push(0x80)
 126 @ 10001bc9  push(eax)
 127 @ 10001bca  push(ecx)
 128 @ 10001bcb  call(edi)
 129 @ 10001bcf  if (eax != 0) then 103 @ 0x10001be9 else 141 @ 0x10001bd1

 130 @ 10001b77  push(ebx)
 131 @ 10001b78  push(zx.d(0x40))
 132 @ 10001b7a  ecx = esp + 0x4c
 133 @ 10001b7e  push(ecx)
 134 @ 10001b7e  goto 148 @ 0x10001b7f

 135 @ 10001c30  [esp + 0x38].d = 1
 136 @ 10001c38  [esp + 0x40].d = 0x143
 137 @ 10001c40  goto 36 @ 0x10001b17

 138 @ 10001c1d  call([&data_10008038[4]].d)  {"ProcessModules"}
 139 @ 10001c23  [esp + 0x40].d = 0x142
 140 @ 10001c2b  goto 130 @ 0x10001b77

 141 @ 10001bd1  call([&data_10008038[4]].d)  {"ProcessModules"}
 142 @ 10001bd7  push(ebx)
 143 @ 10001bd8  push(zx.d(0x40))
 144 @ 10001bda  edx = esp + 0x4c
 145 @ 10001bde  [esp + 0x48].d = 0x13d
 146 @ 10001be6  push(edx)
 147 @ 10001be7  goto 148 @ 0x10001b7f

 148 @ 10001b7f  eax = neg.d(eax)
 149 @ 10001b81  push(ebx)
 150 @ 10001b82  [esp + 0x48].d = eax
 151 @ 10001b86  eax = neg.d(eax)
 152 @ 10001b88  push(eax)
 153 @ 10001b89  push(ebx)
 154 @ 10001b8a  push(0x1200)
 155 @ 10001b8f  [esp + 0x58].d = &data_10008430  {"Present"}
 156 @ 10001b97  call([&data_10008058].d)  {"TlsGetValue"}
 157 @ 10001b9d  [esp + 0xc4].w = bx
 158 @ 10001ba5  goto 42 @ 0x10001b1f

10001c45                 cc cc cc cc cc cc cc cc cc cc cc                                                       ...........

10001c50  int32_t sub_10001c50(int32_t arg1) __noreturn

   0 @ 10001c50  esp = esp - 0x14c
   1 @ 10001c56  push(ebx)
   2 @ 10001c57  push(ebp)
   3 @ 10001c58  ebp = [esp + 0x160 {arg1}].d
   4 @ 10001c5f  push(esi)
   5 @ 10001c60  push(edi)
   6 @ 10001c61  edi = 0
   7 @ 10001c63  push(0x8c)
   8 @ 10001c68  eax = esp + 0x40 {var_120}
   9 @ 10001c6c  push(edi)
  10 @ 10001c6d  push(eax)
  11 @ 10001c6e  [esp + 0x44 {var_124}].d = edi
  12 @ 10001c72  call(sub_10007938)
  13 @ 10001c72  noreturn
{ Does not return }


10001c77  int32_t sub_10001c77(int32_t* arg1 @ ebp, int32_t arg2 @ edi)

   0 @ 10001c77  esp = esp + 0xc
   1 @ 10001c7a  cond:0 = [ebp].d == edi
   2 @ 10001c7d  [esp + 0x14 {arg_20}].d = edi
   3 @ 10001c81  if (cond:0) then 4 @ 0x10001ee2 else 8 @ 0x10001c87

   4 @ 10001ee2  eax = [esp + 0x14].d
   5 @ 10001ee6  [esp + 0x38].d = eax
   6 @ 10001eea  [esp + 0x40].d = 0x18b
   7 @ 10001eea  goto 9 @ 0x10001ef2

   8 @ 10001c87  goto 11 @ 0x10001c90

   9 @ 10001ef2  [esp + 0x3c].d = &data_10008430  {"Present"}
  10 @ 10001ef2  goto 13 @ 0x10001efa

  11 @ 10001c90  ebx = [ebp + 0x114].d
  12 @ 10001c98  if (ebx == edi) then 18 @ 0x10001df6 else 19 @ 0x10001c9e

  13 @ 10001efa  esi = esp + 0x38
  14 @ 10001efe  eax = [esp + 0x160].d
  15 @ 10001f05  ecx = 0x24
  16 @ 10001f0a  edi = eax
  17 @ 10001f0c  if (flag:d) then 22 else 24

  18 @ 10001df6  if ([ebp + 4].d != edi) then 26 @ 0x10001e8f else 36 @ 0x10001e02

  19 @ 10001c9e  cond:1 = [ebx].d == edi
  20 @ 10001ca0  [esp + 0x10].d = edi
  21 @ 10001ca4  if (cond:1) then 37 @ 0x10001ece else 40 @ 0x10001caa

  22 @ 10001f0c  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
  23 @ 10001f0c  goto 42 @ 0x10001f0e

  24 @ 10001f0c  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
  25 @ 10001f0c  goto 42 @ 0x10001f0e

  26 @ 10001e8f  edx = [esp + 0x16c].d
  27 @ 10001e96  push(edx)
  28 @ 10001e97  eax = ebp + 8
  29 @ 10001e9a  push(eax)
  30 @ 10001e9b  ecx = esp + 0xd0
  31 @ 10001ea2  push(ecx)
  32 @ 10001ea3  ecx = [esp + 0x170].d
  33 @ 10001eaa  eax = ebp
  34 @ 10001eac  call(sub_10001a00)
  35 @ 10001eac  noreturn
{ Does not return }

  36 @ 10001e02  if ([ebp + 0x110].d == edi) then 48 @ 0x10001e0c else 50 @ 0x10001e0a

  37 @ 10001ece  [esp + 0x14].d = [esp + 0x14].d + 1
  38 @ 10001ed3  ebp = ebp + 0x120
  39 @ 10001edc  if ([ebp].d != edi) then 11 @ 0x10001c90 else 4 @ 0x10001ee2

  40 @ 10001caa  ebx = ebx
  41 @ 10001caa  goto 51 @ 0x10001cb0

  42 @ 10001f0e  edi = pop
  43 @ 10001f0f  esi = pop
  44 @ 10001f10  ebp = pop
  45 @ 10001f11  ebx = pop
  46 @ 10001f12  esp = esp + 0x14c
  47 @ 10001f18  <return> jump(pop)

  48 @ 10001e0c  call([&data_100080ec].d)  {"ualAlloc"}
  49 @ 10001e0c  goto 54 @ 0x10001e12

  50 @ 10001e0a  if ([ebp + 0x11c].d != edi) then 54 @ 0x10001e12 else 48 @ 0x10001e0c

  51 @ 10001cb0  cond:3 = [ebx + 4].d != edi
  52 @ 10001cb3  esi = ebx + 4
  53 @ 10001cb6  if (cond:3) then 56 @ 0x10001cce else 58 @ 0x10001cb8

  54 @ 10001e12  ecx = [ebp + 0x110].d
  55 @ 10001e1b  if ([ecx].b != -0x17) then 64 @ 0x10001e27 else 65 @ 0x10001e1d

  56 @ 10001cce  eax = [esi].d
  57 @ 10001cd3  if (eax != -1) then 68 @ 0x10001d16 else 77 @ 0x10001cd5

  58 @ 10001cb8  ecx = [ebx].d
  59 @ 10001cba  push(esi)
  60 @ 10001cbb  push(ecx)
  61 @ 10001cbc  push(zx.d(2))
  62 @ 10001cbe  call([&data_1000804c].d)  {"PSAPI.DLL"}
  63 @ 10001cc6  if (eax != 0) then 56 @ 0x10001cce else 94 @ 0x10001cc8

  64 @ 10001e27  if ([ecx].b != -1) then 96 @ 0x10001e34 else 124 @ 0x10001e2d

  65 @ 10001e1d  edx = [ecx + 1].d
  66 @ 10001e20  ecx = ecx + edx + 5
  67 @ 10001e20  goto 64 @ 0x10001e27

  68 @ 10001d16  ecx = [ebp].d
  69 @ 10001d19  esi = [&data_10008038[0x10]].d  {"es"}
  70 @ 10001d1f  push(ecx)
  71 @ 10001d20  push(eax)
  72 @ 10001d21  [ebp + 4].d = eax
  73 @ 10001d24  call(esi)
  74 @ 10001d26  cond:2 = eax == edi
  75 @ 10001d28  [ebp + 0x110].d = eax
  76 @ 10001d2e  if (cond:2) then 125 @ 0x10001f19 else 128 @ 0x10001d34

  77 @ 10001cd5  call([&data_10008038[4]].d)  {"ProcessModules"}
  78 @ 10001cdb  push(edi)
  79 @ 10001cdc  push(zx.d(0x40))
  80 @ 10001cde  eax = neg.d(eax)
  81 @ 10001ce0  edx = esp + 0x4c
  82 @ 10001ce4  push(edx)
  83 @ 10001ce5  push(edi)
  84 @ 10001ce6  [esp + 0x48].d = eax
  85 @ 10001cea  eax = neg.d(eax)
  86 @ 10001cec  push(eax)
  87 @ 10001ced  push(edi)
  88 @ 10001cee  push(0x1200)
  89 @ 10001cf3  [esp + 0x58].d = &data_10008430  {"Present"}
  90 @ 10001cfb  [esp + 0x5c].d = 0x160
  91 @ 10001d03  call([&data_10008058].d)  {"TlsGetValue"}
  92 @ 10001d09  [esp + 0xc4].w = di
  93 @ 10001d11  goto 130 @ 0x10001dde

  94 @ 10001cc8  [esi].d = -1
  95 @ 10001cc8  goto 56 @ 0x10001cce

  96 @ 10001e34  eax = 0
  97 @ 10001e36  push(zx.d(0x1c))
  98 @ 10001e38  edx = esp + 0x20
  99 @ 10001e3c  push(edx)
 100 @ 10001e3d  push(ecx)
 101 @ 10001e3e  [ebp + 0x110].d = ecx
 102 @ 10001e44  [esp + 0x28].d = edi
 103 @ 10001e48  [esp + 0x2c].d = eax
 104 @ 10001e4c  [esp + 0x30].d = eax
 105 @ 10001e50  [esp + 0x34].d = eax
 106 @ 10001e54  [esp + 0x38].d = eax
 107 @ 10001e58  [esp + 0x3c].d = eax
 108 @ 10001e5c  [esp + 0x40].d = eax
 109 @ 10001e60  call([&data_10008014].d)
 110 @ 10001e66  temp0.d = eax
 111 @ 10001e66  eax = neg.d(eax)
 112 @ 10001e66  flag:c = temp0.d != 0
 113 @ 10001e68  eax = sbb.d(eax, eax, flag:c)
 114 @ 10001e6a  eax = eax & [esp + 0x20].d
 115 @ 10001e6e  push(0x105)
 116 @ 10001e73  ecx = ebp + 8
 117 @ 10001e76  push(ecx)
 118 @ 10001e77  push(eax)
 119 @ 10001e78  [ebp + 4].d = eax
 120 @ 10001e7b  call([&data_1000804c[8]].d)  {"L"}
 121 @ 10001e81  push(eax)
 122 @ 10001e82  call(sub_10001000), esp += 0x1c
 123 @ 10001e89  if (eax == 0) then 133 @ 0x10001f84 else 26 @ 0x10001e8f

 124 @ 10001e2d  if ([ecx + 1].b != 0x25) then 96 @ 0x10001e34 else 136 @ 0x10001e2f

 125 @ 10001f19  [esp + 0x38].d = edi
 126 @ 10001f1d  [esp + 0x40].d = 0x165
 127 @ 10001f25  goto 9 @ 0x10001ef2

 128 @ 10001d34  eax = [ebx + 8].d
 129 @ 10001d39  if (eax != edi) then 139 @ 0x10001d4b else 146 @ 0x10001d41

 130 @ 10001dde  [esp + 0x10].d = [esp + 0x10].d + 1
 131 @ 10001de3  ebx = ebx + 0xc
 132 @ 10001de8  if ([ebx].d != edi) then 51 @ 0x10001cb0 else 147 @ 0x10001dee

 133 @ 10001f84  call([&data_10008038[4]].d)  {"ProcessModules"}
 134 @ 10001f8a  [esp + 0x40].d = 0x185
 135 @ 10001f92  goto 148 @ 0x10001f35

 136 @ 10001e2f  eax = [ecx + 2].d
 137 @ 10001e32  ecx = [eax].d
 138 @ 10001e32  goto 96 @ 0x10001e34

 139 @ 10001d4b  edx = esp + 0x18
 140 @ 10001d4f  push(edx)
 141 @ 10001d50  push(eax)
 142 @ 10001d51  push(zx.d(2))
 143 @ 10001d53  [esp + 0x24].d = edi
 144 @ 10001d57  call([&data_1000804c].d)  {"PSAPI.DLL"}
 145 @ 10001d5f  if (eax == 0) then 153 @ 0x10001f27 else 156 @ 0x10001d65

 146 @ 10001d41  if ([ebp + 0x11c].d != edi) then 164 @ 0x10001d81 else 174 @ 0x10001d43

 147 @ 10001dee  goto 37 @ 0x10001ece

 148 @ 10001f35  push(edi)
 149 @ 10001f36  push(zx.d(0x40))
 150 @ 10001f38  edx = esp + 0x4c
 151 @ 10001f3c  push(edx)
 152 @ 10001f3c  goto 176 @ 0x10001f3d

 153 @ 10001f27  call([&data_10008038[4]].d)  {"ProcessModules"}
 154 @ 10001f2d  [esp + 0x40].d = 0x16f
 155 @ 10001f2d  goto 148 @ 0x10001f35

 156 @ 10001d65  eax = [ebp + 0x118].d
 157 @ 10001d6b  ecx = [esp + 0x18].d
 158 @ 10001d6f  push(eax)
 159 @ 10001d70  push(ecx)
 160 @ 10001d71  call(esi)
 161 @ 10001d73  cond:4 = eax == edi
 162 @ 10001d75  [ebp + 0x11c].d = eax
 163 @ 10001d7b  if (cond:4) then 187 @ 0x10001f65 else 164 @ 0x10001d81

 164 @ 10001d81  edx = [esp + 0x16c].d
 165 @ 10001d88  eax = [ebx].d
 166 @ 10001d8a  push(edx)
 167 @ 10001d8b  push(eax)
 168 @ 10001d8c  ecx = esp + 0xd0
 169 @ 10001d93  push(ecx)
 170 @ 10001d94  ecx = [esp + 0x170].d
 171 @ 10001d9b  eax = ebp
 172 @ 10001d9d  call(sub_10001a00)
 173 @ 10001d9d  noreturn
{ Does not return }

 174 @ 10001d43  call([&data_100080ec].d)  {"ualAlloc"}
 175 @ 10001d49  goto 164 @ 0x10001d81

 176 @ 10001f3d  eax = neg.d(eax)
 177 @ 10001f3f  push(edi)
 178 @ 10001f40  [esp + 0x48].d = eax
 179 @ 10001f44  eax = neg.d(eax)
 180 @ 10001f46  push(eax)
 181 @ 10001f47  push(edi)
 182 @ 10001f48  push(0x1200)
 183 @ 10001f4d  [esp + 0x58].d = &data_10008430  {"Present"}
 184 @ 10001f55  call([&data_10008058].d)  {"TlsGetValue"}
 185 @ 10001f5b  [esp + 0xc4].w = di
 186 @ 10001f63  goto 13 @ 0x10001efa

 187 @ 10001f65  call([&data_10008038[4]].d)  {"ProcessModules"}
 188 @ 10001f6b  push(edi)
 189 @ 10001f6c  push(zx.d(0x40))
 190 @ 10001f6e  ecx = esp + 0x4c
 191 @ 10001f72  [esp + 0x48].d = 0x171
 192 @ 10001f7a  push(ecx)
 193 @ 10001f7b  goto 176 @ 0x10001f3d

10001c89                             8d a4 24 00 00 00 00                                                           ..$....
10001da2        b9 24 00 00 00 8b f0 8d 7c 24 44 f3 a5 8b 4c 24 44 83 c4 0c 85 c9 0f 8c bf 01 00 00 74 1c    .$......|$D...L$D...........t.
10001dc0  8b 84 24 74 01 00 00 85 c0 74 07 f6 44 24 10 01 75 07 8b 84 24 70 01 00 00 83 00 01 33 ff        ..$t.....t..D$..u...$p......3.
10001eb1                                                     b9 24 00 00 00 8b f0 8d 7c 24 44 83 c4 0c f3                   .$......|$D....
10001ec0  a5 83 7c 24 38 00 0f 8c b1 00 00 00 33 ff                                                        ..|$8.......3.
10001f7d                                                                                         8b f0 e9                               ...
10001f80  7a ff ff ff                                                                                      z...
10001f94                                                              cc cc cc cc cc cc cc cc cc cc cc cc                      ............

10001fa0  int32_t sub_10001fa0() __noreturn

   0 @ 10001fa0  push(ebp)
   1 @ 10001fa1  ebp = esp {var_4}
   2 @ 10001fa3  push(zx.d(-1))
   3 @ 10001fa5  push(0x100085a0)
   4 @ 10001faa  push(0x10007932)
   5 @ 10001faf  eax = [fsbase].d
   6 @ 10001fb5  push(eax)
   7 @ 10001fb6  [fsbase].d = esp {var_14}
   8 @ 10001fbd  esp = esp - 8
   9 @ 10001fc0  eax = 0x4168
  10 @ 10001fc5  call(sub_10007980)
  11 @ 10001fca  push(ebx)
  12 @ 10001fcb  push(esi)
  13 @ 10001fcc  push(edi)
  14 @ 10001fcd  [ebp - 0x18 {var_1c}].d = esp {var_28}
  15 @ 10001fd0  edi = 0
  16 @ 10001fd2  [ebp - 0x38 {var_3c}].d = edi
  17 @ 10001fd5  [ebp - 0xec {var_f0}].d = edi
  18 @ 10001fdb  push(0x8c)
  19 @ 10001fe0  push(edi)
  20 @ 10001fe1  eax = ebp - 0xe8 {var_ec}
  21 @ 10001fe7  push(eax)
  22 @ 10001fe8  call(sub_10007938)
  23 @ 10001fe8  noreturn
{ Does not return }


10001fed  int32_t sub_10001fed(int32_t* arg1 @ ebp, int32_t arg2 @ edi)
// This function has unresolved stack usage. View graph of stack usage to resolve.

   0 @ 10001fed  esp = esp + 0xc
   1 @ 10001ff0  [ebp - 4].d = edi
   2 @ 10001ff3  [ebp - 0x34].d = edi
   3 @ 10001ff6  [ebp - 0x44].d = edi
   4 @ 10001fff  if ([&data_1000a3ec].d != edi) then 5 @ 0x10002010 else 14 @ 0x10002001

   5 @ 10002010  ecx = ebp - 0x44
   6 @ 10002013  push(ecx)
   7 @ 10002014  push(0x4000)
   8 @ 10002019  edx = ebp - 0x417c
   9 @ 1000201f  push(edx)
  10 @ 10002020  call([&data_1000804c[8]].d)  {"L"}
  11 @ 10002026  push(eax)
  12 @ 10002027  call(sub_10001006)
  13 @ 1000202e  if (eax != 0) then 18 @ 0x10002053 else 19 @ 0x10002030

  14 @ 10002001  ecx = sub_10001fa0
  15 @ 10002006  call(sub_100018e0)
  16 @ 1000200b  [&data_1000a3ec].d = eax
  17 @ 1000200b  goto 5 @ 0x10002010

  18 @ 10002053  if ([ebp + 0x10].d == edi) then 26 @ 0x100020f4 else 28 @ 0x10002059

  19 @ 10002030  push(0x1aa)
  20 @ 10002035  eax = ebp - 0xec
  21 @ 1000203b  ebx = ebp - 0x17c
  22 @ 10002041  call(sub_100019b0)
  23 @ 10002046  esp = esp + 4
  24 @ 10002049  esi = eax
  25 @ 1000204b  goto 30 @ 0x10002be4

  26 @ 100020f4  ebx = ebp - 0x417c
  27 @ 100020f4  goto 34 @ 0x100020fa

  28 @ 10002059  eax = [ebp - 0x44].d
  29 @ 10002062  if ([&data_1000a3f0].d != eax) then 26 @ 0x100020f4 else 40 @ 0x10002068

  30 @ 10002be4  eax = [ebp + 8].d
  31 @ 10002be7  ecx = 0x24
  32 @ 10002bec  edi = eax
  33 @ 10002bee  if (flag:d) then 43 else 45

  34 @ 100020fa  [ebp - 0x34].d = ebx
  35 @ 100020fd  esi = [ebp - 0x44].d
  36 @ 10002100  ecx = esi
  37 @ 10002102  ecx = ecx u>> 2
  38 @ 10002105  edx = ebp + (ecx << 2) - 0x417c
  39 @ 1000210e  if (ebx u>= edx) then 47 @ 0x10002b62 else 53 @ 0x10002114

  40 @ 10002068  ecx = ebp - 0x417c
  41 @ 1000206e  edx = &data_1000a400
  42 @ 1000206e  goto 57 @ 0x10002076

  43 @ 10002bee  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
  44 @ 10002bee  goto 58 @ 0x10002bf0

  45 @ 10002bee  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
  46 @ 10002bee  goto 58 @ 0x10002bf0

  47 @ 10002b62  push(esi)
  48 @ 10002b63  ecx = ebp - 0x417c
  49 @ 10002b69  push(ecx)
  50 @ 10002b6a  push(&data_1000a400)
  51 @ 10002b6f  call(sub_1000793e)
  52 @ 10002b6f  noreturn
{ Does not return }

  53 @ 10002114  edi = 0
  54 @ 10002116  [ebp - 0x3c].d = edi
  55 @ 10002119  [ebp - 0x3c].d = edi
  56 @ 10002122  if ([&data_1000a39c].d == edi) then 67 @ 0x100024c4 else 68 @ 0x10002128

  57 @ 10002076  if (eax u< 4) then 74 @ 0x1000208b else 75 @ 0x10002078

  58 @ 10002bf0  [ebp - 4].d = -1
  59 @ 10002bf7  ecx = [ebp - 0x10].d
  60 @ 10002bfa  [fsbase].d = ecx
  61 @ 10002c01  edi = pop
  62 @ 10002c02  esi = pop
  63 @ 10002c03  ebx = pop
  64 @ 10002c04  esp = ebp
  65 @ 10002c06  ebp = pop
  66 @ 10002c07  <return> jump(pop)

  67 @ 100024c4  if (edi == 0) then 77 @ 0x100024de else 85 @ 0x100024ca

  68 @ 10002128  esi = ebx
  69 @ 1000212a  ecx = 0xfeedbeef
  70 @ 1000212f  eax = 0x9e3779b9
  71 @ 10002134  edx = eax
  72 @ 10002136  edi = 4
  73 @ 10002136  goto 86 @ 0x1000213b

  74 @ 1000208b  if (eax == edi) then 92 @ 0x100020ea else 94 @ 0x1000208d

  75 @ 10002078  esi = [edx].d
  76 @ 1000207c  if (esi != [ecx].d) then 94 @ 0x1000208d else 99 @ 0x1000207e

  77 @ 100024de  push(0x12c)
  78 @ 100024e3  push(zx.d(1))
  79 @ 100024e5  push(zx.d(0))
  80 @ 100024e7  call(sub_10007160)
  81 @ 100024ec  esp = esp + 0xc
  82 @ 100024ef  esi = eax
  83 @ 100024f1  [ebp - 0x3c].d = esi
  84 @ 100024f6  if (esi != 0) then 103 @ 0x1000253b else 110 @ 0x100024f8

  85 @ 100024ca  if ([ebp + 0x10].d == 0) then 119 @ 0x10002b10 else 121 @ 0x100024d0

  86 @ 1000213b  [ebp - 0x48].d = edi
  87 @ 1000213e  [ebp - 0x24].d = edx
  88 @ 10002141  [ebp - 0x30].d = eax
  89 @ 10002144  [ebp - 0x2c].d = ecx
  90 @ 10002147  [ebp - 0x58].d = esi
  91 @ 1000214d  if (edi u< 0xc) then 125 @ 0x1000227a else 129 @ 0x10002153

  92 @ 100020ea  eax = 0
  93 @ 100020ea  goto 238 @ 0x100020ee

  94 @ 1000208d  ebx = zx.d([ecx].b)
  95 @ 10002090  esi = zx.d([edx].b)
  96 @ 10002093  temp0.d = esi
  97 @ 10002093  esi = esi - ebx
  98 @ 10002095  if (temp0.d != ebx) then 239 @ 0x100020dc else 241 @ 0x10002097

  99 @ 1000207e  eax = eax - 4
 100 @ 10002081  ecx = ecx + 4
 101 @ 10002084  edx = edx + 4
 102 @ 10002087  goto 57 @ 0x10002076

 103 @ 1000253b  eax = [ebx].d
 104 @ 1000253d  [esi].d = eax
 105 @ 1000253f  [esi + 0x114].d = 0
 106 @ 10002549  [esi + 0x120].d = esi
 107 @ 1000254f  [esi + 0x124].d = 4
 108 @ 10002559  edi = [&data_1000a39c].d
 109 @ 10002561  if (edi != 0) then 245 @ 0x1000260c else 266 @ 0x10002567

 110 @ 100024f8  edx = edx | 0xffffffff
 111 @ 100024fb  [ebp - 0xec].d = edx
 112 @ 10002501  [ebp - 0xe8].d = &data_10008430  {"Present"}
 113 @ 1000250b  [ebp - 0xe4].d = 0x1c0
 114 @ 10002515  ecx = 0x24
 115 @ 1000251a  esi = ebp - 0xec
 116 @ 10002520  eax = [ebp + 8].d
 117 @ 10002523  edi = eax
 118 @ 10002525  if (flag:d) then 276 else 278

 119 @ 10002b10  eax = [ebx].d
 120 @ 10002b18  if (eax == [&data_1000a3ec].d) then 280 @ 0x10002b5a else 282 @ 0x10002b1a

 121 @ 100024d0  edx = [ebp - 0x38].d
 122 @ 100024d3  [ebp - 0x38].d = edx
 123 @ 100024d6  ebx = ebx + 4
 124 @ 100024d9  goto 34 @ 0x100020fa

 125 @ 1000227a  ecx = ecx + 4
 126 @ 1000227d  [ebp - 0x2c].d = ecx
 127 @ 10002280  edi = edi - 1
 128 @ 10002286  if (edi u> 0xa) then 295 @ 0x10002310 else 376 @ 0x1000228c

 129 @ 10002153  edi = sx.d([esi + 3].b)
 130 @ 10002157  edi = edi << 8
 131 @ 1000215a  ebx = sx.d([esi + 2].b)
 132 @ 1000215e  edi = edi + ebx
 133 @ 10002160  edi = edi << 8
 134 @ 10002163  ebx = sx.d([esi + 1].b)
 135 @ 10002167  edi = edi + ebx
 136 @ 10002169  edi = edi << 8
 137 @ 1000216c  ebx = sx.d([esi].b)
 138 @ 1000216f  ebx = ebx + edx
 139 @ 10002171  edx = ebx + edi
 140 @ 10002174  [ebp - 0x24].d = edx
 141 @ 10002177  edi = sx.d([esi + 7].b)
 142 @ 1000217b  edi = edi << 8
 143 @ 1000217e  ebx = sx.d([esi + 6].b)
 144 @ 10002182  edi = edi + ebx
 145 @ 10002184  edi = edi << 8
 146 @ 10002187  ebx = sx.d([esi + 5].b)
 147 @ 1000218b  edi = edi + ebx
 148 @ 1000218d  edi = edi << 8
 149 @ 10002190  ebx = sx.d([esi + 4].b)
 150 @ 10002194  ebx = ebx + eax
 151 @ 10002196  eax = ebx + edi
 152 @ 10002199  [ebp - 0x30].d = eax
 153 @ 1000219c  edi = sx.d([esi + 0xb].b)
 154 @ 100021a0  edi = edi << 8
 155 @ 100021a3  ebx = sx.d([esi + 0xa].b)
 156 @ 100021a7  edi = edi + ebx
 157 @ 100021a9  edi = edi << 8
 158 @ 100021ac  ebx = sx.d([esi + 9].b)
 159 @ 100021b0  edi = edi + ebx
 160 @ 100021b2  edi = edi << 8
 161 @ 100021b5  ebx = sx.d([esi + 8].b)
 162 @ 100021b9  ebx = ebx + ecx
 163 @ 100021bb  ecx = ebx + edi
 164 @ 100021be  [ebp - 0x2c].d = ecx
 165 @ 100021c1  edx = edx - eax
 166 @ 100021c3  [ebp - 0x24].d = edx
 167 @ 100021c6  edx = edx - ecx
 168 @ 100021c8  [ebp - 0x24].d = edx
 169 @ 100021cb  edi = ecx
 170 @ 100021cd  edi = edi u>> 0xd
 171 @ 100021d0  edx = edx ^ edi
 172 @ 100021d2  [ebp - 0x24].d = edx
 173 @ 100021d5  eax = eax - ecx
 174 @ 100021d7  [ebp - 0x30].d = eax
 175 @ 100021da  eax = eax - edx
 176 @ 100021dc  [ebp - 0x30].d = eax
 177 @ 100021df  edi = edx
 178 @ 100021e1  edi = edi << 8
 179 @ 100021e4  eax = eax ^ edi
 180 @ 100021e6  [ebp - 0x30].d = eax
 181 @ 100021e9  ecx = ecx - edx
 182 @ 100021eb  [ebp - 0x2c].d = ecx
 183 @ 100021ee  ecx = ecx - eax
 184 @ 100021f0  [ebp - 0x2c].d = ecx
 185 @ 100021f3  edi = eax
 186 @ 100021f5  edi = edi u>> 0xd
 187 @ 100021f8  ecx = ecx ^ edi
 188 @ 100021fa  [ebp - 0x2c].d = ecx
 189 @ 100021fd  edx = edx - eax
 190 @ 100021ff  [ebp - 0x24].d = edx
 191 @ 10002202  edx = edx - ecx
 192 @ 10002204  [ebp - 0x24].d = edx
 193 @ 10002207  edi = ecx
 194 @ 10002209  edi = edi u>> 0xc
 195 @ 1000220c  edx = edx ^ edi
 196 @ 1000220e  [ebp - 0x24].d = edx
 197 @ 10002211  eax = eax - ecx
 198 @ 10002213  [ebp - 0x30].d = eax
 199 @ 10002216  eax = eax - edx
 200 @ 10002218  [ebp - 0x30].d = eax
 201 @ 1000221b  edi = edx
 202 @ 1000221d  edi = edi << 0x10
 203 @ 10002220  eax = eax ^ edi
 204 @ 10002222  [ebp - 0x30].d = eax
 205 @ 10002225  ecx = ecx - edx
 206 @ 10002227  [ebp - 0x2c].d = ecx
 207 @ 1000222a  ecx = ecx - eax
 208 @ 1000222c  [ebp - 0x2c].d = ecx
 209 @ 1000222f  edi = eax
 210 @ 10002231  edi = edi u>> 5
 211 @ 10002234  ecx = ecx ^ edi
 212 @ 10002236  [ebp - 0x2c].d = ecx
 213 @ 10002239  edx = edx - eax
 214 @ 1000223b  [ebp - 0x24].d = edx
 215 @ 1000223e  edx = edx - ecx
 216 @ 10002240  [ebp - 0x24].d = edx
 217 @ 10002243  edi = ecx
 218 @ 10002245  edi = edi u>> 3
 219 @ 10002248  edx = edx ^ edi
 220 @ 1000224a  eax = eax - ecx
 221 @ 1000224c  [ebp - 0x30].d = eax
 222 @ 1000224f  eax = eax - edx
 223 @ 10002251  [ebp - 0x30].d = eax
 224 @ 10002254  edi = edx
 225 @ 10002256  edi = edi << 0xa
 226 @ 10002259  eax = eax ^ edi
 227 @ 1000225b  ecx = ecx - edx
 228 @ 1000225d  [ebp - 0x2c].d = ecx
 229 @ 10002260  ecx = ecx - eax
 230 @ 10002262  [ebp - 0x2c].d = ecx
 231 @ 10002265  edi = eax
 232 @ 10002267  edi = edi u>> 0xf
 233 @ 1000226a  ecx = ecx ^ edi
 234 @ 1000226c  esi = esi + 0xc
 235 @ 1000226f  edi = [ebp - 0x48].d
 236 @ 10002272  edi = edi - 0xc
 237 @ 10002275  goto 86 @ 0x1000213b

 238 @ 100020ee  if (eax == edi) then 377 @ 0x10002b7d else 26 @ 0x100020f4

 239 @ 100020dc  eax = 1
 240 @ 100020e3  if (esi s> edi) then 238 @ 0x100020ee else 387 @ 0x100020e5

 241 @ 10002097  eax = eax - 1
 242 @ 1000209a  ecx = ecx + 1
 243 @ 1000209d  edx = edx + 1
 244 @ 100020a2  if (eax == edi) then 92 @ 0x100020ea else 389 @ 0x100020a4

 245 @ 1000260c  edi = edi + 0x10c
 246 @ 10002612  ecx = [edi {0xd330347a}].d
 247 @ 10002614  edx = [ecx + 0x10].d
 248 @ 10002617  [edx + 8].d = esi
 249 @ 1000261a  eax = [edi {0xd330347a}].d
 250 @ 1000261c  ecx = [eax + 0x10].d
 251 @ 1000261f  ecx = ecx - [eax + 0x14].d
 252 @ 10002622  [esi + 0x110].d = ecx
 253 @ 10002628  edx = esi + 0x10c
 254 @ 1000262e  eax = [edi {0xd330347a}].d
 255 @ 10002630  [eax + 0x10].d = edx
 256 @ 10002633  eax = [edi {0xd330347a}].d
 257 @ 10002635  [eax + 0xc].d = [eax + 0xc].d + 1
 258 @ 10002639  ecx = [edi {0xd330347a}].d
 259 @ 1000263b  [esi + 0x10c].d = ecx
 260 @ 10002641  edx = esi
 261 @ 10002643  [esi + 0x128].d = -0x1124111
 262 @ 1000264d  eax = 0x9e3779b9
 263 @ 10002652  ecx = eax
 264 @ 10002654  edi = 4
 265 @ 10002654  goto 394 @ 0x10002659

 266 @ 10002567  [&data_1000a39c].d = esi
 267 @ 1000256d  [esi + 0x110].d = edi
 268 @ 10002573  push(zx.d(0x2c))
 269 @ 10002575  push(edi)
 270 @ 10002576  call(sub_100072e0)
 271 @ 1000257b  esp = esp + 8
 272 @ 1000257e  ebx = [&data_1000a39c].d
 273 @ 10002584  edi = ebx + 0x10c
 274 @ 1000258a  [edi {0xd330347a}].d = eax
 275 @ 1000258e  if (eax != 0) then 399 @ 0x10002598 else 404 @ 0x10002590

 276 @ 10002525  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
 277 @ 10002525  goto 407 @ 0x10002527

 278 @ 10002525  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
 279 @ 10002525  goto 407 @ 0x10002527

 280 @ 10002b5a  ebx = ebx + 4
 281 @ 10002b5d  goto 34 @ 0x100020fa

 282 @ 10002b1a  ecx = [ebp + 0x18].d
 283 @ 10002b1d  push(ecx)
 284 @ 10002b1e  edx = [ebp + 0x14].d
 285 @ 10002b21  push(edx)
 286 @ 10002b22  ecx = [ebp + 0x10].d
 287 @ 10002b25  push(ecx)
 288 @ 10002b26  edx = [ebp + 0xc].d
 289 @ 10002b29  push(edx)
 290 @ 10002b2a  push(eax)
 291 @ 10002b2b  eax = ebp - 0x17c
 292 @ 10002b31  push(eax)
 293 @ 10002b32  call(sub_10001c50)
 294 @ 10002b32  noreturn
{ Does not return }

 295 @ 10002310  edx = edx - eax
 296 @ 10002312  [ebp - 0x24].d = edx
 297 @ 10002315  edx = edx - ecx
 298 @ 10002317  [ebp - 0x24].d = edx
 299 @ 1000231a  esi = ecx
 300 @ 1000231c  esi = esi u>> 0xd
 301 @ 1000231f  edx = edx ^ esi
 302 @ 10002321  [ebp - 0x24].d = edx
 303 @ 10002324  eax = eax - ecx
 304 @ 10002326  [ebp - 0x30].d = eax
 305 @ 10002329  eax = eax - edx
 306 @ 1000232b  [ebp - 0x30].d = eax
 307 @ 1000232e  esi = edx
 308 @ 10002330  esi = esi << 8
 309 @ 10002333  eax = eax ^ esi
 310 @ 10002335  [ebp - 0x30].d = eax
 311 @ 10002338  ecx = ecx - edx
 312 @ 1000233a  [ebp - 0x2c].d = ecx
 313 @ 1000233d  ecx = ecx - eax
 314 @ 1000233f  [ebp - 0x2c].d = ecx
 315 @ 10002342  esi = eax
 316 @ 10002344  esi = esi u>> 0xd
 317 @ 10002347  ecx = ecx ^ esi
 318 @ 10002349  [ebp - 0x2c].d = ecx
 319 @ 1000234c  edx = edx - eax
 320 @ 1000234e  [ebp - 0x24].d = edx
 321 @ 10002351  edx = edx - ecx
 322 @ 10002353  [ebp - 0x24].d = edx
 323 @ 10002356  esi = ecx
 324 @ 10002358  esi = esi u>> 0xc
 325 @ 1000235b  edx = edx ^ esi
 326 @ 1000235d  [ebp - 0x24].d = edx
 327 @ 10002360  eax = eax - ecx
 328 @ 10002362  [ebp - 0x30].d = eax
 329 @ 10002365  eax = eax - edx
 330 @ 10002367  [ebp - 0x30].d = eax
 331 @ 1000236a  esi = edx
 332 @ 1000236c  esi = esi << 0x10
 333 @ 1000236f  eax = eax ^ esi
 334 @ 10002371  [ebp - 0x30].d = eax
 335 @ 10002374  ecx = ecx - edx
 336 @ 10002376  [ebp - 0x2c].d = ecx
 337 @ 10002379  ecx = ecx - eax
 338 @ 1000237b  [ebp - 0x2c].d = ecx
 339 @ 1000237e  esi = eax
 340 @ 10002380  esi = esi u>> 5
 341 @ 10002383  ecx = ecx ^ esi
 342 @ 10002385  [ebp - 0x2c].d = ecx
 343 @ 10002388  edx = edx - eax
 344 @ 1000238a  [ebp - 0x24].d = edx
 345 @ 1000238d  edx = edx - ecx
 346 @ 1000238f  [ebp - 0x24].d = edx
 347 @ 10002392  esi = ecx
 348 @ 10002394  esi = esi u>> 3
 349 @ 10002397  edx = edx ^ esi
 350 @ 10002399  [ebp - 0x24].d = edx
 351 @ 1000239c  eax = eax - ecx
 352 @ 1000239e  [ebp - 0x30].d = eax
 353 @ 100023a1  eax = eax - edx
 354 @ 100023a3  [ebp - 0x30].d = eax
 355 @ 100023a6  esi = edx
 356 @ 100023a8  esi = esi << 0xa
 357 @ 100023ab  eax = eax ^ esi
 358 @ 100023ad  [ebp - 0x30].d = eax
 359 @ 100023b0  ecx = ecx - edx
 360 @ 100023b2  [ebp - 0x2c].d = ecx
 361 @ 100023b5  ecx = ecx - eax
 362 @ 100023b7  [ebp - 0x2c].d = ecx
 363 @ 100023ba  eax = eax u>> 0xf
 364 @ 100023bd  ecx = ecx ^ eax
 365 @ 100023bf  [ebp - 0x2c].d = ecx
 366 @ 100023c2  esi = [&data_1000a39c].d
 367 @ 100023c8  edx = [esi + 0x10c {0xd330347a}].d
 368 @ 100023ce  eax = [edx + 4].d
 369 @ 100023d1  eax = eax - 1
 370 @ 100023d4  eax = eax & ecx
 371 @ 100023d6  eax = eax + (eax << 1)
 372 @ 100023d9  eax = eax + eax
 373 @ 100023db  eax = eax + eax
 374 @ 100023dd  ecx = [edx].d
 375 @ 100023e3  if ([eax + ecx].d == 0) then 416 @ 0x100023f1 else 418 @ 0x100023e5

 376 @ 1000228c  jump([(edi << 2) + &jump_table_10002c08].d => 423 @ 0x10002293, 428 @ 0x1000229f, 433 @ 0x100022ab, 438 @ 0x100022b7, 443 @ 0x100022c3, 448 @ 0x100022cf, 453 @ 0x100022db, 457 @ 0x100022e4, 462 @ 0x100022f0, 467 @ 0x100022fc, 472 @ 0x10002308)

 377 @ 10002b7d  [ebp - 4].d = -1
 378 @ 10002b84  edx = [ebp - 0x38].d
 379 @ 10002b87  [ebp - 0xec].d = edx
 380 @ 10002b8d  [ebp - 0xe8].d = &data_10008430  {"Present"}
 381 @ 10002b97  [ebp - 0xe4].d = 0x1df
 382 @ 10002ba1  ecx = 0x24
 383 @ 10002ba6  esi = ebp - 0xec
 384 @ 10002bac  eax = [ebp + 8].d
 385 @ 10002baf  edi = eax
 386 @ 10002bb1  if (flag:d) then 476 else 478

 387 @ 100020e5  eax = eax | 0xffffffff
 388 @ 100020e8  goto 238 @ 0x100020ee

 389 @ 100020a4  ebx = zx.d([ecx].b)
 390 @ 100020a7  esi = zx.d([edx].b)
 391 @ 100020aa  temp1.d = esi
 392 @ 100020aa  esi = esi - ebx
 393 @ 100020ac  if (temp1.d != ebx) then 239 @ 0x100020dc else 480 @ 0x100020ae

 394 @ 10002659  [ebp - 0x4c].d = edi
 395 @ 1000265c  [ebp - 0x28].d = ecx
 396 @ 1000265f  [ebp - 0x20].d = eax
 397 @ 10002662  [ebp - 0x5c].d = edx
 398 @ 10002668  if (edi u< 0xc) then 484 @ 0x100027c1 else 488 @ 0x1000266e

 399 @ 10002598  push(zx.d(0x2c))
 400 @ 1000259a  push(zx.d(0))
 401 @ 1000259c  push(eax)
 402 @ 1000259d  call(sub_10007938)
 403 @ 1000259d  noreturn
{ Does not return }

 404 @ 10002590  push(zx.d(-1))
 405 @ 10002592  call([&data_1000808c[8]].d)  {"adId"}
 406 @ 10002592  goto 399 @ 0x10002598

 407 @ 10002527  [ebp - 4].d = edx
 408 @ 1000252a  ecx = [ebp - 0x10].d
 409 @ 1000252d  [fsbase].d = ecx
 410 @ 10002534  edi = pop
 411 @ 10002535  esi = pop
 412 @ 10002536  ebx = pop
 413 @ 10002537  esp = ebp
 414 @ 10002539  ebp = pop
 415 @ 1000253a  <return> jump(pop)

 416 @ 100023f1  eax = 0
 417 @ 100023f1  goto 598 @ 0x100023f3

 418 @ 100023e5  ecx = edx
 419 @ 100023e7  edx = [ecx].d
 420 @ 100023e9  eax = [eax + edx].d
 421 @ 100023ec  eax = eax - [ecx + 0x14].d
 422 @ 100023ef  goto 598 @ 0x100023f3

 423 @ 10002293  edi = sx.d([esi + 0xa].b)
 424 @ 10002297  edi = edi << 0x18
 425 @ 1000229a  ecx = ecx + edi
 426 @ 1000229c  [ebp - 0x2c].d = ecx
 427 @ 1000229c  goto 428 @ 0x1000229f

 428 @ 1000229f  edi = sx.d([esi + 9].b)
 429 @ 100022a3  edi = edi << 0x10
 430 @ 100022a6  ecx = ecx + edi
 431 @ 100022a8  [ebp - 0x2c].d = ecx
 432 @ 100022a8  goto 433 @ 0x100022ab

 433 @ 100022ab  edi = sx.d([esi + 8].b)
 434 @ 100022af  edi = edi << 8
 435 @ 100022b2  ecx = ecx + edi
 436 @ 100022b4  [ebp - 0x2c].d = ecx
 437 @ 100022b4  goto 438 @ 0x100022b7

 438 @ 100022b7  edi = sx.d([esi + 7].b)
 439 @ 100022bb  edi = edi << 0x18
 440 @ 100022be  eax = eax + edi
 441 @ 100022c0  [ebp - 0x30].d = eax
 442 @ 100022c0  goto 443 @ 0x100022c3

 443 @ 100022c3  edi = sx.d([esi + 6].b)
 444 @ 100022c7  edi = edi << 0x10
 445 @ 100022ca  eax = eax + edi
 446 @ 100022cc  [ebp - 0x30].d = eax
 447 @ 100022cc  goto 448 @ 0x100022cf

 448 @ 100022cf  edi = sx.d([esi + 5].b)
 449 @ 100022d3  edi = edi << 8
 450 @ 100022d6  eax = eax + edi
 451 @ 100022d8  [ebp - 0x30].d = eax
 452 @ 100022d8  goto 453 @ 0x100022db

 453 @ 100022db  edi = sx.d([esi + 4].b)
 454 @ 100022df  eax = eax + edi
 455 @ 100022e1  [ebp - 0x30].d = eax
 456 @ 100022e1  goto 457 @ 0x100022e4

 457 @ 100022e4  edi = sx.d([esi + 3].b)
 458 @ 100022e8  edi = edi << 0x18
 459 @ 100022eb  edx = edx + edi
 460 @ 100022ed  [ebp - 0x24].d = edx
 461 @ 100022ed  goto 462 @ 0x100022f0

 462 @ 100022f0  edi = sx.d([esi + 2].b)
 463 @ 100022f4  edi = edi << 0x10
 464 @ 100022f7  edx = edx + edi
 465 @ 100022f9  [ebp - 0x24].d = edx
 466 @ 100022f9  goto 467 @ 0x100022fc

 467 @ 100022fc  edi = sx.d([esi + 1].b)
 468 @ 10002300  edi = edi << 8
 469 @ 10002303  edx = edx + edi
 470 @ 10002305  [ebp - 0x24].d = edx
 471 @ 10002305  goto 472 @ 0x10002308

 472 @ 10002308  esi = sx.d([esi].b)
 473 @ 1000230b  edx = edx + esi
 474 @ 1000230d  [ebp - 0x24].d = edx
 475 @ 1000230d  goto 295 @ 0x10002310

 476 @ 10002bb1  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
 477 @ 10002bb1  goto 601 @ 0x10002bb3

 478 @ 10002bb1  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
 479 @ 10002bb1  goto 601 @ 0x10002bb3

 480 @ 100020ae  eax = eax - 1
 481 @ 100020b1  ecx = ecx + 1
 482 @ 100020b4  edx = edx + 1
 483 @ 100020b9  if (eax == edi) then 92 @ 0x100020ea else 609 @ 0x100020bb

 484 @ 100027c1  [esi + 0x128].d = [esi + 0x128].d + 4
 485 @ 100027c8  ebx = [esi + 0x128].d
 486 @ 100027ce  edi = edi - 1
 487 @ 100027d4  if (edi u> 0xa) then 614 @ 0x10002863 else 704 @ 0x100027da

 488 @ 1000266e  edi = sx.d([edx + 3].b)
 489 @ 10002672  edi = edi << 8
 490 @ 10002675  ebx = sx.d([edx + 2].b)
 491 @ 10002679  edi = edi + ebx
 492 @ 1000267b  edi = edi << 8
 493 @ 1000267e  ebx = sx.d([edx + 1].b)
 494 @ 10002682  edi = edi + ebx
 495 @ 10002684  edi = edi << 8
 496 @ 10002687  ebx = sx.d([edx].b)
 497 @ 1000268a  ebx = ebx + ecx
 498 @ 1000268c  ecx = ebx + edi
 499 @ 1000268f  [ebp - 0x28].d = ecx
 500 @ 10002692  edi = sx.d([edx + 7].b)
 501 @ 10002696  edi = edi << 8
 502 @ 10002699  ebx = sx.d([edx + 6].b)
 503 @ 1000269d  edi = edi + ebx
 504 @ 1000269f  edi = edi << 8
 505 @ 100026a2  ebx = sx.d([edx + 5].b)
 506 @ 100026a6  edi = edi + ebx
 507 @ 100026a8  edi = edi << 8
 508 @ 100026ab  ebx = sx.d([edx + 4].b)
 509 @ 100026af  ebx = ebx + eax
 510 @ 100026b1  eax = ebx + edi
 511 @ 100026b4  [ebp - 0x20].d = eax
 512 @ 100026b7  edi = sx.d([edx + 0xb].b)
 513 @ 100026bb  edi = edi << 8
 514 @ 100026be  ebx = sx.d([edx + 0xa].b)
 515 @ 100026c2  edi = edi + ebx
 516 @ 100026c4  edi = edi << 8
 517 @ 100026c7  ebx = sx.d([edx + 9].b)
 518 @ 100026cb  edi = edi + ebx
 519 @ 100026cd  edi = edi << 8
 520 @ 100026d0  ebx = sx.d([edx + 8].b)
 521 @ 100026d4  edi = edi + ebx
 522 @ 100026d6  [esi + 0x128].d = [esi + 0x128].d + edi
 523 @ 100026dc  edi = [esi + 0x128].d
 524 @ 100026e2  ecx = ecx - eax
 525 @ 100026e4  [ebp - 0x28].d = ecx
 526 @ 100026e7  ecx = ecx - edi
 527 @ 100026e9  [ebp - 0x28].d = ecx
 528 @ 100026ec  ebx = edi
 529 @ 100026ee  ebx = ebx u>> 0xd
 530 @ 100026f1  ecx = ecx ^ ebx
 531 @ 100026f3  [ebp - 0x28].d = ecx
 532 @ 100026f6  eax = eax - edi
 533 @ 100026f8  [ebp - 0x20].d = eax
 534 @ 100026fb  eax = eax - ecx
 535 @ 100026fd  [ebp - 0x20].d = eax
 536 @ 10002700  ebx = ecx
 537 @ 10002702  ebx = ebx << 8
 538 @ 10002705  eax = eax ^ ebx
 539 @ 10002707  [ebp - 0x20].d = eax
 540 @ 1000270a  edi = edi - ecx
 541 @ 1000270c  [esi + 0x128].d = edi
 542 @ 10002712  edi = edi - eax
 543 @ 10002714  [esi + 0x128].d = edi
 544 @ 1000271a  ebx = eax
 545 @ 1000271c  ebx = ebx u>> 0xd
 546 @ 1000271f  ebx = ebx ^ edi
 547 @ 10002721  [esi + 0x128].d = ebx
 548 @ 10002727  ecx = ecx - eax
 549 @ 10002729  [ebp - 0x28].d = ecx
 550 @ 1000272c  ecx = ecx - ebx
 551 @ 1000272e  [ebp - 0x28].d = ecx
 552 @ 10002731  edi = ebx
 553 @ 10002733  edi = edi u>> 0xc
 554 @ 10002736  ecx = ecx ^ edi
 555 @ 10002738  [ebp - 0x28].d = ecx
 556 @ 1000273b  eax = eax - ebx
 557 @ 1000273d  [ebp - 0x20].d = eax
 558 @ 10002740  eax = eax - ecx
 559 @ 10002742  [ebp - 0x20].d = eax
 560 @ 10002745  edi = ecx
 561 @ 10002747  edi = edi << 0x10
 562 @ 1000274a  eax = eax ^ edi
 563 @ 1000274c  [ebp - 0x20].d = eax
 564 @ 1000274f  [esi + 0x128].d = [esi + 0x128].d - ecx
 565 @ 10002755  edi = [esi + 0x128].d
 566 @ 1000275b  edi = edi - eax
 567 @ 1000275d  [esi + 0x128].d = edi
 568 @ 10002763  ebx = eax
 569 @ 10002765  ebx = ebx u>> 5
 570 @ 10002768  ebx = ebx ^ edi
 571 @ 1000276a  [esi + 0x128].d = ebx
 572 @ 10002770  ecx = ecx - eax
 573 @ 10002772  [ebp - 0x28].d = ecx
 574 @ 10002775  ecx = ecx - ebx
 575 @ 10002777  [ebp - 0x28].d = ecx
 576 @ 1000277a  edi = ebx
 577 @ 1000277c  edi = edi u>> 3
 578 @ 1000277f  ecx = ecx ^ edi
 579 @ 10002781  eax = eax - ebx
 580 @ 10002783  [ebp - 0x20].d = eax
 581 @ 10002786  eax = eax - ecx
 582 @ 10002788  [ebp - 0x20].d = eax
 583 @ 1000278b  edi = ecx
 584 @ 1000278d  edi = edi << 0xa
 585 @ 10002790  eax = eax ^ edi
 586 @ 10002792  [esi + 0x128].d = [esi + 0x128].d - ecx
 587 @ 10002798  edi = [esi + 0x128].d
 588 @ 1000279e  edi = edi - eax
 589 @ 100027a0  [esi + 0x128].d = edi
 590 @ 100027a6  ebx = eax
 591 @ 100027a8  ebx = ebx u>> 0xf
 592 @ 100027ab  ebx = ebx ^ edi
 593 @ 100027ad  [esi + 0x128].d = ebx
 594 @ 100027b3  edx = edx + 0xc
 595 @ 100027b6  edi = [ebp - 0x4c].d
 596 @ 100027b9  edi = edi - 0xc
 597 @ 100027bc  goto 394 @ 0x10002659

 598 @ 100023f3  edi = eax
 599 @ 100023f5  [ebp - 0x3c].d = edi
 600 @ 100023fa  if (edi == 0) then 705 @ 0x100024bf else 707 @ 0x10002407

 601 @ 10002bb3  ecx = [ebp - 0x10].d
 602 @ 10002bb6  [fsbase].d = ecx
 603 @ 10002bbd  edi = pop
 604 @ 10002bbe  esi = pop
 605 @ 10002bbf  ebx = pop
 606 @ 10002bc0  esp = ebp
 607 @ 10002bc2  ebp = pop
 608 @ 10002bc3  <return> jump(pop)

 609 @ 100020bb  ebx = zx.d([ecx].b)
 610 @ 100020be  esi = zx.d([edx].b)
 611 @ 100020c1  temp2.d = esi
 612 @ 100020c1  esi = esi - ebx
 613 @ 100020c3  if (temp2.d != ebx) then 239 @ 0x100020dc else 708 @ 0x100020c5

 614 @ 10002863  ecx = ecx - eax
 615 @ 10002865  [ebp - 0x28].d = ecx
 616 @ 10002868  ecx = ecx - [esi + 0x128].d
 617 @ 1000286e  [ebp - 0x28].d = ecx
 618 @ 10002871  edx = [esi + 0x128].d
 619 @ 10002877  edx = edx u>> 0xd
 620 @ 1000287a  ecx = ecx ^ edx
 621 @ 1000287c  [ebp - 0x28].d = ecx
 622 @ 1000287f  eax = eax - [esi + 0x128].d
 623 @ 10002885  [ebp - 0x20].d = eax
 624 @ 10002888  eax = eax - ecx
 625 @ 1000288a  [ebp - 0x20].d = eax
 626 @ 1000288d  edx = ecx
 627 @ 1000288f  edx = edx << 8
 628 @ 10002892  eax = eax ^ edx
 629 @ 10002894  [ebp - 0x20].d = eax
 630 @ 10002897  [esi + 0x128].d = [esi + 0x128].d - ecx
 631 @ 1000289d  edx = [esi + 0x128].d
 632 @ 100028a3  edx = edx - eax
 633 @ 100028a5  [esi + 0x128].d = edx
 634 @ 100028ab  edi = eax
 635 @ 100028ad  edi = edi u>> 0xd
 636 @ 100028b0  edi = edi ^ edx
 637 @ 100028b2  [esi + 0x128].d = edi
 638 @ 100028b8  ecx = ecx - eax
 639 @ 100028ba  [ebp - 0x28].d = ecx
 640 @ 100028bd  ecx = ecx - edi
 641 @ 100028bf  [ebp - 0x28].d = ecx
 642 @ 100028c2  edx = edi
 643 @ 100028c4  edx = edx u>> 0xc
 644 @ 100028c7  ecx = ecx ^ edx
 645 @ 100028c9  [ebp - 0x28].d = ecx
 646 @ 100028cc  eax = eax - edi
 647 @ 100028ce  [ebp - 0x20].d = eax
 648 @ 100028d1  eax = eax - ecx
 649 @ 100028d3  [ebp - 0x20].d = eax
 650 @ 100028d6  edx = ecx
 651 @ 100028d8  edx = edx << 0x10
 652 @ 100028db  eax = eax ^ edx
 653 @ 100028dd  [ebp - 0x20].d = eax
 654 @ 100028e0  [esi + 0x128].d = [esi + 0x128].d - ecx
 655 @ 100028e6  edx = [esi + 0x128].d
 656 @ 100028ec  edx = edx - eax
 657 @ 100028ee  [esi + 0x128].d = edx
 658 @ 100028f4  edi = eax
 659 @ 100028f6  edi = edi u>> 5
 660 @ 100028f9  edi = edi ^ edx
 661 @ 100028fb  [esi + 0x128].d = edi
 662 @ 10002901  ecx = ecx - eax
 663 @ 10002903  [ebp - 0x28].d = ecx
 664 @ 10002906  ecx = ecx - edi
 665 @ 10002908  [ebp - 0x28].d = ecx
 666 @ 1000290b  edx = edi
 667 @ 1000290d  edx = edx u>> 3
 668 @ 10002910  ecx = ecx ^ edx
 669 @ 10002912  [ebp - 0x28].d = ecx
 670 @ 10002915  eax = eax - edi
 671 @ 10002917  [ebp - 0x20].d = eax
 672 @ 1000291a  eax = eax - ecx
 673 @ 1000291c  [ebp - 0x20].d = eax
 674 @ 1000291f  edx = ecx
 675 @ 10002921  edx = edx << 0xa
 676 @ 10002924  eax = eax ^ edx
 677 @ 10002926  [ebp - 0x20].d = eax
 678 @ 10002929  [esi + 0x128].d = [esi + 0x128].d - ecx
 679 @ 1000292f  ecx = [esi + 0x128].d
 680 @ 10002935  ecx = ecx - eax
 681 @ 10002937  [esi + 0x128].d = ecx
 682 @ 1000293d  eax = eax u>> 0xf
 683 @ 10002940  eax = eax ^ ecx
 684 @ 10002942  [esi + 0x128].d = eax
 685 @ 10002948  edi = [&data_1000a39c].d
 686 @ 1000294e  edx = [edi + 0x10c {0xd330347a}].d
 687 @ 10002954  ecx = [edx + 4].d
 688 @ 10002957  ecx = ecx - 1
 689 @ 1000295a  ecx = ecx & eax
 690 @ 1000295c  eax = ecx + (ecx << 1)
 691 @ 1000295f  eax = eax + eax
 692 @ 10002961  eax = eax + eax
 693 @ 10002963  ecx = [edx].d
 694 @ 10002965  ecx = ecx + eax + 4
 695 @ 10002969  [ecx].d = [ecx].d + 1
 696 @ 1000296c  edx = [edi + 0x10c {0xd330347a}].d
 697 @ 10002972  ecx = [edx].d
 698 @ 10002974  edx = [eax + ecx].d
 699 @ 10002977  [esi + 0x11c].d = edx
 700 @ 1000297d  [esi + 0x118].d = 0
 701 @ 10002987  ecx = [edi + 0x10c {0xd330347a}].d
 702 @ 1000298d  edx = [ecx].d
 703 @ 10002993  if ([eax + edx].d == 0) then 712 @ 0x100029a9 else 724 @ 0x10002995

 704 @ 100027da  jump([(edi << 2) + &jump_table_10002c34].d => 730 @ 0x100027e1, 735 @ 0x100027f0, 739 @ 0x100027fd, 743 @ 0x1000280a, 748 @ 0x10002816, 753 @ 0x10002822, 758 @ 0x1000282e, 762 @ 0x10002837, 767 @ 0x10002843, 772 @ 0x1000284f, 777 @ 0x1000285b)

 705 @ 100024bf  ebx = [ebp - 0x34].d
 706 @ 100024bf  goto 67 @ 0x100024c4

 707 @ 10002407  if ([edi + 0x124].d != 4) then 781 @ 0x100024a3 else 783 @ 0x1000240d

 708 @ 100020c5  eax = eax - 1
 709 @ 100020c8  ecx = ecx + 1
 710 @ 100020cb  edx = edx + 1
 711 @ 100020d0  if (eax == edi) then 92 @ 0x100020ea else 787 @ 0x100020d2

 712 @ 100029a9  esi = esi + 0x10c
 713 @ 100029af  ecx = [edi + 0x10c {0xd330347a}].d
 714 @ 100029b5  edx = [ecx].d
 715 @ 100029b7  [eax + edx].d = esi
 716 @ 100029ba  ecx = [edi + 0x10c {0xd330347a}].d
 717 @ 100029c0  edx = [ecx].d
 718 @ 100029c2  ecx = edx + eax
 719 @ 100029c5  eax = [ecx + 8].d
 720 @ 100029c8  eax = eax + 1
 721 @ 100029cb  eax = eax + (eax << 2)
 722 @ 100029ce  eax = eax + eax
 723 @ 100029d3  if ([ecx + 4].d u< eax) then 792 @ 0x10002b0d else 794 @ 0x100029d9

 724 @ 10002995  ecx = esi + 0x10c
 725 @ 1000299b  edx = [edi + 0x10c {0xd330347a}].d
 726 @ 100029a1  edx = [edx].d
 727 @ 100029a3  edx = [edx + eax].d
 728 @ 100029a6  [edx + 0xc].d = ecx
 729 @ 100029a6  goto 712 @ 0x100029a9

 730 @ 100027e1  edi = sx.d([edx + 0xa].b)
 731 @ 100027e5  edi = edi << 0x18
 732 @ 100027e8  edi = edi + ebx
 733 @ 100027ea  [esi + 0x128].d = edi
 734 @ 100027ea  goto 735 @ 0x100027f0

 735 @ 100027f0  edi = sx.d([edx + 9].b)
 736 @ 100027f4  edi = edi << 0x10
 737 @ 100027f7  [esi + 0x128].d = [esi + 0x128].d + edi
 738 @ 100027f7  goto 739 @ 0x100027fd

 739 @ 100027fd  edi = sx.d([edx + 8].b)
 740 @ 10002801  edi = edi << 8
 741 @ 10002804  [esi + 0x128].d = [esi + 0x128].d + edi
 742 @ 10002804  goto 743 @ 0x1000280a

 743 @ 1000280a  edi = sx.d([edx + 7].b)
 744 @ 1000280e  edi = edi << 0x18
 745 @ 10002811  eax = eax + edi
 746 @ 10002813  [ebp - 0x20].d = eax
 747 @ 10002813  goto 748 @ 0x10002816

 748 @ 10002816  edi = sx.d([edx + 6].b)
 749 @ 1000281a  edi = edi << 0x10
 750 @ 1000281d  eax = eax + edi
 751 @ 1000281f  [ebp - 0x20].d = eax
 752 @ 1000281f  goto 753 @ 0x10002822

 753 @ 10002822  edi = sx.d([edx + 5].b)
 754 @ 10002826  edi = edi << 8
 755 @ 10002829  eax = eax + edi
 756 @ 1000282b  [ebp - 0x20].d = eax
 757 @ 1000282b  goto 758 @ 0x1000282e

 758 @ 1000282e  edi = sx.d([edx + 4].b)
 759 @ 10002832  eax = eax + edi
 760 @ 10002834  [ebp - 0x20].d = eax
 761 @ 10002834  goto 762 @ 0x10002837

 762 @ 10002837  edi = sx.d([edx + 3].b)
 763 @ 1000283b  edi = edi << 0x18
 764 @ 1000283e  ecx = ecx + edi
 765 @ 10002840  [ebp - 0x28].d = ecx
 766 @ 10002840  goto 767 @ 0x10002843

 767 @ 10002843  edi = sx.d([edx + 2].b)
 768 @ 10002847  edi = edi << 0x10
 769 @ 1000284a  ecx = ecx + edi
 770 @ 1000284c  [ebp - 0x28].d = ecx
 771 @ 1000284c  goto 772 @ 0x1000284f

 772 @ 1000284f  edi = sx.d([edx + 1].b)
 773 @ 10002853  edi = edi << 8
 774 @ 10002856  ecx = ecx + edi
 775 @ 10002858  [ebp - 0x28].d = ecx
 776 @ 10002858  goto 777 @ 0x1000285b

 777 @ 1000285b  edx = sx.d([edx].b)
 778 @ 1000285e  ecx = ecx + edx
 779 @ 10002860  [ebp - 0x28].d = ecx
 780 @ 10002860  goto 614 @ 0x10002863

 781 @ 100024a3  eax = [edi + 0x11c].d
 782 @ 100024ab  if (eax == 0) then 416 @ 0x100023f1 else 796 @ 0x100024b1

 783 @ 1000240d  eax = 4
 784 @ 10002412  ecx = [ebp - 0x34].d
 785 @ 10002415  edx = [edi + 0x120].d
 786 @ 1000241b  goto 799 @ 0x10002423

 787 @ 100020d2  eax = zx.d([ecx].b)
 788 @ 100020d5  esi = zx.d([edx].b)
 789 @ 100020d8  temp3.d = esi
 790 @ 100020d8  esi = esi - eax
 791 @ 100020da  if (temp3.d == eax) then 92 @ 0x100020ea else 239 @ 0x100020dc

 792 @ 10002b0d  ebx = [ebp - 0x34].d
 793 @ 10002b0d  goto 119 @ 0x10002b10

 794 @ 100029d9  eax = [esi].d
 795 @ 100029df  if ([eax + 0x24].d == 1) then 792 @ 0x10002b0d else 800 @ 0x100029e5

 796 @ 100024b1  ecx = [esi + 0x10c {0xd330347a}].d
 797 @ 100024b7  eax = eax - [ecx + 0x14].d
 798 @ 100024ba  goto 598 @ 0x100023f3

 799 @ 10002423  if (eax u< 4) then 812 @ 0x10002438 else 813 @ 0x10002425

 800 @ 100029e5  eax = [eax + 4].d
 801 @ 100029e8  ecx = eax + (eax << 1)
 802 @ 100029eb  ecx = ecx + ecx
 803 @ 100029ed  ecx = ecx + ecx
 804 @ 100029ef  ecx = ecx + ecx
 805 @ 100029f1  push(ecx)
 806 @ 100029f2  push(zx.d(0))
 807 @ 100029f4  call(sub_100072e0)
 808 @ 100029f9  esp = esp + 8
 809 @ 100029fc  ebx = eax
 810 @ 100029fe  [ebp - 0x50].d = ebx
 811 @ 10002a03  if (ebx != 0) then 815 @ 0x10002a0d else 826 @ 0x10002a05

 812 @ 10002438  if (eax == 0) then 829 @ 0x10002497 else 831 @ 0x1000243a

 813 @ 10002425  esi = [edx].d
 814 @ 10002429  if (esi != [ecx].d) then 831 @ 0x1000243a else 836 @ 0x1000242b

 815 @ 10002a0d  edx = [esi].d
 816 @ 10002a0f  eax = [edx + 4].d
 817 @ 10002a12  eax = eax + (eax << 1)
 818 @ 10002a15  eax = eax + eax
 819 @ 10002a17  eax = eax + eax
 820 @ 10002a19  eax = eax + eax
 821 @ 10002a1b  push(eax)
 822 @ 10002a1c  push(zx.d(0))
 823 @ 10002a1e  push(ebx)
 824 @ 10002a1f  call(sub_10007938)
 825 @ 10002a1f  noreturn
{ Does not return }

 826 @ 10002a05  push(zx.d(-1))
 827 @ 10002a07  call([&data_1000808c[8]].d)  {"adId"}
 828 @ 10002a07  goto 815 @ 0x10002a0d

 829 @ 10002497  eax = 0
 830 @ 10002497  goto 840 @ 0x1000249b

 831 @ 1000243a  esi = zx.d([edx].b)
 832 @ 1000243d  ebx = zx.d([ecx].b)
 833 @ 10002440  temp4.d = esi
 834 @ 10002440  esi = esi - ebx
 835 @ 10002442  if (temp4.d != ebx) then 841 @ 0x10002489 else 843 @ 0x10002444

 836 @ 1000242b  eax = eax - 4
 837 @ 1000242e  ecx = ecx + 4
 838 @ 10002431  edx = edx + 4
 839 @ 10002434  goto 799 @ 0x10002423

 840 @ 1000249b  if (eax == 0) then 705 @ 0x100024bf else 847 @ 0x1000249d

 841 @ 10002489  eax = 1
 842 @ 10002490  if (esi s> 0) then 840 @ 0x1000249b else 849 @ 0x10002492

 843 @ 10002444  eax = eax - 1
 844 @ 10002447  ecx = ecx + 1
 845 @ 1000244a  edx = edx + 1
 846 @ 1000244f  if (eax == 0) then 829 @ 0x10002497 else 851 @ 0x10002451

 847 @ 1000249d  esi = [&data_1000a39c].d
 848 @ 1000249d  goto 781 @ 0x100024a3

 849 @ 10002492  eax = eax | 0xffffffff
 850 @ 10002495  goto 840 @ 0x1000249b

 851 @ 10002451  esi = zx.d([edx].b)
 852 @ 10002454  ebx = zx.d([ecx].b)
 853 @ 10002457  temp5.d = esi
 854 @ 10002457  esi = esi - ebx
 855 @ 10002459  if (temp5.d != ebx) then 841 @ 0x10002489 else 856 @ 0x1000245b

 856 @ 1000245b  eax = eax - 1
 857 @ 1000245e  ecx = ecx + 1
 858 @ 10002461  edx = edx + 1
 859 @ 10002466  if (eax == 0) then 829 @ 0x10002497 else 860 @ 0x10002468

 860 @ 10002468  esi = zx.d([edx].b)
 861 @ 1000246b  ebx = zx.d([ecx].b)
 862 @ 1000246e  temp6.d = esi
 863 @ 1000246e  esi = esi - ebx
 864 @ 10002470  if (temp6.d != ebx) then 841 @ 0x10002489 else 865 @ 0x10002472

 865 @ 10002472  eax = eax - 1
 866 @ 10002475  ecx = ecx + 1
 867 @ 10002478  edx = edx + 1
 868 @ 1000247d  if (eax == 0) then 829 @ 0x10002497 else 869 @ 0x1000247f

 869 @ 1000247f  esi = zx.d([edx].b)
 870 @ 10002482  eax = zx.d([ecx].b)
 871 @ 10002485  temp7.d = esi
 872 @ 10002485  esi = esi - eax
 873 @ 10002487  if (temp7.d == eax) then 829 @ 0x10002497 else 841 @ 0x10002489

1000241d                                                                                         8d 49 00                               .I.

100025a2  int32_t sub_100025a2(int32_t* arg1 @ edi) __noreturn

   0 @ 100025a2  esp = esp + 0xc
   1 @ 100025a5  ecx = [edi].d
   2 @ 100025a7  [ecx + 0x10].d = edi
   3 @ 100025aa  edx = [edi].d
   4 @ 100025ac  [edx + 4].d = 0x20
   5 @ 100025b3  eax = [edi].d
   6 @ 100025b5  [eax + 8].d = 5
   7 @ 100025bc  ecx = [edi].d
   8 @ 100025be  [ecx + 0x14].d = 0x10c
   9 @ 100025c5  edi = ebx + 0x10c
  10 @ 100025cb  push(0x180)
  11 @ 100025d0  push(zx.d(0))
  12 @ 100025d2  call(sub_100072e0)
  13 @ 100025d7  esp = esp + 8
  14 @ 100025da  edx = [edi {0x10c}].d
  15 @ 100025dc  [edx].d = eax
  16 @ 100025de  eax = [edi {0x10c}].d
  17 @ 100025e3  if ([eax].d != 0) then 18 @ 0x100025ed else 25 @ 0x100025e5

  18 @ 100025ed  push(0x180)
  19 @ 100025f2  push(zx.d(0))
  20 @ 100025f4  ecx = eax
  21 @ 100025f6  edx = [ecx].d
  22 @ 100025f8  push(edx)
  23 @ 100025f9  call(sub_10007938)
  24 @ 100025f9  noreturn
{ Does not return }

  25 @ 100025e5  push(zx.d(-1))
  26 @ 100025e7  call([&data_1000808c[8]].d)  {"adId"}
  27 @ 100025e7  goto 18 @ 0x100025ed

100025fe                                                                                            83 c4                                ..
10002600  0c 8b 07 c7 40 28 e1 1f 11 a0 eb 27                                                              ....@(.....'

10002a24  int32_t sub_10002a24(int32_t* arg1 @ ebp, int32_t* arg2 @ esi, int32_t arg3, int32_t arg4)

   0 @ 10002a24  esp = esp + 0xc
   1 @ 10002a27  eax = [esi].d
   2 @ 10002a29  edx = [eax + 0xc].d
   3 @ 10002a2c  ecx = [eax + 8].d
   4 @ 10002a2f  ecx = ecx + 1
   5 @ 10002a32  edi = edx
   6 @ 10002a34  edi = edi u>> cl
   7 @ 10002a36  ecx = [eax + 4].d
   8 @ 10002a39  ecx = ecx + ecx - 1
   9 @ 10002a3d  ecx = ecx & edx
  10 @ 10002a3f  temp3.d = ecx
  11 @ 10002a3f  ecx = neg.d(ecx)
  12 @ 10002a3f  flag:c = temp3.d != 0
  13 @ 10002a41  ecx = sbb.d(ecx, ecx, flag:c)
  14 @ 10002a43  ecx = neg.d(ecx)
  15 @ 10002a45  edi = edi + ecx
  16 @ 10002a47  [eax + 0x18].d = edi
  17 @ 10002a4a  edx = [esi].d
  18 @ 10002a4c  eax = 0
  19 @ 10002a4e  [edx + 0x1c].d = eax
  20 @ 10002a51  [ebp - 0x40].d = eax
  21 @ 10002a51  goto 22 @ 0x10002a54

  22 @ 10002a54  eax = [esi].d
  23 @ 10002a56  ecx = [ebp - 0x40].d
  24 @ 10002a5c  if (ecx u>= [eax + 4].d) then 25 @ 0x10002ac6 else 43 @ 0x10002a5e

  25 @ 10002ac6  ecx = [eax + 4].d
  26 @ 10002ac9  ecx = ecx + ecx
  27 @ 10002acb  [eax + 4].d = ecx
  28 @ 10002ace  eax = [esi].d
  29 @ 10002ad0  edi = 1
  30 @ 10002ad5  [eax + 8].d = [eax + 8].d + edi
  31 @ 10002ad8  edx = [esi].d
  32 @ 10002ada  eax = [edx].d
  33 @ 10002adc  push(eax)
  34 @ 10002add  push(zx.d(0))
  35 @ 10002adf  call(sub_100070a0)
  36 @ 10002ae4  esp = esp + 8
  37 @ 10002ae7  ecx = [esi].d
  38 @ 10002ae9  [ecx].d = ebx
  39 @ 10002aeb  eax = [esi].d
  40 @ 10002aed  edx = [eax + 0xc].d
  41 @ 10002af0  edx = edx u>> 1
  42 @ 10002af5  if ([eax + 0x1c].d u<= edx) then 47 @ 0x10002afe else 49 @ 0x10002af7

  43 @ 10002a5e  edx = ecx + (ecx << 1)
  44 @ 10002a61  eax = [eax].d
  45 @ 10002a63  edi = [eax + (edx << 2)].d
  46 @ 10002a63  goto 52 @ 0x10002a68

  47 @ 10002afe  ecx = 0
  48 @ 10002afe  goto 53 @ 0x10002b00

  49 @ 10002af7  ecx = [eax + 0x20].d
  50 @ 10002afa  ecx = ecx + edi
  51 @ 10002afc  goto 53 @ 0x10002b00

  52 @ 10002a68  if (edi == 0) then 56 @ 0x10002ac0 else 58 @ 0x10002a6a

  53 @ 10002b00  [eax + 0x20].d = ecx
  54 @ 10002b03  esi = [esi].d
  55 @ 10002b08  if ([esi + 0x20].d u<= edi) then 70 @ 0x10002b0d else 72 @ 0x10002b0a

  56 @ 10002ac0  [ebp - 0x40].d = [ebp - 0x40].d + 1
  57 @ 10002ac4  goto 22 @ 0x10002a54

  58 @ 10002a6a  ecx = [edi + 0x10].d
  59 @ 10002a6d  [ebp - 0x54].d = ecx
  60 @ 10002a70  edx = [esi].d
  61 @ 10002a72  eax = [edx + 4].d
  62 @ 10002a75  eax = eax + eax - 1
  63 @ 10002a79  eax = eax & [edi + 0x1c].d
  64 @ 10002a7c  eax = eax + (eax << 1)
  65 @ 10002a7f  ecx = ebx + (eax << 2)
  66 @ 10002a82  [ecx + 4].d = [ecx + 4].d + 1
  67 @ 10002a86  edx = [ecx + 4].d
  68 @ 10002a89  eax = [esi].d
  69 @ 10002a8e  if (edx u<= [eax + 0x18].d) then 74 @ 0x10002aa4 else 79 @ 0x10002a90

  70 @ 10002b0d  ebx = [ebp - 0x34].d
  71 @ 10002b0d  goto 91 @ 0x10002b10

  72 @ 10002b0a  [esi + 0x24].d = edi
  73 @ 10002b0a  goto 70 @ 0x10002b0d

  74 @ 10002aa4  [edi + 0xc].d = 0
  75 @ 10002aab  edx = [ecx].d
  76 @ 10002aad  [edi + 0x10].d = edx
  77 @ 10002ab0  eax = [ecx].d
  78 @ 10002ab4  if (eax == 0) then 93 @ 0x10002ab9 else 96 @ 0x10002ab6

  79 @ 10002a90  [eax + 0x1c].d = [eax + 0x1c].d + 1
  80 @ 10002a94  ebx = [esi].d
  81 @ 10002a96  eax = [ecx + 4].d
  82 @ 10002a99  edx = 0
  83 @ 10002a9b  temp2.d = [ebx + 0x18].d
  84 @ 10002a9b  temp0.d = divu.dp.d(edx:eax, temp2.d)
  85 @ 10002a9b  temp1.d = modu.dp.d(edx:eax, temp2.d)
  86 @ 10002a9b  eax = temp0.d
  87 @ 10002a9b  edx = temp1.d
  88 @ 10002a9e  [ecx + 8].d = eax
  89 @ 10002aa1  ebx = [ebp - 0x50].d
  90 @ 10002aa1  goto 74 @ 0x10002aa4

  91 @ 10002b10  eax = [ebx].d
  92 @ 10002b18  if (eax == [&data_1000a3ec].d) then 98 @ 0x10002b5a else 100 @ 0x10002b1a

  93 @ 10002ab9  [ecx].d = edi
  94 @ 10002abb  edi = [ebp - 0x54].d
  95 @ 10002abe  goto 52 @ 0x10002a68

  96 @ 10002ab6  [eax + 0xc].d = edi
  97 @ 10002ab6  goto 93 @ 0x10002ab9

  98 @ 10002b5a  ebx = ebx + 4
  99 @ 10002b5d  goto 113 @ 0x100020fa

 100 @ 10002b1a  ecx = [ebp + 0x18].d
 101 @ 10002b1d  push(ecx)
 102 @ 10002b1e  edx = [ebp + 0x14].d
 103 @ 10002b21  push(edx)
 104 @ 10002b22  ecx = [ebp + 0x10].d
 105 @ 10002b25  push(ecx)
 106 @ 10002b26  edx = [ebp + 0xc].d
 107 @ 10002b29  push(edx)
 108 @ 10002b2a  push(eax)
 109 @ 10002b2b  eax = ebp - 0x17c
 110 @ 10002b31  push(eax)
 111 @ 10002b32  call(sub_10001c50)
 112 @ 10002b32  noreturn
{ Does not return }

 113 @ 100020fa  [ebp - 0x34].d = ebx
 114 @ 100020fd  esi = [ebp - 0x44].d
 115 @ 10002100  ecx = esi
 116 @ 10002102  ecx = ecx u>> 2
 117 @ 10002105  edx = ebp + (ecx << 2) - 0x417c
 118 @ 1000210e  if (ebx u>= edx) then 119 @ 0x10002b62 else 125 @ 0x10002114

 119 @ 10002b62  push(esi)
 120 @ 10002b63  ecx = ebp - 0x417c
 121 @ 10002b69  push(ecx)
 122 @ 10002b6a  push(&data_1000a400)
 123 @ 10002b6f  call(sub_1000793e)
 124 @ 10002b6f  noreturn
{ Does not return }

 125 @ 10002114  edi = 0
 126 @ 10002116  [ebp - 0x3c].d = edi
 127 @ 10002119  [ebp - 0x3c].d = edi
 128 @ 10002122  if ([&data_1000a39c].d == edi) then 129 @ 0x100024c4 else 130 @ 0x10002128

 129 @ 100024c4  if (edi == 0) then 136 @ 0x100024de else 144 @ 0x100024ca

 130 @ 10002128  esi = ebx
 131 @ 1000212a  ecx = 0xfeedbeef
 132 @ 1000212f  eax = 0x9e3779b9
 133 @ 10002134  edx = eax
 134 @ 10002136  edi = 4
 135 @ 10002136  goto 145 @ 0x1000213b

 136 @ 100024de  push(0x12c)
 137 @ 100024e3  push(zx.d(1))
 138 @ 100024e5  push(zx.d(0))
 139 @ 100024e7  call(sub_10007160)
 140 @ 100024ec  esp = esp + 0xc
 141 @ 100024ef  esi = eax
 142 @ 100024f1  [ebp - 0x3c].d = esi
 143 @ 100024f6  if (esi != 0) then 151 @ 0x1000253b else 158 @ 0x100024f8

 144 @ 100024ca  if ([ebp + 0x10].d == 0) then 91 @ 0x10002b10 else 167 @ 0x100024d0

 145 @ 1000213b  [ebp - 0x48].d = edi
 146 @ 1000213e  [ebp - 0x24].d = edx
 147 @ 10002141  [ebp - 0x30].d = eax
 148 @ 10002144  [ebp - 0x2c].d = ecx
 149 @ 10002147  [ebp - 0x58].d = esi
 150 @ 1000214d  if (edi u< 0xc) then 171 @ 0x1000227a else 175 @ 0x10002153

 151 @ 1000253b  eax = [ebx].d
 152 @ 1000253d  [esi].d = eax
 153 @ 1000253f  [esi + 0x114].d = 0
 154 @ 10002549  [esi + 0x120].d = esi
 155 @ 1000254f  [esi + 0x124].d = 4
 156 @ 10002559  edi = [&data_1000a39c].d
 157 @ 10002561  if (edi != 0) then 284 @ 0x1000260c else 305 @ 0x10002567

 158 @ 100024f8  edx = edx | 0xffffffff
 159 @ 100024fb  [ebp - 0xec].d = edx
 160 @ 10002501  [ebp - 0xe8].d = &data_10008430  {"Present"}
 161 @ 1000250b  [ebp - 0xe4].d = 0x1c0
 162 @ 10002515  ecx = 0x24
 163 @ 1000251a  esi = ebp - 0xec
 164 @ 10002520  eax = [ebp + 8].d
 165 @ 10002523  edi = eax
 166 @ 10002525  if (flag:d) then 315 else 317

 167 @ 100024d0  edx = [ebp - 0x38].d
 168 @ 100024d3  [ebp - 0x38].d = edx
 169 @ 100024d6  ebx = ebx + 4
 170 @ 100024d9  goto 113 @ 0x100020fa

 171 @ 1000227a  ecx = ecx + 4
 172 @ 1000227d  [ebp - 0x2c].d = ecx
 173 @ 10002280  edi = edi - 1
 174 @ 10002286  if (edi u> 0xa) then 319 @ 0x10002310 else 400 @ 0x1000228c

 175 @ 10002153  edi = sx.d([esi + 3].b)
 176 @ 10002157  edi = edi << 8
 177 @ 1000215a  ebx = sx.d([esi + 2].b)
 178 @ 1000215e  edi = edi + ebx
 179 @ 10002160  edi = edi << 8
 180 @ 10002163  ebx = sx.d([esi + 1].b)
 181 @ 10002167  edi = edi + ebx
 182 @ 10002169  edi = edi << 8
 183 @ 1000216c  ebx = sx.d([esi].b)
 184 @ 1000216f  ebx = ebx + edx
 185 @ 10002171  edx = ebx + edi
 186 @ 10002174  [ebp - 0x24].d = edx
 187 @ 10002177  edi = sx.d([esi + 7].b)
 188 @ 1000217b  edi = edi << 8
 189 @ 1000217e  ebx = sx.d([esi + 6].b)
 190 @ 10002182  edi = edi + ebx
 191 @ 10002184  edi = edi << 8
 192 @ 10002187  ebx = sx.d([esi + 5].b)
 193 @ 1000218b  edi = edi + ebx
 194 @ 1000218d  edi = edi << 8
 195 @ 10002190  ebx = sx.d([esi + 4].b)
 196 @ 10002194  ebx = ebx + eax
 197 @ 10002196  eax = ebx + edi
 198 @ 10002199  [ebp - 0x30].d = eax
 199 @ 1000219c  edi = sx.d([esi + 0xb].b)
 200 @ 100021a0  edi = edi << 8
 201 @ 100021a3  ebx = sx.d([esi + 0xa].b)
 202 @ 100021a7  edi = edi + ebx
 203 @ 100021a9  edi = edi << 8
 204 @ 100021ac  ebx = sx.d([esi + 9].b)
 205 @ 100021b0  edi = edi + ebx
 206 @ 100021b2  edi = edi << 8
 207 @ 100021b5  ebx = sx.d([esi + 8].b)
 208 @ 100021b9  ebx = ebx + ecx
 209 @ 100021bb  ecx = ebx + edi
 210 @ 100021be  [ebp - 0x2c].d = ecx
 211 @ 100021c1  edx = edx - eax
 212 @ 100021c3  [ebp - 0x24].d = edx
 213 @ 100021c6  edx = edx - ecx
 214 @ 100021c8  [ebp - 0x24].d = edx
 215 @ 100021cb  edi = ecx
 216 @ 100021cd  edi = edi u>> 0xd
 217 @ 100021d0  edx = edx ^ edi
 218 @ 100021d2  [ebp - 0x24].d = edx
 219 @ 100021d5  eax = eax - ecx
 220 @ 100021d7  [ebp - 0x30].d = eax
 221 @ 100021da  eax = eax - edx
 222 @ 100021dc  [ebp - 0x30].d = eax
 223 @ 100021df  edi = edx
 224 @ 100021e1  edi = edi << 8
 225 @ 100021e4  eax = eax ^ edi
 226 @ 100021e6  [ebp - 0x30].d = eax
 227 @ 100021e9  ecx = ecx - edx
 228 @ 100021eb  [ebp - 0x2c].d = ecx
 229 @ 100021ee  ecx = ecx - eax
 230 @ 100021f0  [ebp - 0x2c].d = ecx
 231 @ 100021f3  edi = eax
 232 @ 100021f5  edi = edi u>> 0xd
 233 @ 100021f8  ecx = ecx ^ edi
 234 @ 100021fa  [ebp - 0x2c].d = ecx
 235 @ 100021fd  edx = edx - eax
 236 @ 100021ff  [ebp - 0x24].d = edx
 237 @ 10002202  edx = edx - ecx
 238 @ 10002204  [ebp - 0x24].d = edx
 239 @ 10002207  edi = ecx
 240 @ 10002209  edi = edi u>> 0xc
 241 @ 1000220c  edx = edx ^ edi
 242 @ 1000220e  [ebp - 0x24].d = edx
 243 @ 10002211  eax = eax - ecx
 244 @ 10002213  [ebp - 0x30].d = eax
 245 @ 10002216  eax = eax - edx
 246 @ 10002218  [ebp - 0x30].d = eax
 247 @ 1000221b  edi = edx
 248 @ 1000221d  edi = edi << 0x10
 249 @ 10002220  eax = eax ^ edi
 250 @ 10002222  [ebp - 0x30].d = eax
 251 @ 10002225  ecx = ecx - edx
 252 @ 10002227  [ebp - 0x2c].d = ecx
 253 @ 1000222a  ecx = ecx - eax
 254 @ 1000222c  [ebp - 0x2c].d = ecx
 255 @ 1000222f  edi = eax
 256 @ 10002231  edi = edi u>> 5
 257 @ 10002234  ecx = ecx ^ edi
 258 @ 10002236  [ebp - 0x2c].d = ecx
 259 @ 10002239  edx = edx - eax
 260 @ 1000223b  [ebp - 0x24].d = edx
 261 @ 1000223e  edx = edx - ecx
 262 @ 10002240  [ebp - 0x24].d = edx
 263 @ 10002243  edi = ecx
 264 @ 10002245  edi = edi u>> 3
 265 @ 10002248  edx = edx ^ edi
 266 @ 1000224a  eax = eax - ecx
 267 @ 1000224c  [ebp - 0x30].d = eax
 268 @ 1000224f  eax = eax - edx
 269 @ 10002251  [ebp - 0x30].d = eax
 270 @ 10002254  edi = edx
 271 @ 10002256  edi = edi << 0xa
 272 @ 10002259  eax = eax ^ edi
 273 @ 1000225b  ecx = ecx - edx
 274 @ 1000225d  [ebp - 0x2c].d = ecx
 275 @ 10002260  ecx = ecx - eax
 276 @ 10002262  [ebp - 0x2c].d = ecx
 277 @ 10002265  edi = eax
 278 @ 10002267  edi = edi u>> 0xf
 279 @ 1000226a  ecx = ecx ^ edi
 280 @ 1000226c  esi = esi + 0xc
 281 @ 1000226f  edi = [ebp - 0x48].d
 282 @ 10002272  edi = edi - 0xc
 283 @ 10002275  goto 145 @ 0x1000213b

 284 @ 1000260c  edi = edi + 0x10c
 285 @ 10002612  ecx = [edi {0xd330347a}].d
 286 @ 10002614  edx = [ecx + 0x10].d
 287 @ 10002617  [edx + 8].d = esi
 288 @ 1000261a  eax = [edi {0xd330347a}].d
 289 @ 1000261c  ecx = [eax + 0x10].d
 290 @ 1000261f  ecx = ecx - [eax + 0x14].d
 291 @ 10002622  [esi + 0x110].d = ecx
 292 @ 10002628  edx = esi + 0x10c
 293 @ 1000262e  eax = [edi {0xd330347a}].d
 294 @ 10002630  [eax + 0x10].d = edx
 295 @ 10002633  eax = [edi {0xd330347a}].d
 296 @ 10002635  [eax + 0xc].d = [eax + 0xc].d + 1
 297 @ 10002639  ecx = [edi {0xd330347a}].d
 298 @ 1000263b  [esi + 0x10c].d = ecx
 299 @ 10002641  edx = esi
 300 @ 10002643  [esi + 0x128].d = -0x1124111
 301 @ 1000264d  eax = 0x9e3779b9
 302 @ 10002652  ecx = eax
 303 @ 10002654  edi = 4
 304 @ 10002654  goto 401 @ 0x10002659

 305 @ 10002567  [&data_1000a39c].d = esi
 306 @ 1000256d  [esi + 0x110].d = edi
 307 @ 10002573  push(zx.d(0x2c))
 308 @ 10002575  push(edi)
 309 @ 10002576  call(sub_100072e0)
 310 @ 1000257b  esp = esp + 8
 311 @ 1000257e  ebx = [&data_1000a39c].d
 312 @ 10002584  edi = ebx + 0x10c
 313 @ 1000258a  [edi {0xd330347a}].d = eax
 314 @ 1000258e  if (eax != 0) then 406 @ 0x10002598 else 411 @ 0x10002590

 315 @ 10002525  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
 316 @ 10002525  goto 414 @ 0x10002527

 317 @ 10002525  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
 318 @ 10002525  goto 414 @ 0x10002527

 319 @ 10002310  edx = edx - eax
 320 @ 10002312  [ebp - 0x24].d = edx
 321 @ 10002315  edx = edx - ecx
 322 @ 10002317  [ebp - 0x24].d = edx
 323 @ 1000231a  esi = ecx
 324 @ 1000231c  esi = esi u>> 0xd
 325 @ 1000231f  edx = edx ^ esi
 326 @ 10002321  [ebp - 0x24].d = edx
 327 @ 10002324  eax = eax - ecx
 328 @ 10002326  [ebp - 0x30].d = eax
 329 @ 10002329  eax = eax - edx
 330 @ 1000232b  [ebp - 0x30].d = eax
 331 @ 1000232e  esi = edx
 332 @ 10002330  esi = esi << 8
 333 @ 10002333  eax = eax ^ esi
 334 @ 10002335  [ebp - 0x30].d = eax
 335 @ 10002338  ecx = ecx - edx
 336 @ 1000233a  [ebp - 0x2c].d = ecx
 337 @ 1000233d  ecx = ecx - eax
 338 @ 1000233f  [ebp - 0x2c].d = ecx
 339 @ 10002342  esi = eax
 340 @ 10002344  esi = esi u>> 0xd
 341 @ 10002347  ecx = ecx ^ esi
 342 @ 10002349  [ebp - 0x2c].d = ecx
 343 @ 1000234c  edx = edx - eax
 344 @ 1000234e  [ebp - 0x24].d = edx
 345 @ 10002351  edx = edx - ecx
 346 @ 10002353  [ebp - 0x24].d = edx
 347 @ 10002356  esi = ecx
 348 @ 10002358  esi = esi u>> 0xc
 349 @ 1000235b  edx = edx ^ esi
 350 @ 1000235d  [ebp - 0x24].d = edx
 351 @ 10002360  eax = eax - ecx
 352 @ 10002362  [ebp - 0x30].d = eax
 353 @ 10002365  eax = eax - edx
 354 @ 10002367  [ebp - 0x30].d = eax
 355 @ 1000236a  esi = edx
 356 @ 1000236c  esi = esi << 0x10
 357 @ 1000236f  eax = eax ^ esi
 358 @ 10002371  [ebp - 0x30].d = eax
 359 @ 10002374  ecx = ecx - edx
 360 @ 10002376  [ebp - 0x2c].d = ecx
 361 @ 10002379  ecx = ecx - eax
 362 @ 1000237b  [ebp - 0x2c].d = ecx
 363 @ 1000237e  esi = eax
 364 @ 10002380  esi = esi u>> 5
 365 @ 10002383  ecx = ecx ^ esi
 366 @ 10002385  [ebp - 0x2c].d = ecx
 367 @ 10002388  edx = edx - eax
 368 @ 1000238a  [ebp - 0x24].d = edx
 369 @ 1000238d  edx = edx - ecx
 370 @ 1000238f  [ebp - 0x24].d = edx
 371 @ 10002392  esi = ecx
 372 @ 10002394  esi = esi u>> 3
 373 @ 10002397  edx = edx ^ esi
 374 @ 10002399  [ebp - 0x24].d = edx
 375 @ 1000239c  eax = eax - ecx
 376 @ 1000239e  [ebp - 0x30].d = eax
 377 @ 100023a1  eax = eax - edx
 378 @ 100023a3  [ebp - 0x30].d = eax
 379 @ 100023a6  esi = edx
 380 @ 100023a8  esi = esi << 0xa
 381 @ 100023ab  eax = eax ^ esi
 382 @ 100023ad  [ebp - 0x30].d = eax
 383 @ 100023b0  ecx = ecx - edx
 384 @ 100023b2  [ebp - 0x2c].d = ecx
 385 @ 100023b5  ecx = ecx - eax
 386 @ 100023b7  [ebp - 0x2c].d = ecx
 387 @ 100023ba  eax = eax u>> 0xf
 388 @ 100023bd  ecx = ecx ^ eax
 389 @ 100023bf  [ebp - 0x2c].d = ecx
 390 @ 100023c2  esi = [&data_1000a39c].d
 391 @ 100023c8  edx = [esi + 0x10c {0xd330347a}].d
 392 @ 100023ce  eax = [edx + 4].d
 393 @ 100023d1  eax = eax - 1
 394 @ 100023d4  eax = eax & ecx
 395 @ 100023d6  eax = eax + (eax << 1)
 396 @ 100023d9  eax = eax + eax
 397 @ 100023db  eax = eax + eax
 398 @ 100023dd  ecx = [edx].d
 399 @ 100023e3  if ([eax + ecx].d == 0) then 423 @ 0x100023f1 else 425 @ 0x100023e5

 400 @ 1000228c  jump([(edi << 2) + &jump_table_10002c08].d => 430 @ 0x10002293, 435 @ 0x1000229f, 440 @ 0x100022ab, 445 @ 0x100022b7, 450 @ 0x100022c3, 455 @ 0x100022cf, 460 @ 0x100022db, 464 @ 0x100022e4, 469 @ 0x100022f0, 474 @ 0x100022fc, 479 @ 0x10002308)

 401 @ 10002659  [ebp - 0x4c].d = edi
 402 @ 1000265c  [ebp - 0x28].d = ecx
 403 @ 1000265f  [ebp - 0x20].d = eax
 404 @ 10002662  [ebp - 0x5c].d = edx
 405 @ 10002668  if (edi u< 0xc) then 483 @ 0x100027c1 else 487 @ 0x1000266e

 406 @ 10002598  push(zx.d(0x2c))
 407 @ 1000259a  push(zx.d(0))
 408 @ 1000259c  push(eax)
 409 @ 1000259d  call(sub_10007938)
 410 @ 1000259d  noreturn
{ Does not return }

 411 @ 10002590  push(zx.d(-1))
 412 @ 10002592  call([&data_1000808c[8]].d)  {"adId"}
 413 @ 10002592  goto 406 @ 0x10002598

 414 @ 10002527  [ebp - 4].d = edx
 415 @ 1000252a  ecx = [ebp - 0x10].d
 416 @ 1000252d  [fsbase].d = ecx
 417 @ 10002534  edi = pop
 418 @ 10002535  esi = pop
 419 @ 10002536  ebx = pop
 420 @ 10002537  esp = ebp
 421 @ 10002539  ebp = pop
 422 @ 1000253a  <return> jump(pop)

 423 @ 100023f1  eax = 0
 424 @ 100023f1  goto 597 @ 0x100023f3

 425 @ 100023e5  ecx = edx
 426 @ 100023e7  edx = [ecx].d
 427 @ 100023e9  eax = [eax + edx].d
 428 @ 100023ec  eax = eax - [ecx + 0x14].d
 429 @ 100023ef  goto 597 @ 0x100023f3

 430 @ 10002293  edi = sx.d([esi + 0xa].b)
 431 @ 10002297  edi = edi << 0x18
 432 @ 1000229a  ecx = ecx + edi
 433 @ 1000229c  [ebp - 0x2c].d = ecx
 434 @ 1000229c  goto 435 @ 0x1000229f

 435 @ 1000229f  edi = sx.d([esi + 9].b)
 436 @ 100022a3  edi = edi << 0x10
 437 @ 100022a6  ecx = ecx + edi
 438 @ 100022a8  [ebp - 0x2c].d = ecx
 439 @ 100022a8  goto 440 @ 0x100022ab

 440 @ 100022ab  edi = sx.d([esi + 8].b)
 441 @ 100022af  edi = edi << 8
 442 @ 100022b2  ecx = ecx + edi
 443 @ 100022b4  [ebp - 0x2c].d = ecx
 444 @ 100022b4  goto 445 @ 0x100022b7

 445 @ 100022b7  edi = sx.d([esi + 7].b)
 446 @ 100022bb  edi = edi << 0x18
 447 @ 100022be  eax = eax + edi
 448 @ 100022c0  [ebp - 0x30].d = eax
 449 @ 100022c0  goto 450 @ 0x100022c3

 450 @ 100022c3  edi = sx.d([esi + 6].b)
 451 @ 100022c7  edi = edi << 0x10
 452 @ 100022ca  eax = eax + edi
 453 @ 100022cc  [ebp - 0x30].d = eax
 454 @ 100022cc  goto 455 @ 0x100022cf

 455 @ 100022cf  edi = sx.d([esi + 5].b)
 456 @ 100022d3  edi = edi << 8
 457 @ 100022d6  eax = eax + edi
 458 @ 100022d8  [ebp - 0x30].d = eax
 459 @ 100022d8  goto 460 @ 0x100022db

 460 @ 100022db  edi = sx.d([esi + 4].b)
 461 @ 100022df  eax = eax + edi
 462 @ 100022e1  [ebp - 0x30].d = eax
 463 @ 100022e1  goto 464 @ 0x100022e4

 464 @ 100022e4  edi = sx.d([esi + 3].b)
 465 @ 100022e8  edi = edi << 0x18
 466 @ 100022eb  edx = edx + edi
 467 @ 100022ed  [ebp - 0x24].d = edx
 468 @ 100022ed  goto 469 @ 0x100022f0

 469 @ 100022f0  edi = sx.d([esi + 2].b)
 470 @ 100022f4  edi = edi << 0x10
 471 @ 100022f7  edx = edx + edi
 472 @ 100022f9  [ebp - 0x24].d = edx
 473 @ 100022f9  goto 474 @ 0x100022fc

 474 @ 100022fc  edi = sx.d([esi + 1].b)
 475 @ 10002300  edi = edi << 8
 476 @ 10002303  edx = edx + edi
 477 @ 10002305  [ebp - 0x24].d = edx
 478 @ 10002305  goto 479 @ 0x10002308

 479 @ 10002308  esi = sx.d([esi].b)
 480 @ 1000230b  edx = edx + esi
 481 @ 1000230d  [ebp - 0x24].d = edx
 482 @ 1000230d  goto 319 @ 0x10002310

 483 @ 100027c1  [esi + 0x128].d = [esi + 0x128].d + 4
 484 @ 100027c8  ebx = [esi + 0x128].d
 485 @ 100027ce  edi = edi - 1
 486 @ 100027d4  if (edi u> 0xa) then 600 @ 0x10002863 else 690 @ 0x100027da

 487 @ 1000266e  edi = sx.d([edx + 3].b)
 488 @ 10002672  edi = edi << 8
 489 @ 10002675  ebx = sx.d([edx + 2].b)
 490 @ 10002679  edi = edi + ebx
 491 @ 1000267b  edi = edi << 8
 492 @ 1000267e  ebx = sx.d([edx + 1].b)
 493 @ 10002682  edi = edi + ebx
 494 @ 10002684  edi = edi << 8
 495 @ 10002687  ebx = sx.d([edx].b)
 496 @ 1000268a  ebx = ebx + ecx
 497 @ 1000268c  ecx = ebx + edi
 498 @ 1000268f  [ebp - 0x28].d = ecx
 499 @ 10002692  edi = sx.d([edx + 7].b)
 500 @ 10002696  edi = edi << 8
 501 @ 10002699  ebx = sx.d([edx + 6].b)
 502 @ 1000269d  edi = edi + ebx
 503 @ 1000269f  edi = edi << 8
 504 @ 100026a2  ebx = sx.d([edx + 5].b)
 505 @ 100026a6  edi = edi + ebx
 506 @ 100026a8  edi = edi << 8
 507 @ 100026ab  ebx = sx.d([edx + 4].b)
 508 @ 100026af  ebx = ebx + eax
 509 @ 100026b1  eax = ebx + edi
 510 @ 100026b4  [ebp - 0x20].d = eax
 511 @ 100026b7  edi = sx.d([edx + 0xb].b)
 512 @ 100026bb  edi = edi << 8
 513 @ 100026be  ebx = sx.d([edx + 0xa].b)
 514 @ 100026c2  edi = edi + ebx
 515 @ 100026c4  edi = edi << 8
 516 @ 100026c7  ebx = sx.d([edx + 9].b)
 517 @ 100026cb  edi = edi + ebx
 518 @ 100026cd  edi = edi << 8
 519 @ 100026d0  ebx = sx.d([edx + 8].b)
 520 @ 100026d4  edi = edi + ebx
 521 @ 100026d6  [esi + 0x128].d = [esi + 0x128].d + edi
 522 @ 100026dc  edi = [esi + 0x128].d
 523 @ 100026e2  ecx = ecx - eax
 524 @ 100026e4  [ebp - 0x28].d = ecx
 525 @ 100026e7  ecx = ecx - edi
 526 @ 100026e9  [ebp - 0x28].d = ecx
 527 @ 100026ec  ebx = edi
 528 @ 100026ee  ebx = ebx u>> 0xd
 529 @ 100026f1  ecx = ecx ^ ebx
 530 @ 100026f3  [ebp - 0x28].d = ecx
 531 @ 100026f6  eax = eax - edi
 532 @ 100026f8  [ebp - 0x20].d = eax
 533 @ 100026fb  eax = eax - ecx
 534 @ 100026fd  [ebp - 0x20].d = eax
 535 @ 10002700  ebx = ecx
 536 @ 10002702  ebx = ebx << 8
 537 @ 10002705  eax = eax ^ ebx
 538 @ 10002707  [ebp - 0x20].d = eax
 539 @ 1000270a  edi = edi - ecx
 540 @ 1000270c  [esi + 0x128].d = edi
 541 @ 10002712  edi = edi - eax
 542 @ 10002714  [esi + 0x128].d = edi
 543 @ 1000271a  ebx = eax
 544 @ 1000271c  ebx = ebx u>> 0xd
 545 @ 1000271f  ebx = ebx ^ edi
 546 @ 10002721  [esi + 0x128].d = ebx
 547 @ 10002727  ecx = ecx - eax
 548 @ 10002729  [ebp - 0x28].d = ecx
 549 @ 1000272c  ecx = ecx - ebx
 550 @ 1000272e  [ebp - 0x28].d = ecx
 551 @ 10002731  edi = ebx
 552 @ 10002733  edi = edi u>> 0xc
 553 @ 10002736  ecx = ecx ^ edi
 554 @ 10002738  [ebp - 0x28].d = ecx
 555 @ 1000273b  eax = eax - ebx
 556 @ 1000273d  [ebp - 0x20].d = eax
 557 @ 10002740  eax = eax - ecx
 558 @ 10002742  [ebp - 0x20].d = eax
 559 @ 10002745  edi = ecx
 560 @ 10002747  edi = edi << 0x10
 561 @ 1000274a  eax = eax ^ edi
 562 @ 1000274c  [ebp - 0x20].d = eax
 563 @ 1000274f  [esi + 0x128].d = [esi + 0x128].d - ecx
 564 @ 10002755  edi = [esi + 0x128].d
 565 @ 1000275b  edi = edi - eax
 566 @ 1000275d  [esi + 0x128].d = edi
 567 @ 10002763  ebx = eax
 568 @ 10002765  ebx = ebx u>> 5
 569 @ 10002768  ebx = ebx ^ edi
 570 @ 1000276a  [esi + 0x128].d = ebx
 571 @ 10002770  ecx = ecx - eax
 572 @ 10002772  [ebp - 0x28].d = ecx
 573 @ 10002775  ecx = ecx - ebx
 574 @ 10002777  [ebp - 0x28].d = ecx
 575 @ 1000277a  edi = ebx
 576 @ 1000277c  edi = edi u>> 3
 577 @ 1000277f  ecx = ecx ^ edi
 578 @ 10002781  eax = eax - ebx
 579 @ 10002783  [ebp - 0x20].d = eax
 580 @ 10002786  eax = eax - ecx
 581 @ 10002788  [ebp - 0x20].d = eax
 582 @ 1000278b  edi = ecx
 583 @ 1000278d  edi = edi << 0xa
 584 @ 10002790  eax = eax ^ edi
 585 @ 10002792  [esi + 0x128].d = [esi + 0x128].d - ecx
 586 @ 10002798  edi = [esi + 0x128].d
 587 @ 1000279e  edi = edi - eax
 588 @ 100027a0  [esi + 0x128].d = edi
 589 @ 100027a6  ebx = eax
 590 @ 100027a8  ebx = ebx u>> 0xf
 591 @ 100027ab  ebx = ebx ^ edi
 592 @ 100027ad  [esi + 0x128].d = ebx
 593 @ 100027b3  edx = edx + 0xc
 594 @ 100027b6  edi = [ebp - 0x4c].d
 595 @ 100027b9  edi = edi - 0xc
 596 @ 100027bc  goto 401 @ 0x10002659

 597 @ 100023f3  edi = eax
 598 @ 100023f5  [ebp - 0x3c].d = edi
 599 @ 100023fa  if (edi == 0) then 691 @ 0x100024bf else 693 @ 0x10002407

 600 @ 10002863  ecx = ecx - eax
 601 @ 10002865  [ebp - 0x28].d = ecx
 602 @ 10002868  ecx = ecx - [esi + 0x128].d
 603 @ 1000286e  [ebp - 0x28].d = ecx
 604 @ 10002871  edx = [esi + 0x128].d
 605 @ 10002877  edx = edx u>> 0xd
 606 @ 1000287a  ecx = ecx ^ edx
 607 @ 1000287c  [ebp - 0x28].d = ecx
 608 @ 1000287f  eax = eax - [esi + 0x128].d
 609 @ 10002885  [ebp - 0x20].d = eax
 610 @ 10002888  eax = eax - ecx
 611 @ 1000288a  [ebp - 0x20].d = eax
 612 @ 1000288d  edx = ecx
 613 @ 1000288f  edx = edx << 8
 614 @ 10002892  eax = eax ^ edx
 615 @ 10002894  [ebp - 0x20].d = eax
 616 @ 10002897  [esi + 0x128].d = [esi + 0x128].d - ecx
 617 @ 1000289d  edx = [esi + 0x128].d
 618 @ 100028a3  edx = edx - eax
 619 @ 100028a5  [esi + 0x128].d = edx
 620 @ 100028ab  edi = eax
 621 @ 100028ad  edi = edi u>> 0xd
 622 @ 100028b0  edi = edi ^ edx
 623 @ 100028b2  [esi + 0x128].d = edi
 624 @ 100028b8  ecx = ecx - eax
 625 @ 100028ba  [ebp - 0x28].d = ecx
 626 @ 100028bd  ecx = ecx - edi
 627 @ 100028bf  [ebp - 0x28].d = ecx
 628 @ 100028c2  edx = edi
 629 @ 100028c4  edx = edx u>> 0xc
 630 @ 100028c7  ecx = ecx ^ edx
 631 @ 100028c9  [ebp - 0x28].d = ecx
 632 @ 100028cc  eax = eax - edi
 633 @ 100028ce  [ebp - 0x20].d = eax
 634 @ 100028d1  eax = eax - ecx
 635 @ 100028d3  [ebp - 0x20].d = eax
 636 @ 100028d6  edx = ecx
 637 @ 100028d8  edx = edx << 0x10
 638 @ 100028db  eax = eax ^ edx
 639 @ 100028dd  [ebp - 0x20].d = eax
 640 @ 100028e0  [esi + 0x128].d = [esi + 0x128].d - ecx
 641 @ 100028e6  edx = [esi + 0x128].d
 642 @ 100028ec  edx = edx - eax
 643 @ 100028ee  [esi + 0x128].d = edx
 644 @ 100028f4  edi = eax
 645 @ 100028f6  edi = edi u>> 5
 646 @ 100028f9  edi = edi ^ edx
 647 @ 100028fb  [esi + 0x128].d = edi
 648 @ 10002901  ecx = ecx - eax
 649 @ 10002903  [ebp - 0x28].d = ecx
 650 @ 10002906  ecx = ecx - edi
 651 @ 10002908  [ebp - 0x28].d = ecx
 652 @ 1000290b  edx = edi
 653 @ 1000290d  edx = edx u>> 3
 654 @ 10002910  ecx = ecx ^ edx
 655 @ 10002912  [ebp - 0x28].d = ecx
 656 @ 10002915  eax = eax - edi
 657 @ 10002917  [ebp - 0x20].d = eax
 658 @ 1000291a  eax = eax - ecx
 659 @ 1000291c  [ebp - 0x20].d = eax
 660 @ 1000291f  edx = ecx
 661 @ 10002921  edx = edx << 0xa
 662 @ 10002924  eax = eax ^ edx
 663 @ 10002926  [ebp - 0x20].d = eax
 664 @ 10002929  [esi + 0x128].d = [esi + 0x128].d - ecx
 665 @ 1000292f  ecx = [esi + 0x128].d
 666 @ 10002935  ecx = ecx - eax
 667 @ 10002937  [esi + 0x128].d = ecx
 668 @ 1000293d  eax = eax u>> 0xf
 669 @ 10002940  eax = eax ^ ecx
 670 @ 10002942  [esi + 0x128].d = eax
 671 @ 10002948  edi = [&data_1000a39c].d
 672 @ 1000294e  edx = [edi + 0x10c {0xd330347a}].d
 673 @ 10002954  ecx = [edx + 4].d
 674 @ 10002957  ecx = ecx - 1
 675 @ 1000295a  ecx = ecx & eax
 676 @ 1000295c  eax = ecx + (ecx << 1)
 677 @ 1000295f  eax = eax + eax
 678 @ 10002961  eax = eax + eax
 679 @ 10002963  ecx = [edx].d
 680 @ 10002965  ecx = ecx + eax + 4
 681 @ 10002969  [ecx].d = [ecx].d + 1
 682 @ 1000296c  edx = [edi + 0x10c {0xd330347a}].d
 683 @ 10002972  ecx = [edx].d
 684 @ 10002974  edx = [eax + ecx].d
 685 @ 10002977  [esi + 0x11c].d = edx
 686 @ 1000297d  [esi + 0x118].d = 0
 687 @ 10002987  ecx = [edi + 0x10c {0xd330347a}].d
 688 @ 1000298d  edx = [ecx].d
 689 @ 10002993  if ([eax + edx].d == 0) then 694 @ 0x100029a9 else 706 @ 0x10002995

 690 @ 100027da  jump([(edi << 2) + &jump_table_10002c34].d => 712 @ 0x100027e1, 717 @ 0x100027f0, 721 @ 0x100027fd, 725 @ 0x1000280a, 730 @ 0x10002816, 735 @ 0x10002822, 740 @ 0x1000282e, 744 @ 0x10002837, 749 @ 0x10002843, 754 @ 0x1000284f, 759 @ 0x1000285b)

 691 @ 100024bf  ebx = [ebp - 0x34].d
 692 @ 100024bf  goto 129 @ 0x100024c4

 693 @ 10002407  if ([edi + 0x124].d != 4) then 763 @ 0x100024a3 else 765 @ 0x1000240d

 694 @ 100029a9  esi = esi + 0x10c
 695 @ 100029af  ecx = [edi + 0x10c {0xd330347a}].d
 696 @ 100029b5  edx = [ecx].d
 697 @ 100029b7  [eax + edx].d = esi
 698 @ 100029ba  ecx = [edi + 0x10c {0xd330347a}].d
 699 @ 100029c0  edx = [ecx].d
 700 @ 100029c2  ecx = edx + eax
 701 @ 100029c5  eax = [ecx + 8].d
 702 @ 100029c8  eax = eax + 1
 703 @ 100029cb  eax = eax + (eax << 2)
 704 @ 100029ce  eax = eax + eax
 705 @ 100029d3  if ([ecx + 4].d u< eax) then 70 @ 0x10002b0d else 769 @ 0x100029d9

 706 @ 10002995  ecx = esi + 0x10c
 707 @ 1000299b  edx = [edi + 0x10c {0xd330347a}].d
 708 @ 100029a1  edx = [edx].d
 709 @ 100029a3  edx = [edx + eax].d
 710 @ 100029a6  [edx + 0xc].d = ecx
 711 @ 100029a6  goto 694 @ 0x100029a9

 712 @ 100027e1  edi = sx.d([edx + 0xa].b)
 713 @ 100027e5  edi = edi << 0x18
 714 @ 100027e8  edi = edi + ebx
 715 @ 100027ea  [esi + 0x128].d = edi
 716 @ 100027ea  goto 717 @ 0x100027f0

 717 @ 100027f0  edi = sx.d([edx + 9].b)
 718 @ 100027f4  edi = edi << 0x10
 719 @ 100027f7  [esi + 0x128].d = [esi + 0x128].d + edi
 720 @ 100027f7  goto 721 @ 0x100027fd

 721 @ 100027fd  edi = sx.d([edx + 8].b)
 722 @ 10002801  edi = edi << 8
 723 @ 10002804  [esi + 0x128].d = [esi + 0x128].d + edi
 724 @ 10002804  goto 725 @ 0x1000280a

 725 @ 1000280a  edi = sx.d([edx + 7].b)
 726 @ 1000280e  edi = edi << 0x18
 727 @ 10002811  eax = eax + edi
 728 @ 10002813  [ebp - 0x20].d = eax
 729 @ 10002813  goto 730 @ 0x10002816

 730 @ 10002816  edi = sx.d([edx + 6].b)
 731 @ 1000281a  edi = edi << 0x10
 732 @ 1000281d  eax = eax + edi
 733 @ 1000281f  [ebp - 0x20].d = eax
 734 @ 1000281f  goto 735 @ 0x10002822

 735 @ 10002822  edi = sx.d([edx + 5].b)
 736 @ 10002826  edi = edi << 8
 737 @ 10002829  eax = eax + edi
 738 @ 1000282b  [ebp - 0x20].d = eax
 739 @ 1000282b  goto 740 @ 0x1000282e

 740 @ 1000282e  edi = sx.d([edx + 4].b)
 741 @ 10002832  eax = eax + edi
 742 @ 10002834  [ebp - 0x20].d = eax
 743 @ 10002834  goto 744 @ 0x10002837

 744 @ 10002837  edi = sx.d([edx + 3].b)
 745 @ 1000283b  edi = edi << 0x18
 746 @ 1000283e  ecx = ecx + edi
 747 @ 10002840  [ebp - 0x28].d = ecx
 748 @ 10002840  goto 749 @ 0x10002843

 749 @ 10002843  edi = sx.d([edx + 2].b)
 750 @ 10002847  edi = edi << 0x10
 751 @ 1000284a  ecx = ecx + edi
 752 @ 1000284c  [ebp - 0x28].d = ecx
 753 @ 1000284c  goto 754 @ 0x1000284f

 754 @ 1000284f  edi = sx.d([edx + 1].b)
 755 @ 10002853  edi = edi << 8
 756 @ 10002856  ecx = ecx + edi
 757 @ 10002858  [ebp - 0x28].d = ecx
 758 @ 10002858  goto 759 @ 0x1000285b

 759 @ 1000285b  edx = sx.d([edx].b)
 760 @ 1000285e  ecx = ecx + edx
 761 @ 10002860  [ebp - 0x28].d = ecx
 762 @ 10002860  goto 600 @ 0x10002863

 763 @ 100024a3  eax = [edi + 0x11c].d
 764 @ 100024ab  if (eax == 0) then 423 @ 0x100023f1 else 771 @ 0x100024b1

 765 @ 1000240d  eax = 4
 766 @ 10002412  ecx = [ebp - 0x34].d
 767 @ 10002415  edx = [edi + 0x120].d
 768 @ 1000241b  goto 774 @ 0x10002423

 769 @ 100029d9  eax = [esi].d
 770 @ 100029df  if ([eax + 0x24].d == 1) then 70 @ 0x10002b0d else 775 @ 0x100029e5

 771 @ 100024b1  ecx = [esi + 0x10c {0xd330347a}].d
 772 @ 100024b7  eax = eax - [ecx + 0x14].d
 773 @ 100024ba  goto 597 @ 0x100023f3

 774 @ 10002423  if (eax u< 4) then 787 @ 0x10002438 else 788 @ 0x10002425

 775 @ 100029e5  eax = [eax + 4].d
 776 @ 100029e8  ecx = eax + (eax << 1)
 777 @ 100029eb  ecx = ecx + ecx
 778 @ 100029ed  ecx = ecx + ecx
 779 @ 100029ef  ecx = ecx + ecx
 780 @ 100029f1  push(ecx)
 781 @ 100029f2  push(zx.d(0))
 782 @ 100029f4  call(sub_100072e0)
 783 @ 100029f9  esp = esp + 8
 784 @ 100029fc  ebx = eax
 785 @ 100029fe  [ebp - 0x50].d = ebx
 786 @ 10002a03  if (ebx != 0) then 790 @ 0x10002a0d else 801 @ 0x10002a05

 787 @ 10002438  if (eax == 0) then 804 @ 0x10002497 else 806 @ 0x1000243a

 788 @ 10002425  esi = [edx].d
 789 @ 10002429  if (esi != [ecx].d) then 806 @ 0x1000243a else 811 @ 0x1000242b

 790 @ 10002a0d  edx = [esi].d
 791 @ 10002a0f  eax = [edx + 4].d
 792 @ 10002a12  eax = eax + (eax << 1)
 793 @ 10002a15  eax = eax + eax
 794 @ 10002a17  eax = eax + eax
 795 @ 10002a19  eax = eax + eax
 796 @ 10002a1b  push(eax)
 797 @ 10002a1c  push(zx.d(0))
 798 @ 10002a1e  push(ebx)
 799 @ 10002a1f  call(sub_10007938)
 800 @ 10002a1f  noreturn
{ Does not return }

 801 @ 10002a05  push(zx.d(-1))
 802 @ 10002a07  call([&data_1000808c[8]].d)  {"adId"}
 803 @ 10002a07  goto 790 @ 0x10002a0d

 804 @ 10002497  eax = 0
 805 @ 10002497  goto 815 @ 0x1000249b

 806 @ 1000243a  esi = zx.d([edx].b)
 807 @ 1000243d  ebx = zx.d([ecx].b)
 808 @ 10002440  temp4.d = esi
 809 @ 10002440  esi = esi - ebx
 810 @ 10002442  if (temp4.d != ebx) then 816 @ 0x10002489 else 818 @ 0x10002444

 811 @ 1000242b  eax = eax - 4
 812 @ 1000242e  ecx = ecx + 4
 813 @ 10002431  edx = edx + 4
 814 @ 10002434  goto 774 @ 0x10002423

 815 @ 1000249b  if (eax == 0) then 691 @ 0x100024bf else 822 @ 0x1000249d

 816 @ 10002489  eax = 1
 817 @ 10002490  if (esi s> 0) then 815 @ 0x1000249b else 824 @ 0x10002492

 818 @ 10002444  eax = eax - 1
 819 @ 10002447  ecx = ecx + 1
 820 @ 1000244a  edx = edx + 1
 821 @ 1000244f  if (eax == 0) then 804 @ 0x10002497 else 826 @ 0x10002451

 822 @ 1000249d  esi = [&data_1000a39c].d
 823 @ 1000249d  goto 763 @ 0x100024a3

 824 @ 10002492  eax = eax | 0xffffffff
 825 @ 10002495  goto 815 @ 0x1000249b

 826 @ 10002451  esi = zx.d([edx].b)
 827 @ 10002454  ebx = zx.d([ecx].b)
 828 @ 10002457  temp5.d = esi
 829 @ 10002457  esi = esi - ebx
 830 @ 10002459  if (temp5.d != ebx) then 816 @ 0x10002489 else 831 @ 0x1000245b

 831 @ 1000245b  eax = eax - 1
 832 @ 1000245e  ecx = ecx + 1
 833 @ 10002461  edx = edx + 1
 834 @ 10002466  if (eax == 0) then 804 @ 0x10002497 else 835 @ 0x10002468

 835 @ 10002468  esi = zx.d([edx].b)
 836 @ 1000246b  ebx = zx.d([ecx].b)
 837 @ 1000246e  temp6.d = esi
 838 @ 1000246e  esi = esi - ebx
 839 @ 10002470  if (temp6.d != ebx) then 816 @ 0x10002489 else 840 @ 0x10002472

 840 @ 10002472  eax = eax - 1
 841 @ 10002475  ecx = ecx + 1
 842 @ 10002478  edx = edx + 1
 843 @ 1000247d  if (eax == 0) then 804 @ 0x10002497 else 844 @ 0x1000247f

 844 @ 1000247f  esi = zx.d([edx].b)
 845 @ 10002482  eax = zx.d([ecx].b)
 846 @ 10002485  temp7.d = esi
 847 @ 10002485  esi = esi - eax
 848 @ 10002487  if (temp7.d == eax) then 804 @ 0x10002497 else 816 @ 0x10002489

10002b37                                                                       83 c4 18 b9 24 00 00 00 8b                         ....$....
10002b40  f0 8d bd 14 ff ff ff f3 a5 8b 85 14 ff ff ff 85 c0 0f 8c 87 00 00 00 01 45 c8                    ........................E.

10002b74  int32_t sub_10002b74(int32_t* arg1 @ ebp, int32_t arg2 @ esi, int32_t arg3, int32_t arg4, int32_t arg5)

   0 @ 10002b74  esp = esp + 0xc
   1 @ 10002b77  [&data_1000a3f0].d = esi
   2 @ 10002b7d  [ebp - 4].d = -1
   3 @ 10002b84  edx = [ebp - 0x38].d
   4 @ 10002b87  [ebp - 0xec].d = edx
   5 @ 10002b8d  [ebp - 0xe8].d = &data_10008430  {"Present"}
   6 @ 10002b97  [ebp - 0xe4].d = 0x1df
   7 @ 10002ba1  ecx = 0x24
   8 @ 10002ba6  esi = ebp - 0xec
   9 @ 10002bac  eax = [ebp + 8].d
  10 @ 10002baf  edi = eax
  11 @ 10002bb1  if (flag:d) then 12 else 14

  12 @ 10002bb1  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
  13 @ 10002bb1  goto 16 @ 0x10002bb3

  14 @ 10002bb1  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
  15 @ 10002bb1  goto 16 @ 0x10002bb3

  16 @ 10002bb3  ecx = [ebp - 0x10].d
  17 @ 10002bb6  [fsbase].d = ecx
  18 @ 10002bbd  edi = pop
  19 @ 10002bbe  esi = pop
  20 @ 10002bbf  ebx = pop
  21 @ 10002bc0  esp = ebp
  22 @ 10002bc2  ebp = pop
  23 @ 10002bc3  <return> jump(pop)


10002bc4  int32_t sub_10002bc4(void* arg1 @ ebp)

   0 @ 10002bc4  eax = [ebp - 0x14].d
   1 @ 10002bc7  ecx = [eax].d
   2 @ 10002bc9  ecx = [ecx].d
   3 @ 10002bcb  push(eax)
   4 @ 10002bcc  edx = ebp - 0xec
   5 @ 10002bd2  call(sub_10001880)
   6 @ 10002bd7  esp = esp + 4
   7 @ 10002bda  <return> jump(pop)


10002bdb  int32_t sub_10002bdb(int32_t* arg1 @ ebp)

   0 @ 10002bdb  esp = [ebp - 0x18].d
   1 @ 10002bde  esi = ebp - 0xec
   2 @ 10002be4  eax = [ebp + 8].d
   3 @ 10002be7  ecx = 0x24
   4 @ 10002bec  edi = eax
   5 @ 10002bee  if (flag:d) then 6 else 8

   6 @ 10002bee  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
   7 @ 10002bee  goto 10 @ 0x10002bf0

   8 @ 10002bee  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
   9 @ 10002bee  goto 10 @ 0x10002bf0

  10 @ 10002bf0  [ebp - 4].d = -1
  11 @ 10002bf7  ecx = [ebp - 0x10].d
  12 @ 10002bfa  [fsbase].d = ecx
  13 @ 10002c01  edi = pop
  14 @ 10002c02  esi = pop
  15 @ 10002c03  ebx = pop
  16 @ 10002c04  esp = ebp
  17 @ 10002c06  ebp = pop
  18 @ 10002c07  <return> jump(pop)

10002c08  uint32_t jump_table_10002c08[0xb] = 
10002c08  {
10002c08      [0x0] =  0x10002308
10002c0c      [0x1] =  0x100022fc
10002c10      [0x2] =  0x100022f0
10002c14      [0x3] =  0x100022e4
10002c18      [0x4] =  0x100022db
10002c1c      [0x5] =  0x100022cf
10002c20      [0x6] =  0x100022c3
10002c24      [0x7] =  0x100022b7
10002c28      [0x8] =  0x100022ab
10002c2c      [0x9] =  0x1000229f
10002c30      [0xa] =  0x10002293
10002c34  }
10002c34  uint32_t jump_table_10002c34[0xb] = 
10002c34  {
10002c34      [0x0] =  0x1000285b
10002c38      [0x1] =  0x1000284f
10002c3c      [0x2] =  0x10002843
10002c40      [0x3] =  0x10002837
10002c44      [0x4] =  0x1000282e
10002c48      [0x5] =  0x10002822
10002c4c      [0x6] =  0x10002816
10002c50      [0x7] =  0x1000280a
10002c54      [0x8] =  0x100027fd
10002c58      [0x9] =  0x100027f0
10002c5c      [0xa] =  0x100027e1
10002c60  }

10002c59  int32_t __convention("regparm") sub_10002c59(char* arg1, int32_t arg2, int32_t arg3, char* arg4 @ esi, char* arg5 @ edi)

   0 @ 10002c59  al, eflags = __daa(al, eflags)
   1 @ 10002c5a  temp0.b = [eax].b
   2 @ 10002c5a  [eax].b = [eax].b + dl
   3 @ 10002c5a  cond:0 = temp0.b == neg.b(dl)
   4 @ 10002c5a  cond:1 = temp0.b == neg.b(dl)
   5 @ 10002c5c  ecx = ecx - 1
   6 @ 10002c5c  if (cond:0 || ecx != 0) then 7 @ 0x10002c85 else 8 @ &jump_table_10002c34[0xa]+2

   7 @ 10002c85  if (cond:1) then 19 @ 0x10002c9a else 24 @ 0x10002c87

   8 @ 10002c5e  [eax].b = [eax].b + dl
   9 @ 10002c60  push(ebx)
  10 @ 10002c61  push(esi)
  11 @ 10002c62  push(eax)
  12 @ 10002c63  esi = edx
  13 @ 10002c65  push(esi)
  14 @ 10002c66  push(ecx)
  15 @ 10002c67  call(sub_100013d2), esp += 0xc
  16 @ 10002c6c  cond:2 = esi != 3
  17 @ 10002c6f  ebx = eax
  18 @ 10002c71  if (cond:2) then 30 @ 0x10002cb2 else 33 @ 0x10002c73

  19 @ 10002c9a  push(edi)
  20 @ 10002c9b  push(zx.d(0))
  21 @ 10002c9d  call(sub_100070a0)
  22 @ 10002ca2  esp = esp + 8
  23 @ 10002ca2  goto 37 @ 0x10002ca5

  24 @ 10002c87  push(eax)
  25 @ 10002c88  call(sub_10006c50)
  26 @ 10002c8d  eax = [esi + 4].d
  27 @ 10002c90  esi = esi + 4
  28 @ 10002c93  esp = esp + 4
  29 @ 10002c98  if (eax != 0) then 24 @ 0x10002c87 else 19 @ 0x10002c9a

  30 @ 10002cb2  esi = pop
  31 @ 10002cb3  ebx = pop
  32 @ 10002cb4  <return> jump(pop)

  33 @ 10002c73  push(edi)
  34 @ 10002c74  call(sub_10007740)
  35 @ 10002c79  edi = eax
  36 @ 10002c7d  if (edi == 0) then 37 @ 0x10002ca5 else 43 @ 0x10002c7f

  37 @ 10002ca5  push(zx.d(0))
  38 @ 10002ca7  call(sub_10006c50)
  39 @ 10002cac  esp = esp + 4
  40 @ 10002caf  eax = ebx
  41 @ 10002cb1  edi = pop
  42 @ 10002cb1  goto 30 @ 0x10002cb2

  43 @ 10002c7f  eax = [edi].d
  44 @ 10002c81  cond:1 = eax == 0
  45 @ 10002c83  esi = edi
  46 @ 10002c83  goto 7 @ 0x10002c85

10002cb5                                                                 cc cc cc cc cc cc cc cc cc cc cc                       ...........

10002cc0  int32_t sub_10002cc0() __noreturn

   0 @ 10002cc0  push(ebp)
   1 @ 10002cc1  ebp = esp {var_4}
   2 @ 10002cc3  esp = esp & 0xfffffff8
   3 @ 10002cc6  eax = 0x2120
   4 @ 10002ccb  call(sub_10007980)
   5 @ 10002cd0  push(esi)
   6 @ 10002cd1  push(edi)
   7 @ 10002cd2  push(0x8c)
   8 @ 10002cd7  eax = esp + 0x10 {var_4}
   9 @ 10002cdb  push(zx.d(0))
  10 @ 10002cdd  push(eax)
  11 @ 10002cde  [esp + 0x14 {var_8}].d = 0
  12 @ 10002ce6  call(sub_10007938)
  13 @ 10002ce6  noreturn
{ Does not return }


10002ceb  int32_t sub_10002ceb() __noreturn

   0 @ 10002ceb  esp = esp + 0xc
   1 @ 10002cee  push(zx.d(0))
   2 @ 10002cf0  push(zx.d(0))
   3 @ 10002cf2  push(zx.d(0))
   4 @ 10002cf4  ecx = esp + 0xa4 {arg_a4}
   5 @ 10002cfb  push(0x10009098)
   6 @ 10002d00  push(ecx)
   7 @ 10002d01  call(sub_10001fa0)
   8 @ 10002d01  noreturn
{ Does not return }

10002d06                    b9 24 00 00 00 8b f0 8d 7c 24 1c 83 c4 14 f3 a5 83 7c 24 08 00 7d 2a 8d 7c 24        .$......|$.......|$..}*.|$
10002d20  08 8d b4 24 28 01 00 00 e8 f3 eb ff ff 6a 00 68 40 84 00 10 8b d6 52 6a 00 ff 15 00 81 00 10 33  ...$(........j.h@.....Rj.......3
10002d40  c0 5f 5e 8b e5 5d c3 5f b8 01 00 00 00 5e 8b e5 5d c3 cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ._^..]._.....^..]...............

10002d60  int32_t sub_10002d60() __noreturn

   0 @ 10002d60  push(ebp)
   1 @ 10002d61  ebp = esp {var_4}
   2 @ 10002d63  esp = esp & 0xfffffff8
   3 @ 10002d66  eax = 0x2120
   4 @ 10002d6b  call(sub_10007980)
   5 @ 10002d70  push(esi)
   6 @ 10002d71  push(edi)
   7 @ 10002d72  push(0x8c)
   8 @ 10002d77  eax = esp + 0x10 {var_4}
   9 @ 10002d7b  push(zx.d(0))
  10 @ 10002d7d  push(eax)
  11 @ 10002d7e  [esp + 0x14 {var_8}].d = 0
  12 @ 10002d86  call(sub_10007938)
  13 @ 10002d86  noreturn
{ Does not return }


10002d8b  int32_t sub_10002d8b() __noreturn

   0 @ 10002d8b  esp = esp + 0xc
   1 @ 10002d8e  push(0x1000a3f4)
   2 @ 10002d93  push(0x1000a3f8)
   3 @ 10002d98  push(zx.d(1))
   4 @ 10002d9a  ecx = esp + 0xa4 {arg_a4}
   5 @ 10002da1  push(0x10009098)
   6 @ 10002da6  push(ecx)
   7 @ 10002da7  call(sub_10001fa0)
   8 @ 10002da7  noreturn
{ Does not return }

10002dac                                      b9 24 00 00 00 8b f0 8d 7c 24 1c 83 c4 14 f3 a5 83 7c 24 08              .$......|$.......|$.
10002dc0  00 7d 2a 8d 7c 24 08 8d b4 24 28 01 00 00 e8 4d eb ff ff 6a 00 68 40 84 00 10 8b d6 52 6a 00 ff  .}*.|$...$(....M...j.h@.....Rj..
10002de0  15 00 81 00 10 33 c0 5f 5e 8b e5 5d c3 5f b8 01 00 00 00 5e 8b e5 5d c3 cc cc cc cc cc cc cc cc  .....3._^..]._.....^..].........
10002e00  83 fe 01 75 05 e8 0e e2 ff ff 8b 44 24 08 8b 4c 24 04 8b d6 e8 47 fe ff ff c2 08 00 cc cc cc cc  ...u.......D$..L$....G..........

10002e20  int32_t sub_10002e20(int32_t* arg1, int32_t* arg2)

   0 @ 10002e20  eax = [esp + 4 {arg1}].d
   1 @ 10002e26  if (eax == 0) then 2 @ 0x10002e30 else 4 @ 0x10002e28

   2 @ 10002e30  eax = [esp + 8 {arg2}].d
   3 @ 10002e36  if (eax == 0) then 7 @ 0x10002e40 else 9 @ 0x10002e38

   4 @ 10002e28  ecx = [&data_10009f24].d
   5 @ 10002e2e  [eax].d = ecx
   6 @ 10002e2e  goto 2 @ 0x10002e30

   7 @ 10002e40  eax = &data_10009f38
   8 @ 10002e45  <return> jump(pop)

   9 @ 10002e38  edx = [&data_10009f1c].d
  10 @ 10002e3e  [eax].d = edx
  11 @ 10002e3e  goto 7 @ 0x10002e40

10002e46                    cc cc cc cc cc cc cc cc cc cc                                                        ..........

10002e50  int32_t __convention("regparm") sub_10002e50(int32_t arg1)

   0 @ 10002e50  push(ecx)
   1 @ 10002e51  eax = eax u>> 4
   2 @ 10002e54  eax, eflags = _bit_scan_reverse(eax)
   3 @ 10002e57  [esp {var_4}].d = eax
   4 @ 10002e5a  ecx = pop
   5 @ 10002e5b  <return> jump(pop)

10002e5c                                                                                      cc cc cc cc                              ....

10002e60  void* __convention("regparm") sub_10002e60(int32_t arg1, void* arg2)

   0 @ 10002e60  push(ebp)
   1 @ 10002e61  ebp = esp {__saved_ebp}
   2 @ 10002e63  push(zx.d(-1))
   3 @ 10002e65  push(0x10008590)
   4 @ 10002e6a  push(0x10007932)
   5 @ 10002e6f  eax = [fsbase].d
   6 @ 10002e75  push(eax)
   7 @ 10002e76  [fsbase].d = esp {var_14}
   8 @ 10002e7d  esp = esp - 8
   9 @ 10002e80  push(ebx)
  10 @ 10002e81  push(esi)
  11 @ 10002e82  push(edi)
  12 @ 10002e83  [ebp - 0x18 {var_1c}].d = esp {__saved_edi}
  13 @ 10002e88  if (edx == 0) then 14 @ 0x10002f34 else 23 @ 0x10002e8e

  14 @ 10002f34  eax = 0
  15 @ 10002f36  ecx = [ebp - 0x10 {var_14}].d
  16 @ 10002f39  [fsbase].d = ecx
  17 @ 10002f40  edi = pop
  18 @ 10002f41  esi = pop
  19 @ 10002f42  ebx = pop
  20 @ 10002f43  esp = ebp
  21 @ 10002f45  ebp = pop
  22 @ 10002f46  <return> jump(pop)

  23 @ 10002e8e  [ebp - 4 {var_8_1}].d = 0
  24 @ 10002e95  eax = [&data_10009f18].d
  25 @ 10002e9a  edi = eax
  26 @ 10002e9f  if ((dl & 7) != 0) then 27 @ 0x10002f2d else 29 @ 0x10002ea7

  27 @ 10002f2d  [ebp - 4 {var_8_3}].d = -1
  28 @ 10002f2d  goto 14 @ 0x10002f34

  29 @ 10002ea7  if (edx u< eax) then 27 @ 0x10002f2d else 30 @ 0x10002ead

  30 @ 10002ead  ecx = [edx - 4].d
  31 @ 10002eb0  esi = ecx
  32 @ 10002eb2  esi = esi & 3
  33 @ 10002eb2  cond:0 = esi == 0
  34 @ 10002eb5  eax = 0
  35 @ 10002eba  al = cond:0
  36 @ 10002ebf  if (eax != 0) then 37 @ 0x10002ec9 else 38 @ 0x10002ec4

  37 @ 10002ec9  if ((cl & 4) != 0) then 27 @ 0x10002f2d else 39 @ 0x10002ecb

  38 @ 10002ec4  if (esi == 1) then 27 @ 0x10002f2d else 37 @ 0x10002ec9

  39 @ 10002ecb  esi = ecx
  40 @ 10002ecd  esi = esi & 0xfffffff8
  41 @ 10002ed6  if (esi u> [&data_10009f34].d) then 27 @ 0x10002f2d else 42 @ 0x10002eda

  42 @ 10002eda  if (eax != 0) then 43 @ 0x10002eed else 47 @ 0x10002edc

  43 @ 10002eed  ecx = ecx & 0xfffffff8
  44 @ 10002ef0  eax = [&data_10009f1c].d
  45 @ 10002ef5  eax = eax ^ [ecx + edx - 8].d
  46 @ 10002efb  if ((al & 7) != 0) then 27 @ 0x10002f2d else 51 @ 0x10002eff

  47 @ 10002edc  eax = ecx
  48 @ 10002ede  eax = eax & 0xfffffff8
  49 @ 10002ee1  eax = [eax + edx - 4].d
  50 @ 10002ee7  if ((al & 1) == 0) then 27 @ 0x10002f2d else 52 @ 0x10002eeb

  51 @ 10002eff  if (eax u< edi) then 27 @ 0x10002f2d else 53 @ 0x10002f01

  52 @ 10002eeb  if ((al & 4) != 0) then 27 @ 0x10002f2d else 43 @ 0x10002eed

  53 @ 10002f01  ecx = [&data_10009f1c].d
  54 @ 10002f0a  if ([eax + 0x24].d != ecx) then 27 @ 0x10002f2d else 55 @ 0x10002f0c

  55 @ 10002f0c  [ebp - 4 {var_8_2}].d = -1
  56 @ 10002f13  ecx = [ebp - 0x10 {var_14}].d
  57 @ 10002f16  [fsbase].d = ecx
  58 @ 10002f1d  edi = pop
  59 @ 10002f1e  esi = pop
  60 @ 10002f1f  ebx = pop
  61 @ 10002f20  esp = ebp
  62 @ 10002f22  ebp = pop
  63 @ 10002f23  <return> jump(pop)


10002f24  int32_t sub_10002f24() __pure

   0 @ 10002f24  eax = 1
   1 @ 10002f29  <return> jump(pop)

10002f2a                                8b 65 e8                                                                     .e.
10002f47                       cc cc cc cc cc cc cc cc cc                                                         .........

10002f50  int32_t __convention("regparm") sub_10002f50(void* arg1)

   0 @ 10002f50  ecx = [&data_10009f1c].d
   1 @ 10002f56  push(esi)
   2 @ 10002f57  esi = 0
   3 @ 10002f5c  if ([eax + 0x24].d != ecx) then 4 @ 0x10002f66 else 8 @ 0x10002f5e

   4 @ 10002f66     ([&data_100080ec].d)  {"ualAlloc"}
   5 @ 10002f6c  eax = esi
   6 @ 10002f6e  esi = pop
   7 @ 10002f6f  <return> jump(pop)

   8 @ 10002f5e  eax = [eax + 0x1b0].d
   9 @ 10002f64  esi = pop
  10 @ 10002f65  <return> jump(pop)


10002f70  void* sub_10002f70(void* arg1)

   0 @ 10002f70  esp = esp - 8
   1 @ 10002f73  eax = [ebx + 4 {4}].d
   2 @ 10002f76  ecx = eax
   3 @ 10002f78  ecx = neg.d(ecx)
   4 @ 10002f7a  ecx = ecx & eax
   5 @ 10002f7c  edx, eflags = _bit_scan_forward(ecx)
   6 @ 10002f7f  eax = edx
   7 @ 10002f81  ecx = [ebx + (eax << 2) + 0x130].d
   8 @ 10002f88  push(ebp)
   9 @ 10002f89  ebp = [ecx + 4].d
  10 @ 10002f8c  [esp + 4 {var_8}].d = edx
  11 @ 10002f90  edx = [esp + 0x10 {arg1}].d
  12 @ 10002f94  ebp = ebp & 0xfffffff8
  13 @ 10002f97  push(edi)
  14 @ 10002f98  ebp = ebp - edx
  15 @ 10002f98  goto 16 @ 0x10002f9a

  16 @ 10002f9a  edi = ecx
  17 @ 10002f9c  esp = esp
  18 @ 10002f9c  goto 19 @ 0x10002fa0

  19 @ 10002fa0  eax = [ecx + 0x10].d
  20 @ 10002fa5  if (eax == 0) then 21 @ 0x10002fab else 23 @ 0x10002fa7

  21 @ 10002fab  ecx = [ecx + 0x14].d
  22 @ 10002fab  goto 25 @ 0x10002fb0

  23 @ 10002fa7  ecx = eax
  24 @ 10002fa9  goto 25 @ 0x10002fb0

  25 @ 10002fb0  if (ecx == 0) then 26 @ 0x10002fc2 else 28 @ 0x10002fb2

  26 @ 10002fc2  ecx = [ebx + 0x10 {0x10}].d
  27 @ 10002fc7  if (edi u< ecx) then 32 @ 0x10003190 else 38 @ 0x10002fcd

  28 @ 10002fb2  eax = [ecx + 4].d
  29 @ 10002fb5  eax = eax & 0xfffffff8
  30 @ 10002fb8  eax = eax - edx
  31 @ 10002fbc  if (eax u>= ebp) then 19 @ 0x10002fa0 else 42 @ 0x10002fbe

  32 @ 10003190  call([&data_100080ec].d)  {"ualAlloc"}
  33 @ 10003196  edi = pop
  34 @ 10003197  eax = 0
  35 @ 10003199  ebp = pop
  36 @ 1000319a  esp = esp + 8
  37 @ 1000319d  <return> jump(pop)

  38 @ 10002fcd  eax = edi + edx
  39 @ 10002fd0  cond:0 = edi u>= eax
  40 @ 10002fd2  [esp + 0xc {var_4_1}].d = eax
  41 @ 10002fd6  if (cond:0) then 32 @ 0x10003190 else 44 @ 0x10002fdc

  42 @ 10002fbe  ebp = eax
  43 @ 10002fc0  goto 16 @ 0x10002f9a

  44 @ 10002fdc  eax = [edi + 0x18].d
  45 @ 10002fdf  push(esi)
  46 @ 10002fe0  esi = [edi + 0xc].d
  47 @ 10002fe3  cond:1 = esi == edi
  48 @ 10002fe5  [esp + 0xc {var_8_1}].d = eax
  49 @ 10002fe9  if (cond:1) then 50 @ 0x10002ffa else 54 @ 0x10002feb

  50 @ 10002ffa  esi = [edi + 0x14].d
  51 @ 10002ffd  cond:2 = esi != 0
  52 @ 10002fff  ecx = edi + 0x14
  53 @ 10003002  if (cond:2) then 56 @ 0x10003010 else 59 @ 0x10003004

  54 @ 10002feb  eax = [edi + 8].d
  55 @ 10002ff0  if (eax u< ecx) then 63 @ 0x10003035 else 66 @ 0x10002ff2

  56 @ 10003010  cond:3 = [esi + 0x14].d != 0
  57 @ 10003014  eax = esi + 0x14
  58 @ 10003017  if (cond:3) then 69 @ 0x10003022 else 72 @ 0x10003019

  59 @ 10003004  esi = [edi + 0x10].d
  60 @ 10003007  cond:4 = esi == 0
  61 @ 10003009  ecx = edi + 0x10
  62 @ 1000300c  if (cond:4) then 75 @ 0x10003044 else 76 @ 0x1000300e

  63 @ 10003035  call([&data_100080ec].d)  {"ualAlloc"}
  64 @ 1000303b  edx = [esp + 0x18 {arg1}].d
  65 @ 1000303b  goto 75 @ 0x10003044

  66 @ 10002ff2  [eax + 0xc].d = esi
  67 @ 10002ff5  [esi + 8].d = eax
  68 @ 10002ff8  goto 75 @ 0x10003044

  69 @ 10003022  esi = [eax].d
  70 @ 10003024  ecx = eax
  71 @ 10003026  goto 56 @ 0x10003010

  72 @ 10003019  cond:5 = [esi + 0x10].d == 0
  73 @ 1000301d  eax = esi + 0x10
  74 @ 10003020  if (cond:5) then 78 @ 0x1000302b else 69 @ 0x10003022

  75 @ 10003044  if ([esp + 0xc {var_8_1}].d == 0) then 79 @ 0x100030eb else 80 @ 0x1000304a

  76 @ 1000300e  edi = edi
  77 @ 1000300e  goto 56 @ 0x10003010

  78 @ 1000302b  if (ecx u< [ebx + 0x10 {0x10}].d) then 63 @ 0x10003035 else 84 @ 0x1000302d

  79 @ 100030eb  if (ebp u>= 0x10) then 86 @ 0x10003113 else 98 @ 0x100030ed

  80 @ 1000304a  ecx = [edi + 0x1c].d
  81 @ 1000304d  cond:6 = edi != [ebx + (ecx << 2) + 0x130].d
  82 @ 10003054  eax = ebx + (ecx << 2) + 0x130
  83 @ 1000305b  if (cond:6) then 113 @ 0x10003074 else 115 @ 0x1000305d

  84 @ 1000302d  [ecx].d = 0
  85 @ 10003033  goto 75 @ 0x10003044

  86 @ 10003113  ecx = [&data_10009f1c].d
  87 @ 10003119  eax = [esp + 0x10 {var_4_1}].d
  88 @ 1000311d  edx = edx | 3
  89 @ 10003120  [edi + 4].d = edx
  90 @ 10003123  ecx = ecx ^ ebx
  91 @ 10003125  edx = ebp
  92 @ 10003127  [eax].d = ecx
  93 @ 10003129  edx = edx | 1
  94 @ 1000312c  [eax + 4].d = edx
  95 @ 1000312f  [eax + ebp].d = ebp
  96 @ 10003132  eax = [ebx + 8 {8}].d
  97 @ 10003137  if (eax == 0) then 118 @ 0x1000317c else 127 @ 0x10003139

  98 @ 100030ed  ecx = edx + ebp
  99 @ 100030f0  ebp = ebp + edi
 100 @ 100030f2  eax = edx + ebp
 101 @ 100030f5  edx = [&data_10009f1c].d
 102 @ 100030fb  ecx = ecx | 3
 103 @ 100030fe  [edi + 4].d = ecx
 104 @ 10003101  [eax + 4].d = [eax + 4].d | 1
 105 @ 10003105  edx = edx ^ ebx
 106 @ 10003107  esi = pop
 107 @ 10003108  [eax].d = edx
 108 @ 1000310a  eax = edi + 8
 109 @ 1000310d  edi = pop
 110 @ 1000310e  ebp = pop
 111 @ 1000310f  esp = esp + 8
 112 @ 10003112  <return> jump(pop)

 113 @ 10003074  eax = [esp + 0xc {var_8_1}].d
 114 @ 1000307b  if (eax u< [ebx + 0x10 {0x10}].d) then 136 @ 0x1000308c else 140 @ 0x10003080

 115 @ 1000305d  cond:7 = esi != 0
 116 @ 1000305f  [eax].d = esi
 117 @ 10003061  if (cond:7) then 141 @ 0x100030a0 else 143 @ 0x10003063

 118 @ 1000317c  edx = [esp + 0x10 {var_4_1}].d
 119 @ 10003180  esi = pop
 120 @ 10003181  eax = edi + 8
 121 @ 10003184  edi = pop
 122 @ 10003185  [ebx + 8 {8}].d = ebp
 123 @ 10003188  [ebx + 0x14 {0x14}].d = edx
 124 @ 1000318b  ebp = pop
 125 @ 1000318c  esp = esp + 8
 126 @ 1000318f  <return> jump(pop)

 127 @ 10003139  ecx = [ebx + 0x14 {0x14}].d
 128 @ 1000313c  eax = eax u>> 3
 129 @ 1000313f  [esp + 0xc {var_8_2}].d = ecx
 130 @ 10003143  ecx = eax
 131 @ 10003145  edx = 1
 132 @ 1000314a  edx = edx << cl
 133 @ 1000314c  esi = ebx + (eax << 3) + 0x28
 134 @ 10003150  eax = [ebx {0}].d
 135 @ 10003154  if ((edx & eax) != 0) then 149 @ 0x1000315c else 151 @ 0x10003156

 136 @ 1000308c  call([&data_100080ec].d)  {"ualAlloc"}
 137 @ 10003092  edx = [esp + 0x18 {arg1}].d
 138 @ 10003096  eax = [esp + 0xc {var_8_1}].d
 139 @ 10003096  goto 154 @ 0x1000309c

 140 @ 10003080  if ([eax + 0x10].d != edi) then 155 @ 0x10003087 else 157 @ 0x10003082

 141 @ 100030a0  eax = [esp + 0xc {var_8_1}].d
 142 @ 100030a0  goto 159 @ 0x100030a7

 143 @ 10003063  ecx = [edi + 0x1c].d
 144 @ 10003066  eax = 1
 145 @ 1000306b  eax = eax << cl
 146 @ 1000306d  eax = not.d(eax)
 147 @ 1000306f  [ebx + 4 {4}].d = [ebx + 4 {4}].d & eax
 148 @ 10003072  goto 79 @ 0x100030eb

 149 @ 1000315c  ecx = [esi + 8].d
 150 @ 10003162  if (ecx u>= [ebx + 0x10 {0x10}].d) then 160 @ 0x1000316c else 166 @ 0x10003164

 151 @ 10003156  eax = eax | edx
 152 @ 10003158  [ebx {0}].d = eax
 153 @ 1000315a  goto 168 @ 0x1000316a

 154 @ 1000309c  if (esi == 0) then 79 @ 0x100030eb else 170 @ 0x1000309e

 155 @ 10003087  [eax + 0x14].d = esi
 156 @ 1000308a  goto 154 @ 0x1000309c

 157 @ 10003082  [eax + 0x10].d = esi
 158 @ 10003085  goto 154 @ 0x1000309c

 159 @ 100030a7  if (esi u< [ebx + 0x10 {0x10}].d) then 171 @ 0x100030de else 174 @ 0x100030a9

 160 @ 1000316c  eax = [esp + 0xc {var_8_2}].d
 161 @ 10003170  [esi + 8].d = eax
 162 @ 10003173  [ecx + 0xc].d = eax
 163 @ 10003176  [eax + 8].d = ecx
 164 @ 10003179  [eax + 0xc].d = esi
 165 @ 10003179  goto 118 @ 0x1000317c

 166 @ 10003164  call([&data_100080ec].d)  {"ualAlloc"}
 167 @ 10003164  goto 168 @ 0x1000316a

 168 @ 1000316a  ecx = esi
 169 @ 1000316a  goto 160 @ 0x1000316c

 170 @ 1000309e  goto 159 @ 0x100030a7

 171 @ 100030de  call([&data_100080ec].d)  {"ualAlloc"}
 172 @ 100030e4  edx = [esp + 0x18 {arg1}].d
 173 @ 100030e4  goto 79 @ 0x100030eb

 174 @ 100030a9  [esi + 0x18].d = eax
 175 @ 100030ac  eax = [edi + 0x10].d
 176 @ 100030b1  if (eax == 0) then 177 @ 0x100030ca else 179 @ 0x100030b6

 177 @ 100030ca  eax = [edi + 0x14].d
 178 @ 100030cf  if (eax == 0) then 79 @ 0x100030eb else 180 @ 0x100030d4

 179 @ 100030b6  if (eax u< [ebx + 0x10 {0x10}].d) then 181 @ 0x100030c0 else 184 @ 0x100030b8

 180 @ 100030d4  if (eax u< [ebx + 0x10 {0x10}].d) then 171 @ 0x100030de else 187 @ 0x100030d6

 181 @ 100030c0  call([&data_100080ec].d)  {"ualAlloc"}
 182 @ 100030c6  edx = [esp + 0x18 {arg1}].d
 183 @ 100030c6  goto 177 @ 0x100030ca

 184 @ 100030b8  [esi + 0x10].d = eax
 185 @ 100030bb  [eax + 0x18].d = esi
 186 @ 100030be  goto 177 @ 0x100030ca

 187 @ 100030d6  [esi + 0x14].d = eax
 188 @ 100030d9  [eax + 0x18].d = esi
 189 @ 100030dc  goto 79 @ 0x100030eb

1000319e                                                                                            cc cc                                ..

100031a0  void* sub_100031a0(int32_t* arg1, void* arg2)

   0 @ 100031a0  esp = esp - 0xc
   1 @ 100031a3  push(ebx)
   2 @ 100031a4  push(ebp)
   3 @ 100031a5  ebp = [esp + 0x1c {arg2}].d
   4 @ 100031a9  push(esi)
   5 @ 100031aa  ebx = ebp
   6 @ 100031ac  esi = 0
   7 @ 100031ae  eax = ebp
   8 @ 100031b0  ebx = neg.d(ebx)
   9 @ 100031b2  eax = eax u>> 8
  10 @ 100031b2  cond:0 = eax != 0
  11 @ 100031b5  push(edi)
  12 @ 100031b6  [esp + 0x24 {arg2}].d = esi
  13 @ 100031ba  if (cond:0) then 14 @ 0x100031c5 else 15 @ 0x100031bc

  14 @ 100031c5  if (eax u<= 0xffff) then 17 @ 0x100031ce else 25 @ 0x100031c7

  15 @ 100031bc  edi = 0
  16 @ 100031be  goto 27 @ 0x100031e2

  17 @ 100031ce  eax, eflags = _bit_scan_reverse(eax)
  18 @ 100031d1  ecx = eax + 7
  19 @ 100031d4  edx = ebp
  20 @ 100031d6  edx = edx u>> cl
  21 @ 100031d8  [esp + 0x10 {var_c_1}].d = eax
  22 @ 100031dc  edx = edx & 1
  23 @ 100031df  edi = edx + (eax << 1)
  24 @ 100031df  goto 27 @ 0x100031e2

  25 @ 100031c7  edi = 0x1f
  26 @ 100031cc  goto 27 @ 0x100031e2

  27 @ 100031e2  eax = [esp + 0x20 {arg1}].d
  28 @ 100031e6  eax = [eax + (edi << 2) + 0x130].d
  29 @ 100031ef  if (eax == 0) then 30 @ 0x10003258 else 37 @ 0x100031f4

  30 @ 10003258  edx = edx | 0xffffffff
  31 @ 1000325b  ecx = edi
  32 @ 1000325d  edx = edx << cl
  33 @ 1000325f  ecx = [esp + 0x20 {arg1}].d
  34 @ 10003263  edx = edx + edx
  35 @ 10003265  edx = edx & [ecx + 4].d
  36 @ 10003268  if (edx == 0) then 38 @ 0x10003286 else 39 @ 0x1000326a

  37 @ 100031f4  if (edi != 0x1f) then 48 @ 0x100031fa else 53 @ 0x100031f6

  38 @ 10003286  if (eax == 0) then 55 @ 0x100032b0 else 56 @ 0x10003288

  39 @ 1000326a  eax = edx
  40 @ 1000326c  eax = neg.d(eax)
  41 @ 1000326e  eax = eax & edx
  42 @ 10003270  ecx, eflags = _bit_scan_forward(eax)
  43 @ 10003273  eax = [esp + 0x20 {arg1}].d
  44 @ 10003277  edx = ecx
  45 @ 10003279  eax = [eax + (edx << 2) + 0x130].d
  46 @ 10003280  [esp + 0x14 {var_8_1}].d = ecx
  47 @ 10003280  goto 38 @ 0x10003286

  48 @ 100031fa  edx = edi
  49 @ 100031fc  edx = edx u>> 1
  50 @ 100031fe  ecx = 0x19
  51 @ 10003203  ecx = ecx - edx
  52 @ 10003203  goto 60 @ 0x10003205

  53 @ 100031f6  ecx = 0
  54 @ 100031f8  goto 60 @ 0x10003205

  55 @ 100032b0  if (esi == 0) then 65 @ 0x100035e9 else 72 @ 0x100032b6

  56 @ 10003288  ecx = [eax + 4].d
  57 @ 1000328b  ecx = ecx & 0xfffffff8
  58 @ 1000328e  ecx = ecx - ebp
  59 @ 10003292  if (ecx u>= ebx) then 76 @ 0x10003298 else 78 @ 0x10003294

  60 @ 10003205  edx = ebp
  61 @ 10003207  edx = edx << cl
  62 @ 10003209  [esp + 0x10 {i_2}].d = esi
  63 @ 1000320d  ecx = ecx
  64 @ 1000320d  goto 81 @ 0x10003210

  65 @ 100035e9  edi = pop
  66 @ 100035ea  esi = pop
  67 @ 100035eb  ebp = pop
  68 @ 100035ec  eax = 0
  69 @ 100035ee  ebx = pop
  70 @ 100035ef  esp = esp + 0xc
  71 @ 100035f2  <return> jump(pop)

  72 @ 100032b6  eax = [esp + 0x20 {arg1}].d
  73 @ 100032ba  ecx = [eax + 8].d
  74 @ 100032bd  ecx = ecx - ebp
  75 @ 100032c1  if (ebx u>= ecx) then 65 @ 0x100035e9 else 85 @ 0x100032c7

  76 @ 10003298  ecx = [eax + 0x10].d
  77 @ 1000329d  if (ecx == 0) then 87 @ 0x100032a3 else 89 @ 0x1000329f

  78 @ 10003294  ebx = ecx
  79 @ 10003296  esi = eax
  80 @ 10003296  goto 76 @ 0x10003298

  81 @ 10003210  ecx = [eax + 4].d
  82 @ 10003213  ecx = ecx & 0xfffffff8
  83 @ 10003216  ecx = ecx - ebp
  84 @ 1000321a  if (ecx u>= ebx) then 91 @ 0x10003228 else 97 @ 0x1000321c

  85 @ 100032c7  edx = [eax + 0x10].d
  86 @ 100032cc  if (esi u< edx) then 102 @ 0x100035e3 else 104 @ 0x100032d2

  87 @ 100032a3  eax = [eax + 0x14].d
  88 @ 100032a3  goto 106 @ 0x100032a8

  89 @ 1000329f  eax = ecx
  90 @ 100032a1  goto 106 @ 0x100032a8

  91 @ 10003228  ecx = [eax + 0x14].d
  92 @ 1000322b  esi = edx
  93 @ 1000322d  esi = esi u>> 0x1f
  94 @ 10003230  cond:1 = ecx == 0
  95 @ 10003232  eax = [eax + (esi << 2) + 0x10].d
  96 @ 10003236  if (cond:1) then 107 @ 0x10003242 else 108 @ 0x1000323a

  97 @ 1000321c  cond:2 = ecx == 0
  98 @ 1000321e  esi = eax
  99 @ 10003220  [esp + 0x24 {arg2}].d = esi
 100 @ 10003224  ebx = ecx
 101 @ 10003226  if (cond:2) then 109 @ 0x10003252 else 91 @ 0x10003228

 102 @ 100035e3  call([&data_100080ec].d)  {"ualAlloc"}
 103 @ 100035e3  goto 65 @ 0x100035e9

 104 @ 100032d2  edi = esi + ebp
 105 @ 100032d7  if (esi u>= edi) then 102 @ 0x100035e3 else 110 @ 0x100032dd

 106 @ 100032a8  if (eax != 0) then 56 @ 0x10003288 else 116 @ 0x100032aa

 107 @ 10003242  if (eax == 0) then 118 @ 0x10003248 else 121 @ 0x10003244

 108 @ 1000323a  if (ecx == eax) then 107 @ 0x10003242 else 123 @ 0x1000323c

 109 @ 10003252  if (eax != 0) then 56 @ 0x10003288 else 125 @ 0x10003256

 110 @ 100032dd  eax = [esp + 0x24 {arg2}].d
 111 @ 100032e1  esi = [eax + 0xc].d
 112 @ 100032e4  cond:3 = esi == eax
 113 @ 100032e6  ecx = [eax + 0x18].d
 114 @ 100032e9  [esp + 0x10 {var_c_2}].d = ecx
 115 @ 100032ed  if (cond:3) then 126 @ 0x100032fe else 131 @ 0x100032ef

 116 @ 100032aa  [esp + 0x24 {arg2}].d = esi
 117 @ 100032aa  goto 55 @ 0x100032b0

 118 @ 10003248  eax = [esp + 0x10 {i_2}].d
 119 @ 1000324c  esi = [esp + 0x24 {arg2}].d
 120 @ 1000324c  goto 109 @ 0x10003252

 121 @ 10003244  edx = edx + edx
 122 @ 10003246  goto 81 @ 0x10003210

 123 @ 1000323c  [esp + 0x10 {i_2}].d = ecx
 124 @ 1000323c  goto 107 @ 0x10003242

 125 @ 10003256  if (esi != 0) then 72 @ 0x100032b6 else 30 @ 0x10003258

 126 @ 100032fe  eax = [esp + 0x24 {arg2}].d
 127 @ 10003302  esi = [eax + 0x14].d
 128 @ 10003305  cond:4 = esi != 0
 129 @ 10003307  ecx = eax + 0x14
 130 @ 1000330a  if (cond:4) then 133 @ 0x10003316 else 136 @ 0x1000330c

 131 @ 100032ef  eax = [eax + 8].d
 132 @ 100032f4  if (eax u< edx) then 140 @ 0x1000333a else 142 @ 0x100032f6

 133 @ 10003316  cond:5 = [esi + 0x14].d != 0
 134 @ 1000331a  eax = esi + 0x14
 135 @ 1000331d  if (cond:5) then 145 @ 0x10003328 else 148 @ 0x1000331f

 136 @ 1000330c  esi = [eax + 0x10].d
 137 @ 1000330f  cond:6 = esi == 0
 138 @ 10003311  ecx = eax + 0x10
 139 @ 10003314  if (cond:6) then 151 @ 0x10003345 else 133 @ 0x10003316

 140 @ 1000333a  call([&data_100080ec].d)  {"ualAlloc"}
 141 @ 1000333a  goto 151 @ 0x10003345

 142 @ 100032f6  [eax + 0xc].d = esi
 143 @ 100032f9  [esi + 8].d = eax
 144 @ 100032fc  goto 151 @ 0x10003345

 145 @ 10003328  esi = [eax].d
 146 @ 1000332a  ecx = eax
 147 @ 1000332c  goto 133 @ 0x10003316

 148 @ 1000331f  cond:7 = [esi + 0x10].d == 0
 149 @ 10003323  eax = esi + 0x10
 150 @ 10003326  if (cond:7) then 152 @ 0x10003330 else 145 @ 0x10003328

 151 @ 10003345  if ([esp + 0x10 {var_c_2}].d == 0) then 153 @ 0x100033f2 else 154 @ 0x1000334b

 152 @ 10003330  if (ecx u< edx) then 140 @ 0x1000333a else 160 @ 0x10003332

 153 @ 100033f2  if (ebx u>= 0x10) then 162 @ 0x10003426 else 176 @ 0x100033f4

 154 @ 1000334b  ecx = [esp + 0x24 {arg2}].d
 155 @ 1000334f  eax = [ecx + 0x1c].d
 156 @ 10003352  edx = [esp + 0x20 {arg1}].d
 157 @ 10003356  cond:8 = ecx != [edx + (eax << 2) + 0x130].d
 158 @ 1000335d  eax = edx + (eax << 2) + 0x130
 159 @ 10003364  if (cond:8) then 194 @ 0x1000337d else 196 @ 0x10003366

 160 @ 10003332  [ecx].d = 0
 161 @ 10003338  goto 151 @ 0x10003345

 162 @ 10003426  eax = [&data_10009f1c].d
 163 @ 1000342b  eax = eax ^ [esp + 0x20 {arg1}].d
 164 @ 1000342f  edx = [esp + 0x24 {arg2}].d
 165 @ 10003433  ebp = ebp | 3
 166 @ 10003436  [edx + 4].d = ebp
 167 @ 10003439  ecx = ebx
 168 @ 1000343b  ecx = ecx | 1
 169 @ 1000343e  [edi].d = eax
 170 @ 10003440  [edi + 4].d = ecx
 171 @ 10003443  ecx = ebx
 172 @ 10003445  ecx = ecx u>> 3
 173 @ 10003448  cond:9 = ecx u>= 0x20
 174 @ 1000344b  [edi + ebx].d = ebx
 175 @ 1000344e  if (cond:9) then 199 @ 0x100034cc else 202 @ 0x10003450

 176 @ 100033f4  eax = [esp + 0x24 {arg2}].d
 177 @ 100033f8  ecx = [&data_10009f1c].d
 178 @ 100033fe  ecx = ecx ^ [esp + 0x20 {arg1}].d
 179 @ 10003402  edx = ebx + ebp
 180 @ 10003405  ebx = ebx + eax
 181 @ 10003407  edx = edx | 3
 182 @ 1000340a  [eax + 4].d = edx
 183 @ 1000340d  [ebx + ebp + 4].d = [ebx + ebp + 4].d | 1
 184 @ 10003412  eax = ebx + ebp
 185 @ 10003415  edi = pop
 186 @ 10003416  esi = pop
 187 @ 10003417  [eax].d = ecx
 188 @ 10003419  eax = [esp + 0x1c {arg2}].d
 189 @ 1000341d  ebp = pop
 190 @ 1000341e  eax = eax + 8
 191 @ 10003421  ebx = pop
 192 @ 10003422  esp = esp + 0xc
 193 @ 10003425  <return> jump(pop)

 194 @ 1000337d  eax = [esp + 0x10 {var_c_2}].d
 195 @ 10003384  if (eax u< [edx + 0x10].d) then 209 @ 0x10003395 else 211 @ 0x10003389

 196 @ 10003366  cond:10 = esi != 0
 197 @ 10003368  [eax].d = esi
 198 @ 1000336a  if (cond:10) then 212 @ 0x100033aa else 213 @ 0x1000336c

 199 @ 100034cc  eax = ebx
 200 @ 100034ce  eax = eax u>> 8
 201 @ 100034d1  if (eax != 0) then 219 @ 0x100034dc else 220 @ 0x100034d3

 202 @ 10003450  edx = [esp + 0x20 {arg1}].d
 203 @ 10003454  eax = 1
 204 @ 10003459  eax = eax << cl
 205 @ 1000345b  esi = edx + (ecx << 3) + 0x28
 206 @ 1000345f  ecx = [edx].d
 207 @ 10003461  ebx = esi
 208 @ 10003465  if ((eax & ecx) != 0) then 222 @ 0x10003486 else 224 @ 0x10003467

 209 @ 10003395  call([&data_100080ec].d)  {"ualAlloc"}
 210 @ 10003395  goto 238 @ 0x1000339d

 211 @ 10003389  if ([eax + 0x10].d != ecx) then 239 @ 0x10003390 else 241 @ 0x1000338b

 212 @ 100033aa  if (esi u< [edx + 0x10].d) then 243 @ 0x100033e9 else 245 @ 0x100033ac

 213 @ 1000336c  ecx = [ecx + 0x1c].d
 214 @ 1000336f  eax = 1
 215 @ 10003374  eax = eax << cl
 216 @ 10003376  eax = not.d(eax)
 217 @ 10003378  [edx + 4].d = [edx + 4].d & eax
 218 @ 1000337b  goto 153 @ 0x100033f2

 219 @ 100034dc  if (eax u<= 0xffff) then 249 @ 0x100034e5 else 258 @ 0x100034de

 220 @ 100034d3  ecx = 0
 221 @ 100034d5  goto 260 @ 0x100034fb

 222 @ 10003486  eax = [esi + 8].d
 223 @ 1000348c  if (eax u< [edx + 0x10].d) then 270 @ 0x100034ab else 283 @ 0x1000348e

 224 @ 10003467  ecx = ecx | eax
 225 @ 10003469  eax = [esp + 0x24 {arg2}].d
 226 @ 1000346d  [edx].d = ecx
 227 @ 1000346f  [esi + 8].d = edi
 228 @ 10003472  [ebx + 0xc].d = edi
 229 @ 10003475  [edi + 8].d = ebx
 230 @ 10003478  [edi + 0xc].d = esi
 231 @ 1000347b  edi = pop
 232 @ 1000347c  esi = pop
 233 @ 1000347d  ebp = pop
 234 @ 1000347e  eax = eax + 8
 235 @ 10003481  ebx = pop
 236 @ 10003482  esp = esp + 0xc
 237 @ 10003485  <return> jump(pop)

 238 @ 1000339d  if (esi == 0) then 153 @ 0x100033f2 else 296 @ 0x1000339f

 239 @ 10003390  [eax + 0x14].d = esi
 240 @ 10003393  goto 238 @ 0x1000339d

 241 @ 1000338b  [eax + 0x10].d = esi
 242 @ 1000338e  goto 238 @ 0x1000339d

 243 @ 100033e9  call([&data_100080ec].d)  {"ualAlloc"}
 244 @ 100033e9  goto 153 @ 0x100033f2

 245 @ 100033ac  eax = [esp + 0x10 {var_c_2}].d
 246 @ 100033b0  [esi + 0x18].d = eax
 247 @ 100033b3  eax = [ecx + 0x10].d
 248 @ 100033b8  if (eax == 0) then 299 @ 0x100033d1 else 301 @ 0x100033bd

 249 @ 100034e5  edx, eflags = _bit_scan_reverse(eax)
 250 @ 100034e8  eax = edx
 251 @ 100034ea  [esp + 0x18 {var_4_1}].d = edx
 252 @ 100034ee  ecx = eax + 7
 253 @ 100034f1  edx = ebx
 254 @ 100034f3  edx = edx u>> cl
 255 @ 100034f5  edx = edx & 1
 256 @ 100034f8  ecx = edx + (eax << 1)
 257 @ 100034f8  goto 260 @ 0x100034fb

 258 @ 100034de  ecx = 0x1f
 259 @ 100034e3  goto 260 @ 0x100034fb

 260 @ 100034fb  ebp = [esp + 0x20 {arg1}].d
 261 @ 100034ff  eax = 0
 262 @ 10003501  [edi + 0x14].d = eax
 263 @ 10003504  [edi + 0x10].d = eax
 264 @ 10003507  eax = 1
 265 @ 1000350c  eax = eax << cl
 266 @ 1000350e  [edi + 0x1c].d = ecx
 267 @ 10003511  esi = [ebp + 4].d
 268 @ 10003514  edx = ebp + (ecx << 2) + 0x130
 269 @ 1000351d  if ((esi & eax) != 0) then 302 @ 0x1000353e else 305 @ 0x1000351f

 270 @ 100034ab  call([&data_100080ec].d)  {"ualAlloc"}
 271 @ 100034b1  eax = [esp + 0x24 {arg2}].d
 272 @ 100034b5  [esi + 8].d = edi
 273 @ 100034b8  [ebx + 0xc].d = edi
 274 @ 100034bb  [edi + 8].d = ebx
 275 @ 100034be  [edi + 0xc].d = esi
 276 @ 100034c1  edi = pop
 277 @ 100034c2  esi = pop
 278 @ 100034c3  ebp = pop
 279 @ 100034c4  eax = eax + 8
 280 @ 100034c7  ebx = pop
 281 @ 100034c8  esp = esp + 0xc
 282 @ 100034cb  <return> jump(pop)

 283 @ 1000348e  ebx = eax
 284 @ 10003490  eax = [esp + 0x24 {arg2}].d
 285 @ 10003494  [esi + 8].d = edi
 286 @ 10003497  [ebx + 0xc].d = edi
 287 @ 1000349a  [edi + 8].d = ebx
 288 @ 1000349d  [edi + 0xc].d = esi
 289 @ 100034a0  edi = pop
 290 @ 100034a1  esi = pop
 291 @ 100034a2  ebp = pop
 292 @ 100034a3  eax = eax + 8
 293 @ 100034a6  ebx = pop
 294 @ 100034a7  esp = esp + 0xc
 295 @ 100034aa  <return> jump(pop)

 296 @ 1000339f  ecx = [esp + 0x24 {arg2}].d
 297 @ 100033a3  edx = [esp + 0x20 {arg1}].d
 298 @ 100033a3  goto 212 @ 0x100033aa

 299 @ 100033d1  eax = [ecx + 0x14].d
 300 @ 100033d6  if (eax == 0) then 153 @ 0x100033f2 else 319 @ 0x100033d8

 301 @ 100033bd  if (eax u< [edx + 0x10].d) then 321 @ 0x100033c7 else 324 @ 0x100033bf

 302 @ 1000353e  cond:11 = ecx != 0x1f
 303 @ 10003541  eax = [edx].d
 304 @ 10003543  if (cond:11) then 327 @ 0x10003549 else 331 @ 0x10003545

 305 @ 1000351f  eax = eax | esi
 306 @ 10003521  [ebp + 4].d = eax
 307 @ 10003524  eax = [esp + 0x24 {arg2}].d
 308 @ 10003528  [edx].d = edi
 309 @ 1000352a  [edi + 0x18].d = edx
 310 @ 1000352d  [edi + 0xc].d = edi
 311 @ 10003530  [edi + 8].d = edi
 312 @ 10003533  edi = pop
 313 @ 10003534  esi = pop
 314 @ 10003535  ebp = pop
 315 @ 10003536  eax = eax + 8
 316 @ 10003539  ebx = pop
 317 @ 1000353a  esp = esp + 0xc
 318 @ 1000353d  <return> jump(pop)

 319 @ 100033d8  ecx = [esp + 0x20 {arg1}].d
 320 @ 100033df  if (eax u< [ecx + 0x10].d) then 243 @ 0x100033e9 else 333 @ 0x100033e1

 321 @ 100033c7  call([&data_100080ec].d)  {"ualAlloc"}
 322 @ 100033cd  ecx = [esp + 0x24 {arg2}].d
 323 @ 100033cd  goto 299 @ 0x100033d1

 324 @ 100033bf  [esi + 0x10].d = eax
 325 @ 100033c2  [eax + 0x18].d = esi
 326 @ 100033c5  goto 299 @ 0x100033d1

 327 @ 10003549  ecx = ecx u>> 1
 328 @ 1000354b  esi = 0x19
 329 @ 10003550  esi = esi - ecx
 330 @ 10003550  goto 336 @ 0x10003552

 331 @ 10003545  esi = 0
 332 @ 10003547  goto 336 @ 0x10003552

 333 @ 100033e1  [esi + 0x14].d = eax
 334 @ 100033e4  [eax + 0x18].d = esi
 335 @ 100033e7  goto 153 @ 0x100033f2

 336 @ 10003552  ecx = esi
 337 @ 10003554  edx = ebx
 338 @ 10003556  edx = edx << cl
 339 @ 10003558  ecx = [eax + 4].d
 340 @ 1000355b  ecx = ecx & 0xfffffff8
 341 @ 10003560  if (ecx == ebx) then 342 @ 0x1000357f else 346 @ 0x10003562

 342 @ 1000357f  edx = [ebp + 0x10].d
 343 @ 10003582  cond:12 = eax u< edx
 344 @ 10003584  ecx = [eax + 8].d
 345 @ 10003587  if (cond:12) then 352 @ 0x100035ce else 361 @ 0x1000358b

 346 @ 10003562  ecx = edx
 347 @ 10003564  ecx = ecx u>> 0x1f
 348 @ 10003567  esi = eax + (ecx << 2) + 0x10
 349 @ 1000356b  ecx = [esi].d
 350 @ 1000356d  edx = edx + edx
 351 @ 10003571  if (ecx == 0) then 362 @ 0x100035b2 else 363 @ 0x10003573

 352 @ 100035ce  call([&data_100080ec].d)  {"ualAlloc"}
 353 @ 100035d4  eax = [esp + 0x24 {arg2}].d
 354 @ 100035d8  edi = pop
 355 @ 100035d9  esi = pop
 356 @ 100035da  ebp = pop
 357 @ 100035db  eax = eax + 8
 358 @ 100035de  ebx = pop
 359 @ 100035df  esp = esp + 0xc
 360 @ 100035e2  <return> jump(pop)

 361 @ 1000358b  if (ecx u< edx) then 352 @ 0x100035ce else 367 @ 0x1000358d

 362 @ 100035b2  if (esi u< [ebp + 0x10].d) then 352 @ 0x100035ce else 380 @ 0x100035b4

 363 @ 10003573  eax = ecx
 364 @ 10003575  ecx = [eax + 4].d
 365 @ 10003578  ecx = ecx & 0xfffffff8
 366 @ 1000357d  if (ecx != ebx) then 346 @ 0x10003562 else 342 @ 0x1000357f

 367 @ 1000358d  [ecx + 0xc].d = edi
 368 @ 10003590  [eax + 8].d = edi
 369 @ 10003593  [edi + 0xc].d = eax
 370 @ 10003596  eax = [esp + 0x24 {arg2}].d
 371 @ 1000359a  [edi + 8].d = ecx
 372 @ 1000359d  [edi + 0x18].d = 0
 373 @ 100035a4  edi = pop
 374 @ 100035a5  esi = pop
 375 @ 100035a6  ebp = pop
 376 @ 100035a7  eax = eax + 8
 377 @ 100035aa  ebx = pop
 378 @ 100035ab  esp = esp + 0xc
 379 @ 100035ae  <return> jump(pop)

 380 @ 100035b4  [esi].d = edi
 381 @ 100035b6  [edi + 0x18].d = eax
 382 @ 100035b9  eax = [esp + 0x24 {arg2}].d
 383 @ 100035bd  [edi + 0xc].d = edi
 384 @ 100035c0  [edi + 8].d = edi
 385 @ 100035c3  edi = pop
 386 @ 100035c4  esi = pop
 387 @ 100035c5  ebp = pop
 388 @ 100035c6  eax = eax + 8
 389 @ 100035c9  ebx = pop
 390 @ 100035ca  esp = esp + 0xc
 391 @ 100035cd  <return> jump(pop)

100035f3                                                           cc cc cc cc cc cc cc cc cc cc cc cc cc                     .............

10003600  void* __convention("regparm") sub_10003600(void* arg1, int32_t arg2, void* arg3, int32_t* arg4)

   0 @ 10003600  esp = esp - 0xc
   1 @ 10003603  push(ebx)
   2 @ 10003604  push(ebp)
   3 @ 10003605  push(esi)
   4 @ 10003606  esi = ecx
   5 @ 10003608  ecx = edx
   6 @ 1000360a  ecx = ecx & 7
   7 @ 1000360a  cond:0 = ecx == 0
   8 @ 1000360d  push(edi)
   9 @ 1000360e  edi = [esp + 0x20 {arg4}].d
  10 @ 10003612  if (cond:0) then 11 @ 0x10003619 else 17 @ 0x10003614

  11 @ 10003619  ebp = ecx + edx
  12 @ 1000361c  ecx = esi
  13 @ 1000361e  ecx = ecx & 7
  14 @ 1000361e  cond:1 = ecx == 0
  15 @ 10003621  [esp + 0x18 {var_4}].d = ebp
  16 @ 10003625  if (cond:1) then 20 @ 0x1000362c else 33 @ 0x10003627

  17 @ 10003614  ecx = neg.d(ecx)
  18 @ 10003616  ecx = ecx & 7
  19 @ 10003616  goto 11 @ 0x10003619

  20 @ 1000362c  esi = esi + ecx
  21 @ 1000362e  edx = esi
  22 @ 10003630  ebx = eax + ebp
  23 @ 10003633  edx = edx - ebp
  24 @ 10003635  edx = edx - eax
  25 @ 10003637  eax = eax | 3
  26 @ 1000363a  [ebp + 4].d = eax
  27 @ 1000363d  eax = [&data_10009f1c].d
  28 @ 10003642  eax = eax ^ edi
  29 @ 10003644  [ebx].d = eax
  30 @ 10003646  cond:2 = esi != [edi + 0x18].d
  31 @ 10003649  [esp + 0x20 {arg4}].d = edx
  32 @ 1000364d  if (cond:2) then 36 @ 0x10003670 else 37 @ 0x1000364f

  33 @ 10003627  ecx = neg.d(ecx)
  34 @ 10003629  ecx = ecx & 7
  35 @ 10003629  goto 20 @ 0x1000362c

  36 @ 10003670  if (esi != [edi + 0x14].d) then 50 @ 0x10003695 else 54 @ 0x10003672

  37 @ 1000364f  [edi + 0xc].d = [edi + 0xc].d + edx
  38 @ 10003652  eax = [edi + 0xc].d
  39 @ 10003655  [edi + 0x18].d = ebx
  40 @ 10003658  edi = pop
  41 @ 10003659  eax = eax | 1
  42 @ 1000365c  [ebx + 4].d = eax
  43 @ 1000365f  eax = [esp + 0x14 {var_4}].d
  44 @ 10003663  esi = pop
  45 @ 10003664  ebp = pop
  46 @ 10003665  eax = eax + 8
  47 @ 10003668  ebx = pop
  48 @ 10003669  esp = esp + 0xc
  49 @ 1000366c  <return> jump(pop)

  50 @ 10003695  eax = [esi + 4].d
  51 @ 10003698  ecx = eax
  52 @ 1000369a  cl = cl & 3
  53 @ 100036a0  if (cl != 1) then 69 @ 0x10003807 else 78 @ 0x100036a6

  54 @ 10003672  [edi + 8].d = [edi + 8].d + edx
  55 @ 10003675  eax = [edi + 8].d
  56 @ 10003678  [edi + 0x14].d = ebx
  57 @ 1000367b  ecx = eax
  58 @ 1000367d  edi = pop
  59 @ 1000367e  ecx = ecx | 1
  60 @ 10003681  [ebx + 4].d = ecx
  61 @ 10003684  [eax + ebx].d = eax
  62 @ 10003687  eax = [esp + 0x14 {var_4}].d
  63 @ 1000368b  esi = pop
  64 @ 1000368c  ebp = pop
  65 @ 1000368d  eax = eax + 8
  66 @ 10003690  ebx = pop
  67 @ 10003691  esp = esp + 0xc
  68 @ 10003694  <return> jump(pop)

  69 @ 10003807  [esi + 4].d = [esi + 4].d & 0xfffffffe
  70 @ 1000380b  ecx = edx
  71 @ 1000380d  ecx = ecx | 1
  72 @ 10003810  [ebx + 4].d = ecx
  73 @ 10003813  ecx = edx
  74 @ 10003815  ecx = ecx u>> 3
  75 @ 10003818  cond:3 = ecx u>= 0x20
  76 @ 1000381b  [edx + ebx].d = edx
  77 @ 1000381e  if (cond:3) then 85 @ 0x10003898 else 88 @ 0x10003820

  78 @ 100036a6  ebp = [esi + 0xc].d
  79 @ 100036a9  eax = eax & 0xfffffff8
  80 @ 100036ac  ecx = eax
  81 @ 100036ae  ecx = ecx u>> 3
  82 @ 100036b1  cond:4 = ecx u>= 0x20
  83 @ 100036b4  [esp + 0x14 {var_8_1}].d = eax
  84 @ 100036b8  if (cond:4) then 94 @ 0x100036fa else 98 @ 0x100036ba

  85 @ 10003898  eax = edx
  86 @ 1000389a  eax = eax u>> 8
  87 @ 1000389d  if (eax != 0) then 100 @ 0x100038a8 else 101 @ 0x1000389f

  88 @ 10003820  eax = 1
  89 @ 10003825  eax = eax << cl
  90 @ 10003827  esi = edi + (ecx << 3) + 0x28
  91 @ 1000382b  ecx = [edi].d
  92 @ 1000382d  ebp = esi
  93 @ 10003831  if ((ecx & eax) != 0) then 103 @ 0x10003852 else 105 @ 0x10003833

  94 @ 100036fa  cond:5 = ebp == esi
  95 @ 100036fc  eax = [esi + 0x18].d
  96 @ 100036ff  [esp + 0x10 {var_c_1}].d = eax
  97 @ 10003703  if (cond:5) then 119 @ 0x10003715 else 123 @ 0x10003705

  98 @ 100036ba  eax = [esi + 8].d
  99 @ 100036bf  if (eax != ebp) then 125 @ 0x100036d1 else 127 @ 0x100036c1

 100 @ 100038a8  if (eax u<= 0xffff) then 132 @ 0x100038b1 else 140 @ 0x100038aa

 101 @ 1000389f  ecx = 0
 102 @ 100038a1  goto 142 @ 0x100038c5

 103 @ 10003852  eax = [esi + 8].d
 104 @ 10003858  if (eax u< [edi + 0x10].d) then 151 @ 0x10003877 else 164 @ 0x1000385a

 105 @ 10003833  eax = eax | ecx
 106 @ 10003835  [edi].d = eax
 107 @ 10003837  eax = [esp + 0x18 {var_4}].d
 108 @ 1000383b  [esi + 8].d = ebx
 109 @ 1000383e  [ebp + 0xc].d = ebx
 110 @ 10003841  edi = pop
 111 @ 10003842  [ebx + 0xc].d = esi
 112 @ 10003845  esi = pop
 113 @ 10003846  [ebx + 8].d = ebp
 114 @ 10003849  ebp = pop
 115 @ 1000384a  eax = eax + 8
 116 @ 1000384d  ebx = pop
 117 @ 1000384e  esp = esp + 0xc
 118 @ 10003851  <return> jump(pop)

 119 @ 10003715  ebp = [esi + 0x14].d
 120 @ 10003718  cond:6 = ebp != 0
 121 @ 1000371a  ecx = esi + 0x14
 122 @ 1000371d  if (cond:6) then 177 @ 0x10003730 else 180 @ 0x1000371f

 123 @ 10003705  ecx = [esi + 8].d
 124 @ 1000370b  if (ecx u< [edi + 0x10].d) then 184 @ 0x10003755 else 187 @ 0x1000370d

 125 @ 100036d1  ecx = edi + (ecx << 3) + 0x28
 126 @ 100036d7  if (eax == ecx) then 190 @ 0x100036e4 else 191 @ 0x100036dc

 127 @ 100036c1  eax = 1
 128 @ 100036c6  eax = eax << cl
 129 @ 100036c8  eax = not.d(eax)
 130 @ 100036ca  [edi].d = [edi].d & eax
 131 @ 100036cc  goto 192 @ 0x100037ff

 132 @ 100038b1  eax, eflags = _bit_scan_reverse(eax)
 133 @ 100038b4  ecx = eax + 7
 134 @ 100038b7  esi = edx
 135 @ 100038b9  esi = esi u>> cl
 136 @ 100038bb  [esp + 0x14 {var_8_2}].d = eax
 137 @ 100038bf  esi = esi & 1
 138 @ 100038c2  ecx = esi + (eax << 1)
 139 @ 100038c2  goto 142 @ 0x100038c5

 140 @ 100038aa  ecx = 0x1f
 141 @ 100038af  goto 142 @ 0x100038c5

 142 @ 100038c5  eax = 0
 143 @ 100038c7  [ebx + 0x14].d = eax
 144 @ 100038ca  [ebx + 0x10].d = eax
 145 @ 100038cd  eax = 1
 146 @ 100038d2  eax = eax << cl
 147 @ 100038d4  [ebx + 0x1c].d = ecx
 148 @ 100038d7  ebp = [edi + 4].d
 149 @ 100038da  esi = edi + (ecx << 2) + 0x130
 150 @ 100038e3  if ((ebp & eax) != 0) then 196 @ 0x10003904 else 199 @ 0x100038e5

 151 @ 10003877  call([&data_100080ec].d)  {"ualAlloc"}
 152 @ 1000387d  eax = [esp + 0x18 {var_4}].d
 153 @ 10003881  [esi + 8].d = ebx
 154 @ 10003884  [ebp + 0xc].d = ebx
 155 @ 10003887  edi = pop
 156 @ 10003888  [ebx + 0xc].d = esi
 157 @ 1000388b  esi = pop
 158 @ 1000388c  [ebx + 8].d = ebp
 159 @ 1000388f  ebp = pop
 160 @ 10003890  eax = eax + 8
 161 @ 10003893  ebx = pop
 162 @ 10003894  esp = esp + 0xc
 163 @ 10003897  <return> jump(pop)

 164 @ 1000385a  ebp = eax
 165 @ 1000385c  eax = [esp + 0x18 {var_4}].d
 166 @ 10003860  [esi + 8].d = ebx
 167 @ 10003863  [ebp + 0xc].d = ebx
 168 @ 10003866  edi = pop
 169 @ 10003867  [ebx + 0xc].d = esi
 170 @ 1000386a  esi = pop
 171 @ 1000386b  [ebx + 8].d = ebp
 172 @ 1000386e  ebp = pop
 173 @ 1000386f  eax = eax + 8
 174 @ 10003872  ebx = pop
 175 @ 10003873  esp = esp + 0xc
 176 @ 10003876  <return> jump(pop)

 177 @ 10003730  cond:7 = [ebp + 0x14].d != 0
 178 @ 10003734  eax = ebp + 0x14
 179 @ 10003737  if (cond:7) then 213 @ 0x10003742 else 216 @ 0x10003739

 180 @ 1000371f  ebp = [esi + 0x10].d
 181 @ 10003722  cond:8 = ebp == 0
 182 @ 10003724  ecx = esi + 0x10
 183 @ 10003727  if (cond:8) then 219 @ 0x10003765 else 220 @ 0x10003729

 184 @ 10003755  call([&data_100080ec].d)  {"ualAlloc"}
 185 @ 1000375b  edx = [esp + 0x20 {arg4}].d
 186 @ 1000375b  goto 222 @ 0x1000375f

 187 @ 1000370d  [ecx + 0xc].d = ebp
 188 @ 10003710  [ebp + 8].d = ecx
 189 @ 10003713  goto 219 @ 0x10003765

 190 @ 100036e4  if (ebp == ecx) then 224 @ 0x100036ef else 227 @ 0x100036e9

 191 @ 100036dc  if (eax u< [edi + 0x10].d) then 228 @ 0x100037f5 else 190 @ 0x100036e4

 192 @ 100037ff  eax = [esp + 0x14 {var_8_1}].d
 193 @ 10003803  esi = esi + eax
 194 @ 10003805  edx = edx + eax
 195 @ 10003805  goto 69 @ 0x10003807

 196 @ 10003904  cond:9 = ecx != 0x1f
 197 @ 10003907  eax = [esi].d
 198 @ 10003909  if (cond:9) then 231 @ 0x1000390f else 235 @ 0x1000390b

 199 @ 100038e5  eax = eax | ebp
 200 @ 100038e7  [edi + 4].d = eax
 201 @ 100038ea  eax = [esp + 0x18 {var_4}].d
 202 @ 100038ee  [esi].d = ebx
 203 @ 100038f0  edi = pop
 204 @ 100038f1  [ebx + 0x18].d = esi
 205 @ 100038f4  esi = pop
 206 @ 100038f5  ebp = pop
 207 @ 100038f6  [ebx + 0xc].d = ebx
 208 @ 100038f9  [ebx + 8].d = ebx
 209 @ 100038fc  eax = eax + 8
 210 @ 100038ff  ebx = pop
 211 @ 10003900  esp = esp + 0xc
 212 @ 10003903  <return> jump(pop)

 213 @ 10003742  ebp = [eax].d
 214 @ 10003744  ecx = eax
 215 @ 10003746  goto 177 @ 0x10003730

 216 @ 10003739  cond:10 = [ebp + 0x10].d == 0
 217 @ 1000373d  eax = ebp + 0x10
 218 @ 10003740  if (cond:10) then 237 @ 0x1000374b else 213 @ 0x10003742

 219 @ 10003765  if (eax == 0) then 192 @ 0x100037ff else 238 @ 0x1000376b

 220 @ 10003729  esp = esp
 221 @ 10003729  goto 177 @ 0x10003730

 222 @ 1000375f  eax = [esp + 0x10 {var_c_1}].d
 223 @ 1000375f  goto 219 @ 0x10003765

 224 @ 100036ef  [eax + 0xc].d = ebp
 225 @ 100036f2  [ebp + 8].d = eax
 226 @ 100036f5  goto 192 @ 0x100037ff

 227 @ 100036e9  if (ebp u< [edi + 0x10].d) then 228 @ 0x100037f5 else 224 @ 0x100036ef

 228 @ 100037f5  call([&data_100080ec].d)  {"ualAlloc"}
 229 @ 100037fb  edx = [esp + 0x20 {arg4}].d
 230 @ 100037fb  goto 192 @ 0x100037ff

 231 @ 1000390f  ecx = ecx u>> 1
 232 @ 10003911  ebp = 0x19
 233 @ 10003916  ebp = ebp - ecx
 234 @ 10003916  goto 242 @ 0x10003918

 235 @ 1000390b  ebp = 0
 236 @ 1000390d  goto 242 @ 0x10003918

 237 @ 1000374b  if (ecx u< [edi + 0x10].d) then 184 @ 0x10003755 else 248 @ 0x1000374d

 238 @ 1000376b  ecx = [esi + 0x1c].d
 239 @ 1000376e  cond:11 = esi != [edi + (ecx << 2) + 0x130].d
 240 @ 10003775  ecx = edi + (ecx << 2) + 0x130
 241 @ 1000377c  if (cond:11) then 250 @ 0x10003798 else 251 @ 0x1000377e

 242 @ 10003918  ecx = ebp
 243 @ 1000391a  esi = edx
 244 @ 1000391c  esi = esi << cl
 245 @ 1000391e  ecx = [eax + 4].d
 246 @ 10003921  ecx = ecx & 0xfffffff8
 247 @ 10003926  if (ecx == edx) then 254 @ 0x1000394e else 258 @ 0x10003928

 248 @ 1000374d  [ecx].d = 0
 249 @ 10003753  goto 222 @ 0x1000375f

 250 @ 10003798  if (eax u< [edi + 0x10].d) then 259 @ 0x100037a9 else 263 @ 0x1000379d

 251 @ 1000377e  cond:12 = ebp != 0
 252 @ 10003780  [ecx].d = ebp
 253 @ 10003782  if (cond:12) then 264 @ 0x100037be else 265 @ 0x10003784

 254 @ 1000394e  edi = [edi + 0x10].d
 255 @ 10003951  cond:13 = eax u< edi
 256 @ 10003953  ecx = [eax + 8].d
 257 @ 10003956  if (cond:13) then 271 @ 0x1000399e else 280 @ 0x1000395a

 258 @ 10003928  goto 281 @ 0x10003930

 259 @ 100037a9  call([&data_100080ec].d)  {"ualAlloc"}
 260 @ 100037af  edx = [esp + 0x20 {arg4}].d
 261 @ 100037b3  eax = [esp + 0x10 {var_c_1}].d
 262 @ 100037b3  goto 287 @ 0x100037b9

 263 @ 1000379d  if ([eax + 0x10].d != esi) then 288 @ 0x100037a4 else 290 @ 0x1000379f

 264 @ 100037be  if (ebp u< [edi + 0x10].d) then 228 @ 0x100037f5 else 292 @ 0x100037c0

 265 @ 10003784  ecx = [esi + 0x1c].d
 266 @ 10003787  eax = 1
 267 @ 1000378c  eax = eax << cl
 268 @ 1000378e  eax = not.d(eax)
 269 @ 10003790  [edi + 4].d = [edi + 4].d & eax
 270 @ 10003793  goto 192 @ 0x100037ff

 271 @ 1000399e  call([&data_100080ec].d)  {"ualAlloc"}
 272 @ 100039a4  eax = [esp + 0x18 {var_4}].d
 273 @ 100039a8  edi = pop
 274 @ 100039a9  esi = pop
 275 @ 100039aa  ebp = pop
 276 @ 100039ab  eax = eax + 8
 277 @ 100039ae  ebx = pop
 278 @ 100039af  esp = esp + 0xc
 279 @ 100039b2  <return> jump(pop)

 280 @ 1000395a  if (ecx u< edi) then 271 @ 0x1000399e else 295 @ 0x1000395c

 281 @ 10003930  ecx = esi
 282 @ 10003932  ecx = ecx u>> 0x1f
 283 @ 10003935  ebp = eax + (ecx << 2) + 0x10
 284 @ 10003939  ecx = [ebp].d
 285 @ 1000393c  esi = esi + esi
 286 @ 10003940  if (ecx == 0) then 308 @ 0x10003981 else 309 @ 0x10003942

 287 @ 100037b9  if (ebp == 0) then 192 @ 0x100037ff else 264 @ 0x100037be

 288 @ 100037a4  [eax + 0x14].d = ebp
 289 @ 100037a7  goto 287 @ 0x100037b9

 290 @ 1000379f  [eax + 0x10].d = ebp
 291 @ 100037a2  goto 287 @ 0x100037b9

 292 @ 100037c0  [ebp + 0x18].d = eax
 293 @ 100037c3  eax = [esi + 0x10].d
 294 @ 100037c8  if (eax == 0) then 313 @ 0x100037e1 else 315 @ 0x100037cd

 295 @ 1000395c  [ecx + 0xc].d = ebx
 296 @ 1000395f  [eax + 8].d = ebx
 297 @ 10003962  edi = pop
 298 @ 10003963  [ebx + 0xc].d = eax
 299 @ 10003966  eax = [esp + 0x14 {var_4}].d
 300 @ 1000396a  esi = pop
 301 @ 1000396b  ebp = pop
 302 @ 1000396c  [ebx + 8].d = ecx
 303 @ 1000396f  [ebx + 0x18].d = 0
 304 @ 10003976  eax = eax + 8
 305 @ 10003979  ebx = pop
 306 @ 1000397a  esp = esp + 0xc
 307 @ 1000397d  <return> jump(pop)

 308 @ 10003981  if (ebp u< [edi + 0x10].d) then 271 @ 0x1000399e else 316 @ 0x10003983

 309 @ 10003942  eax = ecx
 310 @ 10003944  ecx = [eax + 4].d
 311 @ 10003947  ecx = ecx & 0xfffffff8
 312 @ 1000394c  if (ecx != edx) then 281 @ 0x10003930 else 254 @ 0x1000394e

 313 @ 100037e1  eax = [esi + 0x14].d
 314 @ 100037e6  if (eax == 0) then 192 @ 0x100037ff else 328 @ 0x100037eb

 315 @ 100037cd  if (eax u< [edi + 0x10].d) then 329 @ 0x100037d7 else 332 @ 0x100037cf

 316 @ 10003983  [ebp].d = ebx
 317 @ 10003986  edi = pop
 318 @ 10003987  [ebx + 0x18].d = eax
 319 @ 1000398a  eax = [esp + 0x14 {var_4}].d
 320 @ 1000398e  esi = pop
 321 @ 1000398f  ebp = pop
 322 @ 10003990  [ebx + 0xc].d = ebx
 323 @ 10003993  [ebx + 8].d = ebx
 324 @ 10003996  eax = eax + 8
 325 @ 10003999  ebx = pop
 326 @ 1000399a  esp = esp + 0xc
 327 @ 1000399d  <return> jump(pop)

 328 @ 100037eb  if (eax u< [edi + 0x10].d) then 228 @ 0x100037f5 else 335 @ 0x100037ed

 329 @ 100037d7  call([&data_100080ec].d)  {"ualAlloc"}
 330 @ 100037dd  edx = [esp + 0x20 {arg4}].d
 331 @ 100037dd  goto 313 @ 0x100037e1

 332 @ 100037cf  [ebp + 0x10].d = eax
 333 @ 100037d2  [eax + 0x18].d = ebp
 334 @ 100037d5  goto 313 @ 0x100037e1

 335 @ 100037ed  [ebp + 0x14].d = eax
 336 @ 100037f0  [eax + 0x18].d = ebp
 337 @ 100037f3  goto 192 @ 0x100037ff

1000392a                                8d 9b 00 00 00 00                                                            ......
100039b3                                                           cc cc cc cc cc cc cc cc cc cc cc cc cc                     .............

100039c0  void* __convention("regparm") sub_100039c0(void* arg1)

   0 @ 100039c0  eax = eax + 0x28
   1 @ 100039c3  ecx = 0x20
   2 @ 100039c8  goto 3 @ 0x100039d0

   3 @ 100039d0  [eax + 0xc].d = eax
   4 @ 100039d3  [eax + 8].d = eax
   5 @ 100039d6  eax = eax + 8
   6 @ 100039d9  temp0.d = ecx
   7 @ 100039d9  ecx = ecx - 1
   8 @ 100039dc  if (temp0.d != 1) then 3 @ 0x100039d0 else 9 @ 0x100039de

   9 @ 100039de  <return> jump(pop)

100039ca                                8d 9b 00 00 00 00                                                            ......
100039df                                                                                               cc                                 .

100039e0  int32_t __convention("fastcall") sub_100039e0(void* arg1, int32_t arg2, void* arg3 @ esi)

   0 @ 100039e0  eax = ecx
   1 @ 100039e2  eax = eax & 7
   2 @ 100039e5  if (eax == 0) then 3 @ 0x100039ec else 14 @ 0x100039e7

   3 @ 100039ec  ecx = ecx + eax
   4 @ 100039ee  edx = edx - eax
   5 @ 100039f0  eax = edx
   6 @ 100039f2  [esi + 0x18].d = ecx
   7 @ 100039f5  [esi + 0xc].d = edx
   8 @ 100039f8  eax = eax | 1
   9 @ 100039fb  [ecx + 4].d = eax
  10 @ 100039fe  [ecx + edx + 4].d = 0x28
  11 @ 10003a06  ecx = [&data_10009f2c].d
  12 @ 10003a0c  [esi + 0x1c].d = ecx
  13 @ 10003a0f  <return> jump(pop)

  14 @ 100039e7  eax = neg.d(eax)
  15 @ 100039e9  eax = eax & 7
  16 @ 100039e9  goto 3 @ 0x100039ec


10003a10  void __convention("regparm") sub_10003a10(void* const arg1, int32_t arg2)

   0 @ 10003a10  ecx = [eax + 4].d
   1 @ 10003a13  push(esi)
   2 @ 10003a14  esi = edx
   3 @ 10003a16  esi = esi & 0xfffffff8
   4 @ 10003a19  ecx = ecx & 0xfffffff8
   5 @ 10003a22  if (esi u< 0x100) then 6 @ 0x10003a39 else 8 @ 0x10003a24

   6 @ 10003a39  eax = 0
   7 @ 10003a39  goto 10 @ 0x10003a3b

   8 @ 10003a24  esi = edx + 4
   9 @ 10003a29  if (ecx u< esi) then 6 @ 0x10003a39 else 12 @ 0x10003a2b

  10 @ 10003a3b  esi = pop
  11 @ 10003a3c  <return> jump(pop)

  12 @ 10003a2b  ecx = ecx - edx
  13 @ 10003a2d  edx = [&data_10009f24].d
  14 @ 10003a33  edx = edx + edx
  15 @ 10003a37  if (ecx u<= edx) then 10 @ 0x10003a3b else 6 @ 0x10003a39

10003a3d                                                                                         cc cc cc                               ...

10003a40  void* __convention("regparm") sub_10003a40(void* arg1, int32_t* arg2)

   0 @ 10003a40  ecx = [edx].d
   1 @ 10003a42  eax = eax + 0x1bc
   2 @ 10003a47  push(esi)
   3 @ 10003a47  goto 4 @ 0x10003a4a

   4 @ 10003a4a  if (eax u< ecx) then 5 @ 0x10003a55 else 7 @ 0x10003a4c

   5 @ 10003a55  eax = [eax + 8].d
   6 @ 10003a5a  if (eax != 0) then 4 @ 0x10003a4a else 10 @ 0x10003a5c

   7 @ 10003a4c  esi = [edx + 4].d
   8 @ 10003a4f  esi = esi + ecx
   9 @ 10003a53  if (eax u< esi) then 12 @ 0x10003a5e else 5 @ 0x10003a55

  10 @ 10003a5c  esi = pop
  11 @ 10003a5d  <return> jump(pop)

  12 @ 10003a5e  eax = 1
  13 @ 10003a63  esi = pop
  14 @ 10003a64  <return> jump(pop)

10003a65                 cc cc cc cc cc cc cc cc cc cc cc                                                       ...........

10003a70  int32_t* __convention("regparm") sub_10003a70(void* arg1, int32_t arg2)

   0 @ 10003a70  eax = eax + 0x1bc
   1 @ 10003a75  push(esi)
   2 @ 10003a75  goto 3 @ 0x10003a76

   3 @ 10003a76  ecx = [eax].d
   4 @ 10003a7a  if (edx u< ecx) then 5 @ 0x10003a85 else 7 @ 0x10003a7c

   5 @ 10003a85  eax = [eax + 8].d
   6 @ 10003a8a  if (eax != 0) then 3 @ 0x10003a76 else 10 @ 0x10003a8c

   7 @ 10003a7c  esi = [eax + 4].d
   8 @ 10003a7f  esi = esi + ecx
   9 @ 10003a83  if (edx u< esi) then 10 @ 0x10003a8c else 5 @ 0x10003a85

  10 @ 10003a8c  esi = pop
  11 @ 10003a8d  <return> jump(pop)

10003a8e                                            cc cc                                                                ..

10003a90  int32_t sub_10003a90(int32_t* arg1 @ esi)

   0 @ 10003a90  eax = [esi].d
   1 @ 10003a94  if (eax == 0) then 2 @ 0x10003aab else 8 @ 0x10003a96

   2 @ 10003aab  ecx = 1
   3 @ 10003ab0  edx = esi
   4 @ 10003ab2  temp0.d = [edx].d
   5 @ 10003ab2  [edx].d = ecx
   6 @ 10003ab2  ecx = temp0.d
   7 @ 10003ab6  if (ecx != 0) then 10 @ 0x10003ace else 12 @ 0x10003ab8

   8 @ 10003a96  call([&data_10008018].d)
   9 @ 10003a9f  if ([esi + 0x48].d != eax) then 10 @ 0x10003ace else 17 @ 0x10003aa1

  10 @ 10003ace  eax = 0
  11 @ 10003ad0  <return> jump(pop)

  12 @ 10003ab8  call([&data_10008018].d)
  13 @ 10003abe  [esi + 0x48].d = eax
  14 @ 10003ac1  [esi + 0x44].d = 1
  15 @ 10003ac8  eax = 1
  16 @ 10003acd  <return> jump(pop)

  17 @ 10003aa1  [esi + 0x44].d = [esi + 0x44].d + 1
  18 @ 10003aa5  eax = 1
  19 @ 10003aaa  <return> jump(pop)

10003ad1                                                     cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc                   ...............

10003ae0  void __convention("regparm") sub_10003ae0(int32_t* arg1)

   0 @ 10003ae0  temp1.d = [eax + 0x44].d
   1 @ 10003ae0  [eax + 0x44].d = [eax + 0x44].d - 1
   2 @ 10003ae4  if (temp1.d != 1) then 3 @ 0x10003af1 else 4 @ 0x10003ae6

   3 @ 10003af1  <return> jump(pop)

   4 @ 10003ae6  [eax + 0x48].d = 0
   5 @ 10003aed  ecx = 0
   6 @ 10003aef  temp0.d = [eax].d
   7 @ 10003aef  [eax].d = ecx
   8 @ 10003aef  ecx = temp0.d
   9 @ 10003aef  goto 3 @ 0x10003af1

10003af2                                                        cc cc cc cc cc cc cc cc cc cc cc cc cc cc                    ..............

10003b00  int32_t sub_10003b00(int32_t* arg1 @ esi)

   0 @ 10003b00  push(ebx)
   1 @ 10003b01  push(edi)
   2 @ 10003b02  edi = [&data_10008018].d
   3 @ 10003b08  ebx = 0
   4 @ 10003b0a  ebx = ebx
   5 @ 10003b0a  goto 6 @ 0x10003b10

   6 @ 10003b10  eax = [esi].d
   7 @ 10003b14  if (eax == 0) then 8 @ 0x10003b26 else 14 @ 0x10003b16

   8 @ 10003b26  ecx = 1
   9 @ 10003b2b  edx = esi
  10 @ 10003b2d  temp0.d = [edx].d
  11 @ 10003b2d  [edx].d = ecx
  12 @ 10003b2d  ecx = temp0.d
  13 @ 10003b31  if (ecx == 0) then 16 @ 0x10003b47 else 23 @ 0x10003b33

  14 @ 10003b16  call(edi)
  15 @ 10003b1b  if ([esi + 0x48].d != eax) then 23 @ 0x10003b33 else 25 @ 0x10003b1d

  16 @ 10003b47  call(edi)
  17 @ 10003b49  edi = pop
  18 @ 10003b4a  [esi + 0x48].d = eax
  19 @ 10003b4d  [esi + 0x44].d = 1
  20 @ 10003b54  eax = 0
  21 @ 10003b56  ebx = pop
  22 @ 10003b57  <return> jump(pop)

  23 @ 10003b33  ebx = ebx + 1
  24 @ 10003b39  if ((bl & 0x3f) != 0) then 6 @ 0x10003b10 else 30 @ 0x10003b3b

  25 @ 10003b1d  [esi + 0x44].d = [esi + 0x44].d + 1
  26 @ 10003b21  edi = pop
  27 @ 10003b22  eax = 0
  28 @ 10003b24  ebx = pop
  29 @ 10003b25  <return> jump(pop)

  30 @ 10003b3b  push(zx.d(0))
  31 @ 10003b3d  push(zx.d(0))
  32 @ 10003b3f  call([&data_10008020].d)
  33 @ 10003b45  goto 6 @ 0x10003b10

10003b58                                                                          cc cc cc cc cc cc cc cc                          ........

10003b60  int32_t __convention("regparm") sub_10003b60(int32_t arg1, int32_t arg2, int32_t arg3)

   0 @ 10003b60  esp = esp - 0x1c
   1 @ 10003b63  push(ebx)
   2 @ 10003b64  push(ebp)
   3 @ 10003b65  push(esi)
   4 @ 10003b66  push(edi)
   5 @ 10003b67  edi = eax
   6 @ 10003b69  cond:0 = edi == 0
   7 @ 10003b6b  esi = ecx
   8 @ 10003b6d  if (cond:0) then 9 @ 0x10003bc2 else 16 @ 0x10003b6f

   9 @ 10003bc2  edi = pop
  10 @ 10003bc3  esi = pop
  11 @ 10003bc4  ebp = pop
  12 @ 10003bc5  eax = 0
  13 @ 10003bc7  ebx = pop
  14 @ 10003bc8  esp = esp + 0x1c
  15 @ 10003bcb  <return> jump(pop)

  16 @ 10003b6f  ebp = [&data_10008014].d
  17 @ 10003b75  ebx = [&data_10008024[8]].d  {"aseNameA"}
  18 @ 10003b7b  goto 19 @ 0x10003b80

  19 @ 10003b80  push(zx.d(0x1c))
  20 @ 10003b82  eax = esp + 0x14
  21 @ 10003b86  push(eax)
  22 @ 10003b87  push(esi)
  23 @ 10003b88  call(ebp)
  24 @ 10003b8c  if (eax == 0) then 25 @ 0x10003bcc else 32 @ 0x10003b92

  25 @ 10003bcc  edi = pop
  26 @ 10003bcd  esi = pop
  27 @ 10003bce  ebp = pop
  28 @ 10003bcf  eax = eax | 0xffffffff
  29 @ 10003bd2  ebx = pop
  30 @ 10003bd3  esp = esp + 0x1c
  31 @ 10003bd6  <return> jump(pop)

  32 @ 10003b92  if ([esp + 0x10].d != esi) then 25 @ 0x10003bcc else 33 @ 0x10003b98

  33 @ 10003b98  if ([esp + 0x14].d != esi) then 25 @ 0x10003bcc else 34 @ 0x10003ba2

  34 @ 10003ba2  if ([esp + 0x20].d != 0x1000) then 25 @ 0x10003bcc else 35 @ 0x10003ba8

  35 @ 10003ba8  if ([esp + 0x1c].d u> edi) then 25 @ 0x10003bcc else 36 @ 0x10003baa

  36 @ 10003baa  push(0x8000)
  37 @ 10003baf  push(zx.d(0))
  38 @ 10003bb1  push(esi)
  39 @ 10003bb2  call(ebx)
  40 @ 10003bb6  if (eax == 0) then 25 @ 0x10003bcc else 41 @ 0x10003bb8

  41 @ 10003bb8  eax = [esp + 0x1c].d
  42 @ 10003bbc  esi = esi + eax
  43 @ 10003bbe  temp0.d = edi
  44 @ 10003bbe  edi = edi - eax
  45 @ 10003bc0  if (temp0.d != eax) then 19 @ 0x10003b80 else 9 @ 0x10003bc2

10003b7d                                                                                         8d 49 00                               .I.
10003bd7                                                                       cc cc cc cc cc cc cc cc cc                         .........

10003be0  int32_t __convention("regparm") sub_10003be0(int32_t arg1)

   0 @ 10003be0  push(zx.d(4))
   1 @ 10003be2  push(0x103000)
   2 @ 10003be7  push(eax)
   3 @ 10003be8  push(zx.d(0))
   4 @ 10003bea  call([&data_10008024[0x10]].d)
   5 @ 10003bf2  if (eax != 0) then 6 @ 0x10003bf7 else 7 @ 0x10003bf4

   6 @ 10003bf7  <return> jump(pop)

   7 @ 10003bf4  eax = eax | 0xffffffff
   8 @ 10003bf4  goto 6 @ 0x10003bf7

10003bf8                                                                          cc cc cc cc cc cc cc cc                          ........

10003c00  int32_t __convention("regparm") sub_10003c00(int32_t arg1)

   0 @ 10003c00  push(zx.d(4))
   1 @ 10003c02  push(0x3000)
   2 @ 10003c07  push(eax)
   3 @ 10003c08  push(zx.d(0))
   4 @ 10003c0a  call([&data_10008024[0x10]].d)
   5 @ 10003c12  if (eax != 0) then 6 @ 0x10003c17 else 7 @ 0x10003c14

   6 @ 10003c17  <return> jump(pop)

   7 @ 10003c14  eax = eax | 0xffffffff
   8 @ 10003c14  goto 6 @ 0x10003c17

10003c18                                                                          cc cc cc cc cc cc cc cc                          ........

10003c20  int32_t sub_10003c20(int32_t* arg1, void* arg2)

   0 @ 10003c20  edx = [esp + 8 {arg2}].d
   1 @ 10003c24  call(sub_10002e60)
   2 @ 10003c2b  if (eax == 0) then 3 @ 0x10003c45 else 5 @ 0x10003c2d

   3 @ 10003c45  eax = 0
   4 @ 10003c47  <return> jump(pop)

   5 @ 10003c2d  eax = [eax + 0x218].d
   6 @ 10003c35  if (eax == 0) then 3 @ 0x10003c45 else 7 @ 0x10003c37

   7 @ 10003c37  ecx = [esp + 4 {arg1}].d
   8 @ 10003c3d  if (ecx == 0) then 9 @ 0x10003c41 else 11 @ 0x10003c3f

   9 @ 10003c41  eax = [eax + 0x4c].d
  10 @ 10003c44  <return> jump(pop)

  11 @ 10003c3f  [ecx].d = eax
  12 @ 10003c3f  goto 9 @ 0x10003c41

10003c48                          cc cc cc cc cc cc cc cc                                                          ........

10003c50  void* sub_10003c50(void* arg1 @ edi, int32_t* arg2)

   0 @ 10003c50  push(ecx)
   1 @ 10003c51  ecx = [esp + 8 {arg2}].d
   2 @ 10003c55  push(ebx)
   3 @ 10003c56  push(ebp)
   4 @ 10003c57  push(esi)
   5 @ 10003c58  esi = [ecx].d
   6 @ 10003c5a  edx = esi
   7 @ 10003c5c  edx = edx u>> 4
   8 @ 10003c5f  ecx, eflags = _bit_scan_reverse(edx)
   9 @ 10003c62  ebx = ecx
  10 @ 10003c64  [esp + 0xc {var_4}].d = ecx
  11 @ 10003c68  ecx = ebx + 4
  12 @ 10003c6b  edx = 1
  13 @ 10003c70  edx = edx << cl
  14 @ 10003c72  eax = 0
  15 @ 10003c74  ebp = 0
  16 @ 10003c76  cond:0 = esi u< edx
  17 @ 10003c78  if (esi u<= edx) then 18 @ 0x10003c81 else 20 @ 0x10003c7a

  18 @ 10003c81  ecx = [edi + (ebx << 3) + 0x18].d
  19 @ 10003c85  if (cond:0) then 24 else 26 @ 0x10003c88

  20 @ 10003c7a  edx = edx + edx
  21 @ 10003c7c  ebx = ebx + 1
  22 @ 10003c7f  cond:0 = esi u< edx
  23 @ 10003c7f  goto 18 @ 0x10003c81

  24 @ 10003c85  esi = edx
  25 @ 10003c85  goto 26 @ 0x10003c88

  26 @ 10003c88  cond:1 = ecx == 0
  27 @ 10003c8a  edx = edi + (ebx << 3) + 0x18
  28 @ 10003c8e  if (cond:1) then 29 @ 0x10003c98 else 30 @ 0x10003c93

  29 @ 10003c98  if (ebx u>= 9) then 31 @ 0x10003ca0 else 33 @ 0x10003c9a

  30 @ 10003c93  if ([ecx + 8].d u>= esi) then 31 @ 0x10003ca0 else 29 @ 0x10003c98

  31 @ 10003ca0  ebx = 0
  32 @ 10003ca4  if (ecx == ebx) then 36 @ 0x10003cbe else 39 @ 0x10003ca6

  33 @ 10003c9a  ecx = [edx + 8].d
  34 @ 10003c9d  edx = edx + 8
  35 @ 10003c9d  goto 31 @ 0x10003ca0

  36 @ 10003cbe  ecx = 1
  37 @ 10003cc3  [edi + 8].d = [edi + 8].d + ecx
  38 @ 10003cc8  if (eax == ebx) then 43 @ 0x10003cdb else 50 @ 0x10003cca

  39 @ 10003ca6  eax = [ecx + 0xc].d
  40 @ 10003ca9  cond:2 = eax == ebx
  41 @ 10003cab  ebp = [ecx + 8].d
  42 @ 10003cae  if (cond:2) then 59 @ 0x10003cb3 else 62 @ 0x10003cb0

  43 @ 10003cdb  ecx = [esp + 0x14 {arg2}].d
  44 @ 10003cdf  [ecx].d = esi
  45 @ 10003ce1  esi = pop
  46 @ 10003ce2  ebp = pop
  47 @ 10003ce3  ebx = pop
  48 @ 10003ce4  ecx = pop
  49 @ 10003ce5  <return> jump(pop)

  50 @ 10003cca  edx = [esp + 0x14 {arg2}].d
  51 @ 10003cce  [edi + 0x10].d = [edi + 0x10].d + ecx
  52 @ 10003cd1  [edi + 0x14].d = [edi + 0x14].d - ebp
  53 @ 10003cd4  [edx].d = esi
  54 @ 10003cd6  esi = pop
  55 @ 10003cd7  ebp = pop
  56 @ 10003cd8  ebx = pop
  57 @ 10003cd9  ecx = pop
  58 @ 10003cda  <return> jump(pop)

  59 @ 10003cb3  cond:3 = eax != ebx
  60 @ 10003cb5  [edx].d = eax
  61 @ 10003cb7  if (cond:3) then 64 @ 0x10003cbc else 66 @ 0x10003cb9

  62 @ 10003cb0  [eax + 0x10].d = ebx
  63 @ 10003cb0  goto 59 @ 0x10003cb3

  64 @ 10003cbc  eax = ecx
  65 @ 10003cbc  goto 36 @ 0x10003cbe

  66 @ 10003cb9  [edx + 4].d = ebx
  67 @ 10003cb9  goto 64 @ 0x10003cbc

10003ce6                    cc cc cc cc cc cc cc cc cc cc                                                        ..........

10003cf0  int32_t sub_10003cf0(int32_t* arg1, void* arg2)

   0 @ 10003cf0  push(edi)
   1 @ 10003cf1  edi = [esp + 0xc {arg2}].d
   2 @ 10003cf7  if (edi == 0) then 3 @ 0x10003d36 else 6 @ 0x10003cf9

   3 @ 10003d36  eax = 0
   4 @ 10003d38  edi = pop
   5 @ 10003d39  <return> jump(pop)

   6 @ 10003cf9  push(esi)
   7 @ 10003cfa  esi = [esp + 0xc {arg1}].d
   8 @ 10003d00  if (esi == 0) then 9 @ 0x10003d08 else 12 @ 0x10003d02

   9 @ 10003d08  edx = edi
  10 @ 10003d0a  call(sub_10002e60)
  11 @ 10003d11  if (eax == 0) then 14 @ 0x10003d29 else 20 @ 0x10003d15

  12 @ 10003d02  [esi].d = 1
  13 @ 10003d02  goto 9 @ 0x10003d08

  14 @ 10003d29  push(edi)
  15 @ 10003d2a  call([&data_10009bd8].d)
  16 @ 10003d30  esp = esp + 4
  17 @ 10003d33  esi = pop
  18 @ 10003d34  edi = pop
  19 @ 10003d35  <return> jump(pop)

  20 @ 10003d15  if (esi == 0) then 21 @ 0x10003d1d else 27 @ 0x10003d17

  21 @ 10003d1d  eax = [edi - 4].d
  22 @ 10003d20  eax = eax & 0xfffffff8
  23 @ 10003d23  esi = pop
  24 @ 10003d24  eax = eax - 8
  25 @ 10003d27  edi = pop
  26 @ 10003d28  <return> jump(pop)

  27 @ 10003d17  [esi].d = 0
  28 @ 10003d17  goto 21 @ 0x10003d1d

10003d3a                                                                                cc cc cc cc cc cc                            ......

10003d40  int32_t __convention("regparm") sub_10003d40(void* arg1)

   0 @ 10003d40  ecx = [&data_10009f1c].d
   1 @ 10003d46  push(ebx)
   2 @ 10003d47  ebx = 0
   3 @ 10003d4c  if ([eax + 0x24].d != ecx) then 4 @ 0x10003d8a else 8 @ 0x10003d4e

   4 @ 10003d8a  call([&data_100080ec].d)  {"ualAlloc"}
   5 @ 10003d90  eax = ebx
   6 @ 10003d92  ebx = pop
   7 @ 10003d93  <return> jump(pop)

   8 @ 10003d4e  push(esi)
   9 @ 10003d4f  esi = eax + 0x1bc
  10 @ 10003d57  if (esi == 0) then 11 @ 0x10003d85 else 15 @ 0x10003d59

  11 @ 10003d85  esi = pop
  12 @ 10003d86  eax = ebx
  13 @ 10003d88  ebx = pop
  14 @ 10003d89  <return> jump(pop)

  15 @ 10003d59  push(edi)
  16 @ 10003d5a  ebx = ebx
  17 @ 10003d5a  goto 18 @ 0x10003d60

  18 @ 10003d60  eax = [esi + 0xc].d
  19 @ 10003d63  cond:0 = (al & 1) == 0
  20 @ 10003d65  ecx = [esi].d
  21 @ 10003d67  edi = [esi + 4].d
  22 @ 10003d6a  esi = [esi + 8].d
  23 @ 10003d6d  if (cond:0) then 24 @ 0x10003d82 else 25 @ 0x10003d71

  24 @ 10003d82  if (esi != 0) then 18 @ 0x10003d60 else 26 @ 0x10003d84

  25 @ 10003d71  if ((al & 8) != 0) then 24 @ 0x10003d82 else 28 @ 0x10003d73

  26 @ 10003d84  edi = pop
  27 @ 10003d84  goto 11 @ 0x10003d85

  28 @ 10003d73  eax = edi
  29 @ 10003d75  call(sub_10003b60)
  30 @ 10003d7c  if (eax != 0) then 24 @ 0x10003d82 else 31 @ 0x10003d7e

  31 @ 10003d7e  ebx = ebx + edi
  32 @ 10003d7e  goto 24 @ 0x10003d82

10003d94                                                              cc cc cc cc cc cc cc cc cc cc cc cc                      ............

10003da0  int32_t __convention("regparm") sub_10003da0(int32_t arg1) __noreturn

   0 @ 10003da0  push(ebp)
   1 @ 10003da1  push(esi)
   2 @ 10003da2  push(edi)
   3 @ 10003da3  edi = eax
   4 @ 10003da5  eax = eax & 7
   5 @ 10003da8  if (eax != 0) then 6 @ 0x10003dae else 10 @ 0x10003daa

   6 @ 10003dae  eax = neg.d(eax)
   7 @ 10003db0  eax = eax & 7
   8 @ 10003db3  ebp = eax
   9 @ 10003db3  goto 12 @ 0x10003db5

  10 @ 10003daa  ebp = 0
  11 @ 10003dac  goto 12 @ 0x10003db5

  12 @ 10003db5  push(0x228)
  13 @ 10003dba  esi = edi + ebp + 8
  14 @ 10003dbe  push(zx.d(0))
  15 @ 10003dc0  push(esi)
  16 @ 10003dc1  call(sub_10007938)
  17 @ 10003dc1  noreturn
{ Does not return }

10003dc6                    33 c0 89 86 14 02 00 00 89 86 10 02 00 00 89 86 cc 01 00 00 8b 0d 1c 9f 00 10        3.........................
10003de0  8b 15 30 9f 00 10 c7 44 2f 04 2b 02 00 00 83 c4 0c 83 ca 04 89 4e 24 89 86 18 02 00 00 89 86 1c  ..0....D/.+..........N$.........
10003e00  02 00 00 89 7e 10 89 be bc 01 00 00 89 9e b4 01 00 00 89 9e b0 01 00 00 89 9e c0 01 00 00 c7 46  ....~..........................F
10003e20  20 ff 0f 00 00 89 96 b8 01 00 00 8d 46 28 b9 20 00 00 00 89 40 0c 89 40 08 83 c0 08 83 e9 01 75   ...........F(. ....@..@.......u
10003e40  f2 8b 46 fc 83 e0 f8 8d 54 30 f8 2b fa 8b ca 83 e1 07 8d 44 1f d8 74 05 f7 d9 83 e1 07 03 d1 2b  ..F.....T0.+.......D..t........+
10003e60  c1 8b c8 89 56 18 89 46 0c 83 c9 01 89 4a 04 c7 44 02 04 28 00 00 00 8b 15 2c 9f 00 10 5f 89 56  ....V..F.....J..D..(.....,..._.V
10003e80  1c 8b c6 5e 5d c3 cc cc cc cc cc cc cc cc cc cc                                                  ...^]...........

10003e90  int32_t sub_10003e90()

   0 @ 10003e90  esp = esp - 0x20
   1 @ 10003e93  eax = ebx + 0x1bc
   2 @ 10003e99  edx = 0
   3 @ 10003e9b  [esp + 0x10 {i_2}].d = eax
   4 @ 10003e9f  eax = [eax + 8 {0x1c4}].d
   5 @ 10003ea2  cond:0 = eax == edx
   6 @ 10003ea4  [esp + 4 {var_1c}].d = edx
   7 @ 10003ea8  [esp + 8 {var_18}].d = edx
   8 @ 10003eac  [esp {i_1}].d = eax
   9 @ 10003eaf  if (cond:0) then 10 @ 0x10004151 else 12 @ 0x10003eb5

  10 @ 10004151  eax = 0xfff
  11 @ 10004151  goto 16 @ 0x10004156

  12 @ 10003eb5  push(ebp)
  13 @ 10003eb6  push(esi)
  14 @ 10003eb7  push(edi)
  15 @ 10003eb8  goto 20 @ 0x10003ec0

  16 @ 10004156  [ebx + 0x20 {0x20}].d = eax
  17 @ 10004159  eax = [esp + 4 {var_1c}].d
  18 @ 1000415d  esp = esp + 0x20
  19 @ 10004160  <return> jump(pop)

  20 @ 10003ec0  eax = [esp + 0xc {i_1}].d
  21 @ 10003ec4  edi = [eax].d
  22 @ 10003ec6  ebp = [eax + 4].d
  23 @ 10003ec9  ecx = [eax + 8].d
  24 @ 10003ecc  eax = [eax + 0xc].d
  25 @ 10003ecf  [esp + 0x14 {var_18}].d = [esp + 0x14 {var_18}].d + 1
  26 @ 10003ed4  cond:1 = (al & 1) == 0
  27 @ 10003ed6  [esp + 0x24 {var_8_1}].d = edi
  28 @ 10003eda  [esp + 0x18 {var_14_1}].d = ebp
  29 @ 10003ede  [esp + 0x20 {var_c_1}].d = ecx
  30 @ 10003ee2  if (cond:1) then 31 @ 0x10004129 else 38 @ 0x10003eea

  31 @ 10004129  edx = [esp + 0xc {i_1}].d
  32 @ 1000412d  eax = [esp + 0x20 {var_c_1}].d
  33 @ 10004131  [esp + 0x1c {i_2}].d = edx
  34 @ 10004135  edx = 0
  35 @ 10004137  cond:2 = eax != edx
  36 @ 10004139  [esp + 0xc {i_1}].d = eax
  37 @ 1000413d  if (cond:2) then 20 @ 0x10003ec0 else 39 @ 0x10004143

  38 @ 10003eea  if ((al & 8) != 0) then 31 @ 0x10004129 else 45 @ 0x10003ef0

  39 @ 10004143  eax = [esp + 0x14 {var_18}].d
  40 @ 10004147  cond:3 = eax s> 0xfff
  41 @ 1000414c  edi = pop
  42 @ 1000414d  esi = pop
  43 @ 1000414e  ebp = pop
  44 @ 1000414f  if (cond:3) then 16 @ 0x10004156 else 10 @ 0x10004151

  45 @ 10003ef0  eax = edi
  46 @ 10003ef2  eax = eax & 7
  47 @ 10003ef5  if (eax == 0) then 48 @ 0x10003efc else 56 @ 0x10003ef7

  48 @ 10003efc  esi = eax + edi
  49 @ 10003eff  eax = [esi + 4].d
  50 @ 10003f02  ecx = eax
  51 @ 10003f04  ecx = ecx & 0xfffffff8
  52 @ 10003f07  al = al & 3
  53 @ 10003f09  cond:4 = al != 1
  54 @ 10003f0b  [esp + 0x28 {var_4_1}].d = ecx
  55 @ 10003f0f  if (cond:4) then 31 @ 0x10004129 else 59 @ 0x10003f15

  56 @ 10003ef7  eax = neg.d(eax)
  57 @ 10003ef9  eax = eax & 7
  58 @ 10003ef9  goto 48 @ 0x10003efc

  59 @ 10003f15  eax = edi + ebp - 0x28
  60 @ 10003f19  ecx = ecx + esi
  61 @ 10003f1d  if (ecx u< eax) then 31 @ 0x10004129 else 62 @ 0x10003f26

  62 @ 10003f26  if (esi != [ebx + 0x14 {0x14}].d) then 63 @ 0x10003f33 else 67 @ 0x10003f28

  63 @ 10003f33  edi = [esi + 0xc].d
  64 @ 10003f36  cond:5 = edi == esi
  65 @ 10003f38  ebp = [esi + 0x18].d
  66 @ 10003f3b  if (cond:5) then 70 @ 0x10003f4d else 74 @ 0x10003f3d

  67 @ 10003f28  [ebx + 0x14 {0x14}].d = edx
  68 @ 10003f2b  [ebx + 8 {8}].d = edx
  69 @ 10003f2e  goto 76 @ 0x10004012

  70 @ 10003f4d  edi = [esi + 0x14].d
  71 @ 10003f50  cond:6 = edi != edx
  72 @ 10003f52  ecx = esi + 0x14
  73 @ 10003f55  if (cond:6) then 80 @ 0x10003f61 else 83 @ 0x10003f57

  74 @ 10003f3d  eax = [esi + 8].d
  75 @ 10003f43  if (eax u< [ebx + 0x10 {0x10}].d) then 87 @ 0x10003f80 else 89 @ 0x10003f45

  76 @ 10004012  eax = [esp + 0x18 {var_14_1}].d
  77 @ 10004016  ecx = [esp + 0x24 {var_8_1}].d
  78 @ 1000401a  call(sub_10003b60)
  79 @ 10004021  if (eax != 0) then 92 @ 0x10004045 else 96 @ 0x10004023

  80 @ 10003f61  cond:7 = [edi + 0x14].d != edx
  81 @ 10003f64  eax = edi + 0x14
  82 @ 10003f67  if (cond:7) then 104 @ 0x10003f71 else 107 @ 0x10003f69

  83 @ 10003f57  edi = [esi + 0x10].d
  84 @ 10003f5a  cond:8 = edi == edx
  85 @ 10003f5c  ecx = esi + 0x10
  86 @ 10003f5f  if (cond:8) then 110 @ 0x10003f88 else 80 @ 0x10003f61

  87 @ 10003f80  call([&data_100080ec].d)  {"ualAlloc"}
  88 @ 10003f80  goto 110 @ 0x10003f88

  89 @ 10003f45  [eax + 0xc].d = edi
  90 @ 10003f48  [edi + 8].d = eax
  91 @ 10003f4b  goto 110 @ 0x10003f88

  92 @ 10004045  ebp = [esp + 0x28 {var_4_1}].d
  93 @ 10004049  eax = ebp
  94 @ 1000404b  eax = eax u>> 8
  95 @ 1000404e  if (eax != 0) then 111 @ 0x10004059 else 112 @ 0x10004050

  96 @ 10004023  eax = [esp + 0x18 {var_14_1}].d
  97 @ 10004027  [esp + 0x10 {var_1c}].d = [esp + 0x10 {var_1c}].d + eax
  98 @ 1000402b  [ebx + 0x1b0 {0x1b0}].d = [ebx + 0x1b0 {0x1b0}].d - eax
  99 @ 10004031  eax = [esp + 0x1c {i_2}].d
 100 @ 10004035  ecx = [esp + 0x20 {var_c_1}].d
 101 @ 10004039  [esp + 0xc {i_1}].d = eax
 102 @ 1000403d  [eax + 8].d = ecx
 103 @ 10004040  goto 31 @ 0x10004129

 104 @ 10003f71  edi = [eax].d
 105 @ 10003f73  ecx = eax
 106 @ 10003f75  goto 80 @ 0x10003f61

 107 @ 10003f69  cond:9 = [edi + 0x10].d == edx
 108 @ 10003f6c  eax = edi + 0x10
 109 @ 10003f6f  if (cond:9) then 114 @ 0x10003f7a else 104 @ 0x10003f71

 110 @ 10003f88  if (ebp == 0) then 76 @ 0x10004012 else 115 @ 0x10003f8e

 111 @ 10004059  if (eax u<= 0xffff) then 119 @ 0x10004062 else 128 @ 0x1000405b

 112 @ 10004050  ecx = 0
 113 @ 10004052  goto 130 @ 0x10004078

 114 @ 10003f7a  if (ecx u< [ebx + 0x10 {0x10}].d) then 87 @ 0x10003f80 else 139 @ 0x10003f7c

 115 @ 10003f8e  ecx = [esi + 0x1c].d
 116 @ 10003f91  cond:10 = esi != [ebx + (ecx << 2) + 0x130].d
 117 @ 10003f98  eax = ebx + (ecx << 2) + 0x130
 118 @ 10003f9f  if (cond:10) then 141 @ 0x10003fbb else 142 @ 0x10003fa1

 119 @ 10004062  edx, eflags = _bit_scan_reverse(eax)
 120 @ 10004065  eax = edx
 121 @ 10004067  [esp + 0x28 {var_4_2}].d = edx
 122 @ 1000406b  ecx = eax + 7
 123 @ 1000406e  edx = ebp
 124 @ 10004070  edx = edx u>> cl
 125 @ 10004072  edx = edx & 1
 126 @ 10004075  ecx = edx + (eax << 1)
 127 @ 10004075  goto 130 @ 0x10004078

 128 @ 1000405b  ecx = 0x1f
 129 @ 10004060  goto 130 @ 0x10004078

 130 @ 10004078  eax = 0
 131 @ 1000407a  [esi + 0x14].d = eax
 132 @ 1000407d  [esi + 0x10].d = eax
 133 @ 10004080  eax = 1
 134 @ 10004085  eax = eax << cl
 135 @ 10004087  [esi + 0x1c].d = ecx
 136 @ 1000408a  edi = [ebx + 4 {4}].d
 137 @ 1000408d  edx = ebx + (ecx << 2) + 0x130
 138 @ 10004096  if ((edi & eax) != 0) then 145 @ 0x100040ad else 148 @ 0x10004098

 139 @ 10003f7c  [ecx].d = edx
 140 @ 10003f7e  goto 110 @ 0x10003f88

 141 @ 10003fbb  if (ebp u< [ebx + 0x10 {0x10}].d) then 155 @ 0x10003fcc else 157 @ 0x10003fc0

 142 @ 10003fa1  cond:11 = edi != 0
 143 @ 10003fa3  [eax].d = edi
 144 @ 10003fa5  if (cond:11) then 158 @ 0x10003fd9 else 159 @ 0x10003fa7

 145 @ 100040ad  cond:12 = ecx != 0x1f
 146 @ 100040b0  eax = [edx].d
 147 @ 100040b2  if (cond:12) then 165 @ 0x100040b8 else 169 @ 0x100040b4

 148 @ 10004098  eax = eax | edi
 149 @ 1000409a  [ebx + 4 {4}].d = eax
 150 @ 1000409d  [edx].d = esi
 151 @ 1000409f  [esi + 0x18].d = edx
 152 @ 100040a2  [esi + 0xc].d = esi
 153 @ 100040a5  [esi + 8].d = esi
 154 @ 100040a8  goto 31 @ 0x10004129

 155 @ 10003fcc  call([&data_100080ec].d)  {"ualAlloc"}
 156 @ 10003fcc  goto 171 @ 0x10003fd4

 157 @ 10003fc0  if ([ebp + 0x10].d != esi) then 172 @ 0x10003fc7 else 174 @ 0x10003fc2

 158 @ 10003fd9  if (edi u< [ebx + 0x10 {0x10}].d) then 176 @ 0x1000400c else 178 @ 0x10003fdb

 159 @ 10003fa7  ecx = [esi + 0x1c].d
 160 @ 10003faa  edx = 1
 161 @ 10003faf  edx = edx << cl
 162 @ 10003fb1  edx = not.d(edx)
 163 @ 10003fb3  [ebx + 4 {4}].d = [ebx + 4 {4}].d & edx
 164 @ 10003fb6  goto 76 @ 0x10004012

 165 @ 100040b8  ecx = ecx u>> 1
 166 @ 100040ba  edi = 0x19
 167 @ 100040bf  edi = edi - ecx
 168 @ 100040bf  goto 181 @ 0x100040c1

 169 @ 100040b4  edi = 0
 170 @ 100040b6  goto 181 @ 0x100040c1

 171 @ 10003fd4  if (edi == 0) then 76 @ 0x10004012 else 158 @ 0x10003fd9

 172 @ 10003fc7  [ebp + 0x14].d = edi
 173 @ 10003fca  goto 171 @ 0x10003fd4

 174 @ 10003fc2  [ebp + 0x10].d = edi
 175 @ 10003fc5  goto 171 @ 0x10003fd4

 176 @ 1000400c  call([&data_100080ec].d)  {"ualAlloc"}
 177 @ 1000400c  goto 76 @ 0x10004012

 178 @ 10003fdb  [edi + 0x18].d = ebp
 179 @ 10003fde  eax = [esi + 0x10].d
 180 @ 10003fe3  if (eax == 0) then 187 @ 0x10003ff8 else 189 @ 0x10003fe8

 181 @ 100040c1  ecx = edi
 182 @ 100040c3  edx = ebp
 183 @ 100040c5  edx = edx << cl
 184 @ 100040c7  ecx = [eax + 4].d
 185 @ 100040ca  ecx = ecx & 0xfffffff8
 186 @ 100040cf  if (ecx == ebp) then 190 @ 0x100040ee else 194 @ 0x100040d1

 187 @ 10003ff8  eax = [esi + 0x14].d
 188 @ 10003ffd  if (eax == 0) then 76 @ 0x10004012 else 200 @ 0x10004002

 189 @ 10003fe8  if (eax u< [ebx + 0x10 {0x10}].d) then 201 @ 0x10003ff2 else 203 @ 0x10003fea

 190 @ 100040ee  edx = [ebx + 0x10 {0x10}].d
 191 @ 100040f1  cond:13 = eax u< edx
 192 @ 100040f3  ecx = [eax + 8].d
 193 @ 100040f6  if (cond:13) then 206 @ 0x10004123 else 208 @ 0x100040fa

 194 @ 100040d1  ecx = edx
 195 @ 100040d3  ecx = ecx u>> 0x1f
 196 @ 100040d6  edi = eax + (ecx << 2) + 0x10
 197 @ 100040da  ecx = [edi].d
 198 @ 100040dc  edx = edx + edx
 199 @ 100040e0  if (ecx == 0) then 209 @ 0x10004114 else 210 @ 0x100040e2

 200 @ 10004002  if (eax u< [ebx + 0x10 {0x10}].d) then 176 @ 0x1000400c else 214 @ 0x10004004

 201 @ 10003ff2  call([&data_100080ec].d)  {"ualAlloc"}
 202 @ 10003ff2  goto 187 @ 0x10003ff8

 203 @ 10003fea  [edi + 0x10].d = eax
 204 @ 10003fed  [eax + 0x18].d = edi
 205 @ 10003ff0  goto 187 @ 0x10003ff8

 206 @ 10004123  call([&data_100080ec].d)  {"ualAlloc"}
 207 @ 10004123  goto 31 @ 0x10004129

 208 @ 100040fa  if (ecx u< edx) then 206 @ 0x10004123 else 217 @ 0x100040fc

 209 @ 10004114  if (edi u< [ebx + 0x10 {0x10}].d) then 206 @ 0x10004123 else 223 @ 0x10004116

 210 @ 100040e2  eax = ecx
 211 @ 100040e4  ecx = [eax + 4].d
 212 @ 100040e7  ecx = ecx & 0xfffffff8
 213 @ 100040ec  if (ecx != ebp) then 194 @ 0x100040d1 else 190 @ 0x100040ee

 214 @ 10004004  [edi + 0x14].d = eax
 215 @ 10004007  [eax + 0x18].d = edi
 216 @ 1000400a  goto 76 @ 0x10004012

 217 @ 100040fc  [ecx + 0xc].d = esi
 218 @ 100040ff  [eax + 8].d = esi
 219 @ 10004102  [esi + 8].d = ecx
 220 @ 10004105  [esi + 0xc].d = eax
 221 @ 10004108  [esi + 0x18].d = 0
 222 @ 1000410f  goto 31 @ 0x10004129

 223 @ 10004116  [edi].d = esi
 224 @ 10004118  [esi + 0x18].d = eax
 225 @ 1000411b  [esi + 0xc].d = esi
 226 @ 1000411e  [esi + 8].d = esi
 227 @ 10004121  goto 31 @ 0x10004129

10003eba                                                                                8d 9b 00 00 00 00                            ......
10004161     cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc                                                   ...............

10004170  void __convention("regparm") sub_10004170(int32_t* arg1, void* arg2, int32_t arg3, int32_t arg4)

   0 @ 10004170  esp = esp - 8
   1 @ 10004173  push(ebx)
   2 @ 10004174  ebx = [esp + 0x10 {arg2}].d
   3 @ 10004178  push(ebp)
   4 @ 10004179  push(esi)
   5 @ 1000417a  esi = [eax + 0x18].d
   6 @ 1000417d  push(edi)
   7 @ 1000417e  ecx = eax + 0x1bc
   8 @ 1000417e  goto 9 @ 0x10004184

   9 @ 10004184  edx = [ecx].d
  10 @ 10004188  if (esi u< edx) then 11 @ 0x10004193 else 13 @ 0x1000418a

  11 @ 10004193  ecx = [ecx + 8].d
  12 @ 10004198  if (ecx != 0) then 9 @ 0x10004184 else 16 @ 0x1000419a

  13 @ 1000418a  edi = [ecx + 4].d
  14 @ 1000418d  edi = edi + edx
  15 @ 10004191  if (esi u< edi) then 16 @ 0x1000419a else 11 @ 0x10004193

  16 @ 1000419a  edx = [ecx + 4].d
  17 @ 1000419d  edx = edx + [ecx].d
  18 @ 1000419f  [esp + 0x10 {var_8}].d = edx
  19 @ 100041a3  edx = edx - 0x2f
  20 @ 100041a6  ecx = edx
  21 @ 100041a8  ecx = ecx & 7
  22 @ 100041ab  if (ecx == 0) then 23 @ 0x100041b2 else 26 @ 0x100041ad

  23 @ 100041b2  edi = ecx + edx
  24 @ 100041b5  ecx = esi + 0x10
  25 @ 100041ba  if (edi u>= ecx) then 29 @ 0x100041be else 36 @ 0x100041bc

  26 @ 100041ad  ecx = neg.d(ecx)
  27 @ 100041af  ecx = ecx & 7
  28 @ 100041af  goto 23 @ 0x100041b2

  29 @ 100041be  edx = [esp + 0x20 {arg3}].d
  30 @ 100041c2  ebp = ebx
  31 @ 100041c4  edx = edx - 0x28
  32 @ 100041c7  ebp = ebp & 7
  33 @ 100041c7  cond:0 = ebp == 0
  34 @ 100041ca  ecx = edi + 8
  35 @ 100041cd  if (cond:0) then 38 @ 0x100041d4 else 73 @ 0x100041cf

  36 @ 100041bc  edi = esi
  37 @ 100041bc  goto 29 @ 0x100041be

  38 @ 100041d4  edx = edx - ebp
  39 @ 100041d6  [eax + 0xc].d = edx
  40 @ 100041d9  ebx = ebx + ebp
  41 @ 100041db  ebp = edx
  42 @ 100041dd  [eax + 0x18].d = ebx
  43 @ 100041e0  ebp = ebp | 1
  44 @ 100041e3  [ebx + 4].d = ebp
  45 @ 100041e6  [ebx + edx + 4].d = 0x28
  46 @ 100041ee  edx = [&data_10009f2c].d
  47 @ 100041f4  [eax + 0x1c].d = edx
  48 @ 100041f7  edx = [&data_10009f1c].d
  49 @ 100041fd  [edi + 4].d = 0x1b
  50 @ 10004204  edx = edx ^ eax
  51 @ 10004206  [edi + 0x18].d = edx
  52 @ 10004209  edx = [eax + 0x1bc].d
  53 @ 1000420f  [ecx].d = edx
  54 @ 10004211  edx = [eax + 0x1c0].d
  55 @ 10004217  ebx = [esp + 0x10 {var_8}].d
  56 @ 1000421b  [ecx + 4].d = edx
  57 @ 1000421e  edx = [eax + 0x1c4].d
  58 @ 10004224  [ecx + 8].d = edx
  59 @ 10004227  edx = [eax + 0x1c8].d
  60 @ 1000422d  [ecx + 0xc].d = edx
  61 @ 10004230  edx = [esp + 0x1c {arg2}].d
  62 @ 10004234  [eax + 0x1bc].d = edx
  63 @ 1000423a  edx = [esp + 0x20 {arg3}].d
  64 @ 1000423e  [eax + 0x1c0].d = edx
  65 @ 10004244  edx = [esp + 0x24 {arg4}].d
  66 @ 10004248  [eax + 0x1c4].d = ecx
  67 @ 1000424e  ecx = edi + 0x1c
  68 @ 10004251  [eax + 0x1c8].d = edx
  69 @ 10004257  edx = ecx + 4
  70 @ 1000425a  cond:1 = edx u>= ebx
  71 @ 1000425c  [ecx].d = 7
  72 @ 10004262  if (cond:1) then 76 @ 0x10004276 else 77 @ 0x10004264

  73 @ 100041cf  ebp = neg.d(ebp)
  74 @ 100041d1  ebp = ebp & 7
  75 @ 100041d1  goto 38 @ 0x100041d4

  76 @ 10004276  if (edi == esi) then 82 @ 0x1000435a else 88 @ 0x1000427c

  77 @ 10004264  ecx = ecx + 4
  78 @ 10004267  edx = edx + 4
  79 @ 1000426a  cond:2 = edx u< ebx
  80 @ 1000426c  [ecx].d = 7
  81 @ 10004272  if (cond:2) then 77 @ 0x10004264 else 76 @ 0x10004276

  82 @ 1000435a  edi = pop
  83 @ 1000435b  esi = pop
  84 @ 1000435c  ebp = pop
  85 @ 1000435d  ebx = pop
  86 @ 1000435e  esp = esp + 8
  87 @ 10004361  <return> jump(pop)

  88 @ 1000427c  edi = edi - esi
  89 @ 1000427e  [edi + esi + 4].d = [edi + esi + 4].d & 0xfffffffe
  90 @ 10004283  ecx = edi
  91 @ 10004285  ecx = ecx | 1
  92 @ 10004288  [esi + 4].d = ecx
  93 @ 1000428b  ecx = edi
  94 @ 1000428d  ecx = ecx u>> 3
  95 @ 10004290  cond:3 = ecx u>= 0x20
  96 @ 10004293  [edi + esi].d = edi
  97 @ 10004296  if (cond:3) then 98 @ 0x100042fb else 101 @ 0x10004298

  98 @ 100042fb  ecx = edi
  99 @ 100042fd  ecx = ecx u>> 8
 100 @ 10004300  if (ecx != 0) then 107 @ 0x1000430c else 108 @ 0x10004302

 101 @ 10004298  edx = 1
 102 @ 1000429d  edx = edx << cl
 103 @ 1000429f  edi = eax + (ecx << 3) + 0x28
 104 @ 100042a3  ecx = [eax].d
 105 @ 100042a5  ebx = edi
 106 @ 100042a9  if ((edx & ecx) != 0) then 110 @ 0x100042c3 else 112 @ 0x100042ab

 107 @ 1000430c  if (ecx u<= 0xffff) then 124 @ 0x10004315 else 132 @ 0x1000430e

 108 @ 10004302  ecx = 0
 109 @ 10004304  goto 134 @ 0x10004329

 110 @ 100042c3  ecx = [edi + 8].d
 111 @ 100042c9  if (ecx u< [eax + 0x10].d) then 144 @ 0x100042e1 else 155 @ 0x100042cb

 112 @ 100042ab  ecx = ecx | edx
 113 @ 100042ad  [eax].d = ecx
 114 @ 100042af  [edi + 8].d = esi
 115 @ 100042b2  [ebx + 0xc].d = esi
 116 @ 100042b5  [esi + 0xc].d = edi
 117 @ 100042b8  edi = pop
 118 @ 100042b9  [esi + 8].d = ebx
 119 @ 100042bc  esi = pop
 120 @ 100042bd  ebp = pop
 121 @ 100042be  ebx = pop
 122 @ 100042bf  esp = esp + 8
 123 @ 100042c2  <return> jump(pop)

 124 @ 10004315  edx, eflags = _bit_scan_reverse(ecx)
 125 @ 10004318  ecx = edx + 7
 126 @ 1000431b  ebx = edi
 127 @ 1000431d  ebx = ebx u>> cl
 128 @ 1000431f  [esp + 0x14 {var_4_1}].d = edx
 129 @ 10004323  ebx = ebx & 1
 130 @ 10004326  ecx = ebx + (edx << 1)
 131 @ 10004326  goto 134 @ 0x10004329

 132 @ 1000430e  ecx = 0x1f
 133 @ 10004313  goto 134 @ 0x10004329

 134 @ 10004329  edx = 0
 135 @ 1000432b  ebx = 1
 136 @ 10004330  ebx = ebx << cl
 137 @ 10004332  [esi + 0x1c].d = ecx
 138 @ 10004335  [esi + 0x14].d = edx
 139 @ 10004338  [esi + 0x10].d = edx
 140 @ 1000433b  edx = [eax + 4].d
 141 @ 1000433e  cond:4 = (ebx & edx) != 0
 142 @ 10004340  ebp = eax + (ecx << 2) + 0x130
 143 @ 10004347  if (cond:4) then 166 @ 0x10004362 else 169 @ 0x10004349

 144 @ 100042e1  call([&data_100080ec].d)  {"ualAlloc"}
 145 @ 100042e7  [edi + 8].d = esi
 146 @ 100042ea  [ebx + 0xc].d = esi
 147 @ 100042ed  [esi + 0xc].d = edi
 148 @ 100042f0  edi = pop
 149 @ 100042f1  [esi + 8].d = ebx
 150 @ 100042f4  esi = pop
 151 @ 100042f5  ebp = pop
 152 @ 100042f6  ebx = pop
 153 @ 100042f7  esp = esp + 8
 154 @ 100042fa  <return> jump(pop)

 155 @ 100042cb  [edi + 8].d = esi
 156 @ 100042ce  ebx = ecx
 157 @ 100042d0  [ebx + 0xc].d = esi
 158 @ 100042d3  [esi + 0xc].d = edi
 159 @ 100042d6  edi = pop
 160 @ 100042d7  [esi + 8].d = ebx
 161 @ 100042da  esi = pop
 162 @ 100042db  ebp = pop
 163 @ 100042dc  ebx = pop
 164 @ 100042dd  esp = esp + 8
 165 @ 100042e0  <return> jump(pop)

 166 @ 10004362  cond:5 = ecx != 0x1f
 167 @ 10004365  edx = [ebp].d
 168 @ 10004368  if (cond:5) then 176 @ 0x1000436e else 180 @ 0x1000436a

 169 @ 10004349  edx = edx | ebx
 170 @ 1000434b  [eax + 4].d = edx
 171 @ 1000434e  [ebp].d = esi
 172 @ 10004351  [esi + 0x18].d = ebp
 173 @ 10004354  [esi + 0xc].d = esi
 174 @ 10004357  [esi + 8].d = esi
 175 @ 10004357  goto 82 @ 0x1000435a

 176 @ 1000436e  ecx = ecx u>> 1
 177 @ 10004370  ebp = 0x19
 178 @ 10004375  ebp = ebp - ecx
 179 @ 10004375  goto 182 @ 0x10004377

 180 @ 1000436a  ebp = 0
 181 @ 1000436c  goto 182 @ 0x10004377

 182 @ 10004377  ecx = ebp
 183 @ 10004379  ebx = edi
 184 @ 1000437b  ebx = ebx << cl
 185 @ 1000437d  ecx = [edx + 4].d
 186 @ 10004380  ecx = ecx & 0xfffffff8
 187 @ 10004385  if (ecx == edi) then 188 @ 0x100043a5 else 192 @ 0x10004387

 188 @ 100043a5  eax = [eax + 0x10].d
 189 @ 100043a8  cond:6 = edx u< eax
 190 @ 100043aa  ecx = [edx + 8].d
 191 @ 100043ad  if (cond:6) then 198 @ 0x100043f4 else 204 @ 0x100043b1

 192 @ 10004387  ecx = ebx
 193 @ 10004389  ecx = ecx u>> 0x1f
 194 @ 1000438c  ebp = edx + (ecx << 2) + 0x10
 195 @ 10004390  ecx = [ebp].d
 196 @ 10004393  ebx = ebx + ebx
 197 @ 10004397  if (ecx == 0) then 205 @ 0x100043d1 else 206 @ 0x10004399

 198 @ 100043f4  edi = pop
 199 @ 100043f5  esi = pop
 200 @ 100043f6  ebp = pop
 201 @ 100043f7  ebx = pop
 202 @ 100043f8  esp = esp + 8
 203 @ 100043fb  jump([&data_100080ec].d)  {"ualAlloc"}

 204 @ 100043b1  if (ecx u< eax) then 198 @ 0x100043f4 else 210 @ 0x100043b3

 205 @ 100043d1  if (ebp u< [eax + 0x10].d) then 221 @ 0x100043e7 else 227 @ 0x100043d3

 206 @ 10004399  edx = ecx
 207 @ 1000439b  ecx = [edx + 4].d
 208 @ 1000439e  ecx = ecx & 0xfffffff8
 209 @ 100043a3  if (ecx != edi) then 192 @ 0x10004387 else 188 @ 0x100043a5

 210 @ 100043b3  [ecx + 0xc].d = esi
 211 @ 100043b6  [edx + 8].d = esi
 212 @ 100043b9  edi = pop
 213 @ 100043ba  [esi + 8].d = ecx
 214 @ 100043bd  [esi + 0xc].d = edx
 215 @ 100043c0  [esi + 0x18].d = 0
 216 @ 100043c7  esi = pop
 217 @ 100043c8  ebp = pop
 218 @ 100043c9  ebx = pop
 219 @ 100043ca  esp = esp + 8
 220 @ 100043cd  <return> jump(pop)

 221 @ 100043e7  edi = pop
 222 @ 100043e8  esi = pop
 223 @ 100043e9  ebp = pop
 224 @ 100043ea  ebx = pop
 225 @ 100043eb  esp = esp + 8
 226 @ 100043ee  jump([&data_100080ec].d)  {"ualAlloc"}

 227 @ 100043d3  [ebp].d = esi
 228 @ 100043d6  edi = pop
 229 @ 100043d7  [esi + 0x18].d = edx
 230 @ 100043da  [esi + 0xc].d = esi
 231 @ 100043dd  [esi + 8].d = esi
 232 @ 100043e0  esi = pop
 233 @ 100043e1  ebp = pop
 234 @ 100043e2  ebx = pop
 235 @ 100043e3  esp = esp + 8
 236 @ 100043e6  <return> jump(pop)

10004401     cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc                                                   ...............

10004410  void* __convention("regparm") sub_10004410(int32_t arg1, void* arg2 @ edi)

   0 @ 10004410  ecx = [&data_10009f24].d
   1 @ 10004416  push(ebx)
   2 @ 10004417  ebx = ecx + eax + 0x1e
   3 @ 1000441b  ecx = ecx - 1
   4 @ 1000441e  ecx = not.d(ecx)
   5 @ 10004420  ebx = ebx & ecx
   6 @ 10004424  if (ebx u<= eax) then 7 @ 0x100044a4 else 10 @ 0x10004426

   7 @ 100044a4  eax = 0
   8 @ 100044a6  ebx = pop
   9 @ 100044a7  <return> jump(pop)

  10 @ 10004426  push(zx.d(4))
  11 @ 10004428  push(0x103000)
  12 @ 1000442d  push(ebx)
  13 @ 1000442e  push(zx.d(0))
  14 @ 10004430  call([&data_10008024[0x10]].d)
  15 @ 10004438  if (eax == 0) then 7 @ 0x100044a4 else 16 @ 0x1000443d

  16 @ 1000443d  if (eax == -1) then 7 @ 0x100044a4 else 17 @ 0x1000443f

  17 @ 1000443f  push(esi)
  18 @ 10004440  esi = eax
  19 @ 10004442  esi = esi & 7
  20 @ 10004445  if (esi == 0) then 21 @ 0x1000444c else 36 @ 0x10004447

  21 @ 1000444c  edx = eax + esi
  22 @ 1000444f  [edx].d = esi
  23 @ 10004451  ecx = ebx
  24 @ 10004453  ecx = ecx - esi
  25 @ 10004455  esi = [&data_10009f1c].d
  26 @ 1000445b  ecx = ecx - 0x10
  27 @ 1000445e  [edx + 4].d = ecx
  28 @ 10004461  esi = esi ^ edi
  29 @ 10004463  [edx + ecx].d = esi
  30 @ 10004466  [edx + ecx + 4].d = 7
  31 @ 1000446e  [edx + ecx + 8].d = 0
  32 @ 10004476  ecx = [edi + 0x10].d
  33 @ 10004479  cond:0 = ecx == 0
  34 @ 1000447b  esi = pop
  35 @ 1000447c  if (cond:0) then 39 @ 0x10004482 else 41 @ 0x10004480

  36 @ 10004447  esi = neg.d(esi)
  37 @ 10004449  esi = esi & 7
  38 @ 10004449  goto 21 @ 0x1000444c

  39 @ 10004482  [edi + 0x10].d = eax
  40 @ 10004482  goto 42 @ 0x10004485

  41 @ 10004480  if (eax u>= ecx) then 42 @ 0x10004485 else 39 @ 0x10004482

  42 @ 10004485  [edi + 0x1b0].d = [edi + 0x1b0].d + ebx
  43 @ 1000448b  eax = [edi + 0x1b0].d
  44 @ 10004497  if (eax u<= [edi + 0x1b4].d) then 45 @ 0x1000449f else 48 @ 0x10004499

  45 @ 1000449f  eax = edx + 8
  46 @ 100044a2  ebx = pop
  47 @ 100044a3  <return> jump(pop)

  48 @ 10004499  [edi + 0x1b4].d = eax
  49 @ 10004499  goto 45 @ 0x1000449f

100044a8                          cc cc cc cc cc cc cc cc                                                          ........

100044b0  int32_t sub_100044b0()

   0 @ 100044b0  esp = esp - 0x24
   1 @ 100044b3  push(esi)
   2 @ 100044b4  esi = &data_1000e400
   3 @ 100044b9  call(sub_10003b00)
   4 @ 100044be  eax = [&data_10009f1c].d
   5 @ 100044c5  if (eax != 0) then 6 @ 0x10004527 else 12 @ 0x100044c7

   6 @ 10004527  eax = 1
   7 @ 1000452c  temp1.d = [&data_1000e444].d
   8 @ 1000452c  [&data_1000e444].d = [&data_1000e444].d - eax
   9 @ 1000452c  cond:0 = temp1.d != eax
  10 @ 10004532  esi = pop
  11 @ 10004533  if (cond:0) then 18 @ 0x10004548 else 20 @ 0x10004535

  12 @ 100044c7  ecx = esp + 4 {var_24}
  13 @ 100044cb  push(ecx)
  14 @ 100044cc  call([&data_10008010].d)
  15 @ 100044d2  esi = [esp + 8 {var_24}].d
  16 @ 100044d6  edx = esi - 1
  17 @ 100044db  if ((esi & edx) == 0) then 27 @ 0x100044e3 else 38 @ 0x100044dd

  18 @ 10004548  esp = esp + 0x24
  19 @ 1000454b  <return> jump(pop)

  20 @ 10004535  [&data_1000e448].d = 0
  21 @ 1000453f  ecx = 0
  22 @ 10004541  edx = &data_1000e400
  23 @ 10004546  temp0.d = [edx {&data_1000e400}].d
  24 @ 10004546  [edx {&data_1000e400}].d = ecx
  25 @ 10004546  ecx = temp0.d
  26 @ 10004546  goto 18 @ 0x10004548

  27 @ 100044e3  [&data_10009f24].d = 0x100000
  28 @ 100044ed  [&data_10009f20].d = esi
  29 @ 100044f3  [&data_10009f28].d = 0x40000
  30 @ 100044fd  [&data_10009f2c].d = 0x200000
  31 @ 10004507  [&data_10009f30].d = 7
  32 @ 10004511  call([&data_10008024[4]].d)  {"uleBaseNameA"}
  33 @ 10004517  eax = eax ^ 0x55555550
  34 @ 1000451c  eax = eax & 0xfffffff8
  35 @ 1000451f  eax = eax | 8
  36 @ 10004522  [&data_10009f1c].d = eax
  37 @ 10004522  goto 6 @ 0x10004527

  38 @ 100044dd  call([&data_100080ec].d)  {"ualAlloc"}
  39 @ 100044dd  goto 27 @ 0x100044e3

1000454c                                      cc cc cc cc                                                              ....

10004550  int32_t sub_10004550(int32_t arg1 @ esi)

   0 @ 10004550  eax = [&data_10009f1c].d
   1 @ 10004555  push(edi)
   2 @ 10004556  edi = 0
   3 @ 1000455a  if (eax != 0) then 4 @ 0x10004561 else 7 @ 0x1000455c

   4 @ 10004561  ecx = 0xfffffdb0
   5 @ 10004566  ecx = ecx - [&data_10009f20].d
   6 @ 1000456e  if (esi u>= ecx) then 9 @ 0x100045bf else 12 @ 0x10004570

   7 @ 1000455c  call(sub_100044b0)
   8 @ 1000455c  goto 4 @ 0x10004561

   9 @ 100045bf  eax = edi
  10 @ 100045c1  edi = pop
  11 @ 100045c2  <return> jump(pop)

  12 @ 10004570  cond:0 = esi == 0
  13 @ 10004572  eax = [&data_10009f24].d
  14 @ 10004577  ecx = eax
  15 @ 10004579  if (cond:0) then 16 @ 0x10004581 else 27 @ 0x1000457b

  16 @ 10004581  push(ebx)
  17 @ 10004582  ebx = eax + ecx - 1
  18 @ 10004586  eax = eax - 1
  19 @ 10004589  push(zx.d(4))
  20 @ 1000458b  eax = not.d(eax)
  21 @ 1000458d  push(0x3000)
  22 @ 10004592  ebx = ebx & eax
  23 @ 10004594  push(ebx)
  24 @ 10004595  push(zx.d(0))
  25 @ 10004597  call([&data_10008024[0x10]].d)
  26 @ 1000459f  if (eax == 0) then 29 @ 0x100045c3 else 33 @ 0x100045a4

  27 @ 1000457b  ecx = esi + 0x250
  28 @ 1000457b  goto 16 @ 0x10004581

  29 @ 100045c3  ebx = pop
  30 @ 100045c4  eax = edi
  31 @ 100045c6  edi = pop
  32 @ 100045c7  <return> jump(pop)

  33 @ 100045a4  if (eax == -1) then 29 @ 0x100045c3 else 34 @ 0x100045a6

  34 @ 100045a6  call(sub_10003da0)
  35 @ 100045a6  noreturn
{ Does not return }

100045ab                                   83 88 b8 01 00 00 02 5b c7 80 c8 01 00 00 01 00 00 00 5f c3                .......[.........._.
100045c8                          cc cc cc cc cc cc cc cc                                                          ........

100045d0  int32_t __convention("regparm") sub_100045d0(int32_t arg1, int32_t arg2, void* arg3)

   0 @ 100045d0  push(ecx)
   1 @ 100045d1  push(ebx)
   2 @ 100045d2  push(esi)
   3 @ 100045d3  esi = eax
   4 @ 100045d5  eax = [&data_10009f1c].d
   5 @ 100045da  push(edi)
   6 @ 100045db  edi = 0
   7 @ 100045dd  cond:0 = eax != 0
   8 @ 100045df  ebx = ecx
   9 @ 100045e1  [esp + 0xc {var_4}].d = edi
  10 @ 100045e5  if (cond:0) then 11 @ 0x100045ef else 12 @ 0x100045e7

  11 @ 100045ef  if (esi u>= -0x40) then 14 @ 0x1000469b else 22 @ 0x100045f5

  12 @ 100045e7  call(sub_100044b0)
  13 @ 100045e7  goto 11 @ 0x100045ef

  14 @ 1000469b  eax = 0
  15 @ 1000469d  cond:1 = edi != 0
  16 @ 1000469f  edi = pop
  17 @ 100046a0  esi = pop
  18 @ 100046a1  al = cond:1
  19 @ 100046a4  ebx = pop
  20 @ 100046a5  ecx = pop
  21 @ 100046a6  <return> jump(pop)

  22 @ 100045f5  push(ebp)
  23 @ 100045f6  ebp = [ebx + 0x18].d
  24 @ 100045fb  if (ebp == 0) then 25 @ 0x1000469a else 27 @ 0x10004601

  25 @ 1000469a  ebp = pop
  26 @ 1000469a  goto 14 @ 0x1000469b

  27 @ 10004601  eax = [ebx + 0xc].d
  28 @ 10004604  esi = esi + 0x28
  29 @ 10004609  if (eax u<= esi) then 30 @ 0x1000467e else 35 @ 0x1000460b

  30 @ 1000467e  call(sub_10003e90)
  31 @ 10004683  edi = [esp + 0x10 {var_4_1}].d
  32 @ 10004687  temp3.d = edi
  33 @ 10004687  edi = edi + eax
  34 @ 10004689  if (temp3.d != neg.d(eax)) then 25 @ 0x1000469a else 53 @ 0x1000468b

  35 @ 1000460b  ecx = [&data_10009f24].d
  36 @ 10004611  eax = eax - esi
  37 @ 10004613  eax = eax + ecx - 1
  38 @ 10004617  edx = 0
  39 @ 10004619  temp2.d = ecx
  40 @ 10004619  temp0.d = divu.dp.d(edx:eax, temp2.d)
  41 @ 10004619  temp1.d = modu.dp.d(edx:eax, temp2.d)
  42 @ 10004619  eax = temp0.d
  43 @ 10004619  edx = temp1.d
  44 @ 1000461b  edx = ebp
  45 @ 1000461d  edi = eax
  46 @ 1000461f  edi = edi - 1
  47 @ 10004622  eax = ebx
  48 @ 10004624  edi = edi * ecx
  49 @ 10004627  call(sub_10003a70)
  50 @ 1000462c  esi = eax
  51 @ 1000462e  eax = [esi + 0xc].d
  52 @ 10004633  if ((al & 8) != 0) then 30 @ 0x1000467e else 55 @ 0x10004637

  53 @ 1000468b  ecx = [ebx + 0xc].d
  54 @ 10004691  if (ecx u<= [ebx + 0x1c].d) then 25 @ 0x1000469a else 56 @ 0x10004693

  55 @ 10004637  if ((al & 1) == 0) then 30 @ 0x1000467e else 58 @ 0x10004639

  56 @ 10004693  [ebx + 0x1c].d = -1
  57 @ 10004693  goto 25 @ 0x1000469a

  58 @ 10004639  ebp = [esi + 4].d
  59 @ 1000463e  if (ebp u< edi) then 30 @ 0x1000467e else 60 @ 0x10004640

  60 @ 10004640  edx = esi
  61 @ 10004642  eax = ebx
  62 @ 10004644  call(sub_10003a40)
  63 @ 1000464b  if (eax != 0) then 30 @ 0x1000467e else 64 @ 0x1000464d

  64 @ 1000464d  ecx = [esi].d
  65 @ 1000464f  ebp = ebp - edi
  66 @ 10004651  ecx = ecx + ebp
  67 @ 10004653  eax = edi
  68 @ 10004655  call(sub_10003b60)
  69 @ 1000465c  if (eax != 0) then 30 @ 0x1000467e else 70 @ 0x1000465e

  70 @ 1000465e  cond:2 = edi == 0
  71 @ 10004660  [esp + 0x10 {var_4_1}].d = edi
  72 @ 10004664  if (cond:2) then 30 @ 0x1000467e else 73 @ 0x10004666

  73 @ 10004666  [esi + 4].d = [esi + 4].d - edi
  74 @ 10004669  edx = [ebx + 0xc].d
  75 @ 1000466c  ecx = [ebx + 0x18].d
  76 @ 1000466f  [ebx + 0x1b0].d = [ebx + 0x1b0].d - edi
  77 @ 10004675  edx = edx - edi
  78 @ 10004677  esi = ebx
  79 @ 10004679  call(sub_100039e0)
  80 @ 10004679  goto 30 @ 0x1000467e

100046a7                       cc cc cc cc cc cc cc cc cc                                                         .........

100046b0  void* __convention("regparm") sub_100046b0(int32_t* arg1, int32_t arg2)

   0 @ 100046b0  push(ebx)
   1 @ 100046b1  push(esi)
   2 @ 100046b2  esi = eax
   3 @ 100046b4  eax = [&data_10009f1c].d
   4 @ 100046b9  cond:0 = eax != 0
   5 @ 100046bb  push(edi)
   6 @ 100046bc  if (cond:0) then 7 @ 0x100046c3 else 10 @ 0x100046be

   7 @ 100046c3  cond:1 = ([esi + 0x1b8].b & 1) == 0
   8 @ 100046ca  ebx = [esp + 0x10 {arg2}].d
   9 @ 100046ce  if (cond:1) then 12 @ 0x100046ef else 19 @ 0x100046d6

  10 @ 100046be  call(sub_100044b0)
  11 @ 100046be  goto 7 @ 0x100046c3

  12 @ 100046ef  eax = [&data_10009f24].d
  13 @ 100046f4  push(ebp)
  14 @ 100046f5  ebp = eax + ebx + 0x2f
  15 @ 100046f9  eax = eax - 1
  16 @ 100046fc  eax = not.d(eax)
  17 @ 100046fe  ebp = ebp & eax
  18 @ 10004702  if (ebp u<= ebx) then 20 @ 0x100048cc else 23 @ 0x10004708

  19 @ 100046d6  if (ebx u< [&data_10009f28].d) then 12 @ 0x100046ef else 30 @ 0x100046dc

  20 @ 100048cc  eax = 0
  21 @ 100048ce  ebp = pop
  22 @ 100048ce  goto 31 @ 0x100048cf

  23 @ 10004708  push(zx.d(4))
  24 @ 1000470a  push(0x3000)
  25 @ 1000470f  push(ebp)
  26 @ 10004710  push(zx.d(0))
  27 @ 10004712  call([&data_10008024[0x10]].d)
  28 @ 10004718  edx = eax
  29 @ 1000471c  if (edx == 0) then 20 @ 0x100048cc else 35 @ 0x10004725

  30 @ 100046dc  if ([esi + 0xc].d == 0) then 12 @ 0x100046ef else 36 @ 0x100046de

  31 @ 100048cf  edi = pop
  32 @ 100048d0  esi = pop
  33 @ 100048d1  ebx = pop
  34 @ 100048d2  <return> jump(pop)

  35 @ 10004725  if (edx == -1) then 20 @ 0x100048cc else 40 @ 0x1000472b

  36 @ 100046de  eax = ebx
  37 @ 100046e0  edi = esi
  38 @ 100046e2  call(sub_10004410)
  39 @ 100046e9  if (eax != 0) then 31 @ 0x100048cf else 12 @ 0x100046ef

  40 @ 1000472b  [esi + 0x1b0].d = [esi + 0x1b0].d + ebp
  41 @ 10004731  eax = [esi + 0x1b0].d
  42 @ 1000473d  if (eax u<= [esi + 0x1b4].d) then 43 @ 0x10004745 else 45 @ 0x1000473f

  43 @ 10004745  ebx = [esi + 0x18].d
  44 @ 1000474a  if (ebx != 0) then 47 @ 0x100047e0 else 49 @ 0x10004750

  45 @ 1000473f  [esi + 0x1b4].d = eax
  46 @ 1000473f  goto 43 @ 0x10004745

  47 @ 100047e0  ecx = esi + 0x1bc
  48 @ 100047e8  if (ecx == 0) then 51 @ 0x10004803 else 52 @ 0x100047ea

  49 @ 10004750  eax = [esi + 0x10].d
  50 @ 10004755  if (eax == 0) then 54 @ 0x1000475b else 56 @ 0x10004759

  51 @ 10004803  if (edx u>= [esi + 0x10].d) then 57 @ 0x10004808 else 59 @ 0x10004805

  52 @ 100047ea  ebx = ebx
  53 @ 100047ea  goto 61 @ 0x100047f0

  54 @ 1000475b  [esi + 0x10].d = edx
  55 @ 1000475b  goto 64 @ 0x1000475e

  56 @ 10004759  if (edx u>= eax) then 64 @ 0x1000475e else 54 @ 0x1000475b

  57 @ 10004808  eax = esi + 0x1bc
  58 @ 10004810  if (eax == 0) then 74 @ 0x10004824 else 81 @ 0x10004812

  59 @ 10004805  [esi + 0x10].d = edx
  60 @ 10004805  goto 57 @ 0x10004808

  61 @ 100047f0  eax = [ecx + 4].d
  62 @ 100047f3  eax = eax + [ecx].d
  63 @ 100047f7  if (edx == eax) then 83 @ 0x1000486c else 85 @ 0x100047f9

  64 @ 1000475e  ecx = [&data_10009f1c].d
  65 @ 10004764  [esi + 0x24].d = ecx
  66 @ 10004767  [esi + 0x1bc].d = edx
  67 @ 1000476d  [esi + 0x1c0].d = ebp
  68 @ 10004773  [esi + 0x1c8].d = 1
  69 @ 1000477d  [esi + 0x20].d = 0xfff
  70 @ 10004784  eax = esi + 0x28
  71 @ 10004787  ecx = 0x20
  72 @ 1000478c  esp = esp
  73 @ 1000478c  goto 87 @ 0x10004790

  74 @ 10004824  push(zx.d(1))
  75 @ 10004826  push(ebp)
  76 @ 10004827  push(edx)
  77 @ 10004828  eax = esi
  78 @ 1000482a  call(sub_10004170)
  79 @ 1000482f  esp = esp + 0xc
  80 @ 1000482f  goto 93 @ 0x10004832

  81 @ 10004812  ecx = edx + ebp
  82 @ 10004812  goto 96 @ 0x10004817

  83 @ 1000486c  eax = [ecx + 0xc].d
  84 @ 10004871  if ((al & 8) != 0) then 51 @ 0x10004803 else 97 @ 0x10004875

  85 @ 100047f9  ecx = [ecx + 8].d
  86 @ 100047fe  if (ecx != 0) then 61 @ 0x100047f0 else 51 @ 0x10004803

  87 @ 10004790  [eax + 0xc].d = eax
  88 @ 10004793  [eax + 8].d = eax
  89 @ 10004796  eax = eax + 8
  90 @ 10004799  temp0.d = ecx
  91 @ 10004799  ecx = ecx - 1
  92 @ 1000479c  if (temp0.d != 1) then 87 @ 0x10004790 else 98 @ 0x1000479e

  93 @ 10004832  eax = [esi + 0xc].d
  94 @ 10004835  edi = [esp + 0x14 {var_c}].d
  95 @ 1000483b  if (edi u>= eax) then 20 @ 0x100048cc else 107 @ 0x10004841

  96 @ 10004817  if ([eax].d == ecx) then 125 @ 0x1000489e else 127 @ 0x1000481d

  97 @ 10004875  if ((al & 1) == 0) then 51 @ 0x10004803 else 129 @ 0x10004877

  98 @ 1000479e  eax = [esi - 4].d
  99 @ 100047a1  eax = eax & 0xfffffff8
 100 @ 100047a4  edi = eax + esi - 8
 101 @ 100047a8  edx = edx - edi
 102 @ 100047aa  ecx = edi
 103 @ 100047ac  ecx = ecx & 7
 104 @ 100047ac  cond:2 = ecx == 0
 105 @ 100047af  eax = edx + ebp - 0x28
 106 @ 100047b3  if (cond:2) then 131 @ 0x100047ba else 142 @ 0x100047b5

 107 @ 10004841  ecx = [esi + 0x18].d
 108 @ 10004844  eax = eax - edi
 109 @ 10004846  [esi + 0xc].d = eax
 110 @ 10004849  edx = ecx + edi
 111 @ 1000484c  eax = eax | 1
 112 @ 1000484f  [esi + 0x18].d = edx
 113 @ 10004852  [edx + 4].d = eax
 114 @ 10004855  eax = [&data_10009f1c].d
 115 @ 1000485a  edi = edi | 3
 116 @ 1000485d  ebp = pop
 117 @ 1000485e  [ecx + 4].d = edi
 118 @ 10004861  eax = eax ^ esi
 119 @ 10004863  edi = pop
 120 @ 10004864  esi = pop
 121 @ 10004865  [edx].d = eax
 122 @ 10004867  eax = ecx + 8
 123 @ 1000486a  ebx = pop
 124 @ 1000486b  <return> jump(pop)

 125 @ 1000489e  ecx = [eax + 0xc].d
 126 @ 100048a4  if ((cl & 8) != 0) then 74 @ 0x10004824 else 145 @ 0x100048ad

 127 @ 1000481d  eax = [eax + 8].d
 128 @ 10004822  if (eax != 0) then 96 @ 0x10004817 else 74 @ 0x10004824

 129 @ 10004877  eax = [ecx].d
 130 @ 1000487b  if (ebx u< eax) then 51 @ 0x10004803 else 146 @ 0x1000487d

 131 @ 100047ba  edx = ecx + edi
 132 @ 100047bd  eax = eax - ecx
 133 @ 100047bf  ecx = eax
 134 @ 100047c1  [esi + 0x18].d = edx
 135 @ 100047c4  [esi + 0xc].d = eax
 136 @ 100047c7  ecx = ecx | 1
 137 @ 100047ca  [edx + 4].d = ecx
 138 @ 100047cd  [edx + eax + 4].d = 0x28
 139 @ 100047d5  edx = [&data_10009f2c].d
 140 @ 100047db  [esi + 0x1c].d = edx
 141 @ 100047de  goto 93 @ 0x10004832

 142 @ 100047b5  ecx = neg.d(ecx)
 143 @ 100047b7  ecx = ecx & 7
 144 @ 100047b7  goto 131 @ 0x100047ba

 145 @ 100048ad  if ((cl & 1) == 0) then 74 @ 0x10004824 else 149 @ 0x100048b3

 146 @ 1000487d  edi = [ecx + 4].d
 147 @ 10004880  eax = eax + edi
 148 @ 10004884  if (ebx u>= eax) then 51 @ 0x10004803 else 161 @ 0x1000488a

 149 @ 100048b3  ecx = [eax].d
 150 @ 100048b5  [eax + 4].d = [eax + 4].d + ebp
 151 @ 100048b8  [eax].d = edx
 152 @ 100048ba  eax = [esp + 0x14 {var_c}].d
 153 @ 100048be  push(esi)
 154 @ 100048bf  call(sub_10003600)
 155 @ 100048c4  esp = esp + 4
 156 @ 100048c7  ebp = pop
 157 @ 100048c8  edi = pop
 158 @ 100048c9  esi = pop
 159 @ 100048ca  ebx = pop
 160 @ 100048cb  <return> jump(pop)

 161 @ 1000488a  edi = edi + ebp
 162 @ 1000488c  [ecx + 4].d = edi
 163 @ 1000488f  edx = [esi + 0xc].d
 164 @ 10004892  ecx = [esi + 0x18].d
 165 @ 10004895  edx = edx + ebp
 166 @ 10004897  call(sub_100039e0)
 167 @ 1000489c  goto 93 @ 0x10004832

100048d3                                                           cc cc cc cc cc cc cc cc cc cc cc cc cc                     .............

100048e0  void* const sub_100048e0()

   0 @ 100048e0  eax = [&data_10009f1c].d
   1 @ 100048e5  esp = esp - 0xc
   2 @ 100048ea  if (eax != 0) then 3 @ 0x100048f1 else 6 @ 0x100048ec

   3 @ 100048f1  cond:0 = ([ebx + 0x1b8 {0x1b8}].b & 2) == 0
   4 @ 100048f8  push(esi)
   5 @ 100048f9  if (cond:0) then 8 @ 0x1000490e else 15 @ 0x100048fb

   6 @ 100048ec  call(sub_100044b0)
   7 @ 100048ec  goto 3 @ 0x100048f1

   8 @ 1000490e  push(ebp)
   9 @ 1000490f  eax = 0
  10 @ 10004911  ebp = 0
  11 @ 10004913  cond:1 = [ebx + 0x18 {0x18}].d == ebp
  12 @ 10004916  push(edi)
  13 @ 10004917  [esp + 0xc {var_c_1}].d = eax
  14 @ 1000491b  if (cond:1) then 18 @ 0x10004998 else 46 @ 0x1000491d

  15 @ 100048fb  esi = ebx + 0x1cc
  16 @ 10004901  call(sub_10003b00)
  17 @ 10004908  if (eax != 0) then 55 @ 0x10004a00 else 8 @ 0x1000490e

  18 @ 10004998  esi = [&data_10008080].d
  19 @ 1000499e  push(eax)
  20 @ 1000499f  push(&data_1000813c[0xc])  {"ss"}
  21 @ 100049a4  call(esi)
  22 @ 100049a6  edi = [&data_10008084].d
  23 @ 100049ac  eax = eax + 0x40
  24 @ 100049af  push(eax)
  25 @ 100049b0  call(edi)
  26 @ 100049b2  eax = [esp + 0x18 {var_c_1}].d
  27 @ 100049b6  esp = esp + 0xc
  28 @ 100049b9  push(eax)
  29 @ 100049ba  push(&data_10008164)  {"VirtualProtect"}
  30 @ 100049bf  call(esi)
  31 @ 100049c1  eax = eax + 0x40
  32 @ 100049c4  push(eax)
  33 @ 100049c5  call(edi)
  34 @ 100049c7  esp = esp + 0xc
  35 @ 100049ca  push(ebp)
  36 @ 100049cb  push(&data_10008176[0xa])  {"Process"}
  37 @ 100049d0  call(esi)
  38 @ 100049d2  eax = eax + 0x40
  39 @ 100049d5  push(eax)
  40 @ 100049d6  call(edi)
  41 @ 100049d8  esp = esp + 0xc
  42 @ 100049db  cond:2 = ([ebx + 0x1b8 {0x1b8}].b & 2) == 0
  43 @ 100049e2  edi = pop
  44 @ 100049e3  ebp = pop
  45 @ 100049e4  if (cond:2) then 55 @ 0x10004a00 else 58 @ 0x100049e6

  46 @ 1000491d  ebp = [ebx + 0x1b0 {0x1b0}].d
  47 @ 10004923  eax = [ebx + 0x1b4 {0x1b4}].d
  48 @ 10004929  [esp + 0xc {var_c_1}].d = ebp
  49 @ 1000492d  ebp = ebp - [ebx + 0xc {0xc}].d
  50 @ 10004930  edi = ebx + 0x1bc
  51 @ 10004936  ebp = ebp - 0x28
  52 @ 10004939  cond:3 = edi == 0
  53 @ 1000493b  [esp + 0x14 {var_4_1}].d = eax
  54 @ 1000493f  if (cond:3) then 18 @ 0x10004998 else 63 @ 0x10004941

  55 @ 10004a00  esi = pop
  56 @ 10004a01  esp = esp + 0xc
  57 @ 10004a04  <return> jump(pop)

  58 @ 100049e6  temp1.d = [ebx + 0x210 {0x210}].d
  59 @ 100049e6  [ebx + 0x210 {0x210}].d = [ebx + 0x210 {0x210}].d - 1
  60 @ 100049e6  cond:4 = temp1.d != 1
  61 @ 100049ed  eax = ebx + 0x1cc
  62 @ 100049f3  if (cond:4) then 55 @ 0x10004a00 else 67 @ 0x100049f5

  63 @ 10004941  esi = [edi].d
  64 @ 10004943  eax = esi
  65 @ 10004945  eax = eax & 7
  66 @ 10004948  if (eax == 0) then 73 @ 0x1000494f else 75 @ 0x1000494a

  67 @ 100049f5  [eax + 0x48 {0x214}].d = 0
  68 @ 100049fc  ecx = 0
  69 @ 100049fe  temp0.d = [eax {0x1cc}].d
  70 @ 100049fe  [eax {0x1cc}].d = ecx
  71 @ 100049fe  ecx = temp0.d
  72 @ 100049fe  goto 55 @ 0x10004a00

  73 @ 1000494f  ecx = esi + eax
  74 @ 10004954  if (ecx u< esi) then 78 @ 0x1000498d else 80 @ 0x10004956

  75 @ 1000494a  eax = neg.d(eax)
  76 @ 1000494c  eax = eax & 7
  77 @ 1000494c  goto 73 @ 0x1000494f

  78 @ 1000498d  edi = [edi + 8].d
  79 @ 10004992  if (edi != 0) then 63 @ 0x10004941 else 84 @ 0x10004994

  80 @ 10004956  edx = [edi + 4].d
  81 @ 10004959  edx = edx + esi
  82 @ 1000495b  [esp + 0x10 {var_8_1}].d = edx
  83 @ 1000495f  goto 86 @ 0x10004964

  84 @ 10004994  eax = [esp + 0x14 {var_4_1}].d
  85 @ 10004994  goto 18 @ 0x10004998

  86 @ 10004964  if (ecx u>= [esp + 0x10 {var_8_1}].d) then 78 @ 0x1000498d else 87 @ 0x10004969

  87 @ 10004969  if (ecx == [ebx + 0x18 {0x18}].d) then 78 @ 0x1000498d else 88 @ 0x1000496b

  88 @ 1000496b  eax = [ecx + 4].d
  89 @ 10004971  if (eax == 7) then 78 @ 0x1000498d else 90 @ 0x10004973

  90 @ 10004973  edx = eax
  91 @ 10004975  dl = dl & 3
  92 @ 1000497b  if (dl != 1) then 93 @ 0x10004984 else 96 @ 0x1000497d

  93 @ 10004984  eax = eax & 0xfffffff8
  94 @ 10004987  ecx = ecx + eax
  95 @ 1000498b  if (ecx u>= esi) then 86 @ 0x10004964 else 78 @ 0x1000498d

  96 @ 1000497d  edx = eax
  97 @ 1000497f  edx = edx & 0xfffffff8
  98 @ 10004982  ebp = ebp - edx
  99 @ 10004982  goto 93 @ 0x10004984

10004a05                 cc cc cc cc cc cc cc cc cc cc cc                                                       ...........

10004a10  int32_t* sub_10004a10(int32_t* arg1 @ edi, void* arg2)

   0 @ 10004a10  eax = [&data_10009f1c].d
   1 @ 10004a15  esp = esp - 0x14
   2 @ 10004a18  push(ebx)
   3 @ 10004a19  ebx = 0
   4 @ 10004a1b  cond:0 = eax != 0
   5 @ 10004a1d  push(ebp)
   6 @ 10004a1e  push(esi)
   7 @ 10004a1f  [edi].d = ebx
   8 @ 10004a21  [edi + 4].d = ebx
   9 @ 10004a24  [edi + 8].d = ebx
  10 @ 10004a27  [edi + 0xc].d = ebx
  11 @ 10004a2a  [edi + 0x10].d = ebx
  12 @ 10004a2d  [edi + 0x14].d = ebx
  13 @ 10004a30  [edi + 0x18].d = ebx
  14 @ 10004a33  [edi + 0x1c].d = ebx
  15 @ 10004a36  [edi + 0x20].d = ebx
  16 @ 10004a39  [edi + 0x24].d = ebx
  17 @ 10004a3c  if (cond:0) then 18 @ 0x10004a43 else 20 @ 0x10004a3e

  18 @ 10004a43  ebp = [esp + 0x24 {arg2}].d
  19 @ 10004a4e  if (([ebp + 0x1b8].b & 2) == 0) then 22 @ 0x10004a63 else 26 @ 0x10004a50

  20 @ 10004a3e  call(sub_100044b0)
  21 @ 10004a3e  goto 18 @ 0x10004a43

  22 @ 10004a63  eax = [ebp + 0x18].d
  23 @ 10004a66  cond:1 = eax == ebx
  24 @ 10004a68  [esp + 0x1c {var_4_1}].d = eax
  25 @ 10004a6c  if (cond:1) then 29 @ 0x10004b36 else 30 @ 0x10004a72

  26 @ 10004a50  esi = ebp + 0x1cc
  27 @ 10004a56  call(sub_10003b00)
  28 @ 10004a5d  if (eax != ebx) then 39 @ 0x10004b4e else 22 @ 0x10004a63

  29 @ 10004b36  if (([ebp + 0x1b8].b & 2) == 0) then 39 @ 0x10004b4e else 45 @ 0x10004b38

  30 @ 10004a72  eax = [ebp + 0xc].d
  31 @ 10004a75  ebx = ebp + 0x1bc
  32 @ 10004a7b  cond:2 = ebx == 0
  33 @ 10004a7d  ecx = eax + 0x28
  34 @ 10004a80  [esp + 0x14 {var_c_1}].d = 1
  35 @ 10004a88  [esp + 0x10 {var_10_1}].d = ecx
  36 @ 10004a8c  edx = ecx
  37 @ 10004a8e  [esp + 0xc {i_1}].d = ebx
  38 @ 10004a92  if (cond:2) then 50 @ 0x10004b00 else 66 @ 0x10004a94

  39 @ 10004b4e  esi = pop
  40 @ 10004b4f  ebp = pop
  41 @ 10004b50  eax = edi
  42 @ 10004b52  ebx = pop
  43 @ 10004b53  esp = esp + 0x14
  44 @ 10004b56  <return> jump(pop)

  45 @ 10004b38  temp1.d = [ebp + 0x210].d
  46 @ 10004b38  [ebp + 0x210].d = [ebp + 0x210].d - 1
  47 @ 10004b38  cond:3 = temp1.d != 1
  48 @ 10004b3f  eax = ebp + 0x1cc
  49 @ 10004b45  if (cond:3) then 39 @ 0x10004b4e else 70 @ 0x10004b47

  50 @ 10004b00  eax = [esp + 0x14 {var_c_1}].d
  51 @ 10004b04  [edi + 4].d = eax
  52 @ 10004b07  eax = [ebp + 0x1b0].d
  53 @ 10004b0d  esi = eax
  54 @ 10004b0f  eax = eax - ecx
  55 @ 10004b11  esi = esi - edx
  56 @ 10004b13  [edi].d = edx
  57 @ 10004b15  edx = [ebp + 0x1b4].d
  58 @ 10004b1b  [edi + 0x1c].d = eax
  59 @ 10004b1e  eax = [ebp + 0xc].d
  60 @ 10004b21  [edi + 0x10].d = esi
  61 @ 10004b24  [edi + 0x14].d = edx
  62 @ 10004b27  [edi + 0x20].d = ecx
  63 @ 10004b2a  [edi + 0x24].d = eax
  64 @ 10004b2d  ebx = 0
  65 @ 10004b2d  goto 29 @ 0x10004b36

  66 @ 10004a94  ebp = [ebx].d
  67 @ 10004a96  eax = ebp
  68 @ 10004a98  eax = eax & 7
  69 @ 10004a9b  if (eax == 0) then 76 @ 0x10004aa2 else 78 @ 0x10004a9d

  70 @ 10004b47  [eax + 0x48].d = ebx
  71 @ 10004b4a  ecx = 0
  72 @ 10004b4c  temp0.d = [eax].d
  73 @ 10004b4c  [eax].d = ecx
  74 @ 10004b4c  ecx = temp0.d
  75 @ 10004b4c  goto 39 @ 0x10004b4e

  76 @ 10004aa2  esi = eax + ebp
  77 @ 10004aa7  if (esi u< ebp) then 81 @ 0x10004aed else 85 @ 0x10004aa9

  78 @ 10004a9d  eax = neg.d(eax)
  79 @ 10004a9f  eax = eax & 7
  80 @ 10004a9f  goto 76 @ 0x10004aa2

  81 @ 10004aed  ebx = [ebx + 8].d
  82 @ 10004af0  cond:4 = ebx != 0
  83 @ 10004af2  [esp + 0xc {i_1}].d = ebx
  84 @ 10004af6  if (cond:4) then 66 @ 0x10004a94 else 89 @ 0x10004af8

  85 @ 10004aa9  ecx = [ebx + 4].d
  86 @ 10004aac  ecx = ecx + ebp
  87 @ 10004aae  [esp + 0x18 {var_8_1}].d = ecx
  88 @ 10004aae  goto 92 @ 0x10004ab6

  89 @ 10004af8  ebp = [esp + 0x24 {arg2}].d
  90 @ 10004afc  ecx = [esp + 0x10 {var_10_1}].d
  91 @ 10004afc  goto 50 @ 0x10004b00

  92 @ 10004ab6  if (esi u>= [esp + 0x18 {var_8_1}].d) then 81 @ 0x10004aed else 93 @ 0x10004abc

  93 @ 10004abc  if (esi == [esp + 0x1c {var_4_1}].d) then 81 @ 0x10004aed else 94 @ 0x10004abe

  94 @ 10004abe  ecx = [esi + 4].d
  95 @ 10004ac4  if (ecx == 7) then 81 @ 0x10004aed else 96 @ 0x10004ac6

  96 @ 10004ac6  eax = ecx
  97 @ 10004ac8  eax = eax & 0xfffffff8
  98 @ 10004acb  ebx = ecx
  99 @ 10004acd  bl = bl & 3
 100 @ 10004ad0  edx = edx + eax
 101 @ 10004ad5  if (bl != 1) then 102 @ 0x10004ae0 else 106 @ 0x10004ad7

 102 @ 10004ae0  ebx = [esp + 0xc {i_1}].d
 103 @ 10004ae4  ecx = ecx & 0xfffffff8
 104 @ 10004ae7  esi = esi + ecx
 105 @ 10004aeb  if (esi u>= ebp) then 92 @ 0x10004ab6 else 81 @ 0x10004aed

 106 @ 10004ad7  [esp + 0x10 {var_10_1}].d = [esp + 0x10 {var_10_1}].d + eax
 107 @ 10004adb  [esp + 0x14 {var_c_1}].d = [esp + 0x14 {var_c_1}].d + 1
 108 @ 10004adb  goto 102 @ 0x10004ae0

10004b57                                                                       cc cc cc cc cc cc cc cc cc                         .........

10004b60  int32_t sub_10004b60(int32_t arg1 @ esi, int32_t arg2 @ edi)

   0 @ 10004b60  eax = [&data_10009f1c].d
   1 @ 10004b67  if (eax != 0) then 2 @ 0x10004b71 else 3 @ 0x10004b69

   2 @ 10004b71  if (esi != -1) then 5 @ 0x10004b77 else 7 @ 0x10004b73

   3 @ 10004b69  call(sub_100044b0)
   4 @ 10004b69  goto 2 @ 0x10004b71

   5 @ 10004b77  eax = esi
   6 @ 10004b77  goto 9 @ 0x10004b7c

   7 @ 10004b73  eax = eax | esi
   8 @ 10004b75  goto 9 @ 0x10004b7c

   9 @ 10004b7c  if (edi == -3) then 10 @ 0x10004bb0 else 13 @ 0x10004b81

  10 @ 10004bb0  [&data_10009f28].d = eax
  11 @ 10004bb5  eax = 1
  12 @ 10004bba  <return> jump(pop)

  13 @ 10004b81  if (edi == -2) then 14 @ 0x10004b99 else 15 @ 0x10004b86

  14 @ 10004b99  if (eax u< [&data_10009f20].d) then 16 @ 0x10004bad else 18 @ 0x10004b9b

  15 @ 10004b86  if (edi != -1) then 16 @ 0x10004bad else 20 @ 0x10004b88

  16 @ 10004bad  eax = 0
  17 @ 10004baf  <return> jump(pop)

  18 @ 10004b9b  ecx = eax - 1
  19 @ 10004ba0  if ((eax & ecx) != 0) then 16 @ 0x10004bad else 23 @ 0x10004ba2

  20 @ 10004b88  [&data_10009f2c].d = eax
  21 @ 10004b8d  eax = 1
  22 @ 10004b92  <return> jump(pop)

  23 @ 10004ba2  [&data_10009f24].d = eax
  24 @ 10004ba7  eax = 1
  25 @ 10004bac  <return> jump(pop)

10004bbb                                                                                   cc cc cc cc cc                             .....

10004bc0  int32_t sub_10004bc0(void* arg1, int32_t* arg2, int32_t* arg3, int32_t arg4)

   0 @ 10004bc0  eax = [esp + 0xc {arg3}].d
   1 @ 10004bc4  push(ebx)
   2 @ 10004bc5  push(ebp)
   3 @ 10004bc6  ebp = [esp + 0xc {arg1}].d
   4 @ 10004bca  push(esi)
   5 @ 10004bcb  push(edi)
   6 @ 10004bcc  edi = [eax].d
   7 @ 10004bce  edi = edi + 1
   8 @ 10004bd1  cond:0 = [ebp + (edi << 2) + 0x458].d == 0
   9 @ 10004bd9  ebx = ebp + (edi << 2) + 0x458
  10 @ 10004be0  esi = edi
  11 @ 10004be2  if (cond:0) then 12 @ 0x10004c32 else 15 @ 0x10004be4

  12 @ 10004c32  ecx = [esp + 0x1c {arg3}].d
  13 @ 10004c36  esi = 0
  14 @ 10004c3a  if ([ecx].d s<= esi) then 17 @ 0x10004ca9 else 18 @ 0x10004c3c

  15 @ 10004be4  eax = ebx
  16 @ 10004be6  goto 21 @ 0x10004bf0

  17 @ 10004ca9  if (edi s>= [ebp + 0x50].d) then 25 @ 0x10004d82 else 38 @ 0x10004caf

  18 @ 10004c3c  edx = ebp + 0x458
  19 @ 10004c42  [esp + 0x14 {arg1}].d = edx
  20 @ 10004c42  goto 40 @ 0x10004c46

  21 @ 10004bf0  edi = [eax].d
  22 @ 10004bf2  ecx = [edi + 0x1cc].d
  23 @ 10004bf8  edi = edi + 0x1cc
  24 @ 10004c00  if (ecx == 0) then 43 @ 0x10004c16 else 49 @ 0x10004c02

  25 @ 10004d82  edx = [esp + 0x1c].d
  26 @ 10004d86  eax = [edx].d
  27 @ 10004d88  esi = [ebp + (eax << 2) + 0x458].d
  28 @ 10004d8f  esi = esi + 0x1cc
  29 @ 10004d95  call(sub_10003b00)
  30 @ 10004d9a  ecx = [esp + 0x1c].d
  31 @ 10004d9e  edx = [ecx].d
  32 @ 10004da0  eax = [ebp + (edx << 2) + 0x458].d
  33 @ 10004da7  edi = pop
  34 @ 10004da8  esi = pop
  35 @ 10004da9  ebp = pop
  36 @ 10004daa  ebx = pop
  37 @ 10004dab  <return> jump(pop)

  38 @ 10004caf  edx = [&data_10009f1c].d
  39 @ 10004cb7  if (edx != 0) then 51 @ 0x10004cbe else 55 @ 0x10004cb9

  40 @ 10004c46  eax = [esp + 0x14 {arg1}].d
  41 @ 10004c4a  ebx = [eax].d
  42 @ 10004c4e  if (ebx == 0) then 17 @ 0x10004ca9 else 57 @ 0x10004c50

  43 @ 10004c16  edx = 1
  44 @ 10004c1b  eax = edi
  45 @ 10004c1d  temp0.d = [eax].d
  46 @ 10004c1d  [eax].d = edx
  47 @ 10004c1d  edx = temp0.d
  48 @ 10004c21  if (edx == 0) then 60 @ 0x10004c74 else 64 @ 0x10004c23

  49 @ 10004c02  call([&data_10008018].d)
  50 @ 10004c0b  if ([edi + 0x48].d != eax) then 64 @ 0x10004c23 else 70 @ 0x10004c0d

  51 @ 10004cbe  ecx = [esp + 0x20 {arg4}].d
  52 @ 10004cc2  eax = 0xfffffdb0
  53 @ 10004cc7  eax = eax - [&data_10009f20].d
  54 @ 10004ccf  if (ecx u>= eax) then 25 @ 0x10004d82 else 72 @ 0x10004cd5

  55 @ 10004cb9  call(sub_100044b0)
  56 @ 10004cb9  goto 51 @ 0x10004cbe

  57 @ 10004c50  ecx = [ebx + 0x1cc].d
  58 @ 10004c56  ebx = ebx + 0x1cc
  59 @ 10004c5e  if (ecx == 0) then 75 @ 0x10004c89 else 81 @ 0x10004c60

  60 @ 10004c74  call([&data_10008018].d)
  61 @ 10004c7a  [edi + 0x48].d = eax
  62 @ 10004c7d  [edi + 0x44].d = 1
  63 @ 10004c84  goto 83 @ 0x10004dd3

  64 @ 10004c23  ebx = ebx + 4
  65 @ 10004c26  esi = esi + 1
  66 @ 10004c29  cond:1 = [ebx].d != 0
  67 @ 10004c2c  edi = esi
  68 @ 10004c2e  eax = ebx
  69 @ 10004c30  if (cond:1) then 21 @ 0x10004bf0 else 12 @ 0x10004c32

  70 @ 10004c0d  [edi + 0x44].d = [edi + 0x44].d + 1
  71 @ 10004c11  goto 83 @ 0x10004dd3

  72 @ 10004cd5  cond:2 = ecx != 0
  73 @ 10004cd7  eax = [&data_10009f24].d
  74 @ 10004cdc  if (cond:2) then 88 @ 0x10004cf7 else 90 @ 0x10004cde

  75 @ 10004c89  edx = 1
  76 @ 10004c8e  eax = ebx
  77 @ 10004c90  temp0.d = [eax].d
  78 @ 10004c90  [eax].d = edx
  79 @ 10004c90  edx = temp0.d
  80 @ 10004c94  if (edx == 0) then 92 @ 0x10004ce2 else 96 @ 0x10004c96

  81 @ 10004c60  call([&data_10008018].d)
  82 @ 10004c69  if ([ebx + 0x48].d != eax) then 96 @ 0x10004c96 else 100 @ 0x10004c6b

  83 @ 10004dd3  eax = [esp + 0x18 {arg2}].d
  84 @ 10004dd7  cond:3 = eax == 0
  85 @ 10004dd9  edx = [esp + 0x1c {arg3}].d
  86 @ 10004ddd  [edx].d = esi
  87 @ 10004ddf  if (cond:3) then 102 @ 0x10004def else 109 @ 0x10004de1

  88 @ 10004cf7  ecx = ecx + 0x250
  89 @ 10004cf7  goto 116 @ 0x10004cfd

  90 @ 10004cde  ecx = eax
  91 @ 10004ce0  goto 116 @ 0x10004cfd

  92 @ 10004ce2  call([&data_10008018].d)
  93 @ 10004ce8  [ebx + 0x48].d = eax
  94 @ 10004ceb  [ebx + 0x44].d = 1
  95 @ 10004cf2  goto 83 @ 0x10004dd3

  96 @ 10004c96  ecx = [esp + 0x1c {arg3}].d
  97 @ 10004c9a  [esp + 0x14 {arg1}].d = [esp + 0x14 {arg1}].d + 4
  98 @ 10004c9f  esi = esi + 1
  99 @ 10004ca4  if (esi s< [ecx].d) then 40 @ 0x10004c46 else 17 @ 0x10004ca9

 100 @ 10004c6b  [ebx + 0x44].d = [ebx + 0x44].d + 1
 101 @ 10004c6f  goto 83 @ 0x10004dd3

 102 @ 10004def  ecx = [ebp + 0x454].d
 103 @ 10004df5  eax = eax | 0xffffffff
 104 @ 10004df8  eax = eax - esi
 105 @ 10004dfa  push(eax)
 106 @ 10004dfb  push(ecx)
 107 @ 10004dfc  call([&data_10008024[0xc]].d)  {"ameA"}
 108 @ 10004e04  if (eax != 0) then 126 @ 0x10004e0c else 132 @ 0x10004e06

 109 @ 10004de1  edi = pop
 110 @ 10004de2  [eax].d = esi
 111 @ 10004de4  eax = [ebp + (esi << 2) + 0x458].d
 112 @ 10004deb  esi = pop
 113 @ 10004dec  ebp = pop
 114 @ 10004ded  ebx = pop
 115 @ 10004dee  <return> jump(pop)

 116 @ 10004cfd  ebx = eax + ecx - 1
 117 @ 10004d01  eax = eax - 1
 118 @ 10004d04  push(zx.d(4))
 119 @ 10004d06  eax = not.d(eax)
 120 @ 10004d08  push(0x3000)
 121 @ 10004d0d  ebx = ebx & eax
 122 @ 10004d0f  push(ebx)
 123 @ 10004d10  push(zx.d(0))
 124 @ 10004d12  call([&data_10008024[0x10]].d)
 125 @ 10004d1a  if (eax == 0) then 25 @ 0x10004d82 else 134 @ 0x10004d1f

 126 @ 10004e0c  eax = [ebp + (esi << 2) + 0x458].d
 127 @ 10004e13  edi = pop
 128 @ 10004e14  esi = pop
 129 @ 10004e15  ebp = pop
 130 @ 10004e16  ebx = pop
 131 @ 10004e17  <return> jump(pop)

 132 @ 10004e06  call([&data_100080ec].d)  {"ualAlloc"}
 133 @ 10004e06  goto 126 @ 0x10004e0c

 134 @ 10004d1f  if (eax == -1) then 25 @ 0x10004d82 else 135 @ 0x10004d21

 135 @ 10004d21  call(sub_10003da0)
 136 @ 10004d21  noreturn
{ Does not return }

10004be8                          8d a4 24 00 00 00 00 90                                                          ..$.....
10004d26                    8b d8 83 8b b8 01 00 00 02 8b f5 c7 83 c8 01 00 00 01 00 00 00 e8 c0 ed ff ff        ..........................
10004d40  83 bc bd 58 04 00 00 00 8d 84 bd 58 04 00 00 74 12 8b 4d 50 3b f9 7d 0b 83 c0 04 83 c7 01 83 38  ...X.......X...t..MP;.}........8
10004d60  00 75 f1 3b 7d 50 7c 44 83 45 44 ff 75 0d c7 45 48 00 00 00 00 33 c9 8b d5 87 0a 8b c3 e8 be ef  .u.;}P|D.ED.u..EH....3..........
10004d80  ff ff                                                                                            ..
10004dac                                      8d b3 cc 01 00 00 89 9c bd 58 04 00 00 e8 42 ed ff ff 83 45              .........X....B....E
10004dc0  44 ff 75 0d c7 45 48 00 00 00 00 33 c0 8b cd 87 01 8b f7                                         D.u..EH....3.......
10004e18                                                                          cc cc cc cc cc cc cc cc                          ........

10004e20  int32_t sub_10004e20(int32_t arg1 @ esi, int32_t arg2 @ edi)

   0 @ 10004e20  eax = [&data_10009f1c].d
   1 @ 10004e27  if (eax != 0) then 2 @ 0x10004e31 else 3 @ 0x10004e29

   2 @ 10004e31  if (esi != -1) then 5 @ 0x10004e37 else 7 @ 0x10004e33

   3 @ 10004e29  call(sub_100044b0)
   4 @ 10004e29  goto 2 @ 0x10004e31

   5 @ 10004e37  eax = esi
   6 @ 10004e37  goto 9 @ 0x10004e3c

   7 @ 10004e33  eax = eax | esi
   8 @ 10004e35  goto 9 @ 0x10004e3c

   9 @ 10004e3c  if (edi == -3) then 10 @ 0x10004e70 else 13 @ 0x10004e41

  10 @ 10004e70  [&data_10009f28].d = eax
  11 @ 10004e75  eax = 1
  12 @ 10004e7a  <return> jump(pop)

  13 @ 10004e41  if (edi == -2) then 14 @ 0x10004e59 else 15 @ 0x10004e46

  14 @ 10004e59  if (eax u< [&data_10009f20].d) then 16 @ 0x10004e6d else 18 @ 0x10004e5b

  15 @ 10004e46  if (edi != -1) then 16 @ 0x10004e6d else 20 @ 0x10004e48

  16 @ 10004e6d  eax = 0
  17 @ 10004e6f  <return> jump(pop)

  18 @ 10004e5b  ecx = eax - 1
  19 @ 10004e60  if ((eax & ecx) != 0) then 16 @ 0x10004e6d else 23 @ 0x10004e62

  20 @ 10004e48  [&data_10009f2c].d = eax
  21 @ 10004e4d  eax = 1
  22 @ 10004e52  <return> jump(pop)

  23 @ 10004e62  [&data_10009f24].d = eax
  24 @ 10004e67  eax = 1
  25 @ 10004e6c  <return> jump(pop)

10004e7b                                                                                   cc cc cc cc cc                             .....

10004e80  int32_t __convention("regparm") sub_10004e80(void* arg1)

   0 @ 10004e80  esp = esp - 0x2c
   1 @ 10004e83  push(esi)
   2 @ 10004e84  esi = eax
   3 @ 10004e86  eax = [&data_10009f1c].d
   4 @ 10004e8b  cond:0 = [esi + 0x24].d == eax
   5 @ 10004e8e  push(edi)
   6 @ 10004e8f  if (cond:0) then 7 @ 0x10004e97 else 15 @ 0x10004e91

   7 @ 10004e97  push(esi)
   8 @ 10004e98  edi = esp + 0xc {var_2c}
   9 @ 10004e9c  call(sub_10004a10)
  10 @ 10004ea1  esi = eax
  11 @ 10004ea3  esp = esp + 4
  12 @ 10004ea6  ecx = 0xa
  13 @ 10004eab  edi = ebx
  14 @ 10004ead  if (flag:d) then 17 else 19

  15 @ 10004e91  call([&data_100080ec].d)  {"ualAlloc"}
  16 @ 10004e91  goto 7 @ 0x10004e97

  17 @ 10004ead  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
  18 @ 10004ead  goto 21 @ 0x10004eaf

  19 @ 10004ead  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
  20 @ 10004ead  goto 21 @ 0x10004eaf

  21 @ 10004eaf  edi = pop
  22 @ 10004eb0  eax = ebx
  23 @ 10004eb2  esi = pop
  24 @ 10004eb3  esp = esp + 0x2c
  25 @ 10004eb6  <return> jump(pop)

10004eb7                                                                       cc cc cc cc cc cc cc cc cc                         .........

10004ec0  void* __convention("regparm") sub_10004ec0(void* arg1)

   0 @ 10004ec0  push(ebx)
   1 @ 10004ec1  ebx = eax
   2 @ 10004ec3  eax = [&data_10009f1c].d
   3 @ 10004ecb  if ([ebx + 0x24].d != eax) then 4 @ 0x10004ed4 else 6 @ 0x10004ecd

   4 @ 10004ed4  ebx = pop
   5 @ 10004ed5  jump([&data_100080ec].d)  {"ualAlloc"}

   6 @ 10004ecd  call(sub_100048e0)
   7 @ 10004ed2  ebx = pop
   8 @ 10004ed3  <return> jump(pop)

10004edb                                                                                   cc cc cc cc cc                             .....

10004ee0  int32_t sub_10004ee0(void* arg1 @ edi, int32_t arg2)

   0 @ 10004ee0  eax = [&data_10009f1c].d
   1 @ 10004ee5  push(ebp)
   2 @ 10004ee6  ebp = 0
   3 @ 10004eeb  if ([edi + 0x24].d != eax) then 4 @ 0x10004f33 else 6 @ 0x10004ef4

   4 @ 10004f33  call([&data_100080ec].d)  {"ualAlloc"}
   5 @ 10004f33  goto 7 @ 0x10004f39

   6 @ 10004ef4  if (([edi + 0x1b8].b & 2) == 0) then 9 @ 0x10004f07 else 13 @ 0x10004ef6

   7 @ 10004f39  eax = ebp
   8 @ 10004f39  goto 19 @ 0x10004f3b

   9 @ 10004f07  eax = [esp + 8 {arg2}].d
  10 @ 10004f0b  ecx = edi
  11 @ 10004f0d  call(sub_100045d0)
  12 @ 10004f19  if (([edi + 0x1b8].b & 2) == 0) then 19 @ 0x10004f3b else 21 @ 0x10004f1b

  13 @ 10004ef6  push(esi)
  14 @ 10004ef7  esi = edi + 0x1cc
  15 @ 10004efd  call(sub_10003b00)
  16 @ 10004f02  cond:0 = eax != ebp
  17 @ 10004f04  esi = pop
  18 @ 10004f05  if (cond:0) then 7 @ 0x10004f39 else 9 @ 0x10004f07

  19 @ 10004f3b  ebp = pop
  20 @ 10004f3c  <return> jump(pop)

  21 @ 10004f1b  temp1.d = [edi + 0x210].d
  22 @ 10004f1b  [edi + 0x210].d = [edi + 0x210].d - 1
  23 @ 10004f1b  cond:1 = temp1.d != 1
  24 @ 10004f22  ecx = edi + 0x1cc
  25 @ 10004f28  if (cond:1) then 19 @ 0x10004f3b else 26 @ 0x10004f2a

  26 @ 10004f2a  [ecx + 0x48].d = ebp
  27 @ 10004f2d  edx = 0
  28 @ 10004f2f  temp0.d = [ecx].d
  29 @ 10004f2f  [ecx].d = edx
  30 @ 10004f2f  edx = temp0.d
  31 @ 10004f31  ebp = pop
  32 @ 10004f32  <return> jump(pop)

10004f3d                                                                                         cc cc cc                               ...

10004f40  void __convention("regparm") sub_10004f40(int32_t* arg1)

   0 @ 10004f40  esp = esp - 0xc
   1 @ 10004f43  push(edi)
   2 @ 10004f44  edi = eax
   3 @ 10004f48  if (edi == 0) then 4 @ 0x100054ee else 7 @ 0x10004f4e

   4 @ 100054ee  edi = pop
   5 @ 100054ef  esp = esp + 0xc
   6 @ 100054f2  <return> jump(pop)

   7 @ 10004f4e  eax = [edi - 4].d
   8 @ 10004f51  edi = edi - 8
   9 @ 10004f54  eax = eax & 0xfffffff8
  10 @ 10004f57  push(ebx)
  11 @ 10004f58  ebx = [&data_10009f1c].d
  12 @ 10004f5e  ebx = ebx ^ [eax + edi].d
  13 @ 10004f61  eax = eax + edi
  14 @ 10004f63  eax = [&data_10009f1c].d
  15 @ 10004f6b  if ([ebx + 0x24].d == eax) then 16 @ 0x10004f78 else 19 @ 0x10004f6d

  16 @ 10004f78  cond:0 = ([ebx + 0x1b8].b & 2) == 0
  17 @ 10004f7f  push(esi)
  18 @ 10004f80  if (cond:0) then 23 @ 0x10004f95 else 26 @ 0x10004f82

  19 @ 10004f6d  ebx = pop
  20 @ 10004f6e  edi = pop
  21 @ 10004f6f  esp = esp + 0xc
  22 @ 10004f72  jump([&data_100080ec].d)  {"ualAlloc"}

  23 @ 10004f95  cond:1 = edi u< [ebx + 0x10].d
  24 @ 10004f98  push(ebp)
  25 @ 10004f99  if (cond:1) then 29 @ 0x100054c5 else 31 @ 0x10004f9f

  26 @ 10004f82  esi = ebx + 0x1cc
  27 @ 10004f88  call(sub_10003b00)
  28 @ 10004f8f  if (eax != 0) then 35 @ 0x100054ec else 23 @ 0x10004f95

  29 @ 100054c5  call([&data_100080ec].d)  {"ualAlloc"}
  30 @ 100054c5  goto 38 @ 0x100054cb

  31 @ 10004f9f  eax = [edi + 4].d
  32 @ 10004fa2  ecx = eax
  33 @ 10004fa4  ecx = ecx & 3
  34 @ 10004faa  if (ecx == 1) then 29 @ 0x100054c5 else 41 @ 0x10004fb0

  35 @ 100054ec  esi = pop
  36 @ 100054ed  ebx = pop
  37 @ 100054ed  goto 4 @ 0x100054ee

  38 @ 100054cb  cond:5 = ([ebx + 0x1b8].b & 2) == 0
  39 @ 100054d2  ebp = pop
  40 @ 100054d3  if (cond:5) then 35 @ 0x100054ec else 47 @ 0x100054d5

  41 @ 10004fb0  ebp = eax
  42 @ 10004fb2  ebp = ebp & 0xfffffff8
  43 @ 10004fb5  cond:2 = (al & 1) != 0
  44 @ 10004fb7  edx = edi + ebp
  45 @ 10004fba  [esp + 0x10 {var_c_1}].d = edx
  46 @ 10004fbe  if (cond:2) then 51 @ 0x10005027 else 53 @ 0x10004fc0

  47 @ 100054d5  ebx = ebx + 0x1cc
  48 @ 100054db  temp1.d = [ebx + 0x44].d
  49 @ 100054db  [ebx + 0x44].d = [ebx + 0x44].d - 1
  50 @ 100054df  if (temp1.d != 1) then 35 @ 0x100054ec else 56 @ 0x100054e1

  51 @ 10005027  edx = [esp + 0x10 {var_c_1}].d
  52 @ 1000502d  if (edi u>= edx) then 29 @ 0x100054c5 else 62 @ 0x10005033

  53 @ 10004fc0  cond:3 = ecx != 0
  54 @ 10004fc2  eax = [edi].d
  55 @ 10004fc4  if (cond:3) then 64 @ 0x10004fe8 else 70 @ 0x10004fc6

  56 @ 100054e1  [ebx + 0x48].d = 0
  57 @ 100054e8  edx = 0
  58 @ 100054ea  temp0.d = [ebx].d
  59 @ 100054ea  [ebx].d = edx
  60 @ 100054ea  edx = temp0.d
  61 @ 100054ea  goto 35 @ 0x100054ec

  62 @ 10005033  eax = [edx + 4].d
  63 @ 10005038  if ((al & 1) == 0) then 29 @ 0x100054c5 else 76 @ 0x10005040

  64 @ 10004fe8  esi = [ebx + 0x10].d
  65 @ 10004feb  edi = edi - eax
  66 @ 10004fed  ebp = ebp + eax
  67 @ 10004fef  cond:4 = edi u< esi
  68 @ 10004ff1  [esp + 0x14 {i_1}].d = ebp
  69 @ 10004ff5  if (cond:4) then 29 @ 0x100054c5 else 77 @ 0x10004ffe

  70 @ 10004fc6  esi = eax + ebp + 0x10
  71 @ 10004fca  ecx = edi
  72 @ 10004fcc  ecx = ecx - eax
  73 @ 10004fce  eax = esi
  74 @ 10004fd0  call(sub_10003b60)
  75 @ 10004fd7  if (eax != 0) then 38 @ 0x100054cb else 78 @ 0x10004fdd

  76 @ 10005040  if ((al & 2) != 0) then 80 @ 0x10005366 else 87 @ 0x10005049

  77 @ 10004ffe  if (edi == [ebx + 0x14].d) then 88 @ 0x100051b7 else 91 @ 0x10005004

  78 @ 10004fdd  [ebx + 0x1b0].d = [ebx + 0x1b0].d - esi
  79 @ 10004fe3  goto 38 @ 0x100054cb

  80 @ 10005366  eax = eax & 0xfffffffe
  81 @ 10005369  ecx = ebp
  82 @ 1000536b  [edx + 4].d = eax
  83 @ 1000536e  ecx = ecx | 1
  84 @ 10005371  [edi + 4].d = ecx
  85 @ 10005374  [edi + ebp].d = ebp
  86 @ 10005374  goto 93 @ 0x10005377

  87 @ 10005049  if (edx != [ebx + 0x18].d) then 96 @ 0x100051df else 97 @ 0x1000504f

  88 @ 100051b7  eax = [edx + 4].d
  89 @ 100051ba  eax = eax & 3
  90 @ 100051bf  if (al != 3) then 51 @ 0x10005027 else 104 @ 0x100051c5

  91 @ 10005004  eax = eax u>> 3
  92 @ 1000500a  if (eax u>= 0x20) then 111 @ 0x100050ab else 116 @ 0x10005010

  93 @ 10005377  ecx = ebp
  94 @ 10005379  ecx = ecx u>> 3
  95 @ 1000537f  if (ecx u>= 0x20) then 119 @ 0x100053db else 122 @ 0x10005381

  96 @ 100051df  if (edx != [ebx + 0x14].d) then 128 @ 0x100051fa else 133 @ 0x100051e1

  97 @ 1000504f  [ebx + 0xc].d = [ebx + 0xc].d + ebp
  98 @ 10005052  eax = [ebx + 0xc].d
  99 @ 10005055  edx = eax
 100 @ 10005057  edx = edx | 1
 101 @ 1000505a  [ebx + 0x18].d = edi
 102 @ 1000505d  [edi + 4].d = edx
 103 @ 10005063  if (edi != [ebx + 0x14].d) then 141 @ 0x10005070 else 142 @ 0x10005065

 104 @ 100051c5  [ebx + 8].d = ebp
 105 @ 100051c8  [edx + 4].d = [edx + 4].d & 0xfffffffe
 106 @ 100051cc  ecx = ebp
 107 @ 100051ce  ecx = ecx | 1
 108 @ 100051d1  [edi + 4].d = ecx
 109 @ 100051d4  [edi + ebp].d = ebp
 110 @ 100051d7  goto 38 @ 0x100054cb

 111 @ 100050ab  esi = [edi + 0xc].d
 112 @ 100050ae  cond:6 = esi == edi
 113 @ 100050b0  edx = [edi + 0x18].d
 114 @ 100050b3  [esp + 0x18 {var_4_1}].d = edx
 115 @ 100050b7  if (cond:6) then 146 @ 0x100050c9 else 150 @ 0x100050b9

 116 @ 10005010  ecx = [edi + 8].d
 117 @ 10005013  edx = [edi + 0xc].d
 118 @ 10005018  if (ecx != edx) then 152 @ 0x10005084 else 154 @ 0x1000501a

 119 @ 100053db  eax = ebp
 120 @ 100053dd  eax = eax u>> 8
 121 @ 100053e0  if (eax != 0) then 160 @ 0x100053eb else 161 @ 0x100053e2

 122 @ 10005381  eax = 1
 123 @ 10005386  eax = eax << cl
 124 @ 10005388  esi = ebx + (ecx << 3) + 0x28
 125 @ 1000538c  ecx = [ebx].d
 126 @ 1000538e  ebp = esi
 127 @ 10005392  if ((ecx & eax) != 0) then 163 @ 0x100053a9 else 165 @ 0x10005394

 128 @ 100051fa  eax = eax & 0xfffffff8
 129 @ 100051fd  ecx = eax
 130 @ 100051ff  ecx = ecx u>> 3
 131 @ 10005202  ebp = ebp + eax
 132 @ 10005207  if (ecx u>= 0x20) then 172 @ 0x1000524c else 178 @ 0x10005209

 133 @ 100051e1  [ebx + 8].d = [ebx + 8].d + ebp
 134 @ 100051e4  eax = [ebx + 8].d
 135 @ 100051e7  ecx = eax
 136 @ 100051e9  [ebx + 0x14].d = edi
 137 @ 100051ec  ecx = ecx | 1
 138 @ 100051ef  [edi + 4].d = ecx
 139 @ 100051f2  [eax + edi].d = eax
 140 @ 100051f5  goto 38 @ 0x100054cb

 141 @ 10005070  if (eax u<= [ebx + 0x1c].d) then 38 @ 0x100054cb else 181 @ 0x10005076

 142 @ 10005065  ecx = 0
 143 @ 10005067  [ebx + 0x14].d = ecx
 144 @ 1000506a  [ebx + 8].d = ecx
 145 @ 1000506a  goto 141 @ 0x10005070

 146 @ 100050c9  esi = [edi + 0x14].d
 147 @ 100050cc  cond:7 = esi != 0
 148 @ 100050ce  ecx = edi + 0x14
 149 @ 100050d1  if (cond:7) then 185 @ 0x100050e0 else 188 @ 0x100050d3

 150 @ 100050b9  eax = [edi + 8].d
 151 @ 100050bf  if (eax u< [ebx + 0x10].d) then 192 @ 0x10005105 else 195 @ 0x100050c1

 152 @ 10005084  eax = ebx + (eax << 3) + 0x28
 153 @ 1000508a  if (ecx == eax) then 198 @ 0x10005092 else 199 @ 0x1000508e

 154 @ 1000501a  edx = 1
 155 @ 1000501f  ecx = eax
 156 @ 10005021  edx = edx << cl
 157 @ 10005023  edx = not.d(edx)
 158 @ 10005025  [ebx].d = [ebx].d & edx
 159 @ 10005025  goto 51 @ 0x10005027

 160 @ 100053eb  if (eax u<= 0xffff) then 200 @ 0x100053f4 else 209 @ 0x100053ed

 161 @ 100053e2  ecx = 0
 162 @ 100053e4  goto 211 @ 0x1000540a

 163 @ 100053a9  eax = [esi + 8].d
 164 @ 100053af  if (eax u< [ebx + 0x10].d) then 220 @ 0x100053c4 else 226 @ 0x100053b1

 165 @ 10005394  eax = eax | ecx
 166 @ 10005396  [ebx].d = eax
 167 @ 10005398  [esi + 8].d = edi
 168 @ 1000539b  [ebp + 0xc].d = edi
 169 @ 1000539e  [edi + 8].d = ebp
 170 @ 100053a1  [edi + 0xc].d = esi
 171 @ 100053a4  goto 38 @ 0x100054cb

 172 @ 1000524c  eax = edx
 173 @ 1000524e  esi = [eax + 0xc].d
 174 @ 10005251  cond:8 = esi == eax
 175 @ 10005253  ecx = [eax + 0x18].d
 176 @ 10005256  [esp + 0x18 {var_4_2}].d = ecx
 177 @ 1000525a  if (cond:8) then 232 @ 0x1000526c else 236 @ 0x1000525c

 178 @ 10005209  eax = [edx + 8].d
 179 @ 1000520c  edx = [edx + 0xc].d
 180 @ 10005211  if (eax != edx) then 238 @ 0x10005223 else 240 @ 0x10005213

 181 @ 10005076  eax = 0
 182 @ 10005078  ecx = ebx
 183 @ 1000507a  call(sub_100045d0)
 184 @ 1000507f  goto 38 @ 0x100054cb

 185 @ 100050e0  cond:9 = [esi + 0x14].d != 0
 186 @ 100050e4  eax = esi + 0x14
 187 @ 100050e7  if (cond:9) then 245 @ 0x100050f2 else 248 @ 0x100050e9

 188 @ 100050d3  esi = [edi + 0x10].d
 189 @ 100050d6  cond:10 = esi == 0
 190 @ 100050d8  ecx = edi + 0x10
 191 @ 100050db  if (cond:10) then 251 @ 0x10005111 else 252 @ 0x100050dd

 192 @ 10005105  call([&data_100080ec].d)  {"ualAlloc"}
 193 @ 1000510b  edx = [esp + 0x18 {var_4_1}].d
 194 @ 1000510b  goto 251 @ 0x10005111

 195 @ 100050c1  [eax + 0xc].d = esi
 196 @ 100050c4  [esi + 8].d = eax
 197 @ 100050c7  goto 251 @ 0x10005111

 198 @ 10005092  if (edx == eax) then 254 @ 0x100050a0 else 257 @ 0x10005096

 199 @ 1000508e  if (ecx u< esi) then 258 @ 0x10005098 else 198 @ 0x10005092

 200 @ 100053f4  edx, eflags = _bit_scan_reverse(eax)
 201 @ 100053f7  eax = edx
 202 @ 100053f9  [esp + 0x18 {var_4_3}].d = edx
 203 @ 100053fd  ecx = eax + 7
 204 @ 10005400  edx = ebp
 205 @ 10005402  edx = edx u>> cl
 206 @ 10005404  edx = edx & 1
 207 @ 10005407  ecx = edx + (eax << 1)
 208 @ 10005407  goto 211 @ 0x1000540a

 209 @ 100053ed  ecx = 0x1f
 210 @ 100053f2  goto 211 @ 0x1000540a

 211 @ 1000540a  eax = 0
 212 @ 1000540c  [edi + 0x14].d = eax
 213 @ 1000540f  [edi + 0x10].d = eax
 214 @ 10005412  eax = 1
 215 @ 10005417  eax = eax << cl
 216 @ 10005419  [edi + 0x1c].d = ecx
 217 @ 1000541c  esi = [ebx + 4].d
 218 @ 1000541f  edx = ebx + (ecx << 2) + 0x130
 219 @ 10005428  if ((esi & eax) != 0) then 260 @ 0x1000543c else 263 @ 0x1000542a

 220 @ 100053c4  call([&data_100080ec].d)  {"ualAlloc"}
 221 @ 100053ca  [esi + 8].d = edi
 222 @ 100053cd  [ebp + 0xc].d = edi
 223 @ 100053d0  [edi + 8].d = ebp
 224 @ 100053d3  [edi + 0xc].d = esi
 225 @ 100053d6  goto 38 @ 0x100054cb

 226 @ 100053b1  ebp = eax
 227 @ 100053b3  [esi + 8].d = edi
 228 @ 100053b6  [ebp + 0xc].d = edi
 229 @ 100053b9  [edi + 8].d = ebp
 230 @ 100053bc  [edi + 0xc].d = esi
 231 @ 100053bf  goto 38 @ 0x100054cb

 232 @ 1000526c  esi = [eax + 0x14].d
 233 @ 1000526f  cond:12 = esi != 0
 234 @ 10005271  ecx = eax + 0x14
 235 @ 10005274  if (cond:12) then 270 @ 0x10005280 else 273 @ 0x10005276

 236 @ 1000525c  eax = [eax + 8].d
 237 @ 10005262  if (eax u< [ebx + 0x10].d) then 277 @ 0x100052a5 else 279 @ 0x10005264

 238 @ 10005223  ecx = ebx + (ecx << 3) + 0x28
 239 @ 10005229  if (eax == ecx) then 282 @ 0x10005236 else 283 @ 0x1000522e

 240 @ 10005213  edx = 1
 241 @ 10005218  edx = edx << cl
 242 @ 1000521a  edx = not.d(edx)
 243 @ 1000521c  [ebx].d = [ebx].d & edx
 244 @ 1000521e  goto 284 @ 0x1000534e

 245 @ 100050f2  esi = [eax].d
 246 @ 100050f4  ecx = eax
 247 @ 100050f6  goto 185 @ 0x100050e0

 248 @ 100050e9  cond:13 = [esi + 0x10].d == 0
 249 @ 100050ed  eax = esi + 0x10
 250 @ 100050f0  if (cond:13) then 289 @ 0x100050fb else 245 @ 0x100050f2

 251 @ 10005111  if (edx == 0) then 51 @ 0x10005027 else 290 @ 0x10005117

 252 @ 100050dd  ecx = ecx
 253 @ 100050dd  goto 185 @ 0x100050e0

 254 @ 100050a0  [ecx + 0xc].d = edx
 255 @ 100050a3  [edx + 8].d = ecx
 256 @ 100050a6  goto 51 @ 0x10005027

 257 @ 10005096  if (edx u>= esi) then 254 @ 0x100050a0 else 258 @ 0x10005098

 258 @ 10005098  call([&data_100080ec].d)  {"ualAlloc"}
 259 @ 1000509e  goto 51 @ 0x10005027

 260 @ 1000543c  cond:11 = ecx != 0x1f
 261 @ 1000543f  eax = [edx].d
 262 @ 10005441  if (cond:11) then 294 @ 0x10005447 else 298 @ 0x10005443

 263 @ 1000542a  eax = eax | esi
 264 @ 1000542c  [ebx + 4].d = eax
 265 @ 1000542f  [edx].d = edi
 266 @ 10005431  [edi + 0x18].d = edx
 267 @ 10005434  [edi + 0xc].d = edi
 268 @ 10005437  [edi + 8].d = edi
 269 @ 1000543a  goto 300 @ 0x100054b8

 270 @ 10005280  cond:15 = [esi + 0x14].d != 0
 271 @ 10005284  eax = esi + 0x14
 272 @ 10005287  if (cond:15) then 303 @ 0x10005292 else 306 @ 0x10005289

 273 @ 10005276  esi = [eax + 0x10].d
 274 @ 10005279  cond:16 = esi == 0
 275 @ 1000527b  ecx = eax + 0x10
 276 @ 1000527e  if (cond:16) then 309 @ 0x100052b0 else 270 @ 0x10005280

 277 @ 100052a5  call([&data_100080ec].d)  {"ualAlloc"}
 278 @ 100052a5  goto 309 @ 0x100052b0

 279 @ 10005264  [eax + 0xc].d = esi
 280 @ 10005267  [esi + 8].d = eax
 281 @ 1000526a  goto 309 @ 0x100052b0

 282 @ 10005236  if (edx == ecx) then 310 @ 0x10005241 else 313 @ 0x1000523b

 283 @ 1000522e  if (eax u< [ebx + 0x10].d) then 314 @ 0x10005348 else 282 @ 0x10005236

 284 @ 1000534e  eax = ebp
 285 @ 10005350  eax = eax | 1
 286 @ 10005353  [edi + 4].d = eax
 287 @ 10005356  [edi + ebp].d = ebp
 288 @ 1000535c  if (edi != [ebx + 0x14].d) then 93 @ 0x10005377 else 316 @ 0x1000535e

 289 @ 100050fb  if (ecx u< [ebx + 0x10].d) then 192 @ 0x10005105 else 318 @ 0x100050fd

 290 @ 10005117  eax = [edi + 0x1c].d
 291 @ 1000511a  cond:14 = edi != [ebx + (eax << 2) + 0x130].d
 292 @ 10005121  eax = ebx + (eax << 2) + 0x130
 293 @ 10005128  if (cond:14) then 320 @ 0x10005147 else 321 @ 0x1000512a

 294 @ 10005447  ecx = ecx u>> 1
 295 @ 10005449  esi = 0x19
 296 @ 1000544e  esi = esi - ecx
 297 @ 1000544e  goto 324 @ 0x10005450

 298 @ 10005443  esi = 0
 299 @ 10005445  goto 324 @ 0x10005450

 300 @ 100054b8  temp2.d = [ebx + 0x20].d
 301 @ 100054b8  [ebx + 0x20].d = [ebx + 0x20].d - 1
 302 @ 100054bc  if (temp2.d != 1) then 38 @ 0x100054cb else 330 @ 0x100054be

 303 @ 10005292  esi = [eax].d
 304 @ 10005294  ecx = eax
 305 @ 10005296  goto 270 @ 0x10005280

 306 @ 10005289  cond:19 = [esi + 0x10].d == 0
 307 @ 1000528d  eax = esi + 0x10
 308 @ 10005290  if (cond:19) then 332 @ 0x1000529b else 303 @ 0x10005292

 309 @ 100052b0  if ([esp + 0x18 {var_4_2}].d == 0) then 284 @ 0x1000534e else 333 @ 0x100052b6

 310 @ 10005241  [eax + 0xc].d = edx
 311 @ 10005244  [edx + 8].d = eax
 312 @ 10005247  goto 284 @ 0x1000534e

 313 @ 1000523b  if (edx u< [ebx + 0x10].d) then 314 @ 0x10005348 else 310 @ 0x10005241

 314 @ 10005348  call([&data_100080ec].d)  {"ualAlloc"}
 315 @ 10005348  goto 284 @ 0x1000534e

 316 @ 1000535e  [ebx + 8].d = ebp
 317 @ 10005361  goto 38 @ 0x100054cb

 318 @ 100050fd  [ecx].d = 0
 319 @ 10005103  goto 251 @ 0x10005111

 320 @ 10005147  if (edx u< [ebx + 0x10].d) then 338 @ 0x10005158 else 342 @ 0x1000514c

 321 @ 1000512a  cond:17 = esi != 0
 322 @ 1000512c  [eax].d = esi
 323 @ 1000512e  if (cond:17) then 343 @ 0x10005171 else 344 @ 0x10005130

 324 @ 10005450  ecx = esi
 325 @ 10005452  edx = ebp
 326 @ 10005454  edx = edx << cl
 327 @ 10005456  ecx = [eax + 4].d
 328 @ 10005459  ecx = ecx & 0xfffffff8
 329 @ 1000545e  if (ecx == ebp) then 350 @ 0x1000547d else 354 @ 0x10005460

 330 @ 100054be  call(sub_10003e90)
 331 @ 100054c3  goto 38 @ 0x100054cb

 332 @ 1000529b  if (ecx u< [ebx + 0x10].d) then 277 @ 0x100052a5 else 360 @ 0x1000529d

 333 @ 100052b6  ecx = [esp + 0x10 {var_c_1}].d
 334 @ 100052ba  edx = [ecx + 0x1c].d
 335 @ 100052bd  cond:20 = ecx != [ebx + (edx << 2) + 0x130].d
 336 @ 100052c4  eax = ebx + (edx << 2) + 0x130
 337 @ 100052cb  if (cond:20) then 362 @ 0x100052e4 else 364 @ 0x100052cd

 338 @ 10005158  call([&data_100080ec].d)  {"ualAlloc"}
 339 @ 1000515e  edx = [esp + 0x18 {var_4_1}].d
 340 @ 10005162  ebp = [esp + 0x14 {i_1}].d
 341 @ 10005162  goto 367 @ 0x10005168

 342 @ 1000514c  if ([edx + 0x10].d != edi) then 368 @ 0x10005153 else 370 @ 0x1000514e

 343 @ 10005171  if (esi u< [ebx + 0x10].d) then 258 @ 0x10005098 else 372 @ 0x10005177

 344 @ 10005130  ecx = [edi + 0x1c].d
 345 @ 10005133  edx = 1
 346 @ 10005138  edx = edx << cl
 347 @ 1000513a  edx = not.d(edx)
 348 @ 1000513c  [ebx + 4].d = [ebx + 4].d & edx
 349 @ 1000513f  goto 51 @ 0x10005027

 350 @ 1000547d  edx = [ebx + 0x10].d
 351 @ 10005480  cond:18 = eax u< edx
 352 @ 10005482  ecx = [eax + 8].d
 353 @ 10005485  if (cond:18) then 375 @ 0x100054b2 else 377 @ 0x10005489

 354 @ 10005460  ecx = edx
 355 @ 10005462  ecx = ecx u>> 0x1f
 356 @ 10005465  esi = eax + (ecx << 2) + 0x10
 357 @ 10005469  ecx = [esi].d
 358 @ 1000546b  edx = edx + edx
 359 @ 1000546f  if (ecx == 0) then 378 @ 0x100054a3 else 379 @ 0x10005471

 360 @ 1000529d  [ecx].d = 0
 361 @ 100052a3  goto 309 @ 0x100052b0

 362 @ 100052e4  eax = [esp + 0x18 {var_4_2}].d
 363 @ 100052eb  if (eax u< [ebx + 0x10].d) then 383 @ 0x100052fc else 385 @ 0x100052f0

 364 @ 100052cd  cond:21 = esi != 0
 365 @ 100052cf  [eax].d = esi
 366 @ 100052d1  if (cond:21) then 386 @ 0x1000530d else 387 @ 0x100052d3

 367 @ 10005168  if (esi == 0) then 51 @ 0x10005027 else 343 @ 0x10005171

 368 @ 10005153  [edx + 0x14].d = esi
 369 @ 10005156  goto 367 @ 0x10005168

 370 @ 1000514e  [edx + 0x10].d = esi
 371 @ 10005151  goto 367 @ 0x10005168

 372 @ 10005177  [esi + 0x18].d = edx
 373 @ 1000517a  eax = [edi + 0x10].d
 374 @ 1000517f  if (eax == 0) then 393 @ 0x10005198 else 395 @ 0x10005184

 375 @ 100054b2  call([&data_100080ec].d)  {"ualAlloc"}
 376 @ 100054b2  goto 300 @ 0x100054b8

 377 @ 10005489  if (ecx u< edx) then 375 @ 0x100054b2 else 396 @ 0x1000548b

 378 @ 100054a3  if (esi u< [ebx + 0x10].d) then 375 @ 0x100054b2 else 402 @ 0x100054a5

 379 @ 10005471  eax = ecx
 380 @ 10005473  ecx = [eax + 4].d
 381 @ 10005476  ecx = ecx & 0xfffffff8
 382 @ 1000547b  if (ecx != ebp) then 354 @ 0x10005460 else 350 @ 0x1000547d

 383 @ 100052fc  call([&data_100080ec].d)  {"ualAlloc"}
 384 @ 100052fc  goto 407 @ 0x10005304

 385 @ 100052f0  if ([eax + 0x10].d != ecx) then 408 @ 0x100052f7 else 410 @ 0x100052f2

 386 @ 1000530d  if (esi u< [ebx + 0x10].d) then 314 @ 0x10005348 else 412 @ 0x1000530f

 387 @ 100052d3  ecx = [ecx + 0x1c].d
 388 @ 100052d6  eax = 1
 389 @ 100052db  eax = eax << cl
 390 @ 100052dd  eax = not.d(eax)
 391 @ 100052df  [ebx + 4].d = [ebx + 4].d & eax
 392 @ 100052e2  goto 284 @ 0x1000534e

 393 @ 10005198  eax = [edi + 0x14].d
 394 @ 1000519d  if (eax == 0) then 51 @ 0x10005027 else 416 @ 0x100051a6

 395 @ 10005184  if (eax u< [ebx + 0x10].d) then 417 @ 0x1000518e else 420 @ 0x10005186

 396 @ 1000548b  [ecx + 0xc].d = edi
 397 @ 1000548e  [eax + 8].d = edi
 398 @ 10005491  [edi + 8].d = ecx
 399 @ 10005494  [edi + 0xc].d = eax
 400 @ 10005497  [edi + 0x18].d = 0
 401 @ 1000549e  goto 300 @ 0x100054b8

 402 @ 100054a5  [esi].d = edi
 403 @ 100054a7  [edi + 0x18].d = eax
 404 @ 100054aa  [edi + 0xc].d = edi
 405 @ 100054ad  [edi + 8].d = edi
 406 @ 100054b0  goto 300 @ 0x100054b8

 407 @ 10005304  if (esi == 0) then 284 @ 0x1000534e else 423 @ 0x10005306

 408 @ 100052f7  [eax + 0x14].d = esi
 409 @ 100052fa  goto 407 @ 0x10005304

 410 @ 100052f2  [eax + 0x10].d = esi
 411 @ 100052f5  goto 407 @ 0x10005304

 412 @ 1000530f  edx = [esp + 0x18 {var_4_2}].d
 413 @ 10005313  [esi + 0x18].d = edx
 414 @ 10005316  eax = [ecx + 0x10].d
 415 @ 1000531b  if (eax == 0) then 425 @ 0x10005334 else 427 @ 0x10005320

 416 @ 100051a6  if (eax u< [ebx + 0x10].d) then 258 @ 0x10005098 else 428 @ 0x100051ac

 417 @ 1000518e  call([&data_100080ec].d)  {"ualAlloc"}
 418 @ 10005194  ebp = [esp + 0x14 {i_1}].d
 419 @ 10005194  goto 393 @ 0x10005198

 420 @ 10005186  [esi + 0x10].d = eax
 421 @ 10005189  [eax + 0x18].d = esi
 422 @ 1000518c  goto 393 @ 0x10005198

 423 @ 10005306  ecx = [esp + 0x10 {var_c_1}].d
 424 @ 10005306  goto 386 @ 0x1000530d

 425 @ 10005334  eax = [ecx + 0x14].d
 426 @ 10005339  if (eax == 0) then 284 @ 0x1000534e else 431 @ 0x1000533e

 427 @ 10005320  if (eax u< [ebx + 0x10].d) then 432 @ 0x1000532a else 435 @ 0x10005322

 428 @ 100051ac  [esi + 0x14].d = eax
 429 @ 100051af  [eax + 0x18].d = esi
 430 @ 100051b2  goto 51 @ 0x10005027

 431 @ 1000533e  if (eax u< [ebx + 0x10].d) then 314 @ 0x10005348 else 438 @ 0x10005340

 432 @ 1000532a  call([&data_100080ec].d)  {"ualAlloc"}
 433 @ 10005330  ecx = [esp + 0x10 {var_c_1}].d
 434 @ 10005330  goto 425 @ 0x10005334

 435 @ 10005322  [esi + 0x10].d = eax
 436 @ 10005325  [eax + 0x18].d = esi
 437 @ 10005328  goto 425 @ 0x10005334

 438 @ 10005340  [esi + 0x14].d = eax
 439 @ 10005343  [eax + 0x18].d = esi
 440 @ 10005346  goto 284 @ 0x1000534e

100054f3                                                           cc cc cc cc cc cc cc cc cc cc cc cc cc                     .............

10005500  void* __convention("regparm") sub_10005500(int32_t arg1, int32_t arg2, int32_t* arg3)

   0 @ 10005500  esp = esp - 0xc
   1 @ 10005503  push(ebx)
   2 @ 10005504  push(edi)
   3 @ 10005505  edi = eax
   4 @ 10005507  eax = [&data_10009f1c].d
   5 @ 1000550c  ebx = ecx
   6 @ 10005511  if ([ebx + 0x24].d == eax) then 7 @ 0x10005521 else 10 @ 0x10005513

   7 @ 10005521  cond:0 = ([ebx + 0x1b8].b & 2) == 0
   8 @ 10005528  push(esi)
   9 @ 10005529  if (cond:0) then 16 @ 0x1000553e else 19 @ 0x1000552b

  10 @ 10005513  call([&data_100080ec].d)  {"ualAlloc"}
  11 @ 10005519  edi = pop
  12 @ 1000551a  eax = 0
  13 @ 1000551c  ebx = pop
  14 @ 1000551d  esp = esp + 0xc
  15 @ 10005520  <return> jump(pop)

  16 @ 1000553e  cond:1 = edi u> 0xf0
  17 @ 10005544  push(ebp)
  18 @ 10005545  if (cond:1) then 22 @ 0x100056c9 else 23 @ 0x1000554e

  19 @ 1000552b  esi = ebx + 0x1cc
  20 @ 10005531  call(sub_10003b00)
  21 @ 10005538  if (eax != 0) then 24 @ 0x100057af else 16 @ 0x1000553e

  22 @ 100056c9  if (edi u< -0x40) then 26 @ 0x100056d0 else 29 @ 0x100056cb

  23 @ 1000554e  if (edi u>= 7) then 31 @ 0x10005557 else 34 @ 0x10005550

  24 @ 100057af  eax = 0
  25 @ 100057af  goto 36 @ 0x100057b1

  26 @ 100056d0  esi = edi + 0xf
  27 @ 100056d3  esi = esi & 0xfffffff8
  28 @ 100056da  if ([ebx + 4].d == 0) then 41 @ 0x100056ee else 43 @ 0x100056dc

  29 @ 100056cb  esi = esi | 0xffffffff
  30 @ 100056ce  goto 41 @ 0x100056ee

  31 @ 10005557  esi = edi + 0xf
  32 @ 1000555a  esi = esi & 0xfffffff8
  33 @ 1000555a  goto 48 @ 0x1000555d

  34 @ 10005550  esi = 0x10
  35 @ 10005555  goto 48 @ 0x1000555d

  36 @ 100057b1  esi = pop
  37 @ 100057b2  edi = pop
  38 @ 100057b3  ebx = pop
  39 @ 100057b4  esp = esp + 0xc
  40 @ 100057b7  <return> jump(pop)

  41 @ 100056ee  edx = [ebx + 8].d
  42 @ 100056f3  if (esi u> edx) then 55 @ 0x1000574d else 57 @ 0x100056f5

  43 @ 100056dc  push(esi)
  44 @ 100056dd  push(ebx)
  45 @ 100056de  call(sub_100031a0)
  46 @ 100056e3  esp = esp + 8
  47 @ 100056e3  goto 61 @ 0x100056e8

  48 @ 1000555d  edx = [ebx].d
  49 @ 1000555f  edi = esi
  50 @ 10005561  edi = edi u>> 3
  51 @ 10005564  eax = edx
  52 @ 10005566  ecx = edi
  53 @ 10005568  eax = eax u>> cl
  54 @ 1000556c  if ((al & 3) == 0) then 62 @ 0x100055d2 else 63 @ 0x1000556e

  55 @ 1000574d  eax = [ebx + 0xc].d
  56 @ 10005752  if (esi u>= eax) then 72 @ 0x1000577c else 77 @ 0x10005754

  57 @ 100056f5  ecx = [ebx + 0x14].d
  58 @ 100056f8  eax = edx
  59 @ 100056fa  eax = eax - esi
  60 @ 100056ff  if (eax u< 0x10) then 91 @ 0x10005729 else 103 @ 0x10005701

  61 @ 100056e8  if (eax != 0) then 117 @ 0x10005787 else 41 @ 0x100056ee

  62 @ 100055d2  if (esi u<= [ebx + 8].d) then 41 @ 0x100056ee else 120 @ 0x100055da

  63 @ 1000556e  eax = not.d(eax)
  64 @ 10005570  eax = eax & 1
  65 @ 10005573  edi = edi + eax
  66 @ 10005575  esi = [ebx + (edi << 3) + 0x30].d
  67 @ 10005579  ecx = [esi + 8].d
  68 @ 1000557c  eax = ebx + (edi << 3) + 0x28
  69 @ 10005580  cond:2 = eax != ecx
  70 @ 10005582  ebp = esi + 8
  71 @ 10005585  if (cond:2) then 121 @ 0x1000559b else 122 @ 0x10005587

  72 @ 1000577c  push(esi)
  73 @ 1000577d  eax = ebx
  74 @ 1000577f  call(sub_100046b0)
  75 @ 10005784  esp = esp + 4
  76 @ 10005784  goto 117 @ 0x10005787

  77 @ 10005754  ecx = [ebx + 0x18].d
  78 @ 10005757  eax = eax - esi
  79 @ 10005759  [ebx + 0xc].d = eax
  80 @ 1000575c  edx = ecx + esi
  81 @ 1000575f  eax = eax | 1
  82 @ 10005762  [ebx + 0x18].d = edx
  83 @ 10005765  [edx + 4].d = eax
  84 @ 10005768  eax = [&data_10009f1c].d
  85 @ 1000576d  esi = esi | 3
  86 @ 10005770  eax = eax ^ ebx
  87 @ 10005772  [ecx + 4].d = esi
  88 @ 10005775  [edx].d = eax
  89 @ 10005777  eax = ecx + 8
  90 @ 1000577a  goto 117 @ 0x10005787

  91 @ 10005729  eax = 0
  92 @ 1000572b  [ebx + 8].d = eax
  93 @ 1000572e  [ebx + 0x14].d = eax
  94 @ 10005731  eax = edx
  95 @ 10005733  eax = eax | 3
  96 @ 10005736  [ecx + 4].d = eax
  97 @ 10005739  eax = [&data_10009f1c].d
  98 @ 1000573e  [edx + ecx + 4].d = [edx + ecx + 4].d | 1
  99 @ 10005743  eax = eax ^ ebx
 100 @ 10005745  [edx + ecx].d = eax
 101 @ 10005748  eax = ecx + 8
 102 @ 1000574b  goto 117 @ 0x10005787

 103 @ 10005701  edx = ecx + esi
 104 @ 10005704  [ebx + 8].d = eax
 105 @ 10005707  edi = eax
 106 @ 10005709  [ebx + 0x14].d = edx
 107 @ 1000570c  edi = edi | 1
 108 @ 1000570f  [edx + 4].d = edi
 109 @ 10005712  [edx + eax].d = eax
 110 @ 10005715  eax = [&data_10009f1c].d
 111 @ 1000571a  esi = esi | 3
 112 @ 1000571d  eax = eax ^ ebx
 113 @ 1000571f  [ecx + 4].d = esi
 114 @ 10005722  [edx].d = eax
 115 @ 10005724  eax = ecx + 8
 116 @ 10005727  goto 117 @ 0x10005787

 117 @ 10005787  cond:3 = ([ebx + 0x1b8].b & 2) == 0
 118 @ 1000578e  ebp = pop
 119 @ 1000578f  if (cond:3) then 36 @ 0x100057b1 else 129 @ 0x10005791

 120 @ 100055da  if (eax == 0) then 133 @ 0x100056b9 else 134 @ 0x100055e0

 121 @ 1000559b  if (ecx u< [ebx + 0x10].d) then 152 @ 0x100055a5 else 154 @ 0x1000559d

 122 @ 10005587  eax = 1
 123 @ 1000558c  ecx = edi
 124 @ 1000558e  eax = eax << cl
 125 @ 10005590  eax = not.d(eax)
 126 @ 10005592  eax = eax & edx
 127 @ 10005594  [ebx].d = eax
 128 @ 10005596  goto 157 @ 0x100055ab

 129 @ 10005791  ebx = ebx + 0x1cc
 130 @ 10005797  temp1.d = [ebx + 0x44].d
 131 @ 10005797  [ebx + 0x44].d = [ebx + 0x44].d - 1
 132 @ 1000579b  if (temp1.d != 1) then 36 @ 0x100057b1 else 166 @ 0x1000579d

 133 @ 100056b9  if ([ebx + 4].d == 0) then 41 @ 0x100056ee else 176 @ 0x100056bb

 134 @ 100055e0  ecx = edi
 135 @ 100055e2  eax = eax << cl
 136 @ 100055e4  ebp = ebp | 0xffffffff
 137 @ 100055e7  ebp = ebp << cl
 138 @ 100055e9  ebp = ebp + ebp
 139 @ 100055eb  eax = eax & ebp
 140 @ 100055ed  ecx = eax
 141 @ 100055ef  ecx = neg.d(ecx)
 142 @ 100055f1  ecx = ecx & eax
 143 @ 100055f3  eax, eflags = _bit_scan_forward(ecx)
 144 @ 100055f6  edi = eax
 145 @ 100055f8  ebp = [ebx + (edi << 3) + 0x30].d
 146 @ 100055fc  [esp + 0x10 {var_c_1}].d = eax
 147 @ 10005600  eax = ebx + (edi << 3) + 0x28
 148 @ 10005604  ecx = ebp + 8
 149 @ 10005607  [esp + 0x18 {var_4_1}].d = ecx
 150 @ 1000560b  ecx = [ecx].d
 151 @ 1000560f  if (eax != ecx) then 180 @ 0x10005625 else 181 @ 0x10005611

 152 @ 100055a5  call([&data_100080ec].d)  {"ualAlloc"}
 153 @ 100055a5  goto 157 @ 0x100055ab

 154 @ 1000559d  [eax + 8].d = ecx
 155 @ 100055a0  [ecx + 0xc].d = eax
 156 @ 100055a3  goto 157 @ 0x100055ab

 157 @ 100055ab  edx = [&data_10009f1c].d
 158 @ 100055b1  ecx = edi << 3
 159 @ 100055b8  ecx = ecx | 3
 160 @ 100055bb  [esi + 4].d = ecx
 161 @ 100055be  [esi + (edi << 3) + 4].d = [esi + (edi << 3) + 4].d | 1
 162 @ 100055c3  edx = edx ^ ebx
 163 @ 100055c5  [esi + (edi << 3)].d = edx
 164 @ 100055c8  eax = ebp
 165 @ 100055ca  goto 117 @ 0x10005787

 166 @ 1000579d  [ebx + 0x48].d = 0
 167 @ 100057a4  ecx = 0
 168 @ 100057a6  temp0.d = [ebx].d
 169 @ 100057a6  [ebx].d = ecx
 170 @ 100057a6  ecx = temp0.d
 171 @ 100057a8  esi = pop
 172 @ 100057a9  edi = pop
 173 @ 100057aa  ebx = pop
 174 @ 100057ab  esp = esp + 0xc
 175 @ 100057ae  <return> jump(pop)

 176 @ 100056bb  push(esi)
 177 @ 100056bc  call(sub_10002f70)
 178 @ 100056c1  esp = esp + 4
 179 @ 100056c4  goto 61 @ 0x100056e8

 180 @ 10005625  if (ecx u< [ebx + 0x10].d) then 188 @ 0x1000562f else 190 @ 0x10005627

 181 @ 10005611  eax = 1
 182 @ 10005616  ecx = edi
 183 @ 10005618  eax = eax << cl
 184 @ 1000561a  eax = not.d(eax)
 185 @ 1000561c  eax = eax & edx
 186 @ 1000561e  [ebx].d = eax
 187 @ 10005620  goto 193 @ 0x10005635

 188 @ 1000562f  call([&data_100080ec].d)  {"ualAlloc"}
 189 @ 1000562f  goto 193 @ 0x10005635

 190 @ 10005627  [eax + 8].d = ecx
 191 @ 1000562a  [ecx + 0xc].d = eax
 192 @ 1000562d  goto 193 @ 0x10005635

 193 @ 10005635  edx = [&data_10009f1c].d
 194 @ 1000563b  edi = edi + edi
 195 @ 1000563d  edi = edi + edi
 196 @ 1000563f  edi = edi + edi
 197 @ 10005641  edi = edi - esi
 198 @ 10005643  ecx = esi
 199 @ 10005645  esi = esi + ebp
 200 @ 10005647  ecx = ecx | 3
 201 @ 1000564a  [ebp + 4].d = ecx
 202 @ 1000564d  edx = edx ^ ebx
 203 @ 1000564f  eax = edi
 204 @ 10005651  eax = eax | 1
 205 @ 10005654  [esi].d = edx
 206 @ 10005656  [esi + 4].d = eax
 207 @ 10005659  [esi + edi].d = edi
 208 @ 1000565c  eax = [ebx + 8].d
 209 @ 10005661  if (eax == 0) then 210 @ 0x100056a6 else 214 @ 0x10005663

 210 @ 100056a6  eax = [esp + 0x18 {var_4_1}].d
 211 @ 100056aa  [ebx + 8].d = edi
 212 @ 100056ad  [ebx + 0x14].d = esi
 213 @ 100056b0  goto 117 @ 0x10005787

 214 @ 10005663  ecx = [ebx + 0x14].d
 215 @ 10005666  eax = eax u>> 3
 216 @ 10005669  [esp + 0x14 {var_8_1}].d = ecx
 217 @ 1000566d  ecx = eax
 218 @ 1000566f  edx = 1
 219 @ 10005674  edx = edx << cl
 220 @ 10005676  ebp = ebx + (eax << 3) + 0x28
 221 @ 1000567a  eax = [ebx].d
 222 @ 1000567e  if ((edx & eax) != 0) then 223 @ 0x10005686 else 225 @ 0x10005680

 223 @ 10005686  ecx = [ebp + 8].d
 224 @ 1000568c  if (ecx u>= [ebx + 0x10].d) then 228 @ 0x10005696 else 234 @ 0x1000568e

 225 @ 10005680  eax = eax | edx
 226 @ 10005682  [ebx].d = eax
 227 @ 10005684  goto 236 @ 0x10005694

 228 @ 10005696  eax = [esp + 0x14 {var_8_1}].d
 229 @ 1000569a  [ebp + 8].d = eax
 230 @ 1000569d  [ecx + 0xc].d = eax
 231 @ 100056a0  [eax + 8].d = ecx
 232 @ 100056a3  [eax + 0xc].d = ebp
 233 @ 100056a3  goto 210 @ 0x100056a6

 234 @ 1000568e  call([&data_100080ec].d)  {"ualAlloc"}
 235 @ 1000568e  goto 236 @ 0x10005694

 236 @ 10005694  ecx = ebp
 237 @ 10005694  goto 228 @ 0x10005696

100057b8                                                                          cc cc cc cc cc cc cc cc                          ........

100057c0  void* __convention("regparm") sub_100057c0(void* arg1, int32_t* arg2, int32_t arg3, int32_t* arg4, char arg5)

   0 @ 100057c0  esp = esp - 0xc
   1 @ 100057c3  push(esi)
   2 @ 100057c4  esi = eax
   3 @ 100057c6  eax = [&data_10009f1c].d
   4 @ 100057cd  if (eax != 0) then 5 @ 0x100057d4 else 7 @ 0x100057cf

   5 @ 100057d4  ecx = 0
   6 @ 100057d8  if (esi == ecx) then 9 @ 0x100057f3 else 11 @ 0x100057da

   7 @ 100057cf  call(sub_100044b0)
   8 @ 100057cf  goto 5 @ 0x100057d4

   9 @ 100057f3  eax = [esp + 0x18 {arg3}].d
  10 @ 100057f9  if (eax != ecx) then 13 @ 0x1000580a else 19 @ 0x100057fb

  11 @ 100057da  edx = [esp + 0x18 {arg3}].d
  12 @ 100057e0  if (edx != ecx) then 24 @ 0x100057e9 else 27 @ 0x100057e2

  13 @ 1000580a  edx = [esp + 0x18 {arg3}].d
  14 @ 1000580e  eax = eax + eax
  15 @ 10005810  eax = eax + eax
  16 @ 10005812  cond:0 = eax u>= 7
  17 @ 10005815  [esp + 4 {var_c}].d = ecx
  18 @ 10005819  if (cond:0) then 31 @ 0x10005825 else 35 @ 0x1000581b

  19 @ 100057fb  ecx = [esp + 0x14 {arg2}].d
  20 @ 100057ff  eax = 0
  21 @ 10005801  esi = pop
  22 @ 10005802  esp = esp + 0xc
  23 @ 10005805  <return> tailcall(sub_10005500)

  24 @ 100057e9  [esp + 4 {var_c}].d = esi
  25 @ 100057ed  [esp + 8 {var_8}].d = ecx
  26 @ 100057f1  goto 37 @ 0x1000582f

  27 @ 100057e2  eax = esi
  28 @ 100057e4  esi = pop
  29 @ 100057e5  esp = esp + 0xc
  30 @ 100057e8  <return> jump(pop)

  31 @ 10005825  eax = eax + 0xf
  32 @ 10005828  eax = eax & 0xfffffff8
  33 @ 1000582b  [esp + 8 {var_8}].d = eax
  34 @ 1000582b  goto 37 @ 0x1000582f

  35 @ 1000581b  [esp + 8 {var_8}].d = 0x10
  36 @ 10005823  goto 37 @ 0x1000582f

  37 @ 1000582f  cond:1 = ([esp + 0x20 {arg5}].b & 1) == 0
  38 @ 10005834  push(ebp)
  39 @ 10005835  if (cond:1) then 40 @ 0x10005864 else 44 @ 0x10005837

  40 @ 10005864  [esp + 0x10 {var_4}].d = ecx
  41 @ 10005868  ebp = 0
  42 @ 1000586a  ebx = ebx
  43 @ 1000586a  goto 47 @ 0x10005870

  44 @ 10005837  ecx = [esp + 0x20 {arg4}].d
  45 @ 1000583b  eax = [ecx].d
  46 @ 10005840  if (eax u>= 7) then 50 @ 0x10005853 else 56 @ 0x10005842

  47 @ 10005870  eax = [esp + 0x20 {arg4}].d
  48 @ 10005874  eax = [eax + (ecx << 2)].d
  49 @ 1000587a  if (eax u>= 7) then 60 @ 0x10005883 else 63 @ 0x1000587c

  50 @ 10005853  eax = eax + 0xf
  51 @ 10005856  eax = eax & 0xfffffff8
  52 @ 10005859  ebp = eax
  53 @ 1000585b  [esp + 0x10 {var_4}].d = eax
  54 @ 1000585f  ebp = ebp * edx
  55 @ 10005862  goto 65 @ 0x10005892

  56 @ 10005842  [esp + 0x10 {var_4}].d = 0x10
  57 @ 1000584a  ebp = [esp + 0x10 {var_4}].d
  58 @ 1000584e  ebp = ebp * edx
  59 @ 10005851  goto 65 @ 0x10005892

  60 @ 10005883  eax = eax + 0xf
  61 @ 10005886  eax = eax & 0xfffffff8
  62 @ 10005886  goto 80 @ 0x10005889

  63 @ 1000587c  eax = 0x10
  64 @ 10005881  goto 80 @ 0x10005889

  65 @ 10005892  ecx = [esp + 0xc {var_8}].d
  66 @ 10005896  push(ebx)
  67 @ 10005897  push(edi)
  68 @ 10005898  edi = [esp + 0x20 {arg2}].d
  69 @ 1000589c  eax = [edi + 0x1b8].d
  70 @ 100058a2  esi = eax
  71 @ 100058a4  eax = eax & 0xfffffffe
  72 @ 100058a7  [edi + 0x1b8].d = eax
  73 @ 100058ad  eax = ecx + ebp - 8
  74 @ 100058b1  ecx = edi
  75 @ 100058b3  esi = esi & 1
  76 @ 100058b6  call(sub_10005500)
  77 @ 100058bb  cond:2 = esi == 0
  78 @ 100058bd  ebx = eax
  79 @ 100058bf  if (cond:2) then 83 @ 0x100058ca else 84 @ 0x100058c1

  80 @ 10005889  ecx = ecx + 1
  81 @ 1000588c  ebp = ebp + eax
  82 @ 10005890  if (ecx != edx) then 47 @ 0x10005870 else 65 @ 0x10005892

  83 @ 100058ca  if (ebx == 0) then 86 @ 0x100058e4 else 93 @ 0x100058d3

  84 @ 100058c1  [edi + 0x1b8].d = [edi + 0x1b8].d | 1
  85 @ 100058c1  goto 83 @ 0x100058ca

  86 @ 100058e4  edi = pop
  87 @ 100058e5  ebx = pop
  88 @ 100058e6  ebp = pop
  89 @ 100058e7  eax = 0
  90 @ 100058e9  esi = pop
  91 @ 100058ea  esp = esp + 0xc
  92 @ 100058ed  <return> jump(pop)

  93 @ 100058d3  if (([edi + 0x1b8].b & 2) == 0) then 94 @ 0x100058ee else 98 @ 0x100058d5

  94 @ 100058ee  edi = [ebx - 4].d
  95 @ 100058f1  esi = ebx - 8
  96 @ 100058f4  edi = edi & 0xfffffff8
  97 @ 100058fc  if (([esp + 0x2c {arg5}].b & 2) == 0) then 101 @ 0x10005913 else 104 @ 0x100058fe

  98 @ 100058d5  esi = edi + 0x1cc
  99 @ 100058db  call(sub_10003b00)
 100 @ 100058e2  if (eax == 0) then 94 @ 0x100058ee else 86 @ 0x100058e4

 101 @ 10005913  cond:3 = [esp + 0x10 {var_c}].d != 0
 102 @ 10005918  ebx = [esp + 0x20 {arg2}].d
 103 @ 1000591c  if (cond:3) then 112 @ 0x1000593f else 120 @ 0x1000591e

 104 @ 100058fe  edx = edi
 105 @ 10005900  edx = edx - [esp + 0x14 {var_8}].d
 106 @ 10005904  edx = edx - 4
 107 @ 10005907  push(edx)
 108 @ 10005908  push(zx.d(0))
 109 @ 1000590a  push(ebx)
 110 @ 1000590b  call(sub_10007938)
 111 @ 1000590b  noreturn
{ Does not return }

 112 @ 1000593f  eax = [esp + 0x10 {var_c}].d
 113 @ 10005943  edx = esi + 8
 114 @ 10005946  [eax].d = edx
 115 @ 10005948  edx = [esp + 0x24 {arg3}].d
 116 @ 1000594c  ecx = 0
 117 @ 1000594e  temp1.d = edx
 118 @ 1000594e  edx = edx - 1
 119 @ 10005951  if (temp1.d == 1) then 132 @ 0x100059ad else 139 @ 0x10005953

 120 @ 1000591e  eax = esi + ebp
 121 @ 10005921  edi = edi - ebp
 122 @ 10005923  ecx = eax + 8
 123 @ 10005926  [esp + 0x10 {var_c}].d = ecx
 124 @ 1000592a  ecx = [&data_10009f1c].d
 125 @ 10005930  edx = edi
 126 @ 10005932  edx = edx | 3
 127 @ 10005935  ecx = ecx ^ ebx
 128 @ 10005937  [eax + 4].d = edx
 129 @ 1000593a  [edi + eax].d = ecx
 130 @ 1000593d  edi = ebp
 131 @ 1000593d  goto 112 @ 0x1000593f

 132 @ 100059ad  edx = [&data_10009f1c].d
 133 @ 100059b3  ecx = edi
 134 @ 100059b5  ecx = ecx | 3
 135 @ 100059b8  edx = edx ^ ebx
 136 @ 100059ba  [esi + 4].d = ecx
 137 @ 100059bd  [edi + esi].d = edx
 138 @ 100059c7  if (([ebx + 0x1b8].b & 2) == 0) then 141 @ 0x100059e0 else 148 @ 0x100059c9

 139 @ 10005953  eax = 0
 140 @ 10005953  goto 152 @ 0x10005955

 141 @ 100059e0  eax = [esp + 0x10 {var_c}].d
 142 @ 100059e4  edi = pop
 143 @ 100059e5  ebx = pop
 144 @ 100059e6  ebp = pop
 145 @ 100059e7  esi = pop
 146 @ 100059e8  esp = esp + 0xc
 147 @ 100059eb  <return> jump(pop)

 148 @ 100059c9  ebx = ebx + 0x1cc
 149 @ 100059cf  temp2.d = [ebx + 0x44].d
 150 @ 100059cf  [ebx + 0x44].d = [ebx + 0x44].d - 1
 151 @ 100059d3  if (temp2.d != 1) then 141 @ 0x100059e0 else 154 @ 0x100059d5

 152 @ 10005955  ebp = [esp + 0x18 {var_4}].d
 153 @ 1000595b  if (ebp == 0) then 160 @ 0x10005961 else 163 @ 0x1000595d

 154 @ 100059d5  [ebx + 0x48].d = 0
 155 @ 100059dc  eax = 0
 156 @ 100059de  temp0.d = [ebx].d
 157 @ 100059de  [ebx].d = eax
 158 @ 100059de  eax = temp0.d
 159 @ 100059de  goto 141 @ 0x100059e0

 160 @ 10005961  ebp = [esp + 0x28 {arg4}].d
 161 @ 10005965  eax = [eax + ebp].d
 162 @ 1000596b  if (eax u>= 7) then 165 @ 0x10005974 else 168 @ 0x1000596d

 163 @ 1000595d  eax = ebp
 164 @ 1000595f  goto 170 @ 0x1000597a

 165 @ 10005974  eax = eax + 0xf
 166 @ 10005977  eax = eax & 0xfffffff8
 167 @ 10005977  goto 170 @ 0x1000597a

 168 @ 1000596d  eax = 0x10
 169 @ 10005972  goto 170 @ 0x1000597a

 170 @ 1000597a  ebp = eax
 171 @ 1000597c  ebp = ebp | 3
 172 @ 1000597f  [esi + 4].d = ebp
 173 @ 10005982  ebp = [&data_10009f1c].d
 174 @ 10005988  ebp = ebp ^ ebx
 175 @ 1000598a  [esi + eax].d = ebp
 176 @ 1000598d  ebp = [esp + 0x10 {var_c}].d
 177 @ 10005991  esi = esi + eax
 178 @ 10005993  ecx = ecx + 1
 179 @ 10005996  edi = edi - eax
 180 @ 10005998  cond:4 = ecx != edx
 181 @ 1000599a  ebx = esi + 8
 182 @ 1000599d  eax = ecx << 2
 183 @ 100059a4  [eax + ebp].d = ebx
 184 @ 100059a7  ebx = [esp + 0x20 {arg2}].d
 185 @ 100059ab  if (cond:4) then 152 @ 0x10005955 else 132 @ 0x100059ad

10005910                                                  83 c4 0c                                                         ...
100059ec                                      cc cc cc cc                                                              ....

100059f0  void* __convention("regparm") sub_100059f0(int32_t arg1, int32_t arg2, int32_t* arg3, int32_t arg4)

   0 @ 100059f0  esp = esp - 0xc
   1 @ 100059f3  push(ebx)
   2 @ 100059f4  push(ebp)
   3 @ 100059f5  ebp = [esp + 0x18 {arg4}].d
   4 @ 100059f9  cond:0 = ebp u> 8
   5 @ 100059fc  ebx = ecx
   6 @ 100059fe  if (cond:0) then 7 @ 0x10005a0d else 8 @ 0x10005a00

   7 @ 10005a0d  if (ebp u>= 0x10) then 12 @ 0x10005a14 else 14 @ 0x10005a0f

   8 @ 10005a00  ebp = pop
   9 @ 10005a01  ebx = pop
  10 @ 10005a02  esp = esp + 0xc
  11 @ 10005a05  <return> tailcall(sub_10005500)

  12 @ 10005a14  ecx = ebp - 1
  13 @ 10005a19  if ((ebp & ecx) == 0) then 16 @ 0x10005a2c else 21 @ 0x10005a1b

  14 @ 10005a0f  ebp = 0x10
  15 @ 10005a0f  goto 12 @ 0x10005a14

  16 @ 10005a2c  edx = 0xffffffc0
  17 @ 10005a31  edx = edx - ebp
  18 @ 10005a33  cond:1 = eax u>= edx
  19 @ 10005a35  push(esi)
  20 @ 10005a36  if (cond:1) then 23 @ 0x10005be1 else 29 @ 0x10005a3f

  21 @ 10005a1b  ecx = 0x10
  22 @ 10005a22  if (ebp u<= ecx) then 30 @ 0x10005a2a else 32 @ 0x10005a24

  23 @ 10005be1  esi = pop
  24 @ 10005be2  ebp = pop
  25 @ 10005be3  eax = 0
  26 @ 10005be5  ebx = pop
  27 @ 10005be6  esp = esp + 0xc
  28 @ 10005be9  <return> jump(pop)

  29 @ 10005a3f  if (eax u>= 7) then 34 @ 0x10005a4c else 39 @ 0x10005a41

  30 @ 10005a2a  ebp = ecx
  31 @ 10005a2a  goto 16 @ 0x10005a2c

  32 @ 10005a24  ecx = ecx + ecx
  33 @ 10005a28  if (ecx u< ebp) then 32 @ 0x10005a24 else 30 @ 0x10005a2a

  34 @ 10005a4c  eax = eax + 0xf
  35 @ 10005a4f  eax = eax & 0xfffffff8
  36 @ 10005a52  [esp + 0x1c {arg4}].d = eax
  37 @ 10005a56  esi = eax
  38 @ 10005a56  goto 42 @ 0x10005a58

  39 @ 10005a41  esi = 0x10
  40 @ 10005a46  [esp + 0x1c {arg4}].d = esi
  41 @ 10005a4a  goto 42 @ 0x10005a58

  42 @ 10005a58  eax = esi + ebp + 8
  43 @ 10005a5c  ecx = ebx
  44 @ 10005a5e  call(sub_10005500)
  45 @ 10005a63  ecx = eax
  46 @ 10005a65  eax = 0
  47 @ 10005a67  cond:3 = ecx == eax
  48 @ 10005a69  [esp + 0x10 {var_8_1}].d = ecx
  49 @ 10005a6d  if (cond:3) then 23 @ 0x10005be1 else 50 @ 0x10005a73

  50 @ 10005a73  cond:2 = ([ebx + 0x1b8].b & 2) == 0
  51 @ 10005a7a  push(edi)
  52 @ 10005a7b  [esp + 0x10 {var_c}].d = eax
  53 @ 10005a7f  [esp + 0x18 {var_4}].d = eax
  54 @ 10005a83  edi = ecx - 8
  55 @ 10005a86  if (cond:2) then 56 @ 0x10005aa9 else 64 @ 0x10005a88

  56 @ 10005aa9  edx = 0
  57 @ 10005aab  eax = ecx
  58 @ 10005aad  temp2.d = ebp
  59 @ 10005aad  temp0.d = divu.dp.d(edx:eax, temp2.d)
  60 @ 10005aad  temp1.d = modu.dp.d(edx:eax, temp2.d)
  61 @ 10005aad  eax = temp0.d
  62 @ 10005aad  edx = temp1.d
  63 @ 10005ab1  if (edx == 0) then 67 @ 0x10005b3f else 69 @ 0x10005ab7

  64 @ 10005a88  esi = ebx + 0x1cc
  65 @ 10005a8e  call(sub_10003b00)
  66 @ 10005a95  if (eax == 0) then 77 @ 0x10005aa1 else 80 @ 0x10005a97

  67 @ 10005b3f  ebp = 1
  68 @ 10005b3f  goto 87 @ 0x10005b44

  69 @ 10005ab7  esi = ecx + ebp - 1
  70 @ 10005abb  eax = ebp
  71 @ 10005abd  eax = neg.d(eax)
  72 @ 10005abf  esi = esi & eax
  73 @ 10005ac1  esi = esi - 8
  74 @ 10005ac4  ecx = esi
  75 @ 10005ac6  ecx = ecx - edi
  76 @ 10005acb  if (ecx u>= 0x10) then 89 @ 0x10005acf else 98 @ 0x10005acd

  77 @ 10005aa1  ecx = [esp + 0x14 {var_8_1}].d
  78 @ 10005aa5  esi = [esp + 0x20 {arg4}].d
  79 @ 10005aa5  goto 56 @ 0x10005aa9

  80 @ 10005a97  edi = pop
  81 @ 10005a98  esi = pop
  82 @ 10005a99  ebp = pop
  83 @ 10005a9a  eax = 0
  84 @ 10005a9c  ebx = pop
  85 @ 10005a9d  esp = esp + 0xc
  86 @ 10005aa0  <return> jump(pop)

  87 @ 10005b44  ecx = [edi + 4].d
  88 @ 10005b4a  if ((cl & 3) == 0) then 100 @ 0x10005b9a else 102 @ 0x10005b4c

  89 @ 10005acf  edx = [edi + 4].d
  90 @ 10005ad2  eax = esi
  91 @ 10005ad4  ecx = edx
  92 @ 10005ad6  eax = eax - edi
  93 @ 10005ad8  ecx = ecx & 0xfffffff8
  94 @ 10005adb  ecx = ecx - eax
  95 @ 10005add  cond:4 = (dl & 3) != 0
  96 @ 10005ae0  ebp = 1
  97 @ 10005ae5  if (cond:4) then 106 @ 0x10005af8 else 129 @ 0x10005ae7

  98 @ 10005acd  esi = esi + ebp
  99 @ 10005acd  goto 89 @ 0x10005acf

 100 @ 10005b9a  esi = [esp + 0x18 {var_4}].d
 101 @ 10005b9a  goto 136 @ 0x10005ba5

 102 @ 10005b4c  eax = ecx
 103 @ 10005b4e  eax = eax & 0xfffffff8
 104 @ 10005b51  edx = esi + 0x10
 105 @ 10005b56  if (eax u<= edx) then 100 @ 0x10005b9a else 137 @ 0x10005b58

 106 @ 10005af8  edx = [esi + 4].d
 107 @ 10005afb  edx = edx & ebp
 108 @ 10005afd  edx = edx | ecx
 109 @ 10005aff  edx = edx | 2
 110 @ 10005b02  [esi + 4].d = edx
 111 @ 10005b05  edx = [&data_10009f1c].d
 112 @ 10005b0b  [ecx + esi + 4].d = [ecx + esi + 4].d | ebp
 113 @ 10005b0f  edx = edx ^ ebx
 114 @ 10005b11  [ecx + esi].d = edx
 115 @ 10005b14  ecx = [edi + 4].d
 116 @ 10005b17  edx = [&data_10009f1c].d
 117 @ 10005b1d  ecx = ecx & ebp
 118 @ 10005b1f  ecx = ecx | eax
 119 @ 10005b21  ecx = ecx | 2
 120 @ 10005b24  [edi + 4].d = ecx
 121 @ 10005b27  [eax + edi + 4].d = [eax + edi + 4].d | ebp
 122 @ 10005b2b  edx = edx ^ ebx
 123 @ 10005b2d  [eax + edi].d = edx
 124 @ 10005b30  edi = edi + 8
 125 @ 10005b33  [esp + 0x10 {var_c}].d = edi
 126 @ 10005b37  edi = esi
 127 @ 10005b39  esi = [esp + 0x20 {arg4}].d
 128 @ 10005b3d  goto 87 @ 0x10005b44

 129 @ 10005ae7  edx = [edi].d
 130 @ 10005ae9  edx = edx + eax
 131 @ 10005aeb  [esi].d = edx
 132 @ 10005aed  [esi + 4].d = ecx
 133 @ 10005af0  edi = esi
 134 @ 10005af2  esi = [esp + 0x20 {arg4}].d
 135 @ 10005af6  goto 87 @ 0x10005b44

 136 @ 10005ba5  if (([ebx + 0x1b8].b & 2) == 0) then 159 @ 0x10005bbe else 161 @ 0x10005ba7

 137 @ 10005b58  ecx = ecx & ebp
 138 @ 10005b5a  ecx = ecx | esi
 139 @ 10005b5c  ecx = ecx | 2
 140 @ 10005b5f  [edi + 4].d = ecx
 141 @ 10005b62  ecx = [&data_10009f1c].d
 142 @ 10005b68  [edi + esi + 4].d = [edi + esi + 4].d | ebp
 143 @ 10005b6c  eax = eax - esi
 144 @ 10005b6e  ecx = ecx ^ ebx
 145 @ 10005b70  [edi + esi].d = ecx
 146 @ 10005b73  ecx = [edi + esi + 4].d
 147 @ 10005b77  edx = eax
 148 @ 10005b79  eax = edi + esi
 149 @ 10005b7c  ecx = ecx & ebp
 150 @ 10005b7e  ecx = ecx | edx
 151 @ 10005b80  ecx = ecx | 2
 152 @ 10005b83  [eax + 4].d = ecx
 153 @ 10005b86  ecx = [&data_10009f1c].d
 154 @ 10005b8c  [eax + edx + 4].d = [eax + edx + 4].d | ebp
 155 @ 10005b90  ecx = ecx ^ ebx
 156 @ 10005b92  [eax + edx].d = ecx
 157 @ 10005b95  esi = eax + 8
 158 @ 10005b98  goto 136 @ 0x10005ba5

 159 @ 10005bbe  eax = [esp + 0x10 {var_c}].d
 160 @ 10005bc4  if (eax == 0) then 165 @ 0x10005bcd else 166 @ 0x10005bc6

 161 @ 10005ba7  ebx = ebx + 0x1cc
 162 @ 10005bad  temp3.d = [ebx + 0x44].d
 163 @ 10005bad  [ebx + 0x44].d = [ebx + 0x44].d - 1
 164 @ 10005bb1  if (temp3.d != 1) then 159 @ 0x10005bbe else 168 @ 0x10005bb3

 165 @ 10005bcd  if (esi == 0) then 174 @ 0x10005bd6 else 181 @ 0x10005bcf

 166 @ 10005bc6  call(sub_10004f40)
 167 @ 10005bc6  goto 165 @ 0x10005bcd

 168 @ 10005bb3  [ebx + 0x48].d = 0
 169 @ 10005bba  edx = 0
 170 @ 10005bbc  temp0.d = [ebx].d
 171 @ 10005bbc  [ebx].d = edx
 172 @ 10005bbc  edx = temp0.d
 173 @ 10005bbc  goto 159 @ 0x10005bbe

 174 @ 10005bd6  eax = edi + 8
 175 @ 10005bd9  edi = pop
 176 @ 10005bda  esi = pop
 177 @ 10005bdb  ebp = pop
 178 @ 10005bdc  ebx = pop
 179 @ 10005bdd  esp = esp + 0xc
 180 @ 10005be0  <return> jump(pop)

 181 @ 10005bcf  eax = esi
 182 @ 10005bd1  call(sub_10004f40)
 183 @ 10005bd1  goto 174 @ 0x10005bd6

10005bea                                cc cc cc cc cc cc                                                            ......

10005bf0  void* __convention("regparm") sub_10005bf0(int32_t* arg1, void* arg2, void* arg3)

   0 @ 10005bf0  esp = esp - 8
   1 @ 10005bf3  cond:0 = [esp + 0x10 {arg3}].d u< -0x40
   2 @ 10005bf8  push(edi)
   3 @ 10005bf9  edi = eax
   4 @ 10005bfb  if (cond:0) then 5 @ 0x10005c04 else 8 @ 0x10005bfd

   5 @ 10005c04  cond:1 = ([edi + 0x1b8].b & 2) == 0
   6 @ 10005c0b  push(esi)
   7 @ 10005c0c  if (cond:1) then 12 @ 0x10005c21 else 25 @ 0x10005c0e

   8 @ 10005bfd  eax = 0
   9 @ 10005bff  edi = pop
  10 @ 10005c00  esp = esp + 8
  11 @ 10005c03  <return> jump(pop)

  12 @ 10005c21  eax = [esp + 0x14 {arg2}].d
  13 @ 10005c25  ecx = [eax - 4].d
  14 @ 10005c28  eax = eax - 8
  15 @ 10005c2b  push(ebx)
  16 @ 10005c2c  ebx = ecx
  17 @ 10005c2e  edx = 0
  18 @ 10005c30  ebx = ebx & 0xfffffff8
  19 @ 10005c33  cond:2 = eax u< [edi + 0x10].d
  20 @ 10005c36  push(ebp)
  21 @ 10005c37  ebp = ebx + eax
  22 @ 10005c3a  [esp + 0x10 {var_8}].d = edx
  23 @ 10005c3e  [esp + 0x14 {var_4}].d = edx
  24 @ 10005c42  if (cond:2) then 28 @ 0x10005d94 else 30 @ 0x10005c48

  25 @ 10005c0e  esi = edi + 0x1cc
  26 @ 10005c14  call(sub_10003b00)
  27 @ 10005c1b  if (eax != 0) then 33 @ 0x10005dc4 else 12 @ 0x10005c21

  28 @ 10005d94  call([&data_100080ec].d)  {"ualAlloc"}
  29 @ 10005da1  if (([edi + 0x1b8].b & 2) == 0) then 38 @ 0x10005dba else 45 @ 0x10005da3

  30 @ 10005c48  esi = ecx
  31 @ 10005c4a  esi = esi & 3
  32 @ 10005c50  if (esi == 1) then 28 @ 0x10005d94 else 49 @ 0x10005c58

  33 @ 10005dc4  esi = pop
  34 @ 10005dc5  eax = 0
  35 @ 10005dc7  edi = pop
  36 @ 10005dc8  esp = esp + 8
  37 @ 10005dcb  <return> jump(pop)

  38 @ 10005dba  ebp = pop
  39 @ 10005dbb  ebx = pop
  40 @ 10005dbc  esi = pop
  41 @ 10005dbd  eax = 0
  42 @ 10005dbf  edi = pop
  43 @ 10005dc0  esp = esp + 8
  44 @ 10005dc3  <return> jump(pop)

  45 @ 10005da3  edi = edi + 0x1cc
  46 @ 10005da9  temp1.d = [edi + 0x44].d
  47 @ 10005da9  [edi + 0x44].d = [edi + 0x44].d - 1
  48 @ 10005dad  if (temp1.d != 1) then 38 @ 0x10005dba else 50 @ 0x10005daf

  49 @ 10005c58  if (eax u>= ebp) then 28 @ 0x10005d94 else 56 @ 0x10005c62

  50 @ 10005daf  [edi + 0x48].d = 0
  51 @ 10005db6  eax = 0
  52 @ 10005db8  temp0.d = [edi].d
  53 @ 10005db8  [edi].d = eax
  54 @ 10005db8  eax = temp0.d
  55 @ 10005db8  goto 38 @ 0x10005dba

  56 @ 10005c62  if (([ebp + 4].b & 1) == 0) then 28 @ 0x10005d94 else 57 @ 0x10005c68

  57 @ 10005c68  edx = [esp + 0x20 {arg3}].d
  58 @ 10005c6f  if (edx u>= 7) then 59 @ 0x10005c78 else 62 @ 0x10005c71

  59 @ 10005c78  edx = edx + 0xf
  60 @ 10005c7b  edx = edx & 0xfffffff8
  61 @ 10005c7b  goto 64 @ 0x10005c80

  62 @ 10005c71  edx = 0x10
  63 @ 10005c76  goto 64 @ 0x10005c80

  64 @ 10005c80  if (esi != 0) then 65 @ 0x10005c8e else 66 @ 0x10005c82

  65 @ 10005c8e  if (ebx u< edx) then 68 @ 0x10005ce3 else 69 @ 0x10005c90

  66 @ 10005c82  call(sub_10003a10)
  67 @ 10005c87  goto 74 @ 0x10005d20

  68 @ 10005ce3  if (ebp != [edi + 0x18].d) then 76 @ 0x10005d2b else 77 @ 0x10005ce5

  69 @ 10005c90  ebp = ebx
  70 @ 10005c92  ebp = ebp - edx
  71 @ 10005c94  cond:3 = ebp u< 0x10
  72 @ 10005c97  [esp + 0x10 {var_8}].d = eax
  73 @ 10005c9b  if (cond:3) then 76 @ 0x10005d2b else 80 @ 0x10005ca1

  74 @ 10005d20  [esp + 0x10 {var_8}].d = eax
  75 @ 10005d20  goto 76 @ 0x10005d2b

  76 @ 10005d2b  if (([edi + 0x1b8].b & 2) == 0) then 100 @ 0x10005d38 else 102 @ 0x10005d2d

  77 @ 10005ce5  esi = [edi + 0xc].d
  78 @ 10005ce8  ebp = esi + ebx
  79 @ 10005ced  if (ebp u<= edx) then 76 @ 0x10005d2b else 105 @ 0x10005cef

  80 @ 10005ca1  ecx = ecx & 1
  81 @ 10005ca4  esi = edx + eax
  82 @ 10005ca7  ecx = ecx | edx
  83 @ 10005ca9  ecx = ecx | 2
  84 @ 10005cac  [eax + 4].d = ecx
  85 @ 10005caf  ecx = [&data_10009f1c].d
  86 @ 10005cb5  eax = 1
  87 @ 10005cba  [esi + 4].d = [esi + 4].d | eax
  88 @ 10005cbd  ecx = ecx ^ edi
  89 @ 10005cbf  [esi].d = ecx
  90 @ 10005cc1  edx = ebp
  91 @ 10005cc3  edx = edx | 3
  92 @ 10005cc6  [esi + 4].d = edx
  93 @ 10005cc9  [esi + ebp + 4].d = [esi + ebp + 4].d | eax
  94 @ 10005ccd  eax = [&data_10009f1c].d
  95 @ 10005cd2  eax = eax ^ edi
  96 @ 10005cd4  [esi + ebp].d = eax
  97 @ 10005cd7  esi = esi + 8
  98 @ 10005cda  [esp + 0x14 {var_4}].d = esi
  99 @ 10005cde  goto 76 @ 0x10005d2b

 100 @ 10005d38  esi = [esp + 0x10 {var_8}].d
 101 @ 10005d3e  if (esi == 0) then 123 @ 0x10005d58 else 129 @ 0x10005d40

 102 @ 10005d2d  eax = edi + 0x1cc
 103 @ 10005d33  call(sub_10003ae0)
 104 @ 10005d33  goto 100 @ 0x10005d38

 105 @ 10005cef  ecx = ecx & 1
 106 @ 10005cf2  ecx = ecx | edx
 107 @ 10005cf4  esi = esi - edx
 108 @ 10005cf6  ecx = ecx | 2
 109 @ 10005cf9  [eax + 4].d = ecx
 110 @ 10005cfc  ecx = [&data_10009f1c].d
 111 @ 10005d02  [edx + eax + 4].d = [edx + eax + 4].d | 1
 112 @ 10005d07  esi = esi + ebx
 113 @ 10005d09  ebp = esi
 114 @ 10005d0b  esi = edx + eax
 115 @ 10005d0e  ecx = ecx ^ edi
 116 @ 10005d10  edx = ebp
 117 @ 10005d12  [esi].d = ecx
 118 @ 10005d14  edx = edx | 1
 119 @ 10005d17  [esi + 4].d = edx
 120 @ 10005d1a  [edi + 0x18].d = esi
 121 @ 10005d1d  [edi + 0xc].d = ebp
 122 @ 10005d1d  goto 74 @ 0x10005d20

 123 @ 10005d58  ebp = [esp + 0x20 {arg3}].d
 124 @ 10005d5c  eax = ebp
 125 @ 10005d5e  ecx = edi
 126 @ 10005d60  call(sub_10005500)
 127 @ 10005d65  esi = eax
 128 @ 10005d69  if (esi == 0) then 131 @ 0x10005d8a else 138 @ 0x10005d6b

 129 @ 10005d40  eax = [esp + 0x14 {var_4}].d
 130 @ 10005d46  if (eax == 0) then 140 @ 0x10005d4d else 147 @ 0x10005d48

 131 @ 10005d8a  ebp = pop
 132 @ 10005d8b  ebx = pop
 133 @ 10005d8c  eax = esi
 134 @ 10005d8e  esi = pop
 135 @ 10005d8f  edi = pop
 136 @ 10005d90  esp = esp + 8
 137 @ 10005d93  <return> jump(pop)

 138 @ 10005d6b  ebx = ebx - 8
 139 @ 10005d70  if (ebx u< ebp) then 149 @ 0x10005d74 else 155 @ 0x10005d72

 140 @ 10005d4d  ebp = pop
 141 @ 10005d4e  ebx = pop
 142 @ 10005d4f  eax = esi + 8
 143 @ 10005d52  esi = pop
 144 @ 10005d53  edi = pop
 145 @ 10005d54  esp = esp + 8
 146 @ 10005d57  <return> jump(pop)

 147 @ 10005d48  call(sub_10004f40)
 148 @ 10005d48  goto 140 @ 0x10005d4d

 149 @ 10005d74  edi = [esp + 0x1c {arg2}].d
 150 @ 10005d78  push(ebx)
 151 @ 10005d79  push(edi)
 152 @ 10005d7a  push(esi)
 153 @ 10005d7b  call(sub_1000793e)
 154 @ 10005d7b  noreturn
{ Does not return }

 155 @ 10005d72  ebx = ebp
 156 @ 10005d72  goto 149 @ 0x10005d74

10005d80  83 c4 0c 8b c7 e8 b6 f1 ff ff                                                                    ..........
10005dcc                                      cc cc cc cc                                                              ....

10005dd0  int32_t sub_10005dd0(int32_t arg1, int32_t arg2)

   0 @ 10005dd0  eax = [&data_10009f1c].d
   1 @ 10005dd7  if (eax != 0) then 2 @ 0x10005dde else 4 @ 0x10005dd9

   2 @ 10005dde  eax = [esp + 0xc {arg2}].d
   3 @ 10005de5  if (eax != -1) then 6 @ 0x10005de9 else 8 @ 0x10005de7

   4 @ 10005dd9  call(sub_100044b0)
   5 @ 10005dd9  goto 2 @ 0x10005dde

   6 @ 10005de9  ecx = [esp + 8 {arg1}].d
   7 @ 10005df0  if (ecx == -3) then 10 @ 0x10005e24 else 13 @ 0x10005df5

   8 @ 10005de7  eax = eax
   9 @ 10005de7  goto 6 @ 0x10005de9

  10 @ 10005e24  [&data_10009f28].d = eax
  11 @ 10005e29  eax = 1
  12 @ 10005e2e  <return> jump(pop)

  13 @ 10005df5  if (ecx == -2) then 14 @ 0x10005e0d else 15 @ 0x10005dfa

  14 @ 10005e0d  if (eax u< [&data_10009f20].d) then 16 @ 0x10005e21 else 18 @ 0x10005e0f

  15 @ 10005dfa  if (ecx != -1) then 16 @ 0x10005e21 else 20 @ 0x10005dfc

  16 @ 10005e21  eax = 0
  17 @ 10005e23  <return> jump(pop)

  18 @ 10005e0f  ecx = eax - 1
  19 @ 10005e14  if ((eax & ecx) != 0) then 16 @ 0x10005e21 else 23 @ 0x10005e16

  20 @ 10005dfc  [&data_10009f2c].d = eax
  21 @ 10005e01  eax = 1
  22 @ 10005e06  <return> jump(pop)

  23 @ 10005e16  [&data_10009f24].d = eax
  24 @ 10005e1b  eax = 1
  25 @ 10005e20  <return> jump(pop)

10005e2f                                               cc                                                                 .

10005e30  void* sub_10005e30(int32_t* arg1, int32_t arg2, int32_t arg3)

   0 @ 10005e30  eax = [esp + 8 {arg2}].d
   1 @ 10005e34  push(esi)
   2 @ 10005e35  push(edi)
   3 @ 10005e36  edi = [ebx + (eax << 2) + 0x458].d
   4 @ 10005e3d  ecx = [edi + 0x1cc].d
   5 @ 10005e43  cond:0 = ecx == 0
   6 @ 10005e45  esi = edi + 0x1cc
   7 @ 10005e4b  if (cond:0) then 8 @ 0x10005e61 else 14 @ 0x10005e4d

   8 @ 10005e61  edx = 1
   9 @ 10005e66  eax = esi
  10 @ 10005e68  temp0.d = [eax].d
  11 @ 10005e68  [eax].d = edx
  12 @ 10005e68  edx = temp0.d
  13 @ 10005e6c  if (edx != 0) then 16 @ 0x10005e83 else 28 @ 0x10005e6e

  14 @ 10005e4d  call([&data_10008018].d)
  15 @ 10005e56  if ([esi + 0x48].d != eax) then 16 @ 0x10005e83 else 35 @ 0x10005e58

  16 @ 10005e83  ecx = [esp + 0x14 {arg3}].d
  17 @ 10005e87  eax = [esp + 0xc {arg1}].d
  18 @ 10005e8b  push(ecx)
  19 @ 10005e8c  edx = esp + 0x14 {arg2}
  20 @ 10005e90  push(edx)
  21 @ 10005e91  push(eax)
  22 @ 10005e92  push(ebx)
  23 @ 10005e93  call(sub_10004bc0)
  24 @ 10005e98  esp = esp + 0x10
  25 @ 10005e9b  edi = pop
  26 @ 10005e9c  esi = pop
  27 @ 10005e9d  <return> jump(pop)

  28 @ 10005e6e  call([&data_10008018].d)
  29 @ 10005e74  [esi + 0x48].d = eax
  30 @ 10005e77  eax = edi
  31 @ 10005e79  edi = pop
  32 @ 10005e7a  [esi + 0x44].d = 1
  33 @ 10005e81  esi = pop
  34 @ 10005e82  <return> jump(pop)

  35 @ 10005e58  [esi + 0x44].d = [esi + 0x44].d + 1
  36 @ 10005e5c  eax = edi
  37 @ 10005e5e  edi = pop
  38 @ 10005e5f  esi = pop
  39 @ 10005e60  <return> jump(pop)

10005e9e                                                                                            cc cc                                ..

10005ea0  int32_t sub_10005ea0(int32_t arg1, int32_t arg2)

   0 @ 10005ea0  eax = [&data_10009f1c].d
   1 @ 10005ea7  if (eax != 0) then 2 @ 0x10005eae else 4 @ 0x10005ea9

   2 @ 10005eae  eax = [esp + 8 {arg2}].d
   3 @ 10005eb5  if (eax != -1) then 6 @ 0x10005eb9 else 8 @ 0x10005eb7

   4 @ 10005ea9  call(sub_100044b0)
   5 @ 10005ea9  goto 2 @ 0x10005eae

   6 @ 10005eb9  ecx = [esp + 4 {arg1}].d
   7 @ 10005ec0  if (ecx == -3) then 10 @ 0x10005ef4 else 13 @ 0x10005ec5

   8 @ 10005eb7  eax = eax
   9 @ 10005eb7  goto 6 @ 0x10005eb9

  10 @ 10005ef4  [&data_10009f28].d = eax
  11 @ 10005ef9  eax = 1
  12 @ 10005efe  <return> jump(pop)

  13 @ 10005ec5  if (ecx == -2) then 14 @ 0x10005edd else 15 @ 0x10005eca

  14 @ 10005edd  if (eax u< [&data_10009f20].d) then 16 @ 0x10005ef1 else 18 @ 0x10005edf

  15 @ 10005eca  if (ecx != -1) then 16 @ 0x10005ef1 else 20 @ 0x10005ecc

  16 @ 10005ef1  eax = 0
  17 @ 10005ef3  <return> jump(pop)

  18 @ 10005edf  ecx = eax - 1
  19 @ 10005ee4  if ((eax & ecx) != 0) then 16 @ 0x10005ef1 else 23 @ 0x10005ee6

  20 @ 10005ecc  [&data_10009f2c].d = eax
  21 @ 10005ed1  eax = 1
  22 @ 10005ed6  <return> jump(pop)

  23 @ 10005ee6  [&data_10009f24].d = eax
  24 @ 10005eeb  eax = 1
  25 @ 10005ef0  <return> jump(pop)

10005eff                                                                                               cc                                 .

10005f00  int32_t j_sub_3f40()

   0 @ 10005f00  <return> tailcall(sub_10004f40)

10005f05                 cc cc cc cc cc cc cc cc cc cc cc                                                       ...........

10005f10  void* __convention("regparm") sub_10005f10(int32_t* arg1, int32_t arg2, int32_t* arg3, void* arg4)

   0 @ 10005f10  ecx = [&data_10009f1c].d
   1 @ 10005f19  if ([eax + 0x24].d == ecx) then 2 @ 0x10005f24 else 12 @ 0x10005f1b

   2 @ 10005f24  edx = [esp + 8 {arg3}].d
   3 @ 10005f28  ecx = [esp + 4 {arg2}].d
   4 @ 10005f2c  push(zx.d(0))
   5 @ 10005f2e  push(edx)
   6 @ 10005f2f  push(ecx)
   7 @ 10005f30  push(eax)
   8 @ 10005f31  eax = [esp + 0x1c {arg4}].d
   9 @ 10005f35  call(sub_100057c0)
  10 @ 10005f3a  esp = esp + 0x10
  11 @ 10005f3d  <return> jump(pop)

  12 @ 10005f1b  call([&data_100080ec].d)  {"ualAlloc"}
  13 @ 10005f21  eax = 0
  14 @ 10005f23  <return> jump(pop)

10005f3e                                                                                            cc cc                                ..

10005f40  void* __convention("regparm") sub_10005f40(int32_t* arg1, int32_t arg2, int32_t arg3, int32_t* arg4, void* arg5)

   0 @ 10005f40  push(ecx)
   1 @ 10005f41  edx = [&data_10009f1c].d
   2 @ 10005f47  cond:0 = [eax + 0x24].d == edx
   3 @ 10005f4a  [esp {var_4}].d = ecx
   4 @ 10005f4d  if (cond:0) then 5 @ 0x10005f59 else 16 @ 0x10005f4f

   5 @ 10005f59  edx = [esp + 8 {arg4}].d
   6 @ 10005f5d  push(zx.d(3))
   7 @ 10005f5f  ecx = esp + 4 {var_4}
   8 @ 10005f63  push(ecx)
   9 @ 10005f64  push(edx)
  10 @ 10005f65  push(eax)
  11 @ 10005f66  eax = [esp + 0x1c {arg5}].d
  12 @ 10005f6a  call(sub_100057c0)
  13 @ 10005f6f  esp = esp + 0x10
  14 @ 10005f72  ecx = pop
  15 @ 10005f73  <return> jump(pop)

  16 @ 10005f4f  call([&data_100080ec].d)  {"ualAlloc"}
  17 @ 10005f55  eax = 0
  18 @ 10005f57  ecx = pop
  19 @ 10005f58  <return> jump(pop)

10005f74                                                              cc cc cc cc cc cc cc cc cc cc cc cc                      ............

10005f80  void* __convention("regparm") sub_10005f80(int32_t arg1, int32_t arg2, int32_t* arg3, int32_t arg4, int32_t arg5)

   0 @ 10005f80  eax = [&data_10009f1c].d
   1 @ 10005f88  if ([ecx + 0x24].d == eax) then 2 @ 0x10005f93 else 8 @ 0x10005f8a

   2 @ 10005f93  edx = [esp + 4 {arg4}].d
   3 @ 10005f97  eax = [esp + 8 {arg5}].d
   4 @ 10005f9b  push(edx)
   5 @ 10005f9c  call(sub_100059f0)
   6 @ 10005fa1  esp = esp + 4
   7 @ 10005fa4  <return> jump(pop)

   8 @ 10005f8a  call([&data_100080ec].d)  {"ualAlloc"}
   9 @ 10005f90  eax = 0
  10 @ 10005f92  <return> jump(pop)

10005fa5                 cc cc cc cc cc cc cc cc cc cc cc                                                       ...........

10005fb0  void* __convention("regparm") sub_10005fb0(int32_t arg1, int32_t arg2, void* arg3, int32_t arg4 @ esi, int32_t* arg5)

   0 @ 10005fb2  if (ecx != 0) then 1 @ 0x10005fbf else 8 @ 0x10005fb4

   1 @ 10005fbf  eax = [ecx - 4].d
   2 @ 10005fc2  eax = eax & 0xfffffff8
   3 @ 10005fc5  edx = eax + ecx - 8
   4 @ 10005fc9  eax = [&data_10009f1c].d
   5 @ 10005fce  eax = eax ^ [edx].d
   6 @ 10005fd0  edx = [&data_10009f1c].d
   7 @ 10005fd9  if ([eax + 0x24].d == edx) then 11 @ 0x10005fe4 else 16 @ 0x10005fdb

   8 @ 10005fb4  eax = esi
   9 @ 10005fb6  ecx = [esp + 4 {arg5}].d
  10 @ 10005fba  <return> tailcall(sub_10005500)

  11 @ 10005fe4  push(esi)
  12 @ 10005fe5  push(ecx)
  13 @ 10005fe6  call(sub_10005bf0)
  14 @ 10005feb  esp = esp + 8
  15 @ 10005fee  <return> jump(pop)

  16 @ 10005fdb  call([&data_100080ec].d)  {"ualAlloc"}
  17 @ 10005fe1  eax = 0
  18 @ 10005fe3  <return> jump(pop)

10005fef                                               cc                                                                 .

10005ff0  void* __convention("regparm") sub_10005ff0(int32_t arg1, int32_t arg2, int32_t* arg3)

   0 @ 10005ff0  push(edi)
   1 @ 10005ff1  edi = eax
   2 @ 10005ff3  eax = [&data_10009f1c].d
   3 @ 10005ffb  if ([ecx + 0x24].d == eax) then 4 @ 0x1000600d else 5 @ 0x10005ffd

   4 @ 1000600d  if ((edi & 0xffff0000) == 0) then 9 @ 0x10006016 else 14 @ 0x10006011

   5 @ 10005ffd  call([&data_100080ec].d)  {"ualAlloc"}
   6 @ 10006003  eax = 0
   7 @ 10006005  edi = pop
   8 @ 10006006  <return> jump(pop)

   9 @ 10006016  push(esi)
  10 @ 10006017  eax = edi
  11 @ 10006019  call(sub_10005500)
  12 @ 1000601e  esi = eax
  13 @ 10006022  if (esi == 0) then 15 @ 0x10006036 else 19 @ 0x10006028

  14 @ 10006011  if (edi == edi) then 9 @ 0x10006016 else 20 @ 0x10006013

  15 @ 10006036  eax = esi
  16 @ 10006038  esi = pop
  17 @ 10006039  edi = pop
  18 @ 1000603a  <return> jump(pop)

  19 @ 10006028  if (([esi - 4].b & 3) == 0) then 15 @ 0x10006036 else 22 @ 0x1000602a

  20 @ 10006013  edi = edi | 0xffffffff
  21 @ 10006013  goto 9 @ 0x10006016

  22 @ 1000602a  push(edi)
  23 @ 1000602b  push(zx.d(0))
  24 @ 1000602d  push(esi)
  25 @ 1000602e  call(sub_10007938)
  26 @ 1000602e  noreturn
{ Does not return }


10006033  int32_t __stdcall sub_10006033(int32_t arg1 @ esi, int32_t arg2, int32_t arg3) __pure

   0 @ 10006033  esp = esp + 0xc
   1 @ 10006036  eax = esi
   2 @ 10006038  esi = pop
   3 @ 10006039  edi = pop
   4 @ 1000603a  <return> jump(pop)

1000603b                                                                                   cc cc cc cc cc                             .....

10006040  void sub_10006040(void* arg1 @ edi, int32_t arg2)

   0 @ 10006040  push(ecx)
   1 @ 10006041  push(ebx)
   2 @ 10006042  push(ebp)
   3 @ 10006043  ebp = [esp + 0x10 {arg2}].d
   4 @ 10006047  push(esi)
   5 @ 10006048  esi = edi + 0x18
   6 @ 1000604b  [esp + 0xc {i_1}].d = 0xa
   7 @ 10006053  ebx = 0
   8 @ 10006053  goto 9 @ 0x10006058

   9 @ 10006058  if ([esi + 4].d == ebx) then 10 @ 0x1000609e else 14 @ 0x1000605a

  10 @ 1000609e  esi = esi + 8
  11 @ 100060a1  temp0.d = [esp + 0xc {i_1}].d
  12 @ 100060a1  [esp + 0xc {i_1}].d = [esp + 0xc {i_1}].d - 1
  13 @ 100060a6  if (temp0.d != 1) then 9 @ 0x10006058 else 16 @ 0x100060a8

  14 @ 1000605a  ebx = ebx
  15 @ 1000605a  goto 21 @ 0x10006060

  16 @ 100060a8  esi = pop
  17 @ 100060a9  ebp = pop
  18 @ 100060aa  ebx = pop
  19 @ 100060ab  ecx = pop
  20 @ 100060ac  <return> jump(pop)

  21 @ 10006060  eax = [esi + 4].d
  22 @ 10006063  ecx = [edi + 0xc].d
  23 @ 10006066  ecx = ecx - [eax + 4].d
  24 @ 1000606b  if (ecx u< ebp) then 10 @ 0x1000609e else 25 @ 0x1000606d

  25 @ 1000606d  ecx = [eax + 0x10].d
  26 @ 10006070  cond:0 = ecx == ebx
  27 @ 10006072  edx = [eax + 8].d
  28 @ 10006075  [esi + 4].d = ecx
  29 @ 10006078  if (cond:0) then 30 @ 0x1000607f else 32 @ 0x1000607a

  30 @ 1000607f  [esi].d = ebx
  31 @ 1000607f  goto 34 @ 0x10006081

  32 @ 1000607a  [ecx + 0xc].d = ebx
  33 @ 1000607d  goto 34 @ 0x10006081

  34 @ 10006081  [edi + 0x14].d = [edi + 0x14].d - edx
  35 @ 10006086  if ([eax].d == ebx) then 36 @ 0x10006094 else 38 @ 0x10006088

  36 @ 10006094  call(sub_10004f40)
  37 @ 10006094  goto 42 @ 0x1000609c

  38 @ 10006088  push(eax)
  39 @ 10006089  call([&data_10009094].d)
  40 @ 1000608f  esp = esp + 4
  41 @ 10006092  goto 42 @ 0x1000609c

  42 @ 1000609c  if ([esi + 4].d != ebx) then 21 @ 0x10006060 else 10 @ 0x1000609e

100060ad                                         cc cc cc                                                               ...

100060b0  void* sub_100060b0(int32_t arg1 @ edi)

   0 @ 100060b0  eax = [&data_10009f1c].d
   1 @ 100060b5  cond:0 = [ebx + 0x24 {0x24}].d == eax
   2 @ 100060b8  push(esi)
   3 @ 100060b9  if (cond:0) then 4 @ 0x100060c5 else 9 @ 0x100060bb

   4 @ 100060c5  eax = edi
   5 @ 100060c7  ecx = ebx
   6 @ 100060c9  call(sub_10005500)
   7 @ 100060ce  esi = eax
   8 @ 100060d2  if (esi == 0) then 11 @ 0x100060c1 else 14 @ 0x100060d8

   9 @ 100060bb  call([&data_100080ec].d)  {"ualAlloc"}
  10 @ 100060bb  goto 11 @ 0x100060c1

  11 @ 100060c1  eax = 0
  12 @ 100060c3  esi = pop
  13 @ 100060c4  <return> jump(pop)

  14 @ 100060d8  if (([esi - 4].b & 3) == 0) then 15 @ 0x100060e6 else 19 @ 0x100060da

  15 @ 100060e6  eax = [esi - 4].d
  16 @ 100060e9  ecx = [&data_10009f18].d
  17 @ 100060ef  eax = eax & 0xfffffff8
  18 @ 100060f4  if (ecx == 0) then 24 @ 0x100060fb else 27 @ 0x100060f9

  19 @ 100060da  push(edi)
  20 @ 100060db  push(zx.d(0))
  21 @ 100060dd  push(esi)
  22 @ 100060de  call(sub_10007938)
  23 @ 100060de  noreturn
{ Does not return }

  24 @ 100060fb  ecx = [ebx + 0x10 {0x10}].d
  25 @ 100060fe  [&data_10009f18].d = ecx
  26 @ 100060fe  goto 28 @ 0x10006104

  27 @ 100060f9  if ([ebx + 0x10 {0x10}].d u>= ecx) then 28 @ 0x10006104 else 24 @ 0x100060fb

  28 @ 10006104  ecx = [&data_10009f34].d
  29 @ 1000610c  if (ecx == 0) then 30 @ 0x10006112 else 37 @ 0x10006110

  30 @ 10006112  ecx = [&data_10009f20].d
  31 @ 10006118  edx = ecx + eax
  32 @ 1000611b  ecx = ecx - 1
  33 @ 1000611e  ecx = not.d(ecx)
  34 @ 10006120  edx = edx & ecx
  35 @ 10006122  [&data_10009f34].d = edx
  36 @ 10006122  goto 38 @ 0x10006128

  37 @ 10006110  if (eax u<= ecx) then 38 @ 0x10006128 else 30 @ 0x10006112

  38 @ 10006128  eax = esi
  39 @ 1000612a  esi = pop
  40 @ 1000612b  <return> jump(pop)


100060e3  void* __stdcall sub_100060e3(void* arg1 @ esi, int32_t arg2)

   0 @ 100060e3  esp = esp + 0xc
   1 @ 100060e6  eax = [esi - 4].d
   2 @ 100060e9  ecx = [&data_10009f18].d
   3 @ 100060ef  eax = eax & 0xfffffff8
   4 @ 100060f4  if (ecx == 0) then 5 @ 0x100060fb else 8 @ 0x100060f9

   5 @ 100060fb  ecx = [ebx + 0x10 {0x10}].d
   6 @ 100060fe  [&data_10009f18].d = ecx
   7 @ 100060fe  goto 9 @ 0x10006104

   8 @ 100060f9  if ([ebx + 0x10 {0x10}].d u>= ecx) then 9 @ 0x10006104 else 5 @ 0x100060fb

   9 @ 10006104  ecx = [&data_10009f34].d
  10 @ 1000610c  if (ecx == 0) then 11 @ 0x10006112 else 18 @ 0x10006110

  11 @ 10006112  ecx = [&data_10009f20].d
  12 @ 10006118  edx = ecx + eax
  13 @ 1000611b  ecx = ecx - 1
  14 @ 1000611e  ecx = not.d(ecx)
  15 @ 10006120  edx = edx & ecx
  16 @ 10006122  [&data_10009f34].d = edx
  17 @ 10006122  goto 19 @ 0x10006128

  18 @ 10006110  if (eax u<= ecx) then 19 @ 0x10006128 else 11 @ 0x10006112

  19 @ 10006128  eax = esi
  20 @ 1000612a  esi = pop
  21 @ 1000612b  <return> jump(pop)

1000612c                                      cc cc cc cc                                                              ....

10006130  void* __convention("fastcall") sub_10006130(int32_t arg1, int32_t* arg2 @ esi)

   0 @ 10006132  if (ecx == 0) then 1 @ 0x10006156 else 4 @ 0x10006134

   1 @ 10006156  ecx = esi
   2 @ 10006158  call(sub_10005500)
   3 @ 10006158  goto 6 @ 0x1000615f

   4 @ 10006134  edx = [&data_10009f1c].d
   5 @ 1000613d  if ([esi + 0x24].d == edx) then 7 @ 0x10006149 else 12 @ 0x1000613f

   6 @ 1000615f  if (eax == 0) then 15 @ 0x100061a3 else 17 @ 0x10006161

   7 @ 10006149  push(ecx)
   8 @ 1000614a  ecx = esi
   9 @ 1000614c  call(sub_100059f0)
  10 @ 10006151  esp = esp + 4
  11 @ 10006154  goto 6 @ 0x1000615f

  12 @ 1000613f  call([&data_100080ec].d)  {"ualAlloc"}
  13 @ 10006145  eax = 0
  14 @ 10006147  goto 6 @ 0x1000615f

  15 @ 100061a3  eax = 0
  16 @ 100061a3  goto 21 @ 0x100061a5

  17 @ 10006161  ecx = [eax - 4].d
  18 @ 10006164  edx = [&data_10009f18].d
  19 @ 1000616a  ecx = ecx & 0xfffffff8
  20 @ 1000616f  if (edx == 0) then 22 @ 0x10006176 else 25 @ 0x10006174

  21 @ 100061a5  <return> jump(pop)

  22 @ 10006176  edx = [esi + 0x10].d
  23 @ 10006179  [&data_10009f18].d = edx
  24 @ 10006179  goto 26 @ 0x1000617f

  25 @ 10006174  if ([esi + 0x10].d u>= edx) then 26 @ 0x1000617f else 22 @ 0x10006176

  26 @ 1000617f  edx = [&data_10009f34].d
  27 @ 10006187  if (edx == 0) then 28 @ 0x1000618d else 35 @ 0x1000618b

  28 @ 1000618d  edx = [&data_10009f20].d
  29 @ 10006193  ecx = ecx + edx
  30 @ 10006195  edx = edx - 1
  31 @ 10006198  edx = not.d(edx)
  32 @ 1000619a  ecx = ecx & edx
  33 @ 1000619c  [&data_10009f34].d = ecx
  34 @ 100061a2  <return> jump(pop)

  35 @ 1000618b  if (ecx u<= edx) then 21 @ 0x100061a5 else 28 @ 0x1000618d

100061a6                    cc cc cc cc cc cc cc cc cc cc                                                        ..........

100061b0  int32_t* sub_100061b0(void* arg1 @ edi)

   0 @ 100061b0  push(ecx)
   1 @ 100061b1  push(ebx)
   2 @ 100061b2  push(ebp)
   3 @ 100061b3  push(esi)
   4 @ 100061b4  ebp = 0x40
   5 @ 100061b9  ebx = 0
   6 @ 100061bb  goto 7 @ 0x100061c0

   7 @ 100061c0  eax = [edi + 0x14].d
   8 @ 100061c8  if (eax u< 0x80000) then 9 @ 0x10006231 else 14 @ 0x100061cc

   9 @ 10006231  esi = pop
  10 @ 10006232  ebp = pop
  11 @ 10006233  ebx = pop
  12 @ 10006234  ecx = pop
  13 @ 10006235  <return> jump(pop)

  14 @ 100061cc  if (eax == ebx) then 15 @ 0x1000622d else 17 @ 0x100061ce

  15 @ 1000622d  ebp = ebp u>> 1
  16 @ 1000622f  if (ebp != 0) then 7 @ 0x100061c0 else 9 @ 0x10006231

  17 @ 100061ce  esi = edi + 0x18
  18 @ 100061d1  [esp + 0xc {j_1}].d = 0xa
  19 @ 100061d9  esp = esp
  20 @ 100061d9  goto 21 @ 0x100061e3

  21 @ 100061e3  if ([esi + 4].d == ebx) then 22 @ 0x10006223 else 26 @ 0x100061e5

  22 @ 10006223  esi = esi + 8
  23 @ 10006226  temp0.d = [esp + 0xc {j_1}].d
  24 @ 10006226  [esp + 0xc {j_1}].d = [esp + 0xc {j_1}].d - 1
  25 @ 1000622b  if (temp0.d != 1) then 21 @ 0x100061e3 else 15 @ 0x1000622d

  26 @ 100061e5  eax = [esi + 4].d
  27 @ 100061e8  ecx = [edi + 0xc].d
  28 @ 100061eb  ecx = ecx - [eax + 4].d
  29 @ 100061f0  if (ecx u< ebp) then 22 @ 0x10006223 else 30 @ 0x100061f2

  30 @ 100061f2  ecx = [eax + 0x10].d
  31 @ 100061f5  cond:0 = ecx == ebx
  32 @ 100061f7  edx = [eax + 8].d
  33 @ 100061fa  [esi + 4].d = ecx
  34 @ 100061fd  if (cond:0) then 35 @ 0x10006204 else 37 @ 0x100061ff

  35 @ 10006204  [esi].d = ebx
  36 @ 10006204  goto 39 @ 0x10006206

  37 @ 100061ff  [ecx + 0xc].d = ebx
  38 @ 10006202  goto 39 @ 0x10006206

  39 @ 10006206  [edi + 0x14].d = [edi + 0x14].d - edx
  40 @ 1000620b  if ([eax].d == ebx) then 41 @ 0x10006219 else 43 @ 0x1000620d

  41 @ 10006219  call(sub_10004f40)
  42 @ 10006219  goto 47 @ 0x10006221

  43 @ 1000620d  push(eax)
  44 @ 1000620e  call([&data_10009094].d)
  45 @ 10006214  esp = esp + 4
  46 @ 10006217  goto 47 @ 0x10006221

  47 @ 10006221  if ([esi + 4].d != ebx) then 26 @ 0x100061e5 else 22 @ 0x10006223

100061bd                                                                                         8d 49 00                               .I.
10006236                                                                    cc cc cc cc cc cc cc cc cc cc                        ..........

10006240  void* __convention("regparm") sub_10006240(int32_t* arg1)

   0 @ 10006240  push(ebp)
   1 @ 10006241  push(esi)
   2 @ 10006242  esi = eax
   3 @ 10006244  call(sub_10003b00)
   4 @ 10006249  ebp = 0
   5 @ 1000624b  eax = esi + 0x54
   6 @ 1000624e  edi = edi
   7 @ 1000624e  goto 8 @ 0x10006253

   8 @ 10006253  if ([eax].d == 0) then 9 @ 0x10006269 else 10 @ 0x10006255

   9 @ 10006269  if (ebp != 0x100) then 13 @ 0x10006281 else 18 @ 0x1000626b

  10 @ 10006255  ebp = ebp + 1
  11 @ 10006258  eax = eax + 4
  12 @ 10006261  if (ebp s< 0x100) then 8 @ 0x10006253 else 9 @ 0x10006269

  13 @ 10006281  ecx = [&data_10009f1c].d
  14 @ 10006287  push(ebx)
  15 @ 10006288  push(edi)
  16 @ 10006289  edi = [esi + 0x458].d
  17 @ 10006292  if ([edi + 0x24].d == ecx) then 21 @ 0x100062b8 else 26 @ 0x10006294

  18 @ 1000626b  temp2.d = [esi + 0x44].d
  19 @ 1000626b  [esi + 0x44].d = [esi + 0x44].d - 1
  20 @ 1000626f  if (temp2.d != 1) then 28 @ 0x1000627c else 32 @ 0x10006271

  21 @ 100062b8  eax = 0x68
  22 @ 100062bd  ecx = edi
  23 @ 100062bf  call(sub_10005500)
  24 @ 100062c4  ebx = eax
  25 @ 100062c8  if (ebx == 0) then 38 @ 0x1000629a else 40 @ 0x100062ce  {"t\rjhj"}

  26 @ 10006294  call([&data_100080ec].d)  {"ualAlloc"}
  27 @ 10006294  goto 38 @ 0x1000629a

  28 @ 1000627c  esi = pop
  29 @ 1000627d  eax = 0
  30 @ 1000627f  ebp = pop
  31 @ 10006280  <return> jump(pop)

  32 @ 10006271  [esi + 0x48].d = 0
  33 @ 10006278  eax = 0
  34 @ 1000627a  temp0.d = [esi].d
  35 @ 1000627a  [esi].d = eax
  36 @ 1000627a  eax = temp0.d
  37 @ 1000627a  goto 28 @ 0x1000627c

  38 @ 1000629a  ebx = 0
  39 @ 1000629a  goto 41 @ 0x1000629c

  40 @ 100062ce  if (([ebx - 4].b & 3) == 0) then 44 @ 0x100062dd else 48 @ 0x100062d0

  41 @ 1000629c  cond:2 = ebx != 0
  42 @ 1000629e  [esi + (ebp << 2) + 0x54].d = ebx
  43 @ 100062a2  if (cond:2) then 53 @ 0x10006322 else 59 @ 0x100062a4

  44 @ 100062dd  eax = [ebx - 4].d
  45 @ 100062e0  ecx = [&data_10009f18].d
  46 @ 100062e6  eax = eax & 0xfffffff8
  47 @ 100062eb  if (ecx == 0) then 62 @ 0x100062f2 else 65 @ 0x100062f0

  48 @ 100062d0  push(zx.d(0x68))
  49 @ 100062d2  push(zx.d(0))
  50 @ 100062d4  push(ebx)
  51 @ 100062d5  call(sub_10007938)
  52 @ 100062d5  noreturn
{ Does not return }

  53 @ 10006322  call([&data_10008018].d)
  54 @ 10006328  edi = 0
  55 @ 1000632a  cond:0 = [esi + 0x458].d == edi
  56 @ 10006330  ecx = esi + 0x458
  57 @ 10006336  [ebx + 4].d = eax
  58 @ 10006339  if (cond:0) then 66 @ 0x1000634b else 79 @ 0x1000633b

  59 @ 100062a4  temp3.d = [esi + 0x44].d
  60 @ 100062a4  [esi + 0x44].d = [esi + 0x44].d - 1
  61 @ 100062a8  if (temp3.d != 1) then 80 @ 0x100062b1 else 86 @ 0x100062aa

  62 @ 100062f2  edx = [edi + 0x10].d
  63 @ 100062f5  [&data_10009f18].d = edx
  64 @ 100062f5  goto 92 @ 0x100062fb

  65 @ 100062f0  if ([edi + 0x10].d u>= ecx) then 92 @ 0x100062fb else 62 @ 0x100062f2

  66 @ 1000634b  edx:eax = sx.q(eax)
  67 @ 1000634c  eax = eax ^ edx
  68 @ 1000634e  eax = eax - edx
  69 @ 10006350  edx:eax = sx.q(eax)
  70 @ 10006351  temp0.d = divs.dp.d(edx:eax, edi)
  71 @ 10006351  temp1.d = mods.dp.d(edx:eax, edi)
  72 @ 10006351  eax = temp0.d
  73 @ 10006351  edx = temp1.d
  74 @ 10006353  temp4.d = [esi + 0x44].d
  75 @ 10006353  [esi + 0x44].d = [esi + 0x44].d - 1
  76 @ 10006353  cond:1 = temp4.d != 1
  77 @ 10006357  [ebx].d = edx
  78 @ 10006359  if (cond:1) then 94 @ 0x10006368 else 100 @ 0x1000635b

  79 @ 1000633b  goto 107 @ 0x10006340

  80 @ 100062b1  edi = pop
  81 @ 100062b2  ebx = pop
  82 @ 100062b3  esi = pop
  83 @ 100062b4  eax = 0
  84 @ 100062b6  ebp = pop
  85 @ 100062b7  <return> jump(pop)

  86 @ 100062aa  [esi + 0x48].d = ebx
  87 @ 100062ad  ecx = 0
  88 @ 100062af  temp0.d = [esi].d
  89 @ 100062af  [esi].d = ecx
  90 @ 100062af  ecx = temp0.d
  91 @ 100062af  goto 80 @ 0x100062b1

  92 @ 100062fb  ecx = [&data_10009f34].d
  93 @ 10006303  if (ecx == 0) then 110 @ 0x10006309 else 117 @ 0x10006307

  94 @ 10006368  ecx = [esi + 0x454].d
  95 @ 1000636e  ebp = ebp + 1
  96 @ 10006371  push(ebp)
  97 @ 10006372  push(ecx)
  98 @ 10006373  call([&data_10008024[0xc]].d)  {"ameA"}
  99 @ 1000637b  if (eax != 0) then 118 @ 0x10006383 else 124 @ 0x1000637d

 100 @ 1000635b  [esi + 0x48].d = 0
 101 @ 10006362  edx = 0
 102 @ 10006364  eax = esi
 103 @ 10006366  temp0.d = [eax].d
 104 @ 10006366  [eax].d = edx
 105 @ 10006366  edx = temp0.d
 106 @ 10006366  goto 94 @ 0x10006368

 107 @ 10006340  ecx = ecx + 4
 108 @ 10006343  edi = edi + 1
 109 @ 10006349  if ([ecx].d != 0) then 107 @ 0x10006340 else 66 @ 0x1000634b

 110 @ 10006309  ecx = [&data_10009f20].d
 111 @ 1000630f  eax = eax + ecx
 112 @ 10006311  ecx = ecx - 1
 113 @ 10006314  ecx = not.d(ecx)
 114 @ 10006316  eax = eax & ecx
 115 @ 10006318  [&data_10009f34].d = eax
 116 @ 1000631d  goto 41 @ 0x1000629c

 117 @ 10006307  if (eax u<= ecx) then 41 @ 0x1000629c else 110 @ 0x10006309

 118 @ 10006383  edi = pop
 119 @ 10006384  eax = ebx
 120 @ 10006386  ebx = pop
 121 @ 10006387  esi = pop
 122 @ 10006388  ebp = pop
 123 @ 10006389  <return> jump(pop)

 124 @ 1000637d  call([&data_100080ec].d)  {"ualAlloc"}
 125 @ 1000637d  goto 118 @ 0x10006383

100062da                                                                                83 c4 0c                                     ...
1000633d                                                                                         8d 49 00                               .I.
1000638a                                cc cc cc cc cc cc                                                            ......

10006390  void __convention("regparm") sub_10006390(void* arg1)

   0 @ 10006390  push(esi)
   1 @ 10006391  esi = eax
   2 @ 10006393  temp0.d = esi
   3 @ 10006393  esi = esi + 0x54
   4 @ 10006396  if (temp0.d == -0x54) then 5 @ 0x100063de else 7 @ 0x10006398

   5 @ 100063de  esi = pop
   6 @ 100063df  <return> jump(pop)

   7 @ 10006398  push(ebx)
   8 @ 10006399  push(edi)
   9 @ 1000639a  ebx = 0x100
  10 @ 1000639f  goto 11 @ 0x100063a0

  11 @ 100063a0  edi = [esi].d
  12 @ 100063a4  if (edi == 0) then 13 @ 0x100063d4 else 17 @ 0x100063a6

  13 @ 100063d4  esi = esi + 4
  14 @ 100063d7  temp1.d = ebx
  15 @ 100063d7  ebx = ebx - 1
  16 @ 100063da  if (temp1.d != 1) then 11 @ 0x100063a0 else 19 @ 0x100063dc

  17 @ 100063a6  [edi + 0xc].d = [edi + 0xc].d + 1
  18 @ 100063ae  if ([edi + 0x14].d == 0) then 22 @ 0x100063ba else 28 @ 0x100063b0

  19 @ 100063dc  edi = pop
  20 @ 100063dd  ebx = pop
  21 @ 100063dd  goto 5 @ 0x100063de

  22 @ 100063ba  eax = edi
  23 @ 100063bc  [edi].d = -1
  24 @ 100063c2  [edi + 4].d = 0
  25 @ 100063c9  call(sub_10004f40)
  26 @ 100063ce  [esi].d = 0
  27 @ 100063ce  goto 13 @ 0x100063d4

  28 @ 100063b0  push(zx.d(0))
  29 @ 100063b2  call(sub_10006040)
  30 @ 100063b7  esp = esp + 4
  31 @ 100063b7  goto 22 @ 0x100063ba


100063e0  void* __convention("regparm") sub_100063e0(int32_t arg1, int32_t arg2, int32_t* arg3, void* arg4 @ edi, int32_t arg5, int32_t arg6)

   0 @ 100063e0  cond:0 = [esp + 4 {arg5}].d == 0
   1 @ 100063e5  push(ebx)
   2 @ 100063e6  push(ebp)
   3 @ 100063e7  ebp = [esp + 0x10 {arg6}].d
   4 @ 100063eb  push(esi)
   5 @ 100063ec  esi = eax
   6 @ 100063ee  ebx = ecx
   7 @ 100063f0  if (cond:0) then 8 @ 0x10006466 else 9 @ 0x100063f2

   8 @ 10006466  if (edi != 0) then 11 @ 0x1000646f else 17 @ 0x10006468

   9 @ 100063f2  call(sub_10005500)
  10 @ 100063f9  if (eax == 0) then 19 @ 0x1000645c else 25 @ 0x100063fb

  11 @ 1000646f  edx = [edi - 4].d
  12 @ 10006472  eax = [&data_10009f1c].d
  13 @ 10006477  ecx = [&data_10009f1c].d
  14 @ 1000647d  edx = edx & 0xfffffff8
  15 @ 10006480  eax = eax ^ [edx + edi - 8].d
  16 @ 10006487  if ([eax + 0x24].d == ecx) then 29 @ 0x10006495 else 34 @ 0x10006489

  17 @ 10006468  call(sub_10005500)
  18 @ 1000646d  goto 36 @ 0x100064a1

  19 @ 1000645c  esi = pop
  20 @ 1000645d  ebx = 0
  21 @ 1000645f  ebp = pop
  22 @ 10006460  eax = ebx
  23 @ 10006462  ebx = pop
  24 @ 10006463  <return> jump(pop)

  25 @ 100063fb  ecx = [eax - 4].d
  26 @ 100063fe  edx = [&data_10009f18].d
  27 @ 10006404  ecx = ecx & 0xfffffff8
  28 @ 10006409  if (edx == 0) then 37 @ 0x10006410 else 40 @ 0x1000640e

  29 @ 10006495  push(esi)
  30 @ 10006496  push(edi)
  31 @ 10006497  call(sub_10005bf0)
  32 @ 1000649c  esp = esp + 8
  33 @ 1000649c  goto 36 @ 0x100064a1

  34 @ 10006489  call([&data_100080ec].d)  {"ualAlloc"}
  35 @ 10006489  goto 41 @ 0x1000648f

  36 @ 100064a1  if (eax == 0) then 41 @ 0x1000648f else 43 @ 0x100064a3

  37 @ 10006410  edx = [ebx + 0x10].d
  38 @ 10006413  [&data_10009f18].d = edx
  39 @ 10006413  goto 47 @ 0x10006419

  40 @ 1000640e  if ([ebx + 0x10].d u>= edx) then 47 @ 0x10006419 else 37 @ 0x10006410

  41 @ 1000648f  eax = 0
  42 @ 1000648f  goto 49 @ 0x10006491

  43 @ 100064a3  ecx = [eax - 4].d
  44 @ 100064a6  edx = [&data_10009f34].d
  45 @ 100064ac  ecx = ecx & 0xfffffff8
  46 @ 100064b1  if (edx == 0) then 53 @ 0x100064b7 else 63 @ 0x100064b5

  47 @ 10006419  edx = [&data_10009f34].d
  48 @ 10006421  if (edx == 0) then 64 @ 0x10006427 else 71 @ 0x10006425

  49 @ 10006491  esi = pop
  50 @ 10006492  ebp = pop
  51 @ 10006493  ebx = pop
  52 @ 10006494  <return> jump(pop)

  53 @ 100064b7  edx = [&data_10009f20].d
  54 @ 100064bd  ecx = ecx + edx
  55 @ 100064bf  edx = edx - 1
  56 @ 100064c2  esi = pop
  57 @ 100064c3  edx = not.d(edx)
  58 @ 100064c5  ecx = ecx & edx
  59 @ 100064c7  ebp = pop
  60 @ 100064c8  [&data_10009f34].d = ecx
  61 @ 100064ce  ebx = pop
  62 @ 100064cf  <return> jump(pop)

  63 @ 100064b5  if (ecx u<= edx) then 49 @ 0x10006491 else 53 @ 0x100064b7

  64 @ 10006427  edx = [&data_10009f20].d
  65 @ 1000642d  ecx = ecx + edx
  66 @ 1000642f  edx = edx - 1
  67 @ 10006432  edx = not.d(edx)
  68 @ 10006434  ecx = ecx & edx
  69 @ 10006436  [&data_10009f34].d = ecx
  70 @ 10006436  goto 72 @ 0x1000643c

  71 @ 10006425  if (ecx u<= edx) then 72 @ 0x1000643c else 64 @ 0x10006427

  72 @ 1000643c  cond:1 = ebp u>= esi
  73 @ 1000643e  ebx = eax
  74 @ 10006440  if (cond:1) then 75 @ 0x10006444 else 80 @ 0x10006442

  75 @ 10006444  push(esi)
  76 @ 10006445  push(edi)
  77 @ 10006446  push(eax)
  78 @ 10006447  call(sub_1000793e)
  79 @ 10006447  noreturn
{ Does not return }

  80 @ 10006442  esi = ebp
  81 @ 10006442  goto 75 @ 0x10006444


1000644c  int32_t __stdcall sub_1000644c(int32_t arg1, int32_t arg2, int32_t arg3)

   0 @ 1000644c  push(edi)
   1 @ 1000644d  call([&data_10009094].d)
   2 @ 10006453  esp = esp + 0x10
   3 @ 10006456  esi = pop
   4 @ 10006457  ebp = pop
   5 @ 10006458  eax = ebx
   6 @ 1000645a  ebx = pop
   7 @ 1000645b  <return> jump(pop)


100064d0  void* sub_100064d0(int32_t* arg1 @ esi, int32_t* arg2 @ edi, void** arg3)

   0 @ 100064d0  eax = [esi].d
   1 @ 100064d2  call(sub_10006240)
   2 @ 100064d7  cond:0 = eax != 0
   3 @ 100064d9  ecx = [esp + 4 {arg3}].d
   4 @ 100064dd  [ecx].d = eax
   5 @ 100064df  if (cond:0) then 6 @ 0x10006503 else 9 @ 0x100064e1

   6 @ 10006503  ecx = [eax].d
   7 @ 10006505  [edi].d = ecx
   8 @ 10006507  <return> jump(pop)

   9 @ 100064e1  edx = [esi].d
  10 @ 100064e3  eax = [edx + 0x454].d
  11 @ 100064e9  push(zx.d(-1))
  12 @ 100064eb  push(eax)
  13 @ 100064ec  call([&data_10008024[0xc]].d)  {"ameA"}
  14 @ 100064f4  if (eax != 0) then 15 @ 0x100064fc else 17 @ 0x100064f6

  15 @ 100064fc  [edi].d = 0
  16 @ 10006502  <return> jump(pop)

  17 @ 100064f6  call([&data_100080ec].d)  {"ualAlloc"}
  18 @ 100064f6  goto 15 @ 0x100064fc

10006508                          cc cc cc cc cc cc cc cc                                                          ........

10006510  int32_t sub_10006510()

   0 @ 10006510  push(esi)
   1 @ 10006511  push(edi)
   2 @ 10006512  esi = &data_10009f38
   3 @ 10006517  call(sub_10003b00), esp += 4
   4 @ 1000651c  eax = esi
   5 @ 1000651e  call(sub_10006390)
   6 @ 1000652a  if ([&data_1000a390].d == 0) then 7 @ 0x1000654a else 11 @ 0x1000652c

   7 @ 1000654a  eax = 0xdeadbeef
   8 @ 1000654f  ecx = 0x100
   9 @ 10006554  edi = 0x10009f8c
  10 @ 10006559  if (flag:d) then 14 else 16

  11 @ 1000652c  edi = &data_1000a390
  12 @ 10006531  esi = edi
  13 @ 10006531  goto 18 @ 0x10006533

  14 @ 10006559  edi, ecx = __memfill_u32(edi - (ecx << 2), eax, ecx << 2)
  15 @ 10006559  goto 25 @ 0x1000655b

  16 @ 10006559  edi, ecx = __memfill_u32(edi, eax, ecx << 2)
  17 @ 10006559  goto 25 @ 0x1000655b

  18 @ 10006533  eax = [edi].d
  19 @ 10006535  call(sub_10003d40)
  20 @ 1000653a  esi = esi + 4
  21 @ 1000653d  [edi].d = 0
  22 @ 10006543  cond:1 = [esi].d != 0
  23 @ 10006546  edi = esi
  24 @ 10006548  if (cond:1) then 18 @ 0x10006533 else 7 @ 0x1000654a

  25 @ 1000655b  [&data_1000a390].d = eax
  26 @ 10006560  [&data_1000a394].d = eax
  27 @ 10006565  eax = [&data_1000a38c].d
  28 @ 1000656a  push(eax)
  29 @ 1000656b  call([&data_10008024].d)  {"tModuleBaseNameA"}
  30 @ 10006571  cond:0 = eax != 0
  31 @ 10006573  edi = pop
  32 @ 10006574  esi = pop
  33 @ 10006575  if (cond:0) then 34 @ 0x1000657d else 37 @ 0x10006577

  34 @ 1000657d  temp1.d = [&data_10009f7c].d
  35 @ 1000657d  [&data_10009f7c].d = [&data_10009f7c].d - 1
  36 @ 10006584  if (temp1.d != 1) then 39 @ 0x10006599 else 40 @ 0x10006586

  37 @ 10006577  call([&data_100080ec].d)  {"ualAlloc"}
  38 @ 10006577  goto 34 @ 0x1000657d

  39 @ 10006599  <return> jump(pop)

  40 @ 10006586  [&data_10009f80].d = 0
  41 @ 10006590  ecx = 0
  42 @ 10006592  edx = &data_10009f38
  43 @ 10006597  temp0.d = [edx {&data_10009f38}].d
  44 @ 10006597  [edx {&data_10009f38}].d = ecx
  45 @ 10006597  ecx = temp0.d
  46 @ 10006597  goto 39 @ 0x10006599

1000659a                                                                                cc cc cc cc cc cc                            ......

100065a0  void* const sub_100065a0(int32_t* arg1 @ edi, int32_t arg2)

   0 @ 100065a0  eax = [&data_10009f1c].d
   1 @ 100065a7  if (eax != 0) then 2 @ 0x100065ae else 8 @ 0x100065a9

   2 @ 100065ae  push(ebp)
   3 @ 100065af  push(esi)
   4 @ 100065b0  esi = &data_1000e400
   5 @ 100065b5  call(sub_10003b00)
   6 @ 100065ba  ebp = 0
   7 @ 100065bf  if ([edi + 0x50].d != ebp) then 10 @ 0x1000666a else 14 @ 0x100065c5

   8 @ 100065a9  call(sub_100044b0)
   9 @ 100065a9  goto 2 @ 0x100065ae

  10 @ 1000666a  eax = 1
  11 @ 1000666f  temp1.d = [&data_1000e444].d
  12 @ 1000666f  [&data_1000e444].d = [&data_1000e444].d - eax
  13 @ 10006675  if (temp1.d != eax) then 21 @ 0x10006686 else 24 @ 0x10006677

  14 @ 100065c5  [edi + 0x48].d = ebp
  15 @ 100065c8  [edi + 0x44].d = ebp
  16 @ 100065cb  [edi].d = ebp
  17 @ 100065cd  call([&data_1000801c].d)
  18 @ 100065d3  cond:0 = eax == -1
  19 @ 100065d6  [edi + 0x454].d = eax
  20 @ 100065dc  if (cond:0) then 31 @ 0x100065f1 else 34 @ 0x100065de

  21 @ 10006686  esi = pop
  22 @ 10006687  ebp = pop
  23 @ 10006688  <return> jump(pop)

  24 @ 10006677  [&data_1000e448].d = ebp
  25 @ 1000667d  ecx = 0
  26 @ 1000667f  edx = &data_1000e400
  27 @ 10006684  temp0.d = [edx {&data_1000e400}].d
  28 @ 10006684  [edx {&data_1000e400}].d = ecx
  29 @ 10006684  ecx = temp0.d
  30 @ 10006684  goto 21 @ 0x10006686

  31 @ 100065f1  cond:1 = ebx s>= ebp
  32 @ 100065f3  esi = [&data_100080ec].d  {"ualAlloc"}
  33 @ 100065f9  if (cond:1) then 39 @ 0x100065fd else 43 @ 0x100065fb

  34 @ 100065de  esi = [esp + 0xc {arg2}].d
  35 @ 100065e2  call(sub_10004550)
  36 @ 100065e7  cond:2 = eax != ebp
  37 @ 100065e9  [edi + 0x458].d = eax
  38 @ 100065ef  if (cond:2) then 45 @ 0x10006653 else 31 @ 0x100065f1

  39 @ 100065fd  eax = edi
  40 @ 100065ff  call(sub_10006390)
  41 @ 10006604  eax = [edi + 0x458].d
  42 @ 1000660c  if (eax == ebp) then 50 @ 0x10006619 else 52 @ 0x1000660e

  43 @ 100065fb  call(esi)
  44 @ 100065fb  goto 39 @ 0x100065fd

  45 @ 10006653  [eax + 0x218].d = edi
  46 @ 10006659  eax = ebx - 1
  47 @ 1000665c  cond:3 = eax u<= 0
  48 @ 1000665e  eax = ebx
  49 @ 10006660  if (cond:3) then 55 @ 0x10006667 else 57 @ 0x10006662

  50 @ 10006619  eax = [edi + 0x454].d
  51 @ 10006621  if (eax == ebp) then 59 @ 0x10006636 else 62 @ 0x10006623

  52 @ 1000660e  call(sub_10003d40)
  53 @ 10006613  [edi + 0x458].d = ebp
  54 @ 10006613  goto 50 @ 0x10006619

  55 @ 10006667  [edi + 0x50].d = eax
  56 @ 10006667  goto 10 @ 0x1000666a

  57 @ 10006662  eax = 1
  58 @ 10006662  goto 55 @ 0x10006667

  59 @ 10006636  temp2.d = [&data_1000e444].d
  60 @ 10006636  [&data_1000e444].d = [&data_1000e444].d - 1
  61 @ 1000663d  if (temp2.d != 1) then 65 @ 0x1000664e else 69 @ 0x1000663f

  62 @ 10006623  push(eax)
  63 @ 10006624  call([&data_10008024].d)  {"tModuleBaseNameA"}
  64 @ 1000662c  if (eax != 0) then 76 @ 0x10006630 else 78 @ 0x1000662e

  65 @ 1000664e  esi = pop
  66 @ 1000664f  eax = 0
  67 @ 10006651  ebp = pop
  68 @ 10006652  <return> jump(pop)

  69 @ 1000663f  [&data_1000e448].d = ebp
  70 @ 10006645  ecx = 0
  71 @ 10006647  edx = &data_1000e400
  72 @ 1000664c  temp0.d = [edx {&data_1000e400}].d
  73 @ 1000664c  [edx {&data_1000e400}].d = ecx
  74 @ 1000664c  ecx = temp0.d
  75 @ 1000664c  goto 65 @ 0x1000664e

  76 @ 10006630  [edi + 0x454].d = ebp
  77 @ 10006630  goto 59 @ 0x10006636

  78 @ 1000662e  call(esi)
  79 @ 1000662e  goto 76 @ 0x10006630

10006689                             cc cc cc cc cc cc cc                                                           .......

10006690  int32_t* __convention("regparm") sub_10006690(void* arg1, int32_t* arg2 @ esi, int32_t arg3, int32_t arg4)

   0 @ 10006690  push(ebx)
   1 @ 10006691  push(ebp)
   2 @ 10006692  ebp = [esp + 0xc {arg3}].d
   3 @ 10006696  push(edi)
   4 @ 10006697  edi = eax
   5 @ 10006699  eax = ebp
   6 @ 1000669b  eax = eax u>> 4
   7 @ 1000669e  ecx, eflags = _bit_scan_reverse(eax)
   8 @ 100066a1  edx = ecx
   9 @ 100066a3  ebx = [edi + (edx << 3) + 0x18].d
  10 @ 100066a7  [esp + 0x10 {arg3}].d = ecx
  11 @ 100066ab  ecx = edx + 4
  12 @ 100066ae  eax = 1
  13 @ 100066b3  eax = eax << cl
  14 @ 100066b7  if (eax != ebp) then 15 else 17 @ 0x100066bc

  15 @ 100066b7  ebp = eax
  16 @ 100066b7  goto 17 @ 0x100066bc

  17 @ 100066bc  if (esi != ebx) then 18 @ 0x100066e1 else 28 @ 0x100066be

  18 @ 100066e1  eax = [esp + 0x14 {arg4}].d
  19 @ 100066e5  [edi + 0xc].d = [edi + 0xc].d + 1
  20 @ 100066e9  cond:0 = ebx == 0
  21 @ 100066eb  [esi].d = eax
  22 @ 100066ed  eax = [edi + 0xc].d
  23 @ 100066f0  [esi + 4].d = eax
  24 @ 100066f3  [esi + 8].d = ebp
  25 @ 100066f6  [esi + 0xc].d = ebx
  26 @ 100066f9  [esi + 0x10].d = 0
  27 @ 10006700  if (cond:0) then 38 @ 0x10006707 else 40 @ 0x10006702

  28 @ 100066be  push(esi)
  29 @ 100066bf  push(&data_100081a0)  {"32.dll"}
  30 @ 100066c4  call([&data_10008080].d)
  31 @ 100066ca  eax = eax + 0x40
  32 @ 100066cd  push(eax)
  33 @ 100066ce  call([&data_10008084].d)
  34 @ 100066d4  esp = esp + 0xc
  35 @ 100066d7  call([&data_100080ec].d)  {"ualAlloc"}
  36 @ 100066dd  edx = [esp + 0x10 {arg3}].d
  37 @ 100066dd  goto 18 @ 0x100066e1

  38 @ 10006707  [edi + (edx << 3) + 0x1c].d = esi
  39 @ 10006707  goto 42 @ 0x1000670b

  40 @ 10006702  [ebx + 0x10].d = esi
  41 @ 10006705  goto 42 @ 0x1000670b

  42 @ 1000670b  [edi + 0x14].d = [edi + 0x14].d + ebp
  43 @ 1000670e  cond:1 = [edi + 0x14].d u< 0x80000
  44 @ 10006715  [edi + (edx << 3) + 0x18].d = esi
  45 @ 10006719  if (cond:1) then 46 @ 0x10006720 else 50 @ 0x1000671b

  46 @ 10006720  edi = pop
  47 @ 10006721  ebp = pop
  48 @ 10006722  ebx = pop
  49 @ 10006723  <return> jump(pop)

  50 @ 1000671b  call(sub_100061b0)
  51 @ 1000671b  goto 46 @ 0x10006720

10006724              cc cc cc cc cc cc cc cc cc cc cc cc                                                      ............

10006730  int32_t sub_10006730(void* arg1)

   0 @ 10006730  push(ebx)
   1 @ 10006731  push(ebp)
   2 @ 10006732  push(esi)
   3 @ 10006733  esi = [esp + 0x10 {arg1}].d
   4 @ 10006737  ebp = 0
   5 @ 10006739  cond:0 = esi != 0
   6 @ 1000673b  push(edi)
   7 @ 1000673c  if (cond:0) then 8 @ 0x10006759 else 11 @ 0x1000673e

   8 @ 10006759  cond:1 = [esi + 0x458].d == ebp
   9 @ 1000675f  eax = esi + 0x458
  10 @ 10006765  if (cond:1) then 14 @ 0x10006795 else 20 @ 0x10006767

  11 @ 1000673e  cond:2 = [&data_10009f88].d != ebp
  12 @ 10006744  esi = &data_10009f38
  13 @ 10006749  if (cond:2) then 8 @ 0x10006759 else 23 @ 0x1000674b

  14 @ 10006795  edi = pop
  15 @ 10006796  esi = pop
  16 @ 10006797  eax = ebp
  17 @ 10006799  ebp = pop
  18 @ 1000679a  ebx = pop
  19 @ 1000679b  <return> jump(pop)

  20 @ 10006767  ebx = [&data_100080ec].d  {"ualAlloc"}
  21 @ 1000676d  esi = eax
  22 @ 1000676f  goto 29 @ 0x10006770

  23 @ 1000674b  push(ebp)
  24 @ 1000674c  ebx = ebx | 0xffffffff
  25 @ 1000674f  edi = esi
  26 @ 10006751  call(sub_100065a0)
  27 @ 10006756  esp = esp + 4
  28 @ 10006756  goto 8 @ 0x10006759

  29 @ 10006770  eax = [eax].d
  30 @ 10006772  ecx = [&data_10009f1c].d
  31 @ 10006778  edi = 0
  32 @ 1000677d  if ([eax + 0x24].d != ecx) then 33 @ 0x10006787 else 35 @ 0x1000677f

  33 @ 10006787  call(ebx)
  34 @ 10006787  goto 37 @ 0x10006789

  35 @ 1000677f  edi = [eax + 0x1b0].d
  36 @ 10006785  goto 37 @ 0x10006789

  37 @ 10006789  esi = esi + 4
  38 @ 1000678c  ebp = ebp + edi
  39 @ 1000678e  cond:3 = [esi].d != 0
  40 @ 10006791  eax = esi
  41 @ 10006793  if (cond:3) then 29 @ 0x10006770 else 14 @ 0x10006795

1000679c                                                                                      cc cc cc cc                              ....

100067a0  int32_t* sub_100067a0(void* arg1)

   0 @ 100067a0  push(ebx)
   1 @ 100067a1  push(esi)
   2 @ 100067a2  esi = [esp + 0xc {arg1}].d
   3 @ 100067a6  cond:0 = esi != 0
   4 @ 100067a8  push(edi)
   5 @ 100067a9  if (cond:0) then 6 @ 0x100067c8 else 9 @ 0x100067ab

   6 @ 100067c8  cond:1 = [esi + 0x458].d == 0
   7 @ 100067cf  eax = esi + 0x458
   8 @ 100067d5  if (cond:1) then 12 @ 0x10006802 else 16 @ 0x100067d7

   9 @ 100067ab  cond:2 = [&data_10009f88].d != 0
  10 @ 100067b2  esi = &data_10009f38
  11 @ 100067b7  if (cond:2) then 6 @ 0x100067c8 else 19 @ 0x100067b9

  12 @ 10006802  edi = pop
  13 @ 10006803  esi = pop
  14 @ 10006804  ebx = pop
  15 @ 10006805  <return> jump(pop)

  16 @ 100067d7  edi = [&data_100080ec].d  {"ualAlloc"}
  17 @ 100067dd  esi = eax
  18 @ 100067df  goto 25 @ 0x100067e0

  19 @ 100067b9  push(zx.d(0))
  20 @ 100067bb  ebx = ebx | 0xffffffff
  21 @ 100067be  edi = esi
  22 @ 100067c0  call(sub_100065a0)
  23 @ 100067c5  esp = esp + 4
  24 @ 100067c5  goto 6 @ 0x100067c8

  25 @ 100067e0  eax = [eax].d
  26 @ 100067e2  ecx = [&data_10009f1c].d
  27 @ 100067eb  if ([eax + 0x24].d != ecx) then 28 @ 0x100067f6 else 30 @ 0x100067ed

  28 @ 100067f6  call(edi)
  29 @ 100067f6  goto 33 @ 0x100067f8

  30 @ 100067ed  ebx = eax
  31 @ 100067ef  call(sub_100048e0)
  32 @ 100067f4  goto 33 @ 0x100067f8

  33 @ 100067f8  esi = esi + 4
  34 @ 100067fb  cond:3 = [esi].d != 0
  35 @ 100067fe  eax = esi
  36 @ 10006800  if (cond:3) then 25 @ 0x100067e0 else 12 @ 0x10006802

10006806                    cc cc cc cc cc cc cc cc cc cc                                                        ..........

10006810  int32_t sub_10006810(void* arg1, int32_t arg2)

   0 @ 10006810  push(ecx)
   1 @ 10006811  push(ebx)
   2 @ 10006812  push(ebp)
   3 @ 10006813  push(esi)
   4 @ 10006814  esi = [esp + 0x14 {arg1}].d
   5 @ 10006818  ebp = 0
   6 @ 1000681a  cond:0 = esi != 0
   7 @ 1000681c  push(edi)
   8 @ 1000681d  [esp + 0x10 {var_4}].d = ebp
   9 @ 10006821  if (cond:0) then 10 @ 0x1000683e else 13 @ 0x10006823

  10 @ 1000683e  cond:1 = [esi + 0x458].d == ebp
  11 @ 10006844  eax = esi + 0x458
  12 @ 1000684a  if (cond:1) then 16 @ 0x100068c6 else 23 @ 0x1000684c

  13 @ 10006823  cond:2 = [&data_10009f88].d != ebp
  14 @ 10006829  esi = &data_10009f38
  15 @ 1000682e  if (cond:2) then 10 @ 0x1000683e else 26 @ 0x10006830

  16 @ 100068c6  edi = pop
  17 @ 100068c7  esi = pop
  18 @ 100068c8  eax = ebp
  19 @ 100068ca  ebp = pop
  20 @ 100068cb  ebx = pop
  21 @ 100068cc  ecx = pop
  22 @ 100068cd  <return> jump(pop)

  23 @ 1000684c  ebx = eax
  24 @ 1000684e  edi = edi
  25 @ 1000684e  goto 32 @ 0x10006850

  26 @ 10006830  push(ebp)
  27 @ 10006831  ebx = ebx | 0xffffffff
  28 @ 10006834  edi = esi
  29 @ 10006836  call(sub_100065a0)
  30 @ 1000683b  esp = esp + 4
  31 @ 1000683b  goto 10 @ 0x1000683e

  32 @ 10006850  edi = [eax].d
  33 @ 10006852  eax = [&data_10009f1c].d
  34 @ 10006857  ebp = 0
  35 @ 1000685c  if ([edi + 0x24].d != eax) then 36 @ 0x100068a8 else 38 @ 0x10006865

  36 @ 100068a8  call([&data_100080ec].d)  {"ualAlloc"}
  37 @ 100068a8  goto 39 @ 0x100068ae

  38 @ 10006865  if (([edi + 0x1b8].b & 2) == 0) then 44 @ 0x10006876 else 50 @ 0x10006867

  39 @ 100068ae  [esp + 0x10 {var_4}].d = [esp + 0x10 {var_4}].d + ebp
  40 @ 100068b2  ebx = ebx + 4
  41 @ 100068b5  cond:4 = [ebx].d != 0
  42 @ 100068b8  eax = ebx
  43 @ 100068ba  if (cond:4) then 32 @ 0x10006850 else 53 @ 0x100068bc

  44 @ 10006876  eax = [esp + 0x1c {arg2}].d
  45 @ 1000687a  ecx = edi
  46 @ 1000687c  call(sub_100045d0)
  47 @ 10006881  cond:3 = ([edi + 0x1b8].b & 2) == 0
  48 @ 10006888  ebp = eax
  49 @ 1000688a  if (cond:3) then 39 @ 0x100068ae else 60 @ 0x1000688c

  50 @ 10006867  esi = edi + 0x1cc
  51 @ 1000686d  call(sub_10003b00)
  52 @ 10006874  if (eax != 0) then 39 @ 0x100068ae else 44 @ 0x10006876

  53 @ 100068bc  eax = [esp + 0x10 {var_4}].d
  54 @ 100068c0  edi = pop
  55 @ 100068c1  esi = pop
  56 @ 100068c2  ebp = pop
  57 @ 100068c3  ebx = pop
  58 @ 100068c4  ecx = pop
  59 @ 100068c5  <return> jump(pop)

  60 @ 1000688c  temp1.d = [edi + 0x210].d
  61 @ 1000688c  [edi + 0x210].d = [edi + 0x210].d - 1
  62 @ 1000688c  cond:5 = temp1.d != 1
  63 @ 10006893  eax = edi + 0x1cc
  64 @ 10006899  if (cond:5) then 39 @ 0x100068ae else 65 @ 0x1000689b

  65 @ 1000689b  [eax + 0x48].d = 0
  66 @ 100068a2  ecx = 0
  67 @ 100068a4  temp0.d = [eax].d
  68 @ 100068a4  [eax].d = ecx
  69 @ 100068a4  ecx = temp0.d
  70 @ 100068a6  goto 39 @ 0x100068ae

100068ce                                            cc cc                                                                ..

100068d0  int32_t* sub_100068d0(int32_t* arg1, void* arg2)

   0 @ 100068d0  push(ebp)
   1 @ 100068d1  ebp = esp {__saved_ebp}
   2 @ 100068d3  esp = esp & 0xfffffff8
   3 @ 100068d6  esp = esp - 0x54
   4 @ 100068d9  eax = 0
   5 @ 100068db  cond:0 = [ebp + 0xc {arg2}].d != eax
   6 @ 100068de  push(ebx)
   7 @ 100068df  push(esi)
   8 @ 100068e0  esi = [ebp + 8 {arg1}].d
   9 @ 100068e3  [esi].d = 0
  10 @ 100068e9  [esi + 4].d = eax
  11 @ 100068ec  [esi + 8].d = eax
  12 @ 100068ef  [esi + 0xc].d = eax
  13 @ 100068f2  [esi + 0x10].d = eax
  14 @ 100068f5  [esi + 0x14].d = eax
  15 @ 100068f8  [esi + 0x18].d = eax
  16 @ 100068fb  [esi + 0x1c].d = eax
  17 @ 100068fe  [esi + 0x20].d = eax
  18 @ 10006901  push(edi)
  19 @ 10006902  [esi + 0x24].d = eax
  20 @ 10006905  if (cond:0) then 21 @ 0x10006923 else 24 @ 0x10006907

  21 @ 10006923  eax = [ebp + 0xc {arg2}].d
  22 @ 10006926  eax = eax + 0x458
  23 @ 1000692e  if ([eax].d == 0) then 28 @ 0x100069a5 else 35 @ 0x10006930

  24 @ 10006907  cond:1 = [&data_10009f88].d != eax
  25 @ 1000690d  edi = &data_10009f38
  26 @ 10006912  [ebp + 0xc {arg2}].d = edi
  27 @ 10006915  if (cond:1) then 21 @ 0x10006923 else 37 @ 0x10006917

  28 @ 100069a5  edi = pop
  29 @ 100069a6  eax = esi
  30 @ 100069a8  esi = pop
  31 @ 100069a9  ebx = pop
  32 @ 100069aa  esp = ebp
  33 @ 100069ac  ebp = pop
  34 @ 100069ad  <return> jump(pop)

  35 @ 10006930  ebx = eax
  36 @ 10006930  goto 42 @ 0x10006932

  37 @ 10006917  push(eax)
  38 @ 10006918  ebx = ebx | 0xffffffff
  39 @ 1000691b  call(sub_100065a0)
  40 @ 10006920  esp = esp + 4
  41 @ 10006920  goto 21 @ 0x10006923

  42 @ 10006932  esi = [eax].d
  43 @ 10006934  eax = [&data_10009f1c].d
  44 @ 1000693c  if ([esi + 0x24].d == eax) then 45 @ 0x10006944 else 53 @ 0x1000693e

  45 @ 10006944  push(esi)
  46 @ 10006945  edi = esp + 0x3c {var_30}
  47 @ 10006949  call(sub_10004a10)
  48 @ 1000694e  esi = eax
  49 @ 10006950  eax = [ebp + 8 {arg1}].d
  50 @ 10006953  ecx = 0xa
  51 @ 10006958  edi = esp + 0x14 {var_58}
  52 @ 1000695c  if (flag:d) then 55 else 57

  53 @ 1000693e  call([&data_100080ec].d)  {"ualAlloc"}
  54 @ 1000693e  goto 45 @ 0x10006944

  55 @ 1000695c  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
  56 @ 1000695c  goto 59 @ 0x1000695e

  57 @ 1000695c  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
  58 @ 1000695c  goto 59 @ 0x1000695e

  59 @ 1000695e  ecx = [esp + 0x14 {var_58}].d
  60 @ 10006962  [eax].d = [eax].d + ecx
  61 @ 10006964  edx = [esp + 0x18 {var_54}].d
  62 @ 10006968  [eax + 4].d = [eax + 4].d + edx
  63 @ 1000696b  ecx = [esp + 0x24 {var_48}].d
  64 @ 1000696f  [eax + 0x10].d = [eax + 0x10].d + ecx
  65 @ 10006972  edx = [esp + 0x28 {var_44}].d
  66 @ 10006976  ecx = [esp + 0x30 {var_3c}].d
  67 @ 1000697a  [eax + 0x14].d = [eax + 0x14].d + edx
  68 @ 1000697d  [eax + 0x1c].d = [eax + 0x1c].d + ecx
  69 @ 10006980  edx = [esp + 0x34 {var_38}].d
  70 @ 10006984  ecx = [esp + 0x38 {var_34}].d
  71 @ 10006988  [eax + 0x20].d = [eax + 0x20].d + edx
  72 @ 1000698b  [eax + 0x24].d = [eax + 0x24].d + ecx
  73 @ 1000698e  ebx = ebx + 4
  74 @ 10006991  esp = esp + 4
  75 @ 10006994  cond:2 = [ebx].d != 0
  76 @ 10006997  eax = ebx
  77 @ 10006999  if (cond:2) then 42 @ 0x10006932 else 78 @ 0x1000699b

  78 @ 1000699b  eax = [ebp + 8 {arg1}].d
  79 @ 1000699e  edi = pop
  80 @ 1000699f  esi = pop
  81 @ 100069a0  ebx = pop
  82 @ 100069a1  esp = ebp
  83 @ 100069a3  ebp = pop
  84 @ 100069a4  <return> jump(pop)

100069ae                                            cc cc                                                                ..

100069b0  void* sub_100069b0()

   0 @ 100069b0  push(ebx)
   1 @ 100069b1  push(edi)
   2 @ 100069b2  push(zx.d(0))
   3 @ 100069b4  ebx = ebx | 0xffffffff
   4 @ 100069b7  edi = &data_10009f38
   5 @ 100069bc  call(sub_100065a0)
   6 @ 100069c1  esp = esp + 4
   7 @ 100069c4  edi = pop
   8 @ 100069c5  ebx = pop
   9 @ 100069c6  <return> jump(pop)

100069c7                       cc cc cc cc cc cc cc cc cc                                                         .........

100069d0  int32_t sub_100069d0(void* arg1)

   0 @ 100069d0  push(ebx)
   1 @ 100069d1  push(esi)
   2 @ 100069d2  esi = [esp + 0xc {arg1}].d
   3 @ 100069d6  cond:0 = esi != 0
   4 @ 100069d8  push(edi)
   5 @ 100069d9  if (cond:0) then 6 @ 0x100069f8 else 13 @ 0x100069db

   6 @ 100069f8  eax = [esi + 0x454].d
   7 @ 100069fe  push(eax)
   8 @ 100069ff  call([&data_1000800c].d)
   9 @ 10006a05  ebx = eax
  10 @ 10006a07  temp0.d = ebx
  11 @ 10006a07  cond:2 = temp0.d s<= 0
  12 @ 10006a09  if (temp0.d != 0) then 16 @ 0x10006a2d else 17 @ 0x10006a0f

  13 @ 100069db  cond:1 = [&data_10009f88].d != 0
  14 @ 100069e2  esi = &data_10009f38
  15 @ 100069e7  if (cond:1) then 6 @ 0x100069f8 else 18 @ 0x100069e9

  16 @ 10006a2d  if (cond:2) then 24 @ 0x10006a8f else 28 @ 0x10006a2f

  17 @ 10006a0f  if ([esp + 0x14 {arg1}].d == eax) then 24 @ 0x10006a8f else 32 @ 0x10006a11

  18 @ 100069e9  push(zx.d(0))
  19 @ 100069eb  ebx = ebx | 0xffffffff
  20 @ 100069ee  edi = esi
  21 @ 100069f0  call(sub_100065a0)
  22 @ 100069f5  esp = esp + 4
  23 @ 100069f5  goto 6 @ 0x100069f8

  24 @ 10006a8f  edi = pop
  25 @ 10006a90  esi = pop
  26 @ 10006a91  ebx = pop
  27 @ 10006a92  <return> jump(pop)

  28 @ 10006a2f  edi = [esi + (ebx << 2) + 0x50].d
  29 @ 10006a33  push(ebp)
  30 @ 10006a34  ebp = [esp + 0x18 {arg1}].d
  31 @ 10006a3a  if (ebp == 0) then 37 @ 0x10006a58 else 39 @ 0x10006a3c

  32 @ 10006a11  ecx = [esi + 0x454].d
  33 @ 10006a17  push(zx.d(-1))
  34 @ 10006a19  push(ecx)
  35 @ 10006a1a  call([&data_10008024[0xc]].d)  {"ameA"}
  36 @ 10006a22  if (eax != 0) then 24 @ 0x10006a8f else 46 @ 0x10006a24

  37 @ 10006a58  [edi + 0xc].d = [edi + 0xc].d + 1
  38 @ 10006a60  if ([edi + 0x14].d == 0) then 50 @ 0x10006a6c else 53 @ 0x10006a62

  39 @ 10006a3c  edx = [edi].d
  40 @ 10006a3e  eax = [esi + 0x454].d
  41 @ 10006a44  edx = neg.d(edx)
  42 @ 10006a46  push(edx)
  43 @ 10006a47  push(eax)
  44 @ 10006a48  call([&data_10008024[0xc]].d)  {"ameA"}
  45 @ 10006a50  if (eax != 0) then 37 @ 0x10006a58 else 57 @ 0x10006a52

  46 @ 10006a24  edi = pop
  47 @ 10006a25  esi = pop
  48 @ 10006a26  ebx = pop
  49 @ 10006a27  jump([&data_100080ec].d)  {"ualAlloc"}

  50 @ 10006a6c  cond:3 = ebp == 0
  51 @ 10006a6e  ebp = pop
  52 @ 10006a6f  if (cond:3) then 24 @ 0x10006a8f else 59 @ 0x10006a71

  53 @ 10006a62  push(zx.d(0))
  54 @ 10006a64  call(sub_10006040)
  55 @ 10006a69  esp = esp + 4
  56 @ 10006a69  goto 50 @ 0x10006a6c

  57 @ 10006a52  call([&data_100080ec].d)  {"ualAlloc"}
  58 @ 10006a52  goto 37 @ 0x10006a58

  59 @ 10006a71  [edi].d = -1
  60 @ 10006a77  [edi + 4].d = 0
  61 @ 10006a7e  eax = [esi + (ebx << 2) + 0x50].d
  62 @ 10006a82  call(sub_10004f40)
  63 @ 10006a87  [esi + (ebx << 2) + 0x50].d = 0
  64 @ 10006a87  goto 24 @ 0x10006a8f

10006a93                                                           cc cc cc cc cc cc cc cc cc cc cc cc cc                     .............

10006aa0  void* sub_10006aa0(void* arg1, int32_t arg2)

   0 @ 10006aa0  eax = [esp + 4 {arg1}].d
   1 @ 10006aa6  if (eax != 0) then 2 @ 0x10006ada else 5 @ 0x10006aa8

   2 @ 10006ada  edx = [esp + 8 {arg2}].d
   3 @ 10006ade  [eax + 0x4c].d = edx
   4 @ 10006ae1  <return> jump(pop)

   5 @ 10006aa8  cond:0 = [&data_10009f88].d != eax
   6 @ 10006aae  push(esi)
   7 @ 10006aaf  esi = &data_10009f38
   8 @ 10006ab4  if (cond:0) then 9 @ 0x10006ad1 else 13 @ 0x10006ab6

   9 @ 10006ad1  ecx = [esp + 0xc {arg2}].d
  10 @ 10006ad5  [esi + 0x4c {&data_10009f84}].d = ecx
  11 @ 10006ad8  esi = pop
  12 @ 10006ad9  <return> jump(pop)

  13 @ 10006ab6  push(ebx)
  14 @ 10006ab7  push(edi)
  15 @ 10006ab8  push(eax)
  16 @ 10006ab9  ebx = ebx | 0xffffffff
  17 @ 10006abc  edi = esi
  18 @ 10006abe  call(sub_100065a0)
  19 @ 10006ac3  eax = [esp + 0x18 {arg2}].d
  20 @ 10006ac7  esp = esp + 4
  21 @ 10006aca  edi = pop
  22 @ 10006acb  ebx = pop
  23 @ 10006acc  [esi + 0x4c {&data_10009f84}].d = eax
  24 @ 10006acf  esi = pop
  25 @ 10006ad0  <return> jump(pop)

10006ae2        cc cc cc cc cc cc cc cc cc cc cc cc cc cc                                                    ..............

10006af0  int32_t sub_10006af0()

   0 @ 10006af0  push(zx.d(0))
   1 @ 10006af2  call(sub_10006730)
   2 @ 10006af7  esp = esp + 4
   3 @ 10006afa  <return> jump(pop)

10006afb                                                                                   cc cc cc cc cc                             .....

10006b00  int32_t* sub_10006b00()

   0 @ 10006b00  push(zx.d(0))
   1 @ 10006b02  call(sub_100067a0)
   2 @ 10006b07  ecx = pop
   3 @ 10006b08  <return> jump(pop)

10006b09                             cc cc cc cc cc cc cc                                                           .......

10006b10  int32_t sub_10006b10(int32_t arg1)

   0 @ 10006b10  eax = [esp + 4 {arg1}].d
   1 @ 10006b14  push(eax)
   2 @ 10006b15  push(zx.d(0))
   3 @ 10006b17  call(sub_10006810)
   4 @ 10006b1c  esp = esp + 8
   5 @ 10006b1f  <return> jump(pop)


10006b20  int32_t sub_10006b20(int32_t arg1)

   0 @ 10006b20  push(ebp)
   1 @ 10006b21  ebp = esp {__saved_ebp}
   2 @ 10006b23  esp = esp & 0xfffffff8
   3 @ 10006b26  esp = esp - 0x28
   4 @ 10006b29  push(esi)
   5 @ 10006b2a  push(edi)
   6 @ 10006b2b  eax = esp + 8 {var_30}
   7 @ 10006b2f  push(zx.d(0))
   8 @ 10006b31  push(eax)
   9 @ 10006b32  call(sub_100068d0)
  10 @ 10006b37  esi = eax
  11 @ 10006b39  eax = [ebp + 8 {arg1}].d
  12 @ 10006b3c  esp = esp + 8
  13 @ 10006b3f  ecx = 0xa
  14 @ 10006b44  edi = eax
  15 @ 10006b46  if (flag:d) then 16 else 18

  16 @ 10006b46  edi, esi, ecx = __memcpy_u32(edi - (ecx << 2), esi - (ecx << 2), ecx << 2)
  17 @ 10006b46  goto 20 @ 0x10006b48

  18 @ 10006b46  edi, esi, ecx = __memcpy_u32(edi, esi, ecx << 2)
  19 @ 10006b46  goto 20 @ 0x10006b48

  20 @ 10006b48  edi = pop
  21 @ 10006b49  esi = pop
  22 @ 10006b4a  esp = ebp
  23 @ 10006b4c  ebp = pop
  24 @ 10006b4d  <return> jump(pop)

10006b4e                                            cc cc                                                                ..

10006b50  void sub_10006b50(int32_t arg1)

   0 @ 10006b57  if ([&data_10009f88].d != 0) then 1 @ 0x10006b79 else 4 @ 0x10006b59

   1 @ 10006b79  ecx = [esp + 4 {arg1}].d
   2 @ 10006b7d  [&data_10009f84].d = ecx
   3 @ 10006b83  <return> jump(pop)

   4 @ 10006b59  push(ebx)
   5 @ 10006b5a  push(edi)
   6 @ 10006b5b  push(zx.d(0))
   7 @ 10006b5d  ebx = ebx | 0xffffffff
   8 @ 10006b60  edi = &data_10009f38
   9 @ 10006b65  call(sub_100065a0)
  10 @ 10006b6a  eax = [esp + 0x10 {arg1}].d
  11 @ 10006b6e  esp = esp + 4
  12 @ 10006b71  edi = pop
  13 @ 10006b72  [&data_10009f84].d = eax
  14 @ 10006b77  ebx = pop
  15 @ 10006b78  <return> jump(pop)

10006b84              cc cc cc cc cc cc cc cc cc cc cc cc                                                      ............

10006b90  int32_t* __convention("regparm") sub_10006b90(int32_t* arg1, int32_t* arg2 @ ebp, int32_t* arg3 @ esi, int32_t* arg4)

   0 @ 10006b90  cond:0 = eax == 0
   1 @ 10006b92  push(ebp)
   2 @ 10006b93  ebp = [esp + 8 {arg4}].d
   3 @ 10006b97  if (cond:0) then 4 @ 0x10006ba7 else 5 @ 0x10006b9c

   4 @ 10006ba7  if ([esi].d != 0) then 6 @ 0x10006bce else 13 @ 0x10006ba9

   5 @ 10006b9c  if ([eax].d u>= 0x14) then 4 @ 0x10006ba7 else 16 @ 0x10006b9e

   6 @ 10006bce  eax = [esi].d
   7 @ 10006bd0  ecx = [eax + 0x454].d
   8 @ 10006bd6  push(ecx)
   9 @ 10006bd7  call([&data_1000800c].d)
  10 @ 10006bdd  temp0.d = eax
  11 @ 10006bdd  cond:2 = temp0.d != 0
  12 @ 10006bdf  if (temp0.d s<= 0) then 18 @ 0x10006bf4 else 19 @ 0x10006be1

  13 @ 10006ba9  cond:1 = [&data_10009f88].d != 0
  14 @ 10006bb0  [esi].d = &data_10009f38
  15 @ 10006bb6  if (cond:1) then 6 @ 0x10006bce else 27 @ 0x10006bb8

  16 @ 10006b9e  [eax].d = 0x14
  17 @ 10006b9e  goto 4 @ 0x10006ba7

  18 @ 10006bf4  if (cond:2) then 37 @ 0x10006c35 else 44 @ 0x10006bf6

  19 @ 10006be1  edx = [esi].d
  20 @ 10006be3  eax = [edx + (eax << 2) + 0x50].d
  21 @ 10006be7  ecx = [esp + 0xc {arg4}].d
  22 @ 10006beb  [ebp].d = eax
  23 @ 10006bee  eax = [eax].d
  24 @ 10006bf0  [ecx].d = eax
  25 @ 10006bf2  ebp = pop
  26 @ 10006bf3  <return> jump(pop)

  27 @ 10006bb8  push(ebx)
  28 @ 10006bb9  push(edi)
  29 @ 10006bba  push(zx.d(0))
  30 @ 10006bbc  ebx = ebx | 0xffffffff
  31 @ 10006bbf  edi = &data_10009f38
  32 @ 10006bc4  call(sub_100065a0)
  33 @ 10006bc9  esp = esp + 4
  34 @ 10006bcc  edi = pop
  35 @ 10006bcd  ebx = pop
  36 @ 10006bcd  goto 6 @ 0x10006bce

  37 @ 10006c35  edx = [esp + 0xc {arg4}].d
  38 @ 10006c39  ecx = ecx | 0xffffffff
  39 @ 10006c3c  ecx = ecx - eax
  40 @ 10006c3e  [ebp].d = 0
  41 @ 10006c45  [edx].d = ecx
  42 @ 10006c47  ebp = pop
  43 @ 10006c48  <return> jump(pop)

  44 @ 10006bf6  eax = [esi].d
  45 @ 10006bf8  call(sub_10006240)
  46 @ 10006bfd  cond:3 = eax != 0
  47 @ 10006bff  [ebp].d = eax
  48 @ 10006c02  if (cond:3) then 49 @ 0x10006c2b else 54 @ 0x10006c04

  49 @ 10006c2b  edx = [eax].d
  50 @ 10006c2d  eax = [esp + 0xc {arg4}].d
  51 @ 10006c31  [eax].d = edx
  52 @ 10006c33  ebp = pop
  53 @ 10006c34  <return> jump(pop)

  54 @ 10006c04  edx = [esi].d
  55 @ 10006c06  eax = [edx + 0x454].d
  56 @ 10006c0c  push(zx.d(-1))
  57 @ 10006c0e  push(eax)
  58 @ 10006c0f  call([&data_10008024[0xc]].d)  {"ameA"}
  59 @ 10006c17  if (eax != 0) then 60 @ 0x10006c1f else 64 @ 0x10006c19

  60 @ 10006c1f  ecx = [esp + 0xc {var_4}].d
  61 @ 10006c23  [ecx].d = 0
  62 @ 10006c29  ebp = pop
  63 @ 10006c2a  <return> jump(pop)

  64 @ 10006c19  call([&data_100080ec].d)  {"ualAlloc"}
  65 @ 10006c19  goto 60 @ 0x10006c1f

10006c49                             cc cc cc cc cc cc cc                                                           .......

10006c50  int32_t sub_10006c50(void* arg1)

   0 @ 10006c50  push(ebx)
   1 @ 10006c51  push(esi)
   2 @ 10006c52  esi = [esp + 0xc {arg1}].d
   3 @ 10006c56  cond:0 = esi != 0
   4 @ 10006c58  push(edi)
   5 @ 10006c59  if (cond:0) then 6 @ 0x10006c78 else 13 @ 0x10006c5b

   6 @ 10006c78  eax = [esi + 0x454].d
   7 @ 10006c7e  push(eax)
   8 @ 10006c7f  call([&data_1000800c].d)
   9 @ 10006c85  ebx = eax
  10 @ 10006c87  temp0.d = ebx
  11 @ 10006c87  cond:2 = temp0.d s<= 0
  12 @ 10006c89  if (temp0.d != 0) then 16 @ 0x10006ca7 else 17 @ 0x10006c8b

  13 @ 10006c5b  cond:1 = [&data_10009f88].d != 0
  14 @ 10006c62  esi = &data_10009f38
  15 @ 10006c67  if (cond:1) then 6 @ 0x10006c78 else 22 @ 0x10006c69

  16 @ 10006ca7  if (cond:2) then 28 @ 0x10006cfb else 32 @ 0x10006ca9

  17 @ 10006c8b  ecx = [esi + 0x454].d
  18 @ 10006c91  push(zx.d(-1))
  19 @ 10006c93  push(ecx)
  20 @ 10006c94  call([&data_10008024[0xc]].d)  {"ameA"}
  21 @ 10006c9c  if (eax != 0) then 28 @ 0x10006cfb else 40 @ 0x10006c9e

  22 @ 10006c69  push(zx.d(0))
  23 @ 10006c6b  ebx = ebx | 0xffffffff
  24 @ 10006c6e  edi = esi
  25 @ 10006c70  call(sub_100065a0)
  26 @ 10006c75  esp = esp + 4
  27 @ 10006c75  goto 6 @ 0x10006c78

  28 @ 10006cfb  edi = pop
  29 @ 10006cfc  esi = pop
  30 @ 10006cfd  ebx = pop
  31 @ 10006cfe  <return> jump(pop)

  32 @ 10006ca9  edi = [esi + (ebx << 2) + 0x50].d
  33 @ 10006cad  edx = [edi].d
  34 @ 10006caf  eax = [esi + 0x454].d
  35 @ 10006cb5  edx = neg.d(edx)
  36 @ 10006cb7  push(edx)
  37 @ 10006cb8  push(eax)
  38 @ 10006cb9  call([&data_10008024[0xc]].d)  {"ameA"}
  39 @ 10006cc1  if (eax != 0) then 44 @ 0x10006cc9 else 46 @ 0x10006cc3

  40 @ 10006c9e  edi = pop
  41 @ 10006c9f  esi = pop
  42 @ 10006ca0  ebx = pop
  43 @ 10006ca1  jump([&data_100080ec].d)  {"ualAlloc"}

  44 @ 10006cc9  [edi + 0xc].d = [edi + 0xc].d + 1
  45 @ 10006cd1  if ([edi + 0x14].d == 0) then 48 @ 0x10006cdd else 54 @ 0x10006cd3

  46 @ 10006cc3  call([&data_100080ec].d)  {"ualAlloc"}
  47 @ 10006cc3  goto 44 @ 0x10006cc9

  48 @ 10006cdd  [edi].d = -1
  49 @ 10006ce3  [edi + 4].d = 0
  50 @ 10006cea  eax = [esi + (ebx << 2) + 0x50].d
  51 @ 10006cee  call(sub_10004f40)
  52 @ 10006cf3  [esi + (ebx << 2) + 0x50].d = 0
  53 @ 10006cf3  goto 28 @ 0x10006cfb

  54 @ 10006cd3  push(zx.d(0))
  55 @ 10006cd5  call(sub_10006040)
  56 @ 10006cda  esp = esp + 4
  57 @ 10006cda  goto 48 @ 0x10006cdd

10006cff                                                                                               cc                                 .

10006d00  int32_t sub_10006d00(int32_t arg1) __noreturn

   0 @ 10006d00  push(ebp)
   1 @ 10006d01  ebp = esp {var_4}
   2 @ 10006d03  esp = esp - 0xc
   3 @ 10006d06  push(ebx)
   4 @ 10006d07  push(esi)
   5 @ 10006d08  esi = [ebp + 0xc {arg1}].d
   6 @ 10006d0b  push(edi)
   7 @ 10006d0c  eax = esi << 2
   8 @ 10006d13  call(sub_10007950)
   9 @ 10006d13  noreturn
{ Does not return }

10006d18                                                                          8b d4 85 d2 89 55 f4 75                          .....U.u
10006d20  0c 33 c0 8d 65 e8 5f 5e 5b 8b e5 5d c3 85 f6 76 1c 8b 45 10 2b d0 8b 08 83 f9 14 73 05 b9 14 00  .3..e._^[..]...v..E.+......s....
10006d40  00 00 89 0c 02 83 c0 04 83 ee 01 75 e9 8b 75 08 85 f6 75 1d 83 3d 88 9f 00 10 00 be 38 9f 00 10  ...........u..u...u..=......8...
10006d60  75 0f 6a 00 83 cb ff 8b fe e8 32 f8 ff ff 83 c4 04 8b 86 54 04 00 00 50 ff 15 0c 80 00 10 85 c0  u.j.......2........T...P........
10006d80  7e 08 8b 5c 86 50 8b 0b eb 33 75 2a 8b c6 e8 ad f4 ff ff 8b d8 85 db 75 ed 8b 8e 54 04 00 00 6a  ~..\.P...3u*...........u...T...j
10006da0  ff 51 ff 15 30 80 00 10 85 c0 75 06 ff 15 ec 80 00 10 33 c9 eb 07 83 c9 ff 33 db 2b c8 89 4d f8  .Q..0.....u.......3......3.+..M.
10006dc0  8b 8c 8e 58 04 00 00 8b 91 cc 01 00 00 85 d2 8d b9 cc 01 00 00 89 4d fc 74 14 ff 15 18 80 00 10  ...X..................M.t.......
10006de0  39 47 48 75 2b 83 47 44 01 8b 75 fc eb 34 b8 01 00 00 00 8b cf 87 01 85 c0 75 15 ff 15 18 80 00  9GHu+.GD..u..4...........u......
10006e00  10 8b 75 fc 89 47 48 c7 47 44 01 00 00 00 eb 12 6a 00 8d 55 f8 52 53 56 e8 a3 dd ff ff 83 c4 10  ..u..GH.GD......j..U.RSV........
10006e20  8b f0 8b 46 24 8b 0d 1c 9f 00 10 3b c1 74 0a ff 15 ec 80 00 10 33 c0 eb 16 8b 55 f4 8b 45 0c 6a  ...F$......;.t.......3....U..E.j
10006e40  00 52 50 8b 45 14 56 e8 74 e9 ff ff 83 c4 10 83 86 10 02 00 00 ff 8d 8e cc 01 00 00 75 0b c7 41  .RP.E.V.t...................u..A
10006e60  48 00 00 00 00 33 d2 87 11 8d 65 e8 5f 5e 5b 8b e5 5d c3 cc cc cc cc cc cc cc cc cc cc cc cc cc  H....3....e._^[..]..............

10006e80  void* sub_10006e80(void* arg1)

   0 @ 10006e80  esp = esp - 0xc
   1 @ 10006e83  push(ebx)
   2 @ 10006e84  push(ebp)
   3 @ 10006e85  push(esi)
   4 @ 10006e86  push(edi)
   5 @ 10006e87  eax = esp + 0x10 {var_c}
   6 @ 10006e8b  push(eax)
   7 @ 10006e8c  ecx = esp + 0x18 {var_8}
   8 @ 10006e90  push(ecx)
   9 @ 10006e91  eax = esp + 0x30 {arg_c}
  10 @ 10006e95  esi = esp + 0x28 {arg_4}
  11 @ 10006e99  call(sub_10006b90)
  12 @ 10006e9e  eax = [esp + 0x18 {var_c}].d
  13 @ 10006ea2  edx = [esp + 0x28 {arg_4}].d
  14 @ 10006ea6  ebx = [edx + (eax << 2) + 0x458].d
  15 @ 10006ead  ebp = [esp + 0x2c {arg_8}].d
  16 @ 10006eb1  esi = ebx + 0x1cc
  17 @ 10006eb7  edi = ebp
  18 @ 10006eb9  edi = edi * [esp + 0x30 {arg_c}].d
  19 @ 10006ebe  [esp + 0x2c {arg_8}].d = eax
  20 @ 10006ec2  eax = [esi].d
  21 @ 10006ec4  esp = esp + 8
  22 @ 10006ec9  if (eax == 0) then 23 @ 0x10006edc else 29 @ 0x10006ecb

  23 @ 10006edc  ecx = 1
  24 @ 10006ee1  edx = esi
  25 @ 10006ee3  temp0.d = [edx].d
  26 @ 10006ee3  [edx].d = ecx
  27 @ 10006ee3  ecx = temp0.d
  28 @ 10006ee7  if (ecx != 0) then 31 @ 0x10006efb else 42 @ 0x10006ee9

  29 @ 10006ecb  call([&data_10008018].d)
  30 @ 10006ed4  if ([esi + 0x48].d != eax) then 31 @ 0x10006efb else 46 @ 0x10006ed6

  31 @ 10006efb  ecx = [esp + 0x14 {var_8}].d
  32 @ 10006eff  edx = [esp + 0x20 {arg_4}].d
  33 @ 10006f03  push(edi)
  34 @ 10006f04  eax = esp + 0x28 {arg_8}
  35 @ 10006f08  push(eax)
  36 @ 10006f09  push(ecx)
  37 @ 10006f0a  push(edx)
  38 @ 10006f0b  call(sub_10004bc0)
  39 @ 10006f10  esp = esp + 0x10
  40 @ 10006f13  ebx = eax
  41 @ 10006f13  goto 48 @ 0x10006f15

  42 @ 10006ee9  call([&data_10008018].d)
  43 @ 10006eef  [esi + 0x48].d = eax
  44 @ 10006ef2  [esi + 0x44].d = 1
  45 @ 10006ef9  goto 48 @ 0x10006f15

  46 @ 10006ed6  [esi + 0x44].d = [esi + 0x44].d + 1
  47 @ 10006eda  goto 48 @ 0x10006f15

  48 @ 10006f15  ecx = [&data_10009f1c].d
  49 @ 10006f1b  cond:0 = [ebx + 0x24].d == ecx
  50 @ 10006f1e  eax = [esp + 0x28 {arg_c}].d
  51 @ 10006f22  [esp + 0x18 {var_4}].d = eax
  52 @ 10006f26  if (cond:0) then 53 @ 0x10006f32 else 62 @ 0x10006f28

  53 @ 10006f32  eax = [esp + 0x2c {arg1}].d
  54 @ 10006f36  push(zx.d(3))
  55 @ 10006f38  edx = esp + 0x1c {var_4}
  56 @ 10006f3c  push(edx)
  57 @ 10006f3d  push(ebp)
  58 @ 10006f3e  push(ebx)
  59 @ 10006f3f  call(sub_100057c0)
  60 @ 10006f44  esp = esp + 0x10
  61 @ 10006f44  goto 65 @ 0x10006f47

  62 @ 10006f28  call([&data_100080ec].d)  {"ualAlloc"}
  63 @ 10006f2e  eax = 0
  64 @ 10006f30  goto 65 @ 0x10006f47

  65 @ 10006f47  temp1.d = [ebx + 0x210].d
  66 @ 10006f47  [ebx + 0x210].d = [ebx + 0x210].d - 1
  67 @ 10006f47  cond:1 = temp1.d != 1
  68 @ 10006f4e  edi = pop
  69 @ 10006f4f  esi = pop
  70 @ 10006f50  ecx = ebx + 0x1cc
  71 @ 10006f56  ebp = pop
  72 @ 10006f57  ebx = pop
  73 @ 10006f58  if (cond:1) then 74 @ 0x10006f65 else 76 @ 0x10006f5a

  74 @ 10006f65  esp = esp + 0xc
  75 @ 10006f68  <return> jump(pop)

  76 @ 10006f5a  [ecx + 0x48].d = 0
  77 @ 10006f61  edx = 0
  78 @ 10006f63  temp0.d = [ecx].d
  79 @ 10006f63  [ecx].d = edx
  80 @ 10006f63  edx = temp0.d
  81 @ 10006f63  goto 74 @ 0x10006f65

10006f69                             cc cc cc cc cc cc cc                                                           .......

10006f70  void* sub_10006f70(int32_t arg1)

   0 @ 10006f70  esp = esp - 0xc
   1 @ 10006f73  push(ebx)
   2 @ 10006f74  push(esi)
   3 @ 10006f75  push(edi)
   4 @ 10006f76  eax = esp + 0xc {var_c}
   5 @ 10006f7a  push(eax)
   6 @ 10006f7b  ecx = esp + 0x18 {var_4}
   7 @ 10006f7f  push(ecx)
   8 @ 10006f80  eax = esp + 0x2c {arg_c}
   9 @ 10006f84  esi = esp + 0x24 {arg_4}
  10 @ 10006f88  call(sub_10006b90)
  11 @ 10006f8d  eax = [esp + 0x14 {var_c}].d
  12 @ 10006f91  edx = [esp + 0x24 {arg_4}].d
  13 @ 10006f95  edi = [edx + (eax << 2) + 0x458].d
  14 @ 10006f9c  esi = edi + 0x1cc
  15 @ 10006fa2  [esp + 0x18 {var_8}].d = eax
  16 @ 10006fa6  eax = [esi].d
  17 @ 10006fa8  ebx = [esp + 0x2c {arg_c}].d
  18 @ 10006fac  esp = esp + 8
  19 @ 10006fb1  if (eax == 0) then 20 @ 0x10006fc4 else 26 @ 0x10006fb3

  20 @ 10006fc4  ecx = 1
  21 @ 10006fc9  edx = esi
  22 @ 10006fcb  temp0.d = [edx].d
  23 @ 10006fcb  [edx].d = ecx
  24 @ 10006fcb  ecx = temp0.d
  25 @ 10006fcf  if (ecx != 0) then 28 @ 0x10006fe3 else 39 @ 0x10006fd1

  26 @ 10006fb3  call([&data_10008018].d)
  27 @ 10006fbc  if ([esi + 0x48].d != eax) then 28 @ 0x10006fe3 else 43 @ 0x10006fbe

  28 @ 10006fe3  ecx = [esp + 0x14 {var_4}].d
  29 @ 10006fe7  edx = [esp + 0x1c {arg_4}].d
  30 @ 10006feb  push(ebx)
  31 @ 10006fec  eax = esp + 0x14 {var_8}
  32 @ 10006ff0  push(eax)
  33 @ 10006ff1  push(ecx)
  34 @ 10006ff2  push(edx)
  35 @ 10006ff3  call(sub_10004bc0)
  36 @ 10006ff8  esp = esp + 0x10
  37 @ 10006ffb  edi = eax
  38 @ 10006ffb  goto 45 @ 0x10006ffd

  39 @ 10006fd1  call([&data_10008018].d)
  40 @ 10006fd7  [esi + 0x48].d = eax
  41 @ 10006fda  [esi + 0x44].d = 1
  42 @ 10006fe1  goto 45 @ 0x10006ffd

  43 @ 10006fbe  [esi + 0x44].d = [esi + 0x44].d + 1
  44 @ 10006fc2  goto 45 @ 0x10006ffd

  45 @ 10006ffd  eax = [esp + 0x20 {arg1}].d
  46 @ 10007003  if (eax == 0) then 47 @ 0x1000702b else 51 @ 0x10007005

  47 @ 1000702b  eax = ebx
  48 @ 1000702d  ecx = edi
  49 @ 1000702f  call(sub_10005500)
  50 @ 1000702f  goto 53 @ 0x10007036

  51 @ 10007005  ecx = [&data_10009f1c].d
  52 @ 1000700e  if ([edi + 0x24].d == ecx) then 54 @ 0x1000701a else 60 @ 0x10007010

  53 @ 10007036  if (eax == 0) then 63 @ 0x1000707b else 65 @ 0x10007038

  54 @ 1000701a  push(eax)
  55 @ 1000701b  eax = [esp + 0x28 {arg_c}].d
  56 @ 1000701f  ecx = edi
  57 @ 10007021  call(sub_100059f0)
  58 @ 10007026  esp = esp + 4
  59 @ 10007029  goto 53 @ 0x10007036

  60 @ 10007010  call([&data_100080ec].d)  {"ualAlloc"}
  61 @ 10007016  eax = 0
  62 @ 10007018  goto 53 @ 0x10007036

  63 @ 1000707b  eax = 0
  64 @ 1000707b  goto 69 @ 0x1000707d

  65 @ 10007038  ecx = [eax - 4].d
  66 @ 1000703b  edx = [&data_10009f18].d
  67 @ 10007041  ecx = ecx & 0xfffffff8
  68 @ 10007046  if (edx == 0) then 77 @ 0x1000704d else 80 @ 0x1000704b

  69 @ 1000707d  temp1.d = [edi + 0x210].d
  70 @ 1000707d  [edi + 0x210].d = [edi + 0x210].d - 1
  71 @ 1000707d  cond:0 = temp1.d != 1
  72 @ 10007084  ecx = edi + 0x1cc
  73 @ 1000708a  edi = pop
  74 @ 1000708b  esi = pop
  75 @ 1000708c  ebx = pop
  76 @ 1000708d  if (cond:0) then 81 @ 0x1000709a else 83 @ 0x1000708f

  77 @ 1000704d  edx = [edi + 0x10].d
  78 @ 10007050  [&data_10009f18].d = edx
  79 @ 10007050  goto 89 @ 0x10007056

  80 @ 1000704b  if ([edi + 0x10].d u>= edx) then 89 @ 0x10007056 else 77 @ 0x1000704d

  81 @ 1000709a  esp = esp + 0xc
  82 @ 1000709d  <return> jump(pop)

  83 @ 1000708f  [ecx + 0x48].d = 0
  84 @ 10007096  edx = 0
  85 @ 10007098  temp0.d = [ecx].d
  86 @ 10007098  [ecx].d = edx
  87 @ 10007098  edx = temp0.d
  88 @ 10007098  goto 81 @ 0x1000709a

  89 @ 10007056  edx = [&data_10009f34].d
  90 @ 1000705e  if (edx == 0) then 91 @ 0x10007064 else 98 @ 0x10007062

  91 @ 10007064  edx = [&data_10009f20].d
  92 @ 1000706a  ecx = ecx + edx
  93 @ 1000706c  edx = edx - 1
  94 @ 1000706f  edx = not.d(edx)
  95 @ 10007071  ecx = ecx & edx
  96 @ 10007073  [&data_10009f34].d = ecx
  97 @ 10007079  goto 69 @ 0x1000707d

  98 @ 10007062  if (ecx u<= edx) then 69 @ 0x1000707d else 91 @ 0x10007064

1000709e                                                                                            cc cc                                ..

100070a0  void sub_100070a0(int32_t* arg1)

   0 @ 100070a0  push(ecx)
   1 @ 100070a1  push(ebx)
   2 @ 100070a2  ebx = [esp + 0x10 {arg1}].d
   3 @ 100070a8  if (ebx == 0) then 4 @ 0x10007136 else 7 @ 0x100070ae

   4 @ 10007136  ebx = pop
   5 @ 10007137  ecx = pop
   6 @ 10007138  <return> jump(pop)

   7 @ 100070ae  push(ebp)
   8 @ 100070af  push(edi)
   9 @ 100070b0  edx = ebx
  10 @ 100070b2  ebp = 1
  11 @ 100070b7  call(sub_10002e60)
  12 @ 100070be  if (eax == 0) then 13 @ 0x100070cd else 18 @ 0x100070c0

  13 @ 100070cd  push(ebx)
  14 @ 100070ce  call([&data_10009bd8].d)
  15 @ 100070d4  esp = esp + 4
  16 @ 100070d7  edi = eax
  17 @ 100070d7  goto 23 @ 0x100070db

  18 @ 100070c0  edi = [ebx - 4].d
  19 @ 100070c3  edi = edi & 0xfffffff8
  20 @ 100070c6  ebp = 0
  21 @ 100070c8  edi = edi - 8
  22 @ 100070cb  goto 23 @ 0x100070db

  23 @ 100070db  if (edi != 0) then 24 @ 0x100070fb else 35 @ 0x100070dd

  24 @ 100070fb  push(esi)
  25 @ 100070fc  eax = esp + 0x10 {__saved_ecx}
  26 @ 10007100  push(eax)
  27 @ 10007101  ecx = esp + 0x20 {arg1}
  28 @ 10007105  push(ecx)
  29 @ 10007106  eax = 0
  30 @ 10007108  esi = esp + 0x20 {arg_4}
  31 @ 1000710c  call(sub_10006b90)
  32 @ 10007111  eax = [esp + 0x24 {arg1}].d
  33 @ 10007115  esp = esp + 8
  34 @ 1000711a  if (eax == 0) then 43 @ 0x1000713b else 44 @ 0x1000711c

  35 @ 100070dd  push(&data_10008230)  {"ode_pointer"}
  36 @ 100070e2  call([&data_10008080].d)
  37 @ 100070e8  eax = eax + 0x40
  38 @ 100070eb  push(eax)
  39 @ 100070ec  call([&data_10008084].d)
  40 @ 100070f2  esp = esp + 8
  41 @ 100070f5  call([&data_100080ec].d)  {"ualAlloc"}
  42 @ 100070f5  goto 24 @ 0x100070fb

  43 @ 1000713b  if (ebp == 0) then 46 @ 0x1000714d else 53 @ 0x1000713d

  44 @ 1000711c  edx = edi - 0x14
  45 @ 10007125  if (edx u> 0x1ff4) then 43 @ 0x1000713b else 62 @ 0x10007127

  46 @ 1000714d  esi = pop
  47 @ 1000714e  edi = pop
  48 @ 1000714f  ebp = pop
  49 @ 10007150  eax = ebx
  50 @ 10007152  ebx = pop
  51 @ 10007153  esp = esp + 4
  52 @ 10007156  <return> tailcall(sub_10004f40)

  53 @ 1000713d  push(ebx)
  54 @ 1000713e  call([&data_10009094].d)
  55 @ 10007144  esp = esp + 4
  56 @ 10007147  esi = pop
  57 @ 10007148  edi = pop
  58 @ 10007149  ebp = pop
  59 @ 1000714a  ebx = pop
  60 @ 1000714b  ecx = pop
  61 @ 1000714c  <return> jump(pop)

  62 @ 10007127  push(ebp)
  63 @ 10007128  push(edi)
  64 @ 10007129  esi = ebx
  65 @ 1000712b  call(sub_10006690)
  66 @ 10007130  esp = esp + 8
  67 @ 10007133  esi = pop
  68 @ 10007134  edi = pop
  69 @ 10007135  ebp = pop
  70 @ 10007135  goto 4 @ 0x10007136

1000715b                                                                                   cc cc cc cc cc                             .....

10007160  void* sub_10007160(int32_t arg1, int32_t* arg2)

   0 @ 10007160  esp = esp - 8
   1 @ 10007163  eax = [esp + 0x10 {arg1}].d
   2 @ 10007167  eax = eax * [esp + 0x14 {arg2}].d
   3 @ 1000716c  push(esi)
   4 @ 1000716d  push(edi)
   5 @ 1000716e  ecx = esp + 8 {var_8}
   6 @ 10007172  push(ecx)
   7 @ 10007173  edx = esp + 0x20 {arg2}
   8 @ 10007177  [esp + 0x1c {arg1}].d = eax
   9 @ 1000717b  push(edx)
  10 @ 1000717c  eax = esp + 0x20 {arg1}
  11 @ 10007180  esi = esp + 0x1c {arg_4}
  12 @ 10007184  call(sub_10006b90)
  13 @ 10007189  edi = [esp + 0x24 {arg2}].d
  14 @ 1000718d  esp = esp + 8
  15 @ 10007192  if (edi == 0) then 16 @ 0x100071c9 else 24 @ 0x1000719c

  16 @ 100071c9  eax = [esp + 8 {var_8}].d
  17 @ 100071cd  edx = [esp + 0x14 {arg_4}].d
  18 @ 100071d1  push(ebx)
  19 @ 100071d2  ebx = [edx + (eax << 2) + 0x458].d
  20 @ 100071d9  esi = ebx + 0x1cc
  21 @ 100071df  [esp + 0x10 {var_4}].d = eax
  22 @ 100071e3  eax = [esi].d
  23 @ 100071e7  if (eax == 0) then 25 @ 0x100071fa else 31 @ 0x100071e9

  24 @ 1000719c  if ([esp + 0x18 {arg1}].d u> 0x2000) then 16 @ 0x100071c9 else 33 @ 0x1000719e

  25 @ 100071fa  ecx = 1
  26 @ 100071ff  edx = esi
  27 @ 10007201  temp0.d = [edx].d
  28 @ 10007201  [edx].d = ecx
  29 @ 10007201  ecx = temp0.d
  30 @ 10007205  if (ecx != 0) then 39 @ 0x10007219 else 51 @ 0x10007207

  31 @ 100071e9  call([&data_10008018].d)
  32 @ 100071f2  if ([esi + 0x48].d != eax) then 39 @ 0x10007219 else 55 @ 0x100071f4

  33 @ 1000719e  eax = esp + 0x18 {arg1}
  34 @ 100071a2  push(eax)
  35 @ 100071a3  call(sub_10003c50)
  36 @ 100071a8  esi = eax
  37 @ 100071aa  esp = esp + 4
  38 @ 100071af  if (esi == 0) then 16 @ 0x100071c9 else 57 @ 0x100071b1

  39 @ 10007219  eax = [esp + 0x1c {arg1}].d
  40 @ 1000721d  edx = [esp + 0x20 {arg2}].d
  41 @ 10007221  push(eax)
  42 @ 10007222  eax = [esp + 0x1c {arg_4}].d
  43 @ 10007226  ecx = esp + 0x14 {var_4}
  44 @ 1000722a  push(ecx)
  45 @ 1000722b  push(edx)
  46 @ 1000722c  push(eax)
  47 @ 1000722d  call(sub_10004bc0)
  48 @ 10007232  esp = esp + 0x10
  49 @ 10007235  ebx = eax
  50 @ 10007235  goto 63 @ 0x10007237

  51 @ 10007207  call([&data_10008018].d)
  52 @ 1000720d  [esi + 0x48].d = eax
  53 @ 10007210  [esi + 0x44].d = 1
  54 @ 10007217  goto 63 @ 0x10007237

  55 @ 100071f4  [esi + 0x44].d = [esi + 0x44].d + 1
  56 @ 100071f8  goto 63 @ 0x10007237

  57 @ 100071b1  ecx = [esp + 0x18 {arg1}].d
  58 @ 100071b5  push(ecx)
  59 @ 100071b6  push(zx.d(0))
  60 @ 100071b8  push(esi)
  61 @ 100071b9  call(sub_10007938)
  62 @ 100071b9  noreturn
{ Does not return }

  63 @ 10007237  ecx = [&data_10009f1c].d
  64 @ 10007240  if ([ebx + 0x24].d == ecx) then 65 @ 0x1000724c else 71 @ 0x10007242

  65 @ 1000724c  edi = [esp + 0x1c {arg1}].d
  66 @ 10007250  eax = edi
  67 @ 10007252  ecx = ebx
  68 @ 10007254  call(sub_10005500)
  69 @ 10007259  esi = eax
  70 @ 1000725d  if (esi == 0) then 73 @ 0x10007248 else 75 @ 0x10007263

  71 @ 10007242  call([&data_100080ec].d)  {"ualAlloc"}
  72 @ 10007242  goto 73 @ 0x10007248

  73 @ 10007248  eax = 0
  74 @ 1000724a  goto 76 @ 0x100072b3

  75 @ 10007263  if (([esi - 4].b & 3) == 0) then 82 @ 0x10007271 else 86 @ &data_10007265

  76 @ 100072b3  temp1.d = [ebx + 0x210].d
  77 @ 100072b3  [ebx + 0x210].d = [ebx + 0x210].d - 1
  78 @ 100072b3  cond:0 = temp1.d != 1
  79 @ 100072ba  ecx = ebx + 0x1cc
  80 @ 100072c0  ebx = pop
  81 @ 100072c1  if (cond:0) then 91 @ 0x100072ce else 95 @ 0x100072c3

  82 @ 10007271  eax = [esi - 4].d
  83 @ 10007274  ecx = [&data_10009f18].d
  84 @ 1000727a  eax = eax & 0xfffffff8
  85 @ 1000727f  if (ecx == 0) then 101 @ 0x10007286 else 104 @ 0x10007284

  86 @ 10007265  push(edi)
  87 @ 10007266  push(zx.d(0))
  88 @ 10007268  push(esi)
  89 @ 10007269  call(sub_10007938)
  90 @ 10007269  noreturn
{ Does not return }

  91 @ 100072ce  edi = pop
  92 @ 100072cf  esi = pop
  93 @ 100072d0  esp = esp + 8
  94 @ 100072d3  <return> jump(pop)

  95 @ 100072c3  [ecx + 0x48].d = 0
  96 @ 100072ca  edx = 0
  97 @ 100072cc  temp0.d = [ecx].d
  98 @ 100072cc  [ecx].d = edx
  99 @ 100072cc  edx = temp0.d
 100 @ 100072cc  goto 91 @ 0x100072ce

 101 @ 10007286  edx = [ebx + 0x10].d
 102 @ 10007289  [&data_10009f18].d = edx
 103 @ 10007289  goto 105 @ 0x1000728f

 104 @ 10007284  if ([ebx + 0x10].d u>= ecx) then 105 @ 0x1000728f else 101 @ 0x10007286

 105 @ 1000728f  ecx = [&data_10009f34].d
 106 @ 10007297  if (ecx == 0) then 107 @ 0x1000729d else 114 @ 0x1000729b

 107 @ 1000729d  ecx = [&data_10009f20].d
 108 @ 100072a3  eax = eax + ecx
 109 @ 100072a5  ecx = ecx - 1
 110 @ 100072a8  ecx = not.d(ecx)
 111 @ 100072aa  eax = eax & ecx
 112 @ 100072ac  [&data_10009f34].d = eax
 113 @ 100072ac  goto 115 @ 0x100072b1

 114 @ 1000729b  if (eax u<= ecx) then 115 @ 0x100072b1 else 107 @ 0x1000729d

 115 @ 100072b1  eax = esi
 116 @ 100072b1  goto 76 @ 0x100072b3


100071be  int32_t __stdcall sub_100071be(int32_t arg1 @ esi, int32_t arg2, int32_t arg3) __pure

   0 @ 100071be  esp = esp + 0xc
   1 @ 100071c1  edi = pop
   2 @ 100071c2  eax = esi
   3 @ 100071c4  esi = pop
   4 @ 100071c5  esp = esp + 8
   5 @ 100071c8  <return> jump(pop)

1000726e                                            83 c4 0c                                                             ...
100072d4                                                              cc cc cc cc cc cc cc cc cc cc cc cc                      ............

100072e0  void* sub_100072e0()

   0 @ 100072e0  esp = esp - 0xc
   1 @ 100072e3  push(esi)
   2 @ 100072e4  push(edi)
   3 @ 100072e5  eax = esp + 0xc {var_8}
   4 @ 100072e9  push(eax)
   5 @ 100072ea  ecx = esp + 0xc {var_c}
   6 @ 100072ee  push(ecx)
   7 @ 100072ef  eax = esp + 0x24 {arg_8}
   8 @ 100072f3  esi = esp + 0x20 {arg_4}
   9 @ 100072f7  call(sub_10006b90)
  10 @ 100072fc  edi = [esp + 0x10 {var_c}].d
  11 @ 10007300  esp = esp + 8
  12 @ 10007305  if (edi == 0) then 13 @ 0x10007326 else 23 @ 0x1000730f

  13 @ 10007326  eax = [esp + 0xc {var_8}].d
  14 @ 1000732a  ecx = [esp + 0x18 {arg_4}].d
  15 @ 1000732e  edi = [ecx + (eax << 2) + 0x458].d
  16 @ 10007335  edx = [edi + 0x1cc].d
  17 @ 1000733b  cond:0 = edx == 0
  18 @ 1000733d  esi = edi + 0x1cc
  19 @ 10007343  push(ebx)
  20 @ 10007344  ebx = [esp + 0x20 {arg_8}].d
  21 @ 10007348  [esp + 0x14 {var_4}].d = eax
  22 @ 1000734c  if (cond:0) then 24 @ 0x1000735f else 30 @ 0x1000734e

  23 @ 1000730f  if ([esp + 0x1c {arg_8}].d u> 0x2000) then 13 @ 0x10007326 else 32 @ 0x10007311

  24 @ 1000735f  eax = 1
  25 @ 10007364  ecx = esi
  26 @ 10007366  temp0.d = [ecx].d
  27 @ 10007366  [ecx].d = eax
  28 @ 10007366  eax = temp0.d
  29 @ 1000736a  if (eax != 0) then 37 @ 0x1000737e else 48 @ 0x1000736c

  30 @ 1000734e  call([&data_10008018].d)
  31 @ 10007357  if ([esi + 0x48].d != eax) then 37 @ 0x1000737e else 52 @ 0x10007359

  32 @ 10007311  edx = esp + 0x1c {arg_8}
  33 @ 10007315  push(edx)
  34 @ 10007316  call(sub_10003c50)
  35 @ 1000731b  esp = esp + 4
  36 @ 10007320  if (eax != 0) then 54 @ 0x10007405 else 13 @ 0x10007326

  37 @ 1000737e  eax = [esp + 0xc {var_c}].d
  38 @ 10007382  ecx = [esp + 0x1c {arg_4}].d
  39 @ 10007386  push(ebx)
  40 @ 10007387  edx = esp + 0x18 {var_4}
  41 @ 1000738b  push(edx)
  42 @ 1000738c  push(eax)
  43 @ 1000738d  push(ecx)
  44 @ 1000738e  call(sub_10004bc0)
  45 @ 10007393  esp = esp + 0x10
  46 @ 10007396  edi = eax
  47 @ 10007396  goto 58 @ 0x10007398

  48 @ 1000736c  call([&data_10008018].d)
  49 @ 10007372  [esi + 0x48].d = eax
  50 @ 10007375  [esi + 0x44].d = 1
  51 @ 1000737c  goto 58 @ 0x10007398

  52 @ 10007359  [esi + 0x44].d = [esi + 0x44].d + 1
  53 @ 1000735d  goto 58 @ 0x10007398

  54 @ 10007405  edi = pop
  55 @ 10007406  esi = pop
  56 @ 10007407  esp = esp + 0xc
  57 @ 1000740a  <return> jump(pop)

  58 @ 10007398  eax = ebx
  59 @ 1000739a  ecx = edi
  60 @ 1000739c  call(sub_10005500)
  61 @ 100073a1  cond:1 = eax == 0
  62 @ 100073a3  ebx = pop
  63 @ 100073a4  if (cond:1) then 64 @ 0x100073e9 else 66 @ 0x100073a6

  64 @ 100073e9  eax = 0
  65 @ 100073e9  goto 70 @ 0x100073eb

  66 @ 100073a6  ecx = [eax - 4].d
  67 @ 100073a9  edx = [&data_10009f18].d
  68 @ 100073af  ecx = ecx & 0xfffffff8
  69 @ 100073b4  if (edx == 0) then 75 @ 0x100073bb else 78 @ 0x100073b9

  70 @ 100073eb  temp1.d = [edi + 0x210].d
  71 @ 100073eb  [edi + 0x210].d = [edi + 0x210].d - 1
  72 @ 100073eb  cond:2 = temp1.d != 1
  73 @ 100073f2  ecx = edi + 0x1cc
  74 @ 100073f8  if (cond:2) then 54 @ 0x10007405 else 79 @ 0x100073fa

  75 @ 100073bb  edx = [edi + 0x10].d
  76 @ 100073be  [&data_10009f18].d = edx
  77 @ 100073be  goto 85 @ 0x100073c4

  78 @ 100073b9  if ([edi + 0x10].d u>= edx) then 85 @ 0x100073c4 else 75 @ 0x100073bb

  79 @ 100073fa  [ecx + 0x48].d = 0
  80 @ 10007401  edx = 0
  81 @ 10007403  temp0.d = [ecx].d
  82 @ 10007403  [ecx].d = edx
  83 @ 10007403  edx = temp0.d
  84 @ 10007403  goto 54 @ 0x10007405

  85 @ 100073c4  edx = [&data_10009f34].d
  86 @ 100073cc  if (edx == 0) then 87 @ 0x100073d2 else 94 @ 0x100073d0

  87 @ 100073d2  edx = [&data_10009f20].d
  88 @ 100073d8  ecx = ecx + edx
  89 @ 100073da  edx = edx - 1
  90 @ 100073dd  edx = not.d(edx)
  91 @ 100073df  ecx = ecx & edx
  92 @ 100073e1  [&data_10009f34].d = ecx
  93 @ 100073e7  goto 70 @ 0x100073eb

  94 @ 100073d0  if (ecx u<= edx) then 70 @ 0x100073eb else 87 @ 0x100073d2

1000740b                                   cc cc cc cc cc                                                             .....

10007410  int32_t sub_10007410(int32_t* arg1)

   0 @ 10007410  push(ebx)
   1 @ 10007411  ebx = [esp + 8 {arg1}].d
   2 @ 10007415  push(esi)
   3 @ 10007416  push(edi)
   4 @ 10007417  esi = ebx
   5 @ 10007419  call(sub_10003b00), esp += 4
   6 @ 1000741e  eax = ebx
   7 @ 10007420  call(sub_10006390)
   8 @ 10007425  cond:0 = [ebx + 0x458].d == 0
   9 @ 1000742c  esi = ebx + 0x458
  10 @ 10007432  if (cond:0) then 11 @ 0x1000744d else 15 @ 0x10007434

  11 @ 1000744d  edi = edi | 0xffffffff
  12 @ 10007450  temp1.d = [ebx + 0x44].d
  13 @ 10007450  [ebx + 0x44].d = [ebx + 0x44].d + edi
  14 @ 10007453  if (temp1.d != neg.d(edi)) then 17 @ 0x10007462 else 21 @ 0x10007455

  15 @ 10007434  edi = esi
  16 @ 10007434  goto 28 @ 0x10007436

  17 @ 10007462  edx = [ebx + 0x454].d
  18 @ 10007468  push(edx)
  19 @ 10007469  call([&data_10008024].d)  {"tModuleBaseNameA"}
  20 @ 10007471  if (eax != 0) then 35 @ 0x10007479 else 45 @ 0x10007473

  21 @ 10007455  [ebx + 0x48].d = 0
  22 @ 1000745c  eax = 0
  23 @ 1000745e  ecx = ebx
  24 @ 10007460  temp0.d = [ecx].d
  25 @ 10007460  [ecx].d = eax
  26 @ 10007460  eax = temp0.d
  27 @ 10007460  goto 17 @ 0x10007462

  28 @ 10007436  eax = [edi].d
  29 @ 10007438  call(sub_10003d40)
  30 @ 1000743d  esi = esi + 4
  31 @ 10007440  [edi].d = 0
  32 @ 10007446  cond:1 = [esi].d != 0
  33 @ 10007449  edi = esi
  34 @ 1000744b  if (cond:1) then 28 @ 0x10007436 else 11 @ 0x1000744d

  35 @ 10007479  push(ebx)
  36 @ 1000747a  push(zx.d(0))
  37 @ 1000747c  call(sub_100070a0)
  38 @ 10007481  esp = esp + 8
  39 @ 10007484  esi = &data_1000a3a0
  40 @ 10007489  call(sub_10003b00), esp += 4
  41 @ 1000748e  esi = [&data_1000a398].d
  42 @ 10007494  eax = [esi + 4 {0xe3dcb0b4}].d
  43 @ 10007497  ecx = 0
  44 @ 1000749b  if (eax u<= 0) then 47 @ 0x100074ae else 65 @ 0x1000749d

  45 @ 10007473  call([&data_100080ec].d)  {"ualAlloc"}
  46 @ 10007473  goto 35 @ 0x10007479

  47 @ 100074ae  eax = eax - ecx
  48 @ 100074b0  eax = eax + eax
  49 @ 100074b2  eax = eax + eax
  50 @ 100074b4  push(eax)
  51 @ 100074b5  eax = esi + (ecx << 2) + 0xc
  52 @ 100074b9  push(eax)
  53 @ 100074ba  ecx = esi + (ecx << 2) + 8
  54 @ 100074be  push(ecx)
  55 @ 100074bf  call([&data_100080dc].d)  {"sSetValue"}
  56 @ 100074c5  eax = [&data_1000a398].d
  57 @ 100074ca  esp = esp + 0xc
  58 @ 100074cd  temp2.d = [eax + 4 {0xe3dcb0b4}].d
  59 @ 100074cd  [eax + 4 {0xe3dcb0b4}].d = [eax + 4 {0xe3dcb0b4}].d + edi
  60 @ 100074cd  cond:2 = temp2.d != neg.d(edi)
  61 @ 100074d0  edi = pop
  62 @ 100074d1  esi = pop
  63 @ 100074d2  ebx = pop
  64 @ 100074d3  if (cond:2) then 67 @ 0x100074ea else 70 @ 0x100074d5

  65 @ 1000749d  edx = esi + 8
  66 @ 1000749d  goto 76 @ 0x100074a2

  67 @ 100074ea  temp3.d = [&data_1000a3e4].d
  68 @ 100074ea  [&data_1000a3e4].d = [&data_1000a3e4].d - 1
  69 @ 100074f1  if (temp3.d != 1) then 77 @ 0x10007506 else 78 @ 0x100074f3

  70 @ 100074d5  push(eax)
  71 @ 100074d6  push(zx.d(0))
  72 @ 100074d8  call(sub_100070a0)
  73 @ 100074dd  esp = esp + 8
  74 @ 100074e0  [&data_1000a398].d = 0
  75 @ 100074e0  goto 67 @ 0x100074ea

  76 @ 100074a2  if ([edx].d == ebx) then 47 @ 0x100074ae else 85 @ 0x100074a4

  77 @ 10007506  <return> jump(pop)

  78 @ 100074f3  [&data_1000a3e8].d = 0
  79 @ 100074fd  edx = 0
  80 @ 100074ff  eax = &data_1000a3a0
  81 @ 10007504  temp0.d = [eax {&data_1000a3a0}].d
  82 @ 10007504  [eax {&data_1000a3a0}].d = edx
  83 @ 10007504  edx = temp0.d
  84 @ 10007504  goto 77 @ 0x10007506

  85 @ 100074a4  ecx = ecx + 1
  86 @ 100074a7  edx = edx + 4
  87 @ 100074ac  if (ecx u< eax) then 76 @ 0x100074a2 else 47 @ 0x100074ae

10007507                       cc cc cc cc cc cc cc cc cc                                                         .........

10007510  int32_t sub_10007510(int32_t arg1, int32_t arg2, int32_t arg3) __noreturn

   0 @ 10007510  eax = [esp + 0xc {arg3}].d
   1 @ 10007514  ecx = [esp + 8 {arg2}].d
   2 @ 10007518  edx = [esp + 4 {arg1}].d
   3 @ 1000751c  push(eax)
   4 @ 1000751d  push(ecx)
   5 @ 1000751e  push(edx)
   6 @ 1000751f  push(zx.d(0))
   7 @ 10007521  call(sub_10006d00)
   8 @ 10007521  noreturn
{ Does not return }


10007526  int32_t sub_10007526() __pure

   0 @ 10007526  esp = esp + 0x10
   1 @ 10007529  <return> jump(pop)

1000752a                                cc cc cc cc cc cc                                                            ......

10007530  void* sub_10007530(int32_t arg1, int32_t arg2, int32_t arg3)

   0 @ 10007530  eax = [esp + 0xc {arg3}].d
   1 @ 10007534  ecx = [esp + 8 {arg2}].d
   2 @ 10007538  edx = [esp + 4 {arg1}].d
   3 @ 1000753c  push(eax)
   4 @ 1000753d  push(ecx)
   5 @ 1000753e  push(edx)
   6 @ 1000753f  push(zx.d(0))
   7 @ 10007541  call(sub_10006e80)
   8 @ 10007546  esp = esp + 0x10
   9 @ 10007549  <return> jump(pop)

1000754a                                cc cc cc cc cc cc                                                            ......

10007550  void* sub_10007550(int32_t arg1, int32_t arg2)

   0 @ 10007550  eax = [esp + 8 {arg2}].d
   1 @ 10007554  ecx = [esp + 4 {arg1}].d
   2 @ 10007558  push(eax)
   3 @ 10007559  push(ecx)
   4 @ 1000755a  push(zx.d(0))
   5 @ 1000755c  call(sub_10006f70)
   6 @ 10007561  esp = esp + 0xc
   7 @ 10007564  <return> jump(pop)

10007565                 cc cc cc cc cc cc cc cc cc cc cc                                                       ...........

10007570  int32_t sub_10007570(int32_t arg1)

   0 @ 10007570  eax = [esp + 4 {arg1}].d
   1 @ 10007574  push(eax)
   2 @ 10007575  push(zx.d(0))
   3 @ 10007577  call(sub_100070a0)
   4 @ 1000757c  esp = esp + 8
   5 @ 1000757f  <return> jump(pop)


10007580  void* sub_10007580(int32_t* arg1, int32_t arg2)

   0 @ 10007580  eax = [esp + 8 {arg2}].d
   1 @ 10007584  ecx = [esp + 4 {arg1}].d
   2 @ 10007588  push(eax)
   3 @ 10007589  push(ecx)
   4 @ 1000758a  push(zx.d(0))
   5 @ 1000758c  call(sub_10007160)
   6 @ 10007591  esp = esp + 0xc
   7 @ 10007594  <return> jump(pop)

10007595                                                                 cc cc cc cc cc cc cc cc cc cc cc                       ...........

100075a0  void* sub_100075a0(int32_t arg1)

   0 @ 100075a0  eax = [esp + 4 {arg1}].d
   1 @ 100075a4  push(eax)
   2 @ 100075a5  push(zx.d(0))
   3 @ 100075a7  call(sub_100072e0)
   4 @ 100075ac  esp = esp + 8
   5 @ 100075af  <return> jump(pop)


100075b0  void* sub_100075b0(int32_t arg1, int32_t* arg2, int32_t arg3)

   0 @ 100075b0  esp = esp - 8
   1 @ 100075b3  push(ebp)
   2 @ 100075b4  ebp = [esp + 0x14 {arg2}].d
   3 @ 100075ba  if (ebp != 0) then 4 @ 0x100075d3 else 9 @ 0x100075bc

   4 @ 100075d3  push(ebx)
   5 @ 100075d4  edx = ebp
   6 @ 100075d6  [esp + 0x18 {arg2}].d = 1
   7 @ 100075de  call(sub_10002e60)
   8 @ 100075e5  if (eax == 0) then 18 @ 0x100075fa else 23 @ 0x100075e7

   9 @ 100075bc  eax = [esp + 0x18 {arg3}].d
  10 @ 100075c0  ecx = [esp + 0x10 {arg1}].d
  11 @ 100075c4  push(eax)
  12 @ 100075c5  push(ecx)
  13 @ 100075c6  call(sub_100072e0)
  14 @ 100075cb  esp = esp + 8
  15 @ 100075ce  ebp = pop
  16 @ 100075cf  esp = esp + 8
  17 @ 100075d2  <return> jump(pop)

  18 @ 100075fa  push(ebp)
  19 @ 100075fb  call([&data_10009bd8].d)
  20 @ 10007601  esp = esp + 4
  21 @ 10007604  ebx = eax
  22 @ 10007604  goto 28 @ 0x10007608

  23 @ 100075e7  ebx = [ebp - 4].d
  24 @ 100075ea  ebx = ebx & 0xfffffff8
  25 @ 100075ed  [esp + 0x18 {arg2}].d = 0
  26 @ 100075f5  ebx = ebx - 8
  27 @ 100075f8  goto 28 @ 0x10007608

  28 @ 10007608  if (ebx != 0) then 29 @ 0x100076bf else 31 @ 0x1000760e

  29 @ 100076bf  eax = [esp + 0x1c {arg3}].d
  30 @ 100076c5  if (eax u> ebx) then 39 @ 0x1000762c else 51 @ 0x100076cb

  31 @ 1000760e  push(&data_100081e8)
  32 @ 10007613  call([&data_10008080].d)
  33 @ 10007619  eax = eax + 0x40
  34 @ 1000761c  push(eax)
  35 @ 1000761d  call([&data_10008084].d)
  36 @ 10007623  esp = esp + 8
  37 @ 10007626  call([&data_100080ec].d)  {"ualAlloc"}
  38 @ 10007626  goto 39 @ 0x1000762c

  39 @ 1000762c  push(esi)
  40 @ 1000762d  push(edi)
  41 @ 1000762e  eax = esp + 0x14 {var_4}
  42 @ 10007632  push(eax)
  43 @ 10007633  ecx = esp + 0x14 {var_8}
  44 @ 10007637  push(ecx)
  45 @ 10007638  eax = esp + 0x2c {arg3}
  46 @ 1000763c  esi = esp + 0x24 {arg1}
  47 @ 10007640  call(sub_10006b90)
  48 @ 10007645  edi = [esp + 0x18 {var_8}].d
  49 @ 10007649  esp = esp + 8
  50 @ 1000764e  if (edi == 0) then 54 @ 0x1000770f else 56 @ 0x10007654

  51 @ 100076cb  edx = ebx
  52 @ 100076cd  edx = edx - eax
  53 @ 100076d5  if (edx u>= 0x400) then 39 @ 0x1000762c else 58 @ 0x100076db

  54 @ 1000770f  eax = [esp + 0x24 {arg3}].d
  55 @ 1000770f  goto 63 @ 0x10007713

  56 @ 10007654  eax = [esp + 0x24 {arg3}].d
  57 @ 1000765a  if (eax == 0) then 63 @ 0x10007713 else 79 @ 0x10007665

  58 @ 100076db  ebx = pop
  59 @ 100076dc  eax = ebp
  60 @ 100076de  ebp = pop
  61 @ 100076df  esp = esp + 8
  62 @ 100076e2  <return> jump(pop)

  63 @ 10007713  edx = [esp + 0x20 {arg2}].d
  64 @ 10007717  ecx = [esp + 0x1c {arg1}].d
  65 @ 1000771b  push(ebx)
  66 @ 1000771c  push(edx)
  67 @ 1000771d  edx = [esp + 0x1c {var_4}].d
  68 @ 10007721  ecx = [ecx + (edx << 2) + 0x458].d
  69 @ 10007728  edi = ebp
  70 @ 1000772a  call(sub_100063e0)
  71 @ 1000772f  esp = esp + 8
  72 @ 10007732  edi = eax
  73 @ 10007734  edi = pop
  74 @ 10007735  esi = pop
  75 @ 10007736  ebx = pop
  76 @ 10007737  ebp = pop
  77 @ 10007738  esp = esp + 8
  78 @ 1000773b  <return> jump(pop)

  79 @ 10007665  if (eax u> 0x2000) then 63 @ 0x10007713 else 80 @ 0x1000766b

  80 @ 1000766b  edx = esp + 0x24 {arg3}
  81 @ 1000766f  push(edx)
  82 @ 10007670  call(sub_10003c50)
  83 @ 10007675  edi = eax
  84 @ 10007677  esp = esp + 4
  85 @ 1000767c  if (edi == 0) then 54 @ 0x1000770f else 86 @ 0x10007682

  86 @ 10007682  eax = [esp + 0x24 {arg3}].d
  87 @ 10007688  if (ebx u>= eax) then 88 @ 0x1000768c else 93 @ 0x1000768a

  88 @ 1000768c  push(eax)
  89 @ 1000768d  push(ebp)
  90 @ 1000768e  push(edi)
  91 @ 1000768f  call(sub_1000793e)
  92 @ 1000768f  noreturn
{ Does not return }

  93 @ 1000768a  eax = ebx
  94 @ 1000768a  goto 88 @ 0x1000768c

10007694                                                              8d 43 ec 83 c4 0c 3d f4 1f 00 00 77                      .C....=....w
100076a0  42 8b 4c 24 20 8b 44 24 10 51 53 8b f5 e8 de ef ff ff 83 c4 08 8b c7 5f 5e 5b 5d 83 c4 08 c3     B.L$ .D$.QS............_^[]....
100076e3           83 7c 24 20 00 74 14 55 ff 15 94 90 00 10 83 c4 04 8b c7 5f 5e 5b 5d 83 c4 08 c3 8b c5     .|$ .t.U..........._^[]......
10007700  e8 3b d8 ff ff 8b c7 5f 5e 5b 5d 83 c4 08 c3                                                     .;....._^[]....
1000773c                                                                                      cc cc cc cc                              ....

10007740  void sub_10007740()

   0 @ 10007740  eax = 0
   1 @ 10007748  if ([&data_1000a398].d == eax) then 2 @ 0x100077b1 else 3 @ 0x1000774a

   2 @ 100077b1  <return> jump(pop)

   3 @ 1000774a  push(esi)
   4 @ 1000774b  esi = &data_1000a3a0
   5 @ 10007750  call(sub_10003b00)
   6 @ 10007755  eax = [&data_1000a398].d
   7 @ 1000775a  eax = [eax + 4 {0xe3dcb0b4}].d
   8 @ 1000775d  eax = (eax << 2) + 4
   9 @ 10007764  push(eax)
  10 @ 10007765  push(zx.d(0))
  11 @ 10007767  call(sub_100072e0)
  12 @ 1000776c  esi = eax
  13 @ 1000776e  esp = esp + 8
  14 @ 10007773  if (esi == 0) then 15 @ 0x10007792 else 18 @ 0x10007775

  15 @ 10007792  temp1.d = [&data_1000a3e4].d
  16 @ 10007792  [&data_1000a3e4].d = [&data_1000a3e4].d - 1
  17 @ 10007799  if (temp1.d != 1) then 27 @ 0x100077ae else 30 @ 0x1000779b

  18 @ 10007775  eax = [&data_1000a398].d
  19 @ 1000777a  ecx = [eax + 4 {0xe3dcb0b4}].d
  20 @ 1000777d  edx = (ecx << 2) + 4
  21 @ 10007784  push(edx)
  22 @ 10007785  eax = eax + 8
  23 @ 10007788  push(eax)
  24 @ 10007789  push(esi)
  25 @ 1000778a  call(sub_1000793e)
  26 @ 1000778a  noreturn
{ Does not return }

  27 @ 100077ae  eax = esi
  28 @ 100077b0  esi = pop
  29 @ 100077b0  goto 2 @ 0x100077b1

  30 @ 1000779b  [&data_1000a3e8].d = 0
  31 @ 100077a5  eax = 0
  32 @ 100077a7  ecx = &data_1000a3a0
  33 @ 100077ac  temp0.d = [ecx {&data_1000a3a0}].d
  34 @ 100077ac  [ecx {&data_1000a3a0}].d = eax
  35 @ 100077ac  eax = temp0.d
  36 @ 100077ac  goto 27 @ 0x100077ae


1000778f  int32_t __stdcall sub_1000778f(int32_t arg1 @ esi, int32_t arg2)

   0 @ 1000778f  esp = esp + 0xc
   1 @ 10007792  temp1.d = [&data_1000a3e4].d
   2 @ 10007792  [&data_1000a3e4].d = [&data_1000a3e4].d - 1
   3 @ 10007799  if (temp1.d != 1) then 4 @ 0x100077ae else 7 @ 0x1000779b

   4 @ 100077ae  eax = esi
   5 @ 100077b0  esi = pop
   6 @ 100077b1  <return> jump(pop)

   7 @ 1000779b  [&data_1000a3e8].d = 0
   8 @ 100077a5  eax = 0
   9 @ 100077a7  ecx = &data_1000a3a0
  10 @ 100077ac  temp0.d = [ecx {&data_1000a3a0}].d
  11 @ 100077ac  [ecx {&data_1000a3a0}].d = eax
  12 @ 100077ac  eax = temp0.d
  13 @ 100077ac  goto 4 @ 0x100077ae

100077b2                                                        cc cc cc cc cc cc cc cc cc cc cc cc cc cc                    ..............

100077c0  void* sub_100077c0(int32_t arg1, int32_t arg2)

   0 @ 100077c0  push(ebx)
   1 @ 100077c1  push(ebp)
   2 @ 100077c2  push(esi)
   3 @ 100077c3  push(edi)
   4 @ 100077c4  ebp = 0
   5 @ 100077c6  edi = 0
   6 @ 100077ce  if ([&data_1000a398].d != ebp) then 7 @ 0x10007815 else 11 @ 0x100077d0

   7 @ 10007815  esi = &data_1000a3a0
   8 @ 1000781a  call(sub_10003b00)
   9 @ 1000781f  eax = [&data_1000a398].d
  10 @ 1000781f  goto 18 @ 0x10007824

  11 @ 100077d0  push(zx.d(0x4c))
  12 @ 100077d2  push(zx.d(1))
  13 @ 100077d4  push(ebp)
  14 @ 100077d5  call(sub_10007160)
  15 @ 100077da  ebx = eax
  16 @ 100077dc  esp = esp + 0xc
  17 @ 100077e1  if (ebx != ebp) then 20 @ 0x100077ea else 29 @ 0x100077e3

  18 @ 10007824  ecx = [eax].d
  19 @ 10007829  if ([eax + 4].d != ecx) then 35 @ 0x10007873 else 42 @ 0x1000782b

  20 @ 100077ea  [&data_1000a3e8].d = ebp
  21 @ 100077f0  [&data_1000a3e4].d = ebp
  22 @ 100077f6  esi = &data_1000a3a0
  23 @ 100077fb  [&data_1000a3a0].d = ebp
  24 @ 10007801  call(sub_10003b00)
  25 @ 10007806  eax = ebx
  26 @ 10007808  [&data_1000a398].d = eax
  27 @ 1000780d  [ebx].d = 0x10
  28 @ 10007813  goto 18 @ 0x10007824

  29 @ 100077e3  edi = pop
  30 @ 100077e4  esi = pop
  31 @ 100077e5  ebp = pop
  32 @ 100077e6  eax = 0
  33 @ 100077e8  ebx = pop
  34 @ 100077e9  <return> jump(pop)

  35 @ 10007873  push(0x460)
  36 @ 10007878  push(zx.d(1))
  37 @ 1000787a  push(ebp)
  38 @ 1000787b  call(sub_10007160)
  39 @ 10007880  edi = eax
  40 @ 10007882  esp = esp + 0xc
  41 @ 10007887  if (edi == ebp) then 49 @ 0x100078bf else 52 @ 0x10007889

  42 @ 1000782b  esi = (ecx << 2) + 0x4c
  43 @ 10007832  push(esi)
  44 @ 10007833  push(eax)
  45 @ 10007834  push(ebp)
  46 @ 10007835  call(sub_100075b0)
  47 @ 1000783a  esp = esp + 0xc
  48 @ 1000783f  if (eax == ebp) then 49 @ 0x100078bf else 58 @ 0x10007841

  49 @ 100078bf  temp1.d = [&data_1000a3e4].d
  50 @ 100078bf  [&data_1000a3e4].d = [&data_1000a3e4].d - 1
  51 @ 100078c6  if (temp1.d != 1) then 69 @ 0x100078d7 else 75 @ 0x100078c8

  52 @ 10007889  edx = [esp + 0x14 {arg1}].d
  53 @ 1000788d  ebx = [esp + 0x18 {arg2}].d
  54 @ 10007891  push(edx)
  55 @ 10007892  call(sub_100065a0)
  56 @ 10007897  esp = esp + 4
  57 @ 1000789c  if (eax != 0) then 82 @ 0x100078aa else 88 @ 0x1000789e

  58 @ 10007841  ecx = [eax].d
  59 @ 10007843  edx = ecx << 2
  60 @ 1000784a  edi = esi
  61 @ 1000784c  edi = edi - edx
  62 @ 1000784e  push(edi)
  63 @ 1000784f  [&data_1000a398].d = eax
  64 @ 10007854  eax = eax + (ecx << 2) + 8
  65 @ 10007858  push(ebp)
  66 @ 10007859  push(eax)
  67 @ 1000785a  call(sub_10007938)
  68 @ 1000785a  noreturn
{ Does not return }

  69 @ 100078d7  eax = edi
  70 @ 100078d9  edi = pop
  71 @ 100078da  esi = pop
  72 @ 100078db  ebp = pop
  73 @ 100078dc  ebx = pop
  74 @ 100078dd  <return> jump(pop)

  75 @ 100078c8  [&data_1000a3e8].d = ebp
  76 @ 100078ce  edx = 0
  77 @ 100078d0  eax = &data_1000a3a0
  78 @ 100078d5  temp0.d = [eax {&data_1000a3a0}].d
  79 @ 100078d5  [eax {&data_1000a3a0}].d = edx
  80 @ 100078d5  edx = temp0.d
  81 @ 100078d5  goto 69 @ 0x100078d7

  82 @ 100078aa  eax = [&data_1000a398].d
  83 @ 100078af  ecx = [eax + 4 {0xe3dcb0b4}].d
  84 @ 100078b2  [eax + (ecx << 2) + 8].d = edi
  85 @ 100078b6  eax = [&data_1000a398].d
  86 @ 100078bb  [eax + 4 {0xe3dcb0b4}].d = [eax + 4 {0xe3dcb0b4}].d + 1
  87 @ 100078bb  goto 49 @ 0x100078bf

  88 @ 1000789e  push(edi)
  89 @ 1000789f  push(ebp)
  90 @ 100078a0  call(sub_100070a0)
  91 @ 100078a5  esp = esp + 8
  92 @ 100078a8  goto 49 @ 0x100078bf

1000785f                                                                                               8b                                 .
10007860  0d 98 a3 00 10 83 c6 f8 c1 ee 02 83 c4 0c 83 ee 01 89 31                                         ..................1
100078de                                                                                            cc cc                                ..

100078e0  void* sub_100078e0(int32_t* arg1, int32_t arg2)

   0 @ 100078e0  eax = [esp + 8 {arg2}].d
   1 @ 100078e4  ecx = [esp + 4 {arg1}].d
   2 @ 100078e8  push(eax)
   3 @ 100078e9  push(ecx)
   4 @ 100078ea  push(zx.d(0))
   5 @ 100078ec  call(sub_100075b0)
   6 @ 100078f1  esp = esp + 0xc
   7 @ 100078f4  <return> jump(pop)

100078f5                                                                 cc cc cc cc cc cc cc cc cc cc cc                       ...........

10007900  int32_t sub_10007900() __pure

   0 @ 10007900  eax = 0x2a
   1 @ 10007905  <return> jump(pop)

10007906                    cc cc cc cc cc cc cc cc cc cc 83 ec 04 60 31 f6 46 c1 e6 06 56 ba 00 04 00 00        .............`1.F...V.....
10007920  6b d2 04 52 b9 00 04 00 00 81 c1 00 04 00 00 51 8d 05 00 00 00 00 50 ff                          k..R...........Q......P.

10007938  int32_t __convention("regparm") sub_10007938(int32_t arg1) __noreturn

   0 @ 10007938  eax = adc.d(eax, &data_10008024[0x10], flag:c)
   1 @ 1000793d  push(eax)
   2 @ 1000793d  <return> tailcall(sub_1000793e)
{ Does not return }


1000793e  int32_t sub_1000793e() __noreturn

   0 @ 1000793e  ebx = pop
   1 @ 1000793f  edi = 0
   2 @ 10007941  edi = edi ^ &data_1000f0cc
   3 @ 10007947  eax = edi
   4 @ 10007949  esi = &data_1000f0cc
   5 @ 1000794e  esi = neg.d(esi)
   6 @ 1000794e  <return> tailcall(sub_10007950)
{ Does not return }


10007950  int32_t __convention("regparm") sub_10007950(int32_t arg1, int32_t arg2 @ esi, int32_t* arg3 @ edi) __noreturn
// This function has unresolved stack usage. View graph of stack usage to resolve.

   0 @ 10007950  eax = eax + esi
   1 @ 10007952  push(eax)
   2 @ 10007953  push(ebx)
   3 @ 10007954  push([edi].d)
   4 @ 10007956  edx = pop
   5 @ 10007957  edi = edi + 0x25
   6 @ 1000795a  edi = edi - 0x21
   7 @ 1000795a  goto 8 @ 0x1000795d

   8 @ 1000795d  eax = zx.d([edi + edx - 1].b)
   9 @ 10007962  ecx = ebx + edx - 1
  10 @ 10007966  [ecx].b = 0
  11 @ 10007969  [ecx].b = [ecx].b + al
  12 @ 1000796b  edx = edx - 1
  13 @ 10007970  if (edx != 0) then 8 @ 0x1000795d else 14 @ 0x10007972

  14 @ 10007972  esi = pop
  15 @ 10007973  [esi + 1 {1}].d = esi
  16 @ 10007976  call(esi)
  17 @ 10007978  al = al
  18 @ 1000797a  [eax].b = [eax].b + al
  19 @ 1000797c  breakpoint

1000797d                                                                                         cc cc cc                               ...

10007980  void* const __convention("regparm") sub_10007980(int32_t arg1)

   0 @ 10007980  push(ecx)
   1 @ 10007981  ecx = esp + 4 {__return_addr}
   2 @ 10007985  temp1.d = ecx {__return_addr}
   3 @ 10007985  ecx = ecx - eax
   4 @ 10007985  flag:c = temp1.d u< eax
   5 @ 10007987  eax = sbb.d(eax, eax, flag:c)
   6 @ 10007989  eax = not.d(eax)
   7 @ 1000798b  ecx = ecx & eax
   8 @ 1000798d  eax = esp {__saved_ecx}
   9 @ 1000798f  eax = eax & 0xfffff000
  10 @ 1000798f  goto 11 @ 0x10007996

  11 @ 10007996  if (ecx u< eax) then 12 @ 0x100079a2 else 15 @ 0x10007998

  12 @ 100079a2  eax = eax - 0x1000
  13 @ 100079a7  [eax].d & eax
  14 @ 100079a9  goto 11 @ 0x10007996

  15 @ 10007998  eax = ecx
  16 @ 1000799a  ecx = pop
  17 @ 1000799b  temp0.d = esp {__return_addr}
  18 @ 1000799b  esp = eax
  19 @ 1000799b  eax = temp0.d {__return_addr}
  20 @ 1000799c  eax = [eax {__return_addr}].d
  21 @ 1000799e  [esp].d = eax
  22 @ 100079a1  <return> jump(pop)

100079ab                                   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00             .....................
100079c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100079e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
.text section ended  {0x10001000-0x10007a00}

10007a00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ac 10 00 10  ................................
10007a20  00 00 00 00 00 00 00 00 00 00 00 00 dc 72 db 4c 00 00 00 00 02 00 00 00 6a 00 00 00 98 84 00 00  .............r.L........j.......
10007a40  98 72 00 00 00 00 00 00 f0 9b 00 10 48 9c 00 10 6d 61 78 20 73 79 73 74 65 6d 20 62 79 74 65 73  .r..........H...max system bytes
10007a60  20 3d 20 25 31 30 6c 75 0a 00 00 00 73 79 73 74 65 6d 20 62 79 74 65 73 20 20 20 20 20 3d 20 25   = %10lu....system bytes     = %
10007a80  31 30 6c 75 0a 00 00 00 69 6e 20 75 73 65 20 62 79 74 65 73 20 20 20 20 20 3d 20 25 31 30 6c 75  10lu....in use bytes     = %10lu
10007aa0  0a 00 00 00 00 00 00 00 6e 65 64 6d 61 6c 6c 6f 63 3a 20 41 74 74 65 6d 70 74 20 74 6f 20 66 72  ........nedmalloc: Attempt to fr
10007ac0  65 65 20 61 6c 72 65 61 64 79 20 66 72 65 65 64 20 6d 65 6d 6f 72 79 20 62 6c 6f 63 6b 20 25 70  ee already freed memory block %p
10007ae0  20 2d 20 61 62 6f 72 74 69 6e 67 21 0a 00 00 00 6e 65 64 6d 61 6c 6c 6f 63 3a 20 6e 65 64 70 72   - aborting!....nedmalloc: nedpr
10007b00  65 61 6c 6c 6f 63 28 29 20 63 61 6c 6c 65 64 20 77 69 74 68 20 61 20 62 6c 6f 63 6b 20 6e 6f 74  ealloc() called with a block not
10007b20  20 63 72 65 61 74 65 64 20 62 79 20 6e 65 64 6d 61 6c 6c 6f 63 21 0a 00 6e 65 64 6d 61 6c 6c 6f   created by nedmalloc!..nedmallo
10007b40  63 3a 20 6e 65 64 70 66 72 65 65 28 29 20 63 61 6c 6c 65 64 20 77 69 74 68 20 61 20 62 6c 6f 63  c: nedpfree() called with a bloc
10007b60  6b 20 6e 6f 74 20 63 72 65 61 74 65 64 20 62 79 20 6e 65 64 6d 61 6c 6c 6f 63 21 0a 00 00 00 00  k not created by nedmalloc!.....
10007b80  3f 3f 5f 56 40 59 41 58 50 41 58 40 5a 00 00 00 3f 3f 33 40 59 41 58 50 41 58 40 5a 00 00 00 00  ??_V@YAXPAX@Z...??3@YAXPAX@Z....
10007ba0  3f 3f 5f 55 40 59 41 50 41 58 49 40 5a 00 00 00 3f 3f 32 40 59 41 50 41 58 49 40 5a 00 00 00 00  ??_U@YAPAXI@Z...??2@YAPAXI@Z....
10007bc0  6e 65 64 62 6c 6b 73 69 7a 65 00 00 5f 6d 73 69 7a 65 00 00 6e 65 64 66 72 65 65 00 66 72 65 65  nedblksize.._msize..nedfree.free
10007be0  00 00 00 00 6e 65 64 72 65 61 6c 6c 6f 63 00 00 72 65 61 6c 6c 6f 63 00 6e 65 64 63 61 6c 6c 6f  ....nedrealloc..realloc.nedcallo
10007c00  63 00 00 00 63 61 6c 6c 6f 63 00 00 6e 65 64 6d 61 6c 6c 6f 63 00 00 00 6d 61 6c 6c 6f 63 00 00  c...calloc..nedmalloc...malloc..
10007c20  4b 45 52 4e 45 4c 33 32 2e 44 4c 4c 00 00 00 00 4d 53 56 43 52 39 30 44 2e 44 4c 4c 00 00 00 00  KERNEL32.DLL....MSVCR90D.DLL....
10007c40  4d 53 56 43 52 39 30 2e 44 4c 4c 00 4d 53 56 43 52 38 30 44 2e 44 4c 4c 00 00 00 00 4d 53 56 43  MSVCR90.DLL.MSVCR80D.DLL....MSVC
10007c60  52 38 30 2e 44 4c 4c 00 4d 53 56 43 52 37 31 44 2e 44 4c 4c 00 00 00 00 4d 53 56 43 52 37 31 2e  R80.DLL.MSVCR71D.DLL....MSVCR71.
10007c80  44 4c 4c 00 4d 53 56 43 52 37 30 44 2e 44 4c 4c 00 00 00 00 4d 53 56 43 52 37 30 2e 44 4c 4c 00  DLL.MSVCR70D.DLL....MSVCR70.DLL.
10007ca0  53 00 75 00 63 00 63 00 65 00 73 00 73 00 20 00 63 00 6f 00 64 00 65 00 20 00 25 00 64 00 20 00  S.u.c.c.e.s.s. .c.o.d.e. .%.d. .
10007cc0  61 00 74 00 20 00 00 00 45 00 72 00 72 00 6f 00 72 00 20 00 63 00 6f 00 64 00 65 00 20 00 25 00  a.t. ...E.r.r.o.r. .c.o.d.e. .%.
10007ce0  64 00 20 00 28 00 25 00 73 00 29 00 20 00 61 00 74 00 20 00 00 00 00 00 3a 00 25 00 64 00 0a 00  d. .(.%.s.). .a.t. .....:.%.d...
10007d00  00 00 00 00 57 00 69 00 6e 00 33 00 32 00 20 00 45 00 78 00 63 00 65 00 70 00 74 00 69 00 6f 00  ....W.i.n.3.2. .E.x.c.e.p.t.i.o.
10007d20  6e 00 20 00 25 00 75 00 20 00 61 00 74 00 20 00 25 00 70 00 00 00 00 00 2e 5c 77 69 6e 70 61 74  n. .%.u. .a.t. .%.p......\winpat
10007d40  63 68 65 72 2e 63 00 00 45 00 72 00 72 00 6f 00 72 00 00 00 00 00 00 00 48 00 00 00 00 00 00 00  cher.c..E.r.r.o.r.......H.......
10007d60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10007d80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 90 00 10 10 85 00 10 02 00 00 00  ................................
10007da0  52 53 44 53 e8 ff f0 70 b3 61 7a 4b 92 21 d4 43 a4 51 2c 62 01 00 00 00 63 3a 5c 55 73 65 72 73  RSDS...p.azK.!.C.Q,b....c:\Users
10007dc0  5c 6a 61 6e 64 65 72 73 6f 6e 5c 52 65 73 65 74 20 47 61 6d 65 20 53 74 72 65 61 6d 5c 63 6f 64  \janderson\Reset Game Stream\cod
10007de0  65 5c 45 78 74 65 72 6e 61 6c 5c 4d 61 6c 6c 6f 63 48 6f 6f 6b 69 6e 67 5c 52 65 6c 65 61 73 65  e\External\MallocHooking\Release
10007e00  5c 75 74 69 6c 2e 70 64 62 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 cd 16 00 00 32 79 00 00  \util.pdb...................2y..
10007e20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 fe ff ff ff 00 00 00 00 d0 ff ff ff 00 00 00 00  ................................
10007e40  fe ff ff ff 00 00 00 00 c7 13 00 10 00 00 00 00 93 13 00 10 a7 13 00 10 fe ff ff ff 00 00 00 00  ................................
10007e60  cc ff ff ff 00 00 00 00 fe ff ff ff 00 00 00 00 9b 14 00 10 00 00 00 00 fe ff ff ff 00 00 00 00  ................................
10007e80  d8 ff ff ff 00 00 00 00 fe ff ff ff 09 16 00 10 1d 16 00 10 00 00 00 00 ff ff ff                 ...........................

10007e9b  int32_t sub_10007e9b(int32_t arg1 @ ebp, int32_t arg2 @ edi)

   0 @ 10007e9b  jump([edi + ebp].d)

10007e9e                                                                                            00 10                                ..
10007ea0  2a 2f 00 10 00 00 00 00 ff ff ff ff c4 2b 00 10 db 2b 00 10 04 87 00 00 00 00 00 00 00 00 00 00  */...........+...+..............
10007ec0  44 87 00 00 f4 80 00 00 10 86 00 00 00 00 00 00 00 00 00 00 92 88 00 00 00 80 00 00 10 87 00 00  D...............................
10007ee0  00 00 00 00 00 00 00 00 ae 88 00 00 00 81 00 00 90 86 00 00 00 00 00 00 00 00 00 00 16 89 00 00  ................................
10007f00  80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 e2 8a 00 00 b2 8a 00 00  ................................
10007f20  94 8a 00 00 4e 87 00 00 5c 87 00 00 6c 87 00 00 7c 87 00 00 92 87 00 00 9e 87 00 00 a8 87 00 00  ....N...\...l...|...............
10007f40  b2 87 00 00 c2 87 00 00 d0 87 00 00 de 87 00 00 ee 87 00 00 06 88 00 00 16 88 00 00 26 88 00 00  ............................&...
10007f60  32 88 00 00 44 88 00 00 5a 88 00 00 6c 88 00 00 80 88 00 00 1c 8b 00 00 fe 8a 00 00 8c 8a 00 00  2...D...Z...l...................
10007f80  76 8a 00 00 5c 8a 00 00 46 8a 00 00 2c 8a 00 00 ce 8a 00 00 00 00 00 00 d6 88 00 00 e4 88 00 00  v...\...F...,...................
10007fa0  4e 8b 00 00 f6 88 00 00 00 89 00 00 0e 89 00 00 22 89 00 00 34 89 00 00 42 89 00 00 52 89 00 00  N..............."...4...B...R...
10007fc0  64 89 00 00 70 89 00 00 7e 89 00 00 8c 89 00 00 9c 89 00 00 ae 89 00 00 d2 89 00 00 dc 89 00 00  d...p...~.......................
10007fe0  ea 89 00 00 f2 89 00 00 fc 89 00 00 16 8a 00 00 c4 88 00 00 ba 88 00 00 30 8b 00 00 44 8b 00 00  ........................0...D...
10008000  cc 88 00 00                                                                                      ....

10008004  int32_t data_10008004 = 0x88ee
10008008  int32_t data_10008008 = 0x0
1000800c  int32_t data_1000800c = 0x872e
10008010  int32_t data_10008010 = 0x8718
10008014  int32_t data_10008014 = 0x0
10008018  int32_t data_10008018 = 0x88a0
1000801c  int32_t data_1000801c = 0x0
10008020  int32_t data_10008020 = 0x6547000c
10008024  char const data_10008024[0x11] = "tModuleBaseNameA", 0

10008035                                                                 00 04 00                                               ...

10008038  char const data_10008038[0x13] = "EnumProcessModules", 0

1000804b                                   00                                                                         .

1000804c  char const data_1000804c[0xa] = "PSAPI.DLL", 0

10008056                                                                    65 03                                                e.

10008058  char const data_10008058[0xc] = "TlsGetValue", 0
10008064  int32_t data_10008064 = 0x654701c5
10008068  char const data_10008068[0xc] = "tSystemInfo", 0
10008074  int32_t data_10008074 = 0x69560388

10008078                                                                          72 74 75 61 6c 51 75 65                          rtualQue

10008080  int32_t data_10008080 = 0x7972
10008084  int32_t data_10008084 = 0x65470146

10008088                          74 43 75 72                                                                      tCur

1000808c  char const data_1000808c[0xd] = "rentThreadId", 0

10008099                                                                             00 63 03                                       .c.

1000809c  char const data_1000809c[0x9] = "TlsAlloc", 0

100080a5                 00 57 03                                                                               .W.

100080a8  char const data_100080a8[0x8] = "SleepEx", 0
100080b0  int32_t data_100080b0 = 0x6c540364
100080b4  char const data_100080b4[0x6] = "sFree", 0

100080ba                                                                                df 01                                        ..

100080bc  char const data_100080bc[0xd] = "GetTickCount", 0

100080c9                             00 83 03                                                                       ...

100080cc  char const data_100080cc[0xc] = "VirtualFree", 0
100080d8  int32_t data_100080d8 = 0x6c540366
100080dc  char const data_100080dc[0xa] = "sSetValue", 0

100080e6                    81 03 56 69 72 74                                                                    ..Virt

100080ec  char const data_100080ec[0x9] = "ualAlloc", 0

100080f5                                                                 00 ef 00                                               ...

100080f8  char const data_100080f8[0x16] = "FlushInstructionCache", 0

1000810e                                            71 01                                                                q.

10008110  char const data_10008110[0xd] = "GetLastError", 0

1000811d                                                                                         00 28 03                               .(.
10008120  53 65 74 4c 61 73 74 45 72 72 6f 72 00 00 c3 03 6c 73 74 72 63 6d 70 69 41 00 a0 01              SetLastError....lstrcmpiA...

1000813c  char const data_1000813c[0xf] = "GetProcAddress", 0

1000814b                                   00 80 01 47 65 74 4d 6f 64 75 6c 65 48 61 6e 64 6c 65 45 78 41             ...GetModuleHandleExA
10008160  00 00 86 03                                                                                      ....

10008164  char const data_10008164[0xf] = "VirtualProtect", 0

10008173                                                           00 42 01                                                   .B.

10008176  char const data_10008176[0x12] = "GetCurrentProcess", 0

10008188                          f4                                                                               .

10008189  int32_t __convention("regparm") sub_10008189(char* arg1, char* arg2, uint8_t* arg3, void* arg4 @ ebp, int32_t* arg5 @ esi, void* const arg6 @ edi, void* arg7, char* arg8, char* arg9, uint8_t* arg10, char* arg11, int32_t arg12, int32_t arg13, int32_t arg14, uint8_t* arg15, int32_t* arg16, char* arg17, void* arg18, uint8_t* arg19)

   0 @ 10008189  temp1.b = [esi + 0x6f].b
   1 @ 10008189  [esi + 0x6f].b = [esi + 0x6f].b + al
   2 @ 10008189  flag:c = temp1.b + al u< temp1.b
   3 @ 10008189  flag:z = temp1.b == neg.b(al)
   4 @ 1000818c  if (flag:c) then 5 @ 0x100081fb else 6 @ 0x1000818e  {"atMessageW"}

   5 @ 100081fb  if (flag:c) then 15 @ 0x10008271 else 24 @ 0x100081fd  {"itterm"}

   6 @ 1000818e  edi = pop
   7 @ 1000818e  esi = pop
   8 @ 1000818e  ebp = pop
   9 @ 1000818e  esp = esp + 4
  10 @ 1000818e  ebx = pop
  11 @ 1000818e  edx = pop
  12 @ 1000818e  ecx = pop
  13 @ 1000818e  eax = pop
  14 @ 1000818f  if (flag:z) then 34 @ 0x100081de else 35 @ 0x10008191  {"essageW"}

  15 @ 10008271  esi = [esp + (esi << 1) + 0x65].d * 0x11006d72
  16 @ 10008279  bl = bl + [edi + 0x69].b
  17 @ 1000827c  esi = __outsb(dx, [esi].b, esi, eflags)
  18 @ 1000827d  esi = [esp + (esi << 1) + 0x65].d * 0x655f6d72
  19 @ 10008285  temp2.b = [0x6d615f01].b
  20 @ 10008285  [0x6d615f01].b = [0x6d615f01].b + bl
  21 @ 10008285  flag:c = temp2.b + bl u< temp2.b
  22 @ 10008285  flag:s = temp2.b + bl s< 0
  23 @ 10008285  goto 36 @ 0x1000828b  {"sg_exit"}

  24 @ 100081fd  [edi + 0x73637705].b = [edi + 0x73637705].b + dl
  25 @ 10008203  temp0, eflags = __arpl_memw_gpr16([eax + 0x72].w, bp)
  26 @ 10008203  [eax + 0x72].w = temp0.w
  27 @ 10008206  temp3.b = [eax].b
  28 @ 10008206  [eax].b = [eax].b + al
  29 @ 10008206  flag:c = temp3.b + al u< temp3.b
  30 @ 10008206  flag:z = temp3.b == neg.b(al)
  31 @ 10008206  flag:s = temp3.b + al s< 0
  32 @ 10008206  flag:o = add_overflow(temp3.b, al)
  33 @ 10008208  if (flag:s) then 37 @ 0x1000820f else 39 @ 0x1000820a  {"swprintf_s"}  {"ntf_s"}

  34 @ 100081de  if (flag:d) then 40 else 44

  35 @ 10008191  if (not(flag:c)) then 48 @ 0x10008207 else 53 @ 0x10008194  {"ageW"}

  36 @ 1000828b  if (not(flag:c)) then 80 @ 0x100082f4 else 82 @ 0x1000828d  {"_exit"}  {"_lock"}

  37 @ 1000820f  esi = __outsb(dx, [esi].b, esi, eflags)
  38 @ 10008210  if (flag:z) then 84 @ 0x10008278 else 90 @ 0x10008212

  39 @ 1000820a  if (not(flag:c)) then 92 @ 0x10008283 else 94 @ 0x1000820c  {"printf_s"}

  40 @ 100081de  [edi].b = [esi].b
  41 @ 100081de  edi = edi - 1
  42 @ 100081de  esi = esi - 1
  43 @ 100081de  goto 95 @ 0x100081df

  44 @ 100081de  [edi].b = [esi].b
  45 @ 100081de  edi = edi + 1
  46 @ 100081de  esi = esi + 1
  47 @ 100081de  goto 95 @ 0x100081df

  48 @ 10008207  temp4.b = [eax + 5].b
  49 @ 10008207  [eax + 5].b = [eax + 5].b + bh
  50 @ 10008207  flag:c = temp4.b + bh u< temp4.b
  51 @ 10008207  flag:o = add_overflow(temp4.b, bh)
  52 @ 10008207  goto 39 @ 0x1000820a  {"swprintf_s"}

  53 @ 10008194  edi = pop
  54 @ 10008194  esi = pop
  55 @ 10008194  ebp = pop
  56 @ 10008194  esp = esp + 4
  57 @ 10008194  ebx = pop
  58 @ 10008194  edx = pop
  59 @ 10008194  ecx = pop
  60 @ 10008194  eax = pop
  61 @ 10008195  push(edi)
  62 @ 10008198  [eax].b = [eax].b + al
  63 @ 1000819a  ebx = ebx - 1
  64 @ 1000819b  ebp = ebp + 1
  65 @ 1000819c  push(edx)
  66 @ 1000819d  esi = esi - 1
  67 @ 1000819e  ebp = ebp + 1
  68 @ 1000819f  esp = esp - 1
  69 @ 100081a0  esi = esi ^ [edx].d
  70 @ 100081a2  temp0, edi = __insb(edi, dx, eflags)
  71 @ 100081a2  [edi].b = temp0.b
  72 @ 100081a5  temp0, edi = __insb(edi, dx, eflags)
  73 @ 100081a5  [edi].b = temp0.b
  74 @ 100081a6  temp5.b = [eax].b
  75 @ 100081a6  [eax].b = [eax].b + al
  76 @ 100081a6  flag:c = temp5.b + al u< temp5.b
  77 @ 100081a8  __out_immb_al(1, al, eflags)
  78 @ 100081aa  ebp = ebp - 1
  79 @ 100081ab  if (not(flag:c)) then 104 @ 0x10008221 else 120 @ 0x100081ae  {"ageBoxW"}  {"CR80.dll"}

  80 @ 100082f4  edi = pop
  81 @ 100082f4  goto 134 @ 0x100082f5  {"lock"}

  82 @ 1000828d  edi = pop
  83 @ 1000828e  if (flag:s) then 140 @ 0x100082fa else 151 @ 0x10008291

  84 @ 10008278  [edx].d = adc.d([edx].d, eax, flag:c)
  85 @ 1000827a  edi = pop
  86 @ 1000827b  ebp = [esi + 0x69].d * 0x72657474
  87 @ 10008282  temp0, edi = __insd(edi, dx, eflags)
  88 @ 10008282  [edi].d = temp0.d
  89 @ 10008282  goto 92 @ 0x10008283

  90 @ 10008212  edi = pop
  91 @ 10008213  goto 152 @ 0x10008215

  92 @ 10008283  edi = pop
  93 @ 10008283  goto 156 @ 0x10008284

  94 @ 1000820c  if (flag:o) then 161 @ 0x10008280 else 162 @ 0x1000820e  {"intf_s"}  {"erm_e"}

  95 @ 100081df  [edi + 0x5f].b = [edi + 0x5f].b + bl
  96 @ 100081e2  ebp = [edi + 0x62].d * 0x6e75665f
  97 @ 100081e9  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
  98 @ 100081e9  [eax].w = temp0.w
  99 @ 100081eb  ah = ah + ch
 100 @ 100081ed  temp6.b = al
 101 @ 100081ed  al = al + 0x66
 102 @ 100081ed  flag:o = add_overflow(temp6.b, 0x66)
 103 @ 100081ef  if (flag:o) then 164 @ 0x10008263 else 166 @ 0x100081f1  {"intf"}  {"_pointer"}

 104 @ 10008221  ebx = ebx + 1
 105 @ 10008222  push(edx)
 106 @ 10008223  [eax].b - dh
 107 @ 10008225  temp0, edi = __insb(edi, dx, eflags)
 108 @ 10008225  [edi].b = temp0.b
 109 @ 10008228  temp0, edi = __insb(edi, dx, eflags)
 110 @ 10008228  [edi].b = temp0.b
 111 @ 10008229  temp7.b = [edx + 1].b
 112 @ 10008229  [edx + 1].b = [edx + 1].b + dh
 113 @ 10008229  flag:o = add_overflow(temp7.b, dh)
 114 @ 1000822c  edi = pop
 115 @ 1000822d  esi = __outsb(dx, [gsbase + esi].b, esi, eflags)
 116 @ 1000822f  temp0, eflags = __arpl_memw_gpr16([edi + 0x64].w, bp)
 117 @ 1000822f  [edi + 0x64].w = temp0.w
 118 @ 10008232  edi = pop
 119 @ 10008232  goto 177 @ &data_10008230[4]  {"pointer"}

 120 @ 100081ae  edi = pop
 121 @ 100081ae  esi = pop
 122 @ 100081ae  ebp = pop
 123 @ 100081ae  esp = esp + 4
 124 @ 100081ae  ebx = pop
 125 @ 100081ae  edx = pop
 126 @ 100081ae  ecx = pop
 127 @ 100081ae  eax = pop
 128 @ 100081af  temp8.d = edx
 129 @ 100081af  edx = edx + 1
 130 @ 100081af  flag:s = temp8.d + 1 s< 0
 131 @ 100081af  flag:o = add_overflow(temp8.d, 1)
 132 @ 100081b2  esi = __outsd(dx, [esi].d, esi, eflags)
 133 @ 100081b3  if (flag:s) then 94 @ 0x1000820c else 178 @ 0x100081b5  {"printf_s"}

 134 @ 100082f5  temp0, edi = __insb(edi, dx, eflags)
 135 @ 100082f5  [edi].b = temp0.b
 136 @ 100082f6  esi = __outsd(dx, [esi].d, esi, eflags)
 137 @ 100082f7  temp0, eflags = __arpl_memw_gpr16([ebx].w, bp)
 138 @ 100082f7  [ebx].w = temp0.w
 139 @ 100082f7  goto 140 @ 0x100082fa

 140 @ 100082fa  temp9.b = [ebx].b
 141 @ 100082fa  [ebx].b = [ebx].b - al
 142 @ 100082fa  flag:c = temp9.b u< al
 143 @ 100082fa  flag:p = unimplemented
 144 @ 100082fa  flag:z = temp9.b == al
 145 @ 100082fa  flag:s = temp9.b - al s< 0
 146 @ 100082fa  flag:o = add_overflow(temp9.b, neg.b(al))
 147 @ 100082fc  edi = pop
 148 @ 100082fd  esi = __outsd(dx, [esi].d, esi, eflags)
 149 @ 100082fe  esi = __outsb(dx, [esi].b, esi, eflags)
 150 @ 100082ff  if (flag:s) then 193 @ 0x1000836b else 194 @ 0x10008302  {"stemTimeAsFileTime"}

 151 @ 10008291  goto 195 @ 0x10008293

 152 @ 10008215  ah = ah + bl
 153 @ 10008217  temp10.b = al
 154 @ 10008217  al = al + 0x65
 155 @ 10008219  if (temp10.b + 0x65 s< 0) then 156 @ 0x10008284 else 203 @ 0x1000821b

 156 @ 10008284  temp11.b = [gsbase + 0x6d615f01].b
 157 @ 10008284  [gsbase + 0x6d615f01].b = [gsbase + 0x6d615f01].b + bl
 158 @ 10008284  flag:c = temp11.b + bl u< temp11.b
 159 @ 10008284  flag:s = temp11.b + bl s< 0
 160 @ 10008284  goto 36 @ 0x1000828b  {"sg_exit"}

 161 @ 10008280  if (flag:c) then 204 @ 0x100082f0 else 92 @ 0x10008283

 162 @ 1000820e  ebp = [esi + 0x74].d * 0x735f66
 163 @ 1000820e  goto 152 @ 0x10008215

 164 @ 10008263  edi = pop
 165 @ 10008263  goto 205 @ 0x10008264  {"pointer"}

 166 @ 100081f1  ebp = [esi + 0x74].d * 0x4c50066
 167 @ 100081f8  edi = pop
 168 @ 100081f8  esi = pop
 169 @ 100081f8  ebp = pop
 170 @ 100081f8  esp = esp + 4
 171 @ 100081f8  ebx = pop
 172 @ 100081f8  edx = pop
 173 @ 100081f8  ecx = pop
 174 @ 100081f8  eax = pop
 175 @ 100081f9  __bound_gprv_mema32(ebp, [edi + 0x72].q)
 176 @ 100081fc  goto 206 @ 0x100081fe

 177 @ 10008234  if (flag:o) then 213 @ 0x100082a5 else 218 @ &data_10008230[6]  {"inter"}

 178 @ 100081b5  [ebp + 0x53].b = [ebp + 0x53].b + dl
 179 @ 100081b8  ebp = ebp + 1
 180 @ 100081b9  push(edx)
 181 @ 100081ba  esi = esi ^ [edx].d
 182 @ 100081bc  temp0, edi = __insb(edi, dx, eflags)
 183 @ 100081bc  [edi].b = temp0.b
 184 @ 100081bf  temp0, edi = __insb(edi, dx, eflags)
 185 @ 100081bf  [edi].b = temp0.b
 186 @ 100081c0  [eax].b = [eax].b + al
 187 @ 100081c2  temp12.b = [0x6d6d656d].b
 188 @ 100081c2  flag:c = temp12.b u< al
 189 @ 100081c2  flag:z = temp12.b == al
 190 @ 100081c2  flag:o = add_overflow(temp12.b, neg.b(al))
 191 @ 100081c8  esi = __outsd(dx, [esi].d, esi, eflags)
 192 @ 100081c9  if (flag:z || flag:c) then 235 @ &data_10008230 else 238 @ 0x100081cb  {"ode_pointer"}

 193 @ 1000836b  if (not(flag:c)) then 243 @ 0x100083e1 else 245 @ 0x1000836d  {"emTimeAsFileTime"}  {"Process"}

 194 @ 10008302  goto 248 @ 0x10008304

 195 @ 10008293  [ebx].b = [ebx].b + dl
 196 @ 10008295  temp13.d = [edi + 0x61].d
 197 @ 10008295  [edi + 0x61].d = [edi + 0x61].d + ebx
 198 @ 10008295  flag:c = temp13.d + ebx u< temp13.d
 199 @ 10008295  flag:z = temp13.d == neg.d(ebx)
 200 @ 10008295  flag:s = temp13.d + ebx s< 0
 201 @ 10008298  push(zx.d(0x75))
 202 @ 1000829b  if (not(flag:c)) then 249 @ 0x10008311 else 252 @ 0x1000829d  {"_fdiv"}  {"dler4_common"}

 203 @ 1000821b  goto 255 @ 0x1000821d

 204 @ 100082f0  goto 258 @ 0x100082f2

 205 @ 10008264  if (flag:o) then 260 @ 0x100082d5 else 270 @ 0x10008266  {"inter"}

 206 @ 100081fe  temp0.d = edi
 207 @ 100081fe  edi = eax
 208 @ 100081fe  eax = temp0.d
 209 @ 100081ff  eax = eax + 0x63736377
 210 @ 10008204  push(0x78000072)
 211 @ 10008209  eax = eax + 0x72707773
 212 @ 10008209  goto 162 @ 0x1000820e  {"intf_s"}

 213 @ 100082a5  [edi + 0x5f].b = [edi + 0x5f].b + bl
 214 @ 100082a8  temp14.d = ebx
 215 @ 100082a8  ebx = ebx + 1
 216 @ 100082a8  flag:o = add_overflow(temp14.d, 1)
 217 @ 100082a9  if (flag:o) then 274 @ 0x1000831b else 285 @ 0x100082ab  {"XcptFilter"}

 218 @ 10008236  ebp = [esi + 0x74].d * -0x6cff8d9b
 219 @ 1000823d  temp15.b = bl
 220 @ 1000823d  temp16.b = [edi + 0x6d].b
 221 @ 1000823d  bl = bl + [edi + 0x6d].b
 222 @ 1000823d  flag:c = temp15.b + temp16.b u< temp15.b
 223 @ 1000823d  flag:z = temp15.b == neg.b(temp16.b)
 224 @ 1000823d  flag:s = temp15.b + temp16.b s< 0
 225 @ 1000823d  flag:o = add_overflow(temp15.b, temp16.b)
 226 @ 10008240  edi = pop
 227 @ 10008240  esi = pop
 228 @ 10008240  ebp = pop
 229 @ 10008240  esp = esp + 4
 230 @ 10008240  ebx = pop
 231 @ 10008240  edx = pop
 232 @ 10008240  ecx = pop
 233 @ 10008240  eax = pop
 234 @ 10008240  goto 301 @ 0x10008241  {"lloc_crt"}

 235 @ 10008230  esi = __outsd(dx, [esi].d, esi, eflags)
 236 @ 10008231  edi = pop
 237 @ 10008231  goto 177 @ &data_10008230[4]  {"pointer"}

 238 @ 100081cb  ah = ah + dh
 239 @ 100081cd  temp17.b = al
 240 @ 100081cd  al = al + 0x66
 241 @ 100081cd  flag:c = temp17.b u>= 0x9a
 242 @ 100081cf  if (flag:c) then 218 @ &data_10008230[6] else 306 @ 0x100081d1  {"inter"}

 243 @ 100083e1  push(eax)
 244 @ 100083e2  if (flag:c) then 316 @ 0x10008453 else 317 @ 0x100083e4  {"cess"}

 245 @ 1000836d  temp0, edi = __insd(edi, dx, eflags)
 246 @ 1000836d  [edi].d = temp0.d
 247 @ 1000836d  goto 320 @ 0x1000836f  {"TimeAsFileTime"}

 248 @ 10008304  if (not(flag:p)) then 329 @ 0x10008307 else 330 @ 0x10008306  {"_except_handler4_common"}  {"except_handler4_common"}

 249 @ 10008311  temp0, edi = __insb(edi, dx, eflags)
 250 @ 10008311  [edi].b = temp0.b
 251 @ 10008311  goto 332 @ 0x10008313  {"er4_common"}

 252 @ 1000829d  edi = pop
 253 @ 1000829e  si = [fsbase + esi].w * 0x6d00
 254 @ 1000829e  goto 213 @ 0x100082a5

 255 @ 1000821d  [ebp + 0x53].b = [ebp + 0x53].b + cl
 256 @ 10008220  push(esi)
 257 @ 10008220  goto 104 @ 0x10008221  {"CR80.dll"}

 258 @ 100082f2  [edx].b = [edx].b + 0x5f
 259 @ 100082f2  goto 134 @ 0x100082f5  {"lock"}

 260 @ 100082d5  esi = __outsb(dx, [esi].b, esi, eflags)
 261 @ 100082d6  edi = pop
 262 @ 100082d6  esi = pop
 263 @ 100082d6  ebp = pop
 264 @ 100082d6  esp = esp + 4
 265 @ 100082d6  ebx = pop
 266 @ 100082d6  edx = pop
 267 @ 100082d6  ecx = pop
 268 @ 100082d6  eax = pop
 269 @ 100082d6  goto 333 @ 0x100082d7

 270 @ 10008266  ebp = [esi + 0x74].d * &data_10007265
 271 @ 1000826d  bl = bl + [edi + 0x69].b
 272 @ 10008270  esi = __outsb(dx, [esi].b, esi, eflags)
 273 @ 10008270  goto 15 @ 0x10008271  {"itterm"}

 274 @ 1000831b  esi = __outsd(dx, [esi].d, esi, eflags)
 275 @ 1000831c  esi = __outsb(dx, [esi].b, esi, eflags)
 276 @ 1000831d  temp18.b = [ebx + 1].b
 277 @ 1000831d  [ebx + 1].b = [ebx + 1].b + dl
 278 @ 1000831d  flag:c = temp18.b + dl u< temp18.b
 279 @ 10008320  edi = pop
 280 @ 10008321  temp0, eflags = __arpl_memw_gpr16([edx + 0x74].w, si)
 281 @ 10008321  [edx + 0x74].w = temp0.w
 282 @ 10008324  edi = pop
 283 @ 10008325  __bound_gprv_mema32(esi, [gsbase + ebp + 0x67].q)
 284 @ 1000832a  if (flag:c) then 358 @ 0x1000838d else 363 @ 0x1000832e  {"hook"}  {"change"}

 285 @ 100082ab  eax = pop
 286 @ 100082ac  temp0, eflags = __arpl_memw_gpr16([eax + 0x74].w, si)
 287 @ 100082ac  [eax + 0x74].w = temp0.w
 288 @ 100082af  temp19.d = esi
 289 @ 100082af  esi = esi + 1
 290 @ 100082af  flag:z = temp19.d == -1
 291 @ 100082af  flag:s = temp19.d + 1 s< 0
 292 @ 100082b0  temp20.d = [esp + (esi << 1) + 0x65].d
 293 @ 100082b0  ebp = [esp + (esi << 1) + 0x65].d * 0x8f0072
 294 @ 100082b0  flag:c = unimplemented
 295 @ 100082b0  flag:o = unimplemented
 296 @ 100082b8  edi = pop
 297 @ 100082b9  edi = pop
 298 @ 100082ba  temp0, eflags = __arpl_memw_gpr16([ebp + 0x61].w, bp)
 299 @ 100082ba  [ebp + 0x61].w = temp0.w
 300 @ 100082ba  goto 370 @ 0x100082be  {"n_type_info_names_internal"}

 301 @ 10008241  temp0, edi = __insb(edi, dx, eflags)
 302 @ 10008241  [edi].b = temp0.b
 303 @ 10008242  temp0, edi = __insb(edi, dx, eflags)
 304 @ 10008242  [edi].b = temp0.b
 305 @ 10008242  goto 373 @ 0x10008243  {"oc_crt"}

 306 @ 100081d1  [gsbase + eax].b = [gsbase + eax].b + al
 307 @ 100081d4  temp21.d = ebx
 308 @ 100081d4  temp22.d = [es.d + edi + 0x6d].d
 309 @ 100081d4  ebx = ebx + [es.d + edi + 0x6d].d
 310 @ 100081d4  flag:c = temp21.d + temp22.d u< temp21.d
 311 @ 100081d4  flag:p = unimplemented
 312 @ 100081d4  flag:z = temp21.d == neg.d(temp22.d)
 313 @ 100081d4  flag:s = temp21.d + temp22.d s< 0
 314 @ 100081d4  flag:o = add_overflow(temp21.d, temp22.d)
 315 @ 100081d8  if (not(flag:c)) then 373 @ 0x10008243 else 377 @ 0x100081da  {"oc_crt"}

 316 @ 10008453  goto 378 @ 0x10008455

 317 @ 100083e4  temp0, eflags = __arpl_memw_gpr16([ebp + 0x73].w, sp)
 318 @ 100083e4  [ebp + 0x73].w = temp0.w
 319 @ 100083e7  goto 383 @ 0x100083e9

 320 @ 1000836f  push(esp)
 321 @ 10008370  ebp = [ebp + 0x65].d * 0x69467341
 322 @ 10008377  temp0, edi = __insb(edi, dx, eflags)
 323 @ 10008377  [edi].b = temp0.b
 324 @ 10008378  push(esp)
 325 @ 1000837a  temp23.d = [ebp + 0x65].d
 326 @ 1000837a  ebp = [ebp + 0x65].d * 0x49022900
 327 @ 1000837a  flag:c = unimplemented
 328 @ 1000837a  goto 396 @ 0x10008381  {"nterlockedExchange"}

 329 @ 10008307  if (flag:s) then 245 @ 0x1000836d else 398 @ 0x1000830a  {"ept_handler4_common"}  {"emTimeAsFileTime"}

 330 @ 10008306  edi = pop
 331 @ 10008306  goto 329 @ 0x10008307  {"except_handler4_common"}

 332 @ 10008313  if (flag:c) then 399 @ 0x1000834a else 400 @ 0x10008316  {"_common"}

 333 @ 100082d7  temp0, edi = __insb(edi, dx, eflags)
 334 @ 100082d7  [edi].b = temp0.b
 335 @ 100082d8  [eax].b = [eax].b + al
 336 @ 100082da  ebx = ebx + [edi + 0x75].d
 337 @ 100082de  esi = __outsb(dx, [esi].b, esi, eflags)
 338 @ 100082df  temp0, edi = __insb(edi, dx, eflags)
 339 @ 100082df  [edi].b = temp0.b
 340 @ 100082e0  esi = __outsd(dx, [esi].d, esi, eflags)
 341 @ 100082e1  temp0, eflags = __arpl_memw_gpr16([ebx].w, bp)
 342 @ 100082e1  [ebx].w = temp0.w
 343 @ 100082e4  edx:eax = sx.q(eax)
 344 @ 100082e5  temp24.b = [edi + 0x5f].b
 345 @ 100082e5  [edi + 0x5f].b = [edi + 0x5f].b + bl
 346 @ 100082e5  flag:c = temp24.b + bl u< temp24.b
 347 @ 100082e5  flag:p = unimplemented
 348 @ 100082e5  flag:z = temp24.b == neg.b(bl)
 349 @ 100082e5  flag:s = temp24.b + bl s< 0
 350 @ 100082e5  flag:o = add_overflow(temp24.b, bl)
 351 @ 100082e8  temp0, edi = __insb(edi, dx, eflags)
 352 @ 100082e8  [edi].b = temp0.b
 353 @ 100082ea  temp0, edi = __insb(edi, dx, eflags)
 354 @ 100082ea  [edi].b = temp0.b
 355 @ 100082eb  esi = __outsd(dx, [esi].d, esi, eflags)
 356 @ 100082ec  esi = __outsb(dx, [esi].b, esi, eflags)
 357 @ 100082ed  if (flag:s) then 406 @ 0x10008359 else 204 @ 0x100082f0  {"tProcessId"}

 358 @ 1000838d  temp0, eflags = __arpl_memw_gpr16([eax + 0x61].w, bp)
 359 @ 1000838d  [eax + 0x61].w = temp0.w
 360 @ 10008390  esi = __outsb(dx, [esi].b, esi, eflags)
 361 @ 10008391  [gsbase + bp.d + 3].b = [gsbase + bp.d + 3].b + dl
 362 @ 10008391  goto 407 @ 0x10008396  {"Sleep"}

 363 @ 1000832e  push(0x6b6f6f)
 364 @ 10008333  temp25.b = [ebx + 0x65755102].b
 365 @ 10008333  [ebx + 0x65755102].b = [ebx + 0x65755102].b + ah
 366 @ 10008333  flag:c = temp25.b + ah u< temp25.b
 367 @ 10008333  flag:z = temp25.b == neg.b(ah)
 368 @ 10008333  flag:s = temp25.b + ah s< 0
 369 @ 10008333  goto 409 @ 0x10008339  {"ryPerformanceCounter"}

 370 @ 100082be  esi = __outsb(dx, [esi].b, esi, eflags)
 371 @ 100082bf  edi = pop
 372 @ 100082c0  if (flag:z) then 410 @ 0x1000833b else 412 @ 0x100082c2  {"pe_info_names_internal"}  {"PerformanceCounter"}

 373 @ 10008243  esi = __outsd(dx, [esi].d, esi, eflags)
 374 @ 10008244  temp0, eflags = __arpl_memw_gpr16([edi + 0x63].w, bx)
 375 @ 10008244  [edi + 0x63].w = temp0.w
 376 @ 10008247  if (flag:c) then 413 @ 0x100082bd else 422 @ 0x10008249  {"an_type_info_names_internal"}

 377 @ 100081da  if (flag:p) then 301 @ 0x10008241 else 433 @ 0x100081dc  {"lloc_crt"}

 378 @ 10008455  [esi].b = [esi].b + dh
 379 @ 10008457  temp26.d = eax
 380 @ 10008457  eax = eax + 0x636d656d
 381 @ 10008457  flag:o = add_overflow(temp26.d, 0x636d656d)
 382 @ 1000845c  if (flag:o) then 435 @ 0x100084d7 else 442 @ 0x1000845e

 383 @ 100083e9  [esi + 3].b = [esi + 3].b + ch
 384 @ 100083ec  esp = esp - 1
 385 @ 100083ed  esi = __outsd(dx, [esi].d, esi, eflags)
 386 @ 100083ee  edi = pop
 387 @ 100083ee  esi = pop
 388 @ 100083ee  ebp = pop
 389 @ 100083ee  esp = esp + 4
 390 @ 100083ee  ebx = pop
 391 @ 100083ee  edx = pop
 392 @ 100083ee  ecx = pop
 393 @ 100083ee  eax = pop
 394 @ 100083ef  esp = esp - 1
 395 @ 100083ef  goto 450 @ &data_100083f0[1]  {"ibraryA"}

 396 @ 10008381  esi = __outsb(dx, [esi].b, esi, eflags)
 397 @ 10008382  if (flag:z) then 383 @ 0x100083e9 else 452 @ 0x10008384  {"rlockedExchange"}

 398 @ 1000830a  if (flag:o) then 396 @ 0x10008381 else 453 @ 0x1000830d  {"_handler4_common"}  {"nterlockedExchange"}

 399 @ 1000834a  if (flag:z) then 456 @ 0x100083b1 else 457 @ 0x1000834c  {"xchange"}

 400 @ 10008316  edi = pop
 401 @ 10008317  temp0, eflags = __arpl_memw_gpr16([edi + 0x6d].w, bp)
 402 @ 10008317  [edi + 0x6d].w = temp0.w
 403 @ 1000831a  temp0, edi = __insd(edi, dx, eflags)
 404 @ 1000831a  [edi].d = temp0.d
 405 @ 1000831a  goto 274 @ 0x1000831b

 406 @ 10008359  if (flag:z) then 458 @ 0x100083ab else 461 @ 0x1000835b  {"rocessId"}  {"mpareExchange"}

 407 @ 10008396  push(ebx)
 408 @ 10008396  goto 462 @ 0x10008397  {"leep"}

 409 @ 10008339  if (flag:c) then 465 @ 0x100083b4 else 410 @ 0x1000833b  {"PerformanceCounter"}  {"ange"}

 410 @ 1000833b  push(eax)
 411 @ 1000833c  if (flag:c) then 476 @ 0x100083a5 else 484 @ 0x1000833f  {"ormanceCounter"}  {"ckedCompareExchange"}

 412 @ 100082c2  if (flag:o) then 486 @ 0x10008329 else 487 @ 0x100082c4  {"_info_names_internal"}  {"gger_hook"}

 413 @ 100082bd  edi = pop
 414 @ 100082bd  esi = pop
 415 @ 100082bd  ebp = pop
 416 @ 100082bd  esp = esp + 4
 417 @ 100082bd  ebx = pop
 418 @ 100082bd  edx = pop
 419 @ 100082bd  ecx = pop
 420 @ 100082bd  eax = pop
 421 @ 100082bd  goto 370 @ 0x100082be  {"n_type_info_names_internal"}

 422 @ 10008249  temp27.b = [ebx + 1].b
 423 @ 10008249  [ebx + 1].b = [ebx + 1].b + dh
 424 @ 10008249  flag:z = temp27.b == neg.b(dh)
 425 @ 10008249  flag:s = temp27.b + dh s< 0
 426 @ 1000824c  edi = pop
 427 @ 1000824d  esi = __outsb(dx, [gsbase + esi].b, esi, eflags)
 428 @ 1000824f  temp0, eflags = __arpl_memw_gpr16([edi + 0x64].w, bp)
 429 @ 1000824f  [edi + 0x64].w = temp0.w
 430 @ 10008252  edi = pop
 431 @ 10008255  esi = __outsb(dx, [esi].b, esi, eflags)
 432 @ 10008256  if (not(flag:z)) then 487 @ 0x100082c4 else 494 @ 0x10008258  {"_info_names_internal"}

 433 @ 100081dc  [eax].b = [eax].b + al
 434 @ 100081dc  goto 34 @ 0x100081de

 435 @ 100084d7  [eax].b = [eax].b + al
 436 @ 100084d9  temp28.d = [eax].d
 437 @ 100084d9  eax = [eax].d * 0
 438 @ 100084d9  flag:c = unimplemented
 439 @ 100084dc  [ebx].b = adc.b([ebx].b, ch, flag:c)
 440 @ 100084df  [eax + 0x5000005e {0x5000005e}].b = [eax + 0x5000005e {0x5000005e}].b + ah
 441 @ 100084df  goto 504 @ 0x100084e5

 442 @ 1000845e  [eax].b = [eax].b + al
 443 @ 10008460  [eax].b = [eax].b + al
 444 @ 10008462  [eax].b = [eax].b + al
 445 @ 10008464  [eax].b = [eax].b + al
 446 @ 10008466  [eax].b = [eax].b + al
 447 @ 10008468  [eax].b = [eax].b + al
 448 @ 1000846a  [eax].b = [eax].b + al
 449 @ 1000846c  undefined

 450 @ 100083f1  esp = [edx + 0x72].d * 0x41797261
 451 @ 100083f1  goto 505 @ &data_100083f0[8]

 452 @ 10008384  if (flag:c) then 514 @ &data_100083f0[2] else 516 @ 0x10008386  {"ockedExchange"}  {"braryA"}

 453 @ 1000830d  edi = pop
 454 @ 1000830e  push(0x6c646e61)
 455 @ 1000830e  goto 332 @ 0x10008313  {"er4_common"}

 456 @ 100083b1  if (flag:s) then 522 @ 0x10008416 else 525 @ 0x100083b3  {"hange"}  {"ceptionFilter"}

 457 @ 1000834c  goto 527 @ 0x1000834e

 458 @ 100083ab  temp0, edi = __insd(edi, dx, eflags)
 459 @ 100083ab  [edi].d = temp0.d
 460 @ 100083ac  if (flag:o) then 536 @ 0x1000840f else 538 @ 0x100083ae  {"reExchange"}  {"ndledExceptionFilter"}

 461 @ 1000835b  if (flag:c) then 539 @ &data_100083c0[0xc] else 540 @ 0x1000835d  {"cessId"}  {"raryCalls"}

 462 @ 10008397  temp0, edi = __insb(edi, dx, eflags)
 463 @ 10008397  [edi].b = temp0.b
 464 @ 10008398  goto 543 @ 0x1000839c

 465 @ 100083b4  edi = pop
 466 @ 100083b4  esi = pop
 467 @ 100083b4  ebp = pop
 468 @ 100083b4  esp = esp + 4
 469 @ 100083b4  ebx = pop
 470 @ 100083b4  edx = pop
 471 @ 100083b4  ecx = pop
 472 @ 100083b4  eax = pop
 473 @ 100083b5  esi = __outsb(dx, [esi].b, esi, eflags)
 474 @ 100083b6  [gsbase + bx.d + si.d].b = [gsbase + bx.d + si.d].b + al
 475 @ 100083b6  goto 549 @ 0x100083ba

 476 @ 100083a5  temp0, eflags = __arpl_memw_gpr16([ebx + 0x65].w, bp)
 477 @ 100083a5  [ebx + 0x65].w = temp0.w
 478 @ 100083a8  temp29.d = ebx
 479 @ 100083a8  ebx = ebx + 1
 480 @ 100083a8  flag:s = temp29.d + 1 s< 0
 481 @ 100083a8  flag:o = add_overflow(temp29.d, 1)
 482 @ 100083aa  esi = __outsd(dx, [esi].d, esi, eflags)
 483 @ 100083aa  goto 458 @ 0x100083ab  {"mpareExchange"}

 484 @ 1000833f  esi = __outsd(dx, [esi].d, esi, eflags)
 485 @ 10008340  if (flag:c) then 552 @ 0x100083af else 557 @ 0x10008342  {"anceCounter"}  {"eExchange"}

 486 @ 10008329  if (flag:c) then 358 @ 0x1000838d else 363 @ 0x1000832e  {"hook"}  {"change"}

 487 @ 100082c4  edi = pop
 488 @ 100082c5  temp30.d = [esi + 0x66].d
 489 @ 100082c5  ebp = [esi + 0x66].d * 0x616e5f6f
 490 @ 100082c5  flag:c = unimplemented
 491 @ 100082cc  temp0, edi = __insd(edi, dx, eflags)
 492 @ 100082cc  [edi].d = temp0.d
 493 @ 100082cd  if (not(flag:c)) then 570 @ 0x1000832f else 577 @ 0x100082d0  {"internal"}

 494 @ 10008258  temp0, edi = __insb(edi, dx, eflags)
 495 @ 10008258  [edi].b = temp0.b
 496 @ 10008259  temp31.b = [eax + 1].b
 497 @ 10008259  [eax + 1].b = [eax + 1].b + ch
 498 @ 10008259  flag:o = add_overflow(temp31.b, ch)
 499 @ 1000825c  edi = pop
 500 @ 1000825d  temp0, eflags = __arpl_memw_gpr16([gsbase + edi + 0x64].w, bp)
 501 @ 1000825d  [gsbase + edi + 0x64].w = temp0.w
 502 @ 10008262  edi = pop
 503 @ 10008262  goto 205 @ 0x10008264  {"pointer"}

 504 @ 100084e5  goto 579 @ 0x100084e7

 505 @ 100083f8  [eax].b = [eax].b + al
 506 @ 100083fa  [eax].b = [eax].b + al
 507 @ 100083fc  [eax].b = [eax].b + al
 508 @ 100083fe  [eax].b = [eax].b + al
 509 @ 10008400  [eax].b = [eax].b + al
 510 @ 10008402  [eax].b = [eax].b + al
 511 @ 10008404  [eax].b = [eax].b + al
 512 @ 10008406  edx = edx - 1
 513 @ 10008406  goto 595 @ 0x10008407

 514 @ 100083f2  __bound_gprv_mema32(esi, [edx + 0x61].q)
 515 @ 100083f5  if (flag:c) then 599 @ 0x10008470 else 607 @ &data_100083f0[7]  {"A"}

 516 @ 10008386  esi = __outsd(dx, [esi].d, esi, eflags)
 517 @ 10008387  temp0, eflags = __arpl_memw_gpr16([ebx + 0x65].w, bp)
 518 @ 10008387  [ebx + 0x65].w = temp0.w
 519 @ 1000838a  temp32.d = ebp
 520 @ 1000838a  ebp = ebp + 1
 521 @ 1000838c  if (temp32.d + 1 s< 0) then 450 @ &data_100083f0[1] else 609 @ 0x1000838e  {"hange"}  {"ibraryA"}

 522 @ 10008416  temp0, eflags = __arpl_memw_gpr16([ebp + 0x70].w, sp)
 523 @ 10008416  [ebp + 0x70].w = temp0.w
 524 @ 10008419  if (flag:z) then 612 @ 0x10008484 else 617 @ 0x1000841b  {"onFilter"}

 525 @ 100083b3  push(0x65676e61)
 526 @ 100083b3  goto 624 @ 0x100083b8

 527 @ 1000834e  ebx = ebx + 1
 528 @ 1000834f  temp33.d = [edi + 0x65].d
 529 @ 1000834f  [edi + 0x65].d = [edi + 0x65].d + eax
 530 @ 1000834f  flag:c = temp33.d + eax u< temp33.d
 531 @ 1000834f  flag:p = unimplemented
 532 @ 1000834f  flag:z = temp33.d == neg.d(eax)
 533 @ 1000834f  flag:s = temp33.d + eax s< 0
 534 @ 1000834f  flag:o = add_overflow(temp33.d, eax)
 535 @ 10008352  if (flag:z) then 462 @ 0x10008397 else 626 @ 0x10008354  {"urrentProcessId"}  {"leep"}

 536 @ 1000840f  esi = __outsb(dx, [esi].b, esi, eflags)
 537 @ 1000840f  goto 627 @ 0x10008410  {"dledExceptionFilter"}

 538 @ 100083ae  if (flag:c) then 630 @ 0x10008415 else 631 @ 0x100083b0  {"Exchange"}  {"xceptionFilter"}

 539 @ 100083cc  if (flag:c) then 636 @ 0x1000842f else 637 @ &data_100083c0[0xe]  {"ryCalls"}  {"rPresent"}

 540 @ 1000835d  temp0, eflags = __arpl_memw_gpr16([ebp + 0x73].w, sp)
 541 @ 1000835d  [ebp + 0x73].w = temp0.w
 542 @ 10008360  if (not(flag:c)) then 458 @ 0x100083ab else 638 @ 0x10008362  {"mpareExchange"}

 543 @ 1000839c  temp34.b = cl
 544 @ 1000839c  temp35.b = [es.d + ecx + 0x6e].b
 545 @ 1000839c  cl = cl + [es.d + ecx + 0x6e].b
 546 @ 1000839c  flag:c = temp34.b + temp35.b u< temp34.b
 547 @ 1000839c  flag:z = temp34.b == neg.b(temp35.b)
 548 @ 100083a0  if (flag:z) then 595 @ 0x10008407 else 645 @ 0x100083a2  {"rlockedCompareExchange"}

 549 @ 100083ba  eax = [eax].d
 550 @ 100083bc  esp = esp + 1
 551 @ 100083bc  goto 646 @ 0x100083bd  {"isableThreadLibraryCalls"}

 552 @ 100083af  temp36.d = ebp
 553 @ 100083af  ebp = ebp + 1
 554 @ 100083af  flag:z = temp36.d == -1
 555 @ 100083af  flag:s = temp36.d + 1 s< 0
 556 @ 100083af  goto 456 @ 0x100083b1  {"xchange"}

 557 @ 10008342  edi = pop
 558 @ 10008342  esi = pop
 559 @ 10008342  ebp = pop
 560 @ 10008342  esp = esp + 4
 561 @ 10008342  ebx = pop
 562 @ 10008342  edx = pop
 563 @ 10008342  ecx = pop
 564 @ 10008342  eax = pop
 565 @ 10008343  esi = __outsb(dx, [esi].b, esi, eflags)
 566 @ 10008344  temp0, eflags = __arpl_memw_gpr16([ebp + 0x43].w, sp)
 567 @ 10008344  [ebp + 0x43].w = temp0.w
 568 @ 10008347  esi = __outsd(dx, [esi].d, esi, eflags)
 569 @ 10008348  if (not(flag:z)) then 624 @ 0x100083b8 else 399 @ 0x1000834a

 570 @ 1000832f  esi = __outsd(dx, [esi].d, esi, eflags)
 571 @ 10008330  esi = __outsd(dx, [esi].d, esi, eflags)
 572 @ 10008331  temp37.d = [eax].d
 573 @ 10008331  eax = [eax].d * 0
 574 @ 10008331  flag:c = unimplemented
 575 @ 10008334  [0x65755102].d = eax
 576 @ 10008334  goto 409 @ 0x10008339  {"ryPerformanceCounter"}

 577 @ 100082d0  ebp = [esi + 0x74].d * 0x616e7265
 578 @ 100082d0  goto 333 @ 0x100082d7

 579 @ 100084e7  [eax + 0x71].b = [eax + 0x71].b + ah
 580 @ 100084ea  [eax].b = [eax].b + al
 581 @ 100084ec  al = [-0xffffffff80000070].b
 582 @ 100084f1  esi = __outsb(dx, [esi].b, esi, eflags)
 583 @ 100084f2  [eax].b = [eax].b + al
 584 @ 100084f4  [ebp].b = [ebp].b + ch
 585 @ 100084f7  al = al + dl
 586 @ 100084f9  push(0x72e00000)
 587 @ 100084fe  [eax].b = [eax].b + al
 588 @ 10008500  [edi].b = [edi].b ^ ah
 589 @ 10008503  [eax + 0x10000067].b = [eax + 0x10000067].b + ah
 590 @ 10008509  push(0x5dd00000)
 591 @ 1000850e  temp38.b = [eax].b
 592 @ 1000850e  [eax].b = [eax].b + al
 593 @ 1000850e  flag:o = add_overflow(temp38.b, al)
 594 @ 10008510  if (flag:o) then 650 @ 0x10008581 else 719 @ 0x10008512

 595 @ 10008407  temp39.d = edx
 596 @ 10008407  temp40.d = [ebx + 0x65].d
 597 @ 10008407  edx = edx + [ebx + 0x65].d
 598 @ 1000840a  if (temp39.d == neg.d(temp40.d)) then 722 @ 0x10008461 else 732 @ 0x1000840c  {"nhandledExceptionFilter"}

 599 @ 10008470  [eax].b = [eax].b + al
 600 @ 10008472  [eax].b = [eax].b + al
 601 @ 10008474  push(zx.d(cs))
 602 @ 10008475  eax = eax
 603 @ 10008477  [ecx].b = [ecx].b + al
 604 @ 10008479  [eax].b = [eax].b + al
 605 @ 1000847b  [edi].b = [edi].b + ah
 606 @ 1000847b  goto 735 @ 0x1000847d

 607 @ 100083f7  ecx = ecx + 1
 608 @ 100083f7  goto 505 @ &data_100083f0[8]

 609 @ 1000838e  push(0x65676e61)
 610 @ 10008393  [esi + 3].b = [esi + 3].b + dl
 611 @ 10008393  goto 407 @ 0x10008396  {"Sleep"}

 612 @ 10008484  [ebx - 0x73dc0000].b = cl
 613 @ 1000848a  [eax].b = [eax].b + al
 614 @ 1000848c  [eax + eax + 0x790000].b = ror.b([eax + eax + 0x790000].b, 0)
 615 @ 10008494  [eax + eax].b = [eax + eax].b u>> 0
 616 @ 10008494  goto 738 @ 0x10008498

 617 @ 1000841b  esi = __outsd(dx, [esi].d, esi, eflags)
 618 @ 1000841c  esi = __outsb(dx, [esi].b, esi, eflags)
 619 @ 1000841d  esi = esi + 1
 620 @ 1000841e  temp41.d = [esp + (esi << 1) + 0x65].d
 621 @ 1000841e  ebp = [esp + (esi << 1) + 0x65].d * 0x2390072
 622 @ 1000841e  flag:c = unimplemented
 623 @ 1000841e  goto 749 @ 0x10008426  {"IsDebuggerPresent"}

 624 @ 100083b8  [eax].b = [eax].b + al
 625 @ 100083b8  goto 549 @ 0x100083ba

 626 @ 10008354  if (not(flag:z)) then 755 @ &data_100083c0[8] else 757 @ 0x10008356  {"rentProcessId"}  {"dLibraryCalls"}

 627 @ 10008410  temp0, edi = __insb(edi, dx, eflags)
 628 @ 10008410  [edi].b = temp0.b
 629 @ 10008410  goto 758 @ 0x10008412  {"edExceptionFilter"}

 630 @ 10008415  if (flag:s) then 763 @ 0x1000847a else 766 @ 0x10008417  {"eptionFilter"}

 631 @ 100083b0  temp42.d = ebp
 632 @ 100083b0  ebp = ebp + 1
 633 @ 100083b0  flag:z = temp42.d == -1
 634 @ 100083b0  flag:s = temp42.d + 1 s< 0
 635 @ 100083b0  goto 456 @ 0x100083b1  {"xchange"}

 636 @ 1000842f  if (flag:c) then 767 @ 0x10008481 else 774 @ &data_10008430[1]  {"resent"}

 637 @ 100083ce  if (flag:c) then 775 @ 0x10008449 else 779 @ &data_100083c0[0x10]  {"Calls"}

 638 @ 10008362  dl = dl + cl
 639 @ 10008365  temp43.d = [edi + 0x65].d
 640 @ 10008365  [edi + 0x65].d = [edi + 0x65].d + eax
 641 @ 10008365  flag:c = temp43.d + eax u< temp43.d
 642 @ 10008365  flag:z = temp43.d == neg.d(eax)
 643 @ 10008365  flag:s = temp43.d + eax s< 0
 644 @ 10008368  if (flag:z) then 646 @ 0x100083bd else 781 @ 0x1000836a  {"ystemTimeAsFileTime"}  {"isableThreadLibraryCalls"}

 645 @ 100083a2  if (flag:c) then 627 @ 0x10008410 else 782 @ 0x100083a4  {"ockedCompareExchange"}  {"dledExceptionFilter"}

 646 @ 100083bd  esi = [ebx + 0x61].d * 0x54656c62
 647 @ 100083c4  push(0x64616572)
 648 @ 100083c9  esp = esp - 1
 649 @ 100083c9  goto 784 @ &data_100083c0[0xa]  {"ibraryCalls"}

 650 @ 10008581  es = [eax].w
 651 @ 10008583  [eax - 0x72].b = [eax - 0x72].b + bh
 652 @ 10008586  [eax].b = [eax].b + al
 653 @ 10008588  [esi - 0x71740000].d = [esi - 0x71740000].d
 654 @ 1000858f  [ebx - 0x43ffff72].b = [ebx - 0x43ffff72].b + ah
 655 @ 10008595  es = [eax].w
 656 @ 10008597  cl = cl + cl
 657 @ 10008599  es = [eax].w
 658 @ 1000859b  ah = ah + dl
 659 @ 1000859d  es = [eax].w
 660 @ 1000859f  cl = cl + ch
 661 @ 100085a1  es = [eax].w
 662 @ 100085a3  dl = dl + bh
 663 @ 100085a5  es = [eax].w
 664 @ 100085a7  [edx].b = [edx].b + cl
 665 @ 100085a9  [eax].d = pop
 666 @ 100085ab  [esi].b = [esi].b + dl
 667 @ 100085ad  [eax].d = pop
 668 @ 100085af  [ebx].b = [ebx].b + ah
 669 @ 100085b1  [eax].d = pop
 670 @ 100085b3  [edi].b = [edi].b + ch
 671 @ 100085b5  [eax].d = pop
 672 @ 100085b7  [ebx].b = [ebx].b + bh
 673 @ 100085b9  [eax].d = pop
 674 @ 100085bb  [eax - 0x71].b = [eax - 0x71].b + cl
 675 @ 100085be  [eax].b = [eax].b + al
 676 @ 100085c0  push(ebx)
 677 @ 100085c1  [eax].d = pop
 678 @ 100085c3  [edi - 0x71].b = [edi - 0x71].b + bl
 679 @ 100085c6  [eax].b = [eax].b + al
 680 @ 100085c8  [eax].b = [eax].b + al
 681 @ 100085ca  [eax].d = [eax].d + eax
 682 @ 100085cc  al = al + [eax].b
 683 @ 100085ce  eax = eax + [eax].d
 684 @ 100085d0  al = al
 685 @ 100085d2  eax = eax + 0x7000600
 686 @ 100085d7  [eax].b = [eax].b + cl
 687 @ 100085d9  [ecx].b = [ecx].b + cl
 688 @ 100085db  [edx].b = [edx].b + cl
 689 @ 100085dd  [ebx].b = [ebx].b + cl
 690 @ 100085df  [eax + eax].b = [eax + eax].b + cl
 691 @ 100085e2  eax = eax | 0xf000e00
 692 @ 100085e7  [eax].b = [eax].b + dl
 693 @ 100085e9  [ecx].b = [ecx].b + dl
 694 @ 100085eb  [edx].b = [edx].b + dl
 695 @ 100085ed  [ebx].b = [ebx].b + dl
 696 @ 100085ef  temp44.b = [eax + eax].b
 697 @ 100085ef  [eax + eax].b = [eax + eax].b + dl
 698 @ 100085ef  flag:c = temp44.b + dl u< temp44.b
 699 @ 100085f2  eax = adc.d(eax, 0x17001600, flag:c)
 700 @ 100085f7  [eax].b = [eax].b + bl
 701 @ 100085f9  [ecx].b = [ecx].b + bl
 702 @ 100085fb  [edx].b = [edx].b + bl
 703 @ 100085fd  [ebx].b = [ebx].b + bl
 704 @ 100085ff  temp45.b = [eax + eax].b
 705 @ 100085ff  [eax + eax].b = [eax + eax].b + bl
 706 @ 100085ff  flag:c = temp45.b + bl u< temp45.b
 707 @ 10008602  eax = sbb.d(eax, 0x1f001e00, flag:c)
 708 @ 10008607  [eax].b = [eax].b + ah
 709 @ 10008609  [ecx].b = [ecx].b + ah
 710 @ 1000860b  [edx].b = [edx].b + ah
 711 @ 1000860d  [ebx].b = [ebx].b + ah
 712 @ 1000860f  [eax + eax].b = [eax + eax].b + ah
 713 @ 10008612  temp46.d = eax
 714 @ 10008612  eax = eax & 0x75002600
 715 @ 10008612  flag:c = 0
 716 @ 10008612  flag:z = (temp46.d & 0x75002600) == 0
 717 @ 10008612  flag:o = 0
 718 @ 10008617  if (flag:z) then 786 @ 0x10008682 else 801 @ 0x10008619  {"l.dll"}

 719 @ 10008512  [eax].b = [eax].b + al
 720 @ 10008514  eax = eax + 1
 721 @ 10008515  goto 830 @ 0x10008517

 722 @ 10008461  [eax].b = [eax].b + al
 723 @ 10008463  [eax].b = [eax].b + al
 724 @ 10008465  [eax].b = [eax].b + al
 725 @ 10008467  [eax].b = [eax].b + al
 726 @ 10008469  [eax].b = [eax].b + al
 727 @ 1000846b  temp47.b = bl
 728 @ 1000846b  temp48.b = bl
 729 @ 1000846b  bl = bl + bl
 730 @ 1000846b  flag:c = temp47.b + temp48.b u< temp47.b
 731 @ 1000846b  goto 834 @ 0x1000846d

 732 @ 1000840c  esi = __outsb(dx, [esi].b, esi, eflags)
 733 @ 1000840d  push(0x6c646e61)
 734 @ 1000840d  goto 758 @ 0x10008412  {"edExceptionFilter"}

 735 @ 1000847d  [eax].b = [eax].b + al
 736 @ 1000847f  [edi].b = [edi].b + ah
 737 @ 1000847f  goto 767 @ 0x10008481

 738 @ 10008498  push(eax)
 739 @ 10008498  push(ecx)
 740 @ 10008498  push(edx)
 741 @ 10008498  push(ebx)
 742 @ 10008498  push(esp)
 743 @ 10008498  push(ebp)
 744 @ 10008498  push(esi)
 745 @ 10008498  push(edi)
 746 @ 10008499  eax = eax - 0x1fa00000
 747 @ 1000849e  [eax].b = [eax].b + al
 748 @ 100084a0  undefined

 749 @ 10008426  temp49.d = ecx
 750 @ 10008426  ecx = ecx - 1
 751 @ 10008426  flag:p = unimplemented
 752 @ 10008426  flag:s = temp49.d - 1 s< 0
 753 @ 10008426  flag:o = add_overflow(temp49.d, -1)
 754 @ 10008427  if (not(flag:c)) then 834 @ 0x1000846d else 835 @ 0x10008429  {"ebuggerPresent"}

 755 @ 100083c8  esp = esp - 1
 756 @ 100083c8  goto 784 @ &data_100083c0[0xa]  {"ibraryCalls"}

 757 @ 10008356  if (flag:c) then 646 @ 0x100083bd else 837 @ 0x10008358  {"ntProcessId"}  {"isableThreadLibraryCalls"}

 758 @ 10008412  temp50.d = ebp
 759 @ 10008412  ebp = ebp + 1
 760 @ 10008412  flag:s = temp50.d + 1 s< 0
 761 @ 10008412  flag:o = add_overflow(temp50.d, 1)
 762 @ 10008412  goto 630 @ 0x10008415  {"xceptionFilter"}

 763 @ 1000847a  [eax].b = [eax].b + al
 764 @ 1000847c  al, eflags = __daa(al, eflags)
 765 @ 1000847c  goto 735 @ 0x1000847d

 766 @ 10008417  if (flag:o) then 839 @ 0x1000848e else 842 @ 0x1000841a  {"ionFilter"}

 767 @ 10008481  [eax].b = [eax].b + al
 768 @ 10008483  [eax + 0x2400008b].b = [eax + 0x2400008b].b + cl
 769 @ 10008489  [eax].w = es
 770 @ 1000848b  al = al + al
 771 @ 1000848d  [eax].w = es
 772 @ 1000848f  [eax].b = [eax].b + al
 773 @ 10008491  goto 844 @ 0x10008493

 774 @ 10008431  if (flag:c) then 738 @ 0x10008498 else 848 @ &data_10008430[3]  {"sent"}

 775 @ 10008449  eax = eax ^ [eax].d
 776 @ 1000844b  [edx].b = [edx].b + bh
 777 @ 1000844d  eax = eax + 0x736d656d
 778 @ 1000844d  goto 849 @ 0x10008452

 779 @ 100083d0  ebx = ebx + 1
 780 @ 100083d0  goto 850 @ &data_100083c0[0x11]  {"alls"}

 781 @ 1000836a  if (not(flag:s)) then 861 @ 0x100083df else 862 @ 0x1000836c  {"temTimeAsFileTime"}  {"teProcess"}

 782 @ 100083a4  esi = __outsd(dx, [esi].d, esi, eflags)
 783 @ 100083a4  goto 476 @ 0x100083a5  {"ckedCompareExchange"}

 784 @ 100083ca  esp = [edx + 0x72].d * 0x43797261
 785 @ 100083ca  goto 850 @ &data_100083c0[0x11]  {"alls"}

 786 @ 10008682  esi = __outsd(dx, [esi].d, esi, eflags)
 787 @ 10008683  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
 788 @ 10008683  [eax].w = temp0.w
 789 @ 10008685  esi = __outsb(dx, [esi].b, esi, eflags)
 790 @ 10008686  temp0, eflags = __arpl_memw_gpr16([fsbase + edx + 0x65].w, si)
 791 @ 10008686  [fsbase + edx + 0x65].w = temp0.w
 792 @ 1000868b  edi = pop
 793 @ 1000868b  esi = pop
 794 @ 1000868b  ebp = pop
 795 @ 1000868b  esp = esp + 4
 796 @ 1000868b  ebx = pop
 797 @ 1000868b  edx = pop
 798 @ 1000868b  ecx = pop
 799 @ 1000868b  eax = pop
 800 @ 1000868c  if (flag:z) then 863 @ 0x100086f3 else 870 @ 0x1000868e  {"pool"}

 801 @ 10008619  temp0, edi = __insb(edi, dx, eflags)
 802 @ 10008619  [edi].b = temp0.b
 803 @ 1000861a  temp0, edi = __insb(edi, dx, eflags)
 804 @ 1000861a  [edi].b = temp0.b
 805 @ 1000861d  temp0, edi = __insb(edi, dx, eflags)
 806 @ 1000861d  [edi].b = temp0.b
 807 @ 1000861e  temp51.b = [edi].b
 808 @ 1000861e  [edi].b = [edi].b + bh
 809 @ 1000861e  flag:c = temp51.b + bh u< temp51.b
 810 @ 10008620  esi = __outsb(dx, [esi].b, esi, eflags)
 811 @ 10008622  ebp = ebp + 1
 812 @ 10008623  esi = __outsb(dx, [esi].b, esi, eflags)
 813 @ 10008624  edi = pop
 814 @ 10008624  esi = pop
 815 @ 10008624  ebp = pop
 816 @ 10008624  esp = esp + 4
 817 @ 10008624  ebx = pop
 818 @ 10008624  edx = pop
 819 @ 10008624  ecx = pop
 820 @ 10008624  eax = pop
 821 @ 10008625  __bound_gprv_mema32(ebp, [ebp + 0x44].q)
 822 @ 10008629  esp = esp - 1
 823 @ 1000862a  esp = esp - 1
 824 @ 1000862b  temp52.d = edi
 825 @ 1000862b  edi = edi - 1
 826 @ 1000862b  flag:z = temp52.d == 1
 827 @ 1000862b  flag:s = temp52.d - 1 s< 0
 828 @ 1000862b  flag:o = add_overflow(temp52.d, -1)
 829 @ 1000862c  if (flag:z || flag:c) then 871 @ 0x10008693 else 873 @ 0x1000862e  {"rride@@YAHXZ"}  {"neddestroypool"}

 830 @ 10008517  [eax - 0x5fffff8b].b = [eax - 0x5fffff8b].b + dh
 831 @ 1000851d  push(zx.d(0))
 832 @ 1000851f  al = al + ah
 833 @ 10008521  goto 874 @ 0x10008523

 834 @ 1000846d  if (flag:c) then 880 @ 0x1000844a else 883 @ 0x1000846f

 835 @ 10008429  __bound_gprv_mema32(esi, [gsbase + ebp + 0x67].q)
 836 @ 1000842d  if (flag:c) then 767 @ 0x10008481 else 774 @ &data_10008430[1]  {"resent"}

 837 @ 10008358  esi = __outsb(dx, [esi].b, esi, eflags)
 838 @ 10008358  goto 406 @ 0x10008359  {"tProcessId"}

 839 @ 1000848e  [eax].b = [eax].b + al
 840 @ 10008490  [ecx].b = [ecx].b + bh
 841 @ 10008490  goto 844 @ 0x10008493

 842 @ 1000841a  ebp = [edi + 0x6e].d * 0x746c6946
 843 @ 10008421  goto 885 @ 0x10008424

 844 @ 10008493  al = al + al
 845 @ 10008495  al = al
 846 @ 10008497  [eax + 0x2d].b = [eax + 0x2d].b + ah
 847 @ 10008497  goto 888 @ 0x1000849a

 848 @ 10008433  if (not(flag:c)) then 888 @ 0x1000849a else 891 @ &data_10008430[5]  {"nt"}

 849 @ 10008452  goto 378 @ 0x10008455

 850 @ 100083d1  edi = pop
 851 @ 100083d1  esi = pop
 852 @ 100083d1  ebp = pop
 853 @ 100083d1  esp = esp + 4
 854 @ 100083d1  ebx = pop
 855 @ 100083d1  edx = pop
 856 @ 100083d1  ecx = pop
 857 @ 100083d1  eax = pop
 858 @ 100083d2  temp0, edi = __insb(edi, dx, eflags)
 859 @ 100083d2  [edi].b = temp0.b
 860 @ 100083d2  goto 893 @ &data_100083c0[0x13]  {"ls"}

 861 @ 100083df  if (flag:z) then 896 @ 0x10008446 else 243 @ 0x100083e1  {"Process"}  {"ler3"}

 862 @ 1000836c  if (flag:z) then 893 @ &data_100083c0[0x13] else 899 @ 0x1000836e  {"mTimeAsFileTime"}  {"ls"}

 863 @ 100086f3  temp53.b = [esi + 0x65].b
 864 @ 100086f3  [esi + 0x65].b = [esi + 0x65].b + ch
 865 @ 100086f3  flag:z = temp53.b == neg.b(ch)
 866 @ 100086f6  temp54.d = [fsbase + esi + 0x64].d
 867 @ 100086f6  ebp = [fsbase + esi + 0x64].d * 0x6e657065
 868 @ 100086f6  flag:c = unimplemented
 869 @ 100086f6  goto 902 @ 0x100086fe  {"dent_comalloc"}

 870 @ 1000868e  if (flag:o) then 904 @ 0x100086ff else 906 @ 0x10008690  {"ent_comalloc"}

 871 @ 10008693  esi = __outsb(dx, [esi].b, esi, eflags)
 872 @ 10008694  if (not(flag:c)) then 915 @ 0x1000870e else 918 @ 0x1000869a  {"roypool"}  {"dmallinfo"}

 873 @ 1000862e  if (flag:c) then 919 @ 0x100086a2 else 921 @ 0x10008630  {"ide@@YAHXZ"}  {"neddestroysyspool"}

 874 @ 10008523  [eax + 0x6b].b = [eax + 0x6b].b + dl
 875 @ 10008526  [eax].b = [eax].b + al
 876 @ 10008528  [ecx].b = [ecx].b u>> 1
 877 @ 1000852b  [edi].b = [edi].b + dl
 878 @ 1000852d  eax = eax
 879 @ 1000852d  goto 939 @ 0x1000852f

 880 @ 1000844a  [eax].b = [eax].b + al
 881 @ 1000844c  al - [0x736d656d].b
 882 @ 1000844c  goto 849 @ 0x10008452

 883 @ 1000846f  esp = esp - 1
 884 @ 1000846f  goto 599 @ 0x10008470

 885 @ 10008424  temp55.d = [edx].d
 886 @ 10008424  flag:c = temp55.d u< eax
 887 @ 10008424  goto 749 @ 0x10008426  {"IsDebuggerPresent"}

 888 @ 1000849a  [eax].b = [eax].b + al
 889 @ 1000849c  al = [-0xfffffffff000001f].b
 890 @ 1000849c  goto 950 @ 0x100084a1

 891 @ 10008435  esi = __outsb(dx, [esi].b, esi, eflags)
 892 @ 10008436  goto 953 @ 0x10008438

 893 @ 100083d3  temp0, edi = __insb(edi, dx, eflags)
 894 @ 100083d3  [edi].b = temp0.b
 895 @ 100083d4  goto 954 @ 0x100083d6

 896 @ 10008446  temp0, edi = __insb(edi, dx, eflags)
 897 @ 10008446  [edi].b = temp0.b
 898 @ 10008446  goto 961 @ 0x10008447

 899 @ 1000836e  temp0, edi = __insd(edi, dx, eflags)
 900 @ 1000836e  [edi].d = temp0.d
 901 @ 1000836e  goto 320 @ 0x1000836f  {"TimeAsFileTime"}

 902 @ 100086fe  esi = __outsb(dx, [gsbase + esi].b, esi, eflags)
 903 @ 100086fe  goto 962 @ 0x10008701  {"t_comalloc"}

 904 @ 100086ff  esi = __outsb(dx, [gsbase + esi].b, esi, eflags)
 905 @ 100086ff  goto 962 @ 0x10008701  {"t_comalloc"}

 906 @ 10008690  esi = __outsd(dx, [esi].d, esi, eflags)
 907 @ 10008691  temp0, edi = __insb(edi, dx, eflags)
 908 @ 10008691  [edi].b = temp0.b
 909 @ 10008692  temp56.b = [esi + 0x65].b
 910 @ 10008692  [esi + 0x65].b = [esi + 0x65].b + ch
 911 @ 10008692  flag:c = temp56.b + ch u< temp56.b
 912 @ 10008692  flag:z = temp56.b == neg.b(ch)
 913 @ 10008692  flag:s = temp56.b + ch s< 0
 914 @ 10008695  if (not(flag:c)) then 915 @ 0x1000870e else 918 @ 0x1000869a  {"roypool"}  {"dmallinfo"}

 915 @ 1000870e  temp0, edi = __insd(edi, dx, eflags)
 916 @ 1000870e  [edi].d = temp0.d
 917 @ 1000870e  goto 963 @ 0x10008710  {"allinfo"}

 918 @ 1000869a  if (flag:c) then 980 @ 0x1000870b else 984 @ 0x1000869c  {"ypool"}

 919 @ 100086a2  esi = __outsb(dx, [esi].b, esi, eflags)
 920 @ 100086a3  if (not(flag:c)) then 985 @ 0x1000871d else 991 @ 0x100086a9  {"roysyspool"}  {"lloc"}

 921 @ 10008630  esp = [ebp + 0x40].d * 0x48415940
 922 @ 10008638  eax = pop
 923 @ 10008639  edx = pop
 924 @ 1000863a  temp57.b = [ebp + 0x70].b
 925 @ 1000863a  [ebp + 0x70].b = [ebp + 0x70].b + al
 926 @ 1000863a  flag:c = temp57.b + al u< temp57.b
 927 @ 1000863a  flag:z = temp57.b == neg.b(al)
 928 @ 1000863a  flag:s = temp57.b + al s< 0
 929 @ 1000863a  flag:o = add_overflow(temp57.b, al)
 930 @ 1000863e  edi = pop
 931 @ 1000863e  esi = pop
 932 @ 1000863e  ebp = pop
 933 @ 1000863e  esp = esp + 4
 934 @ 1000863e  ebx = pop
 935 @ 1000863e  edx = pop
 936 @ 1000863e  ecx = pop
 937 @ 1000863e  eax = pop
 938 @ 1000863f  if (flag:z) then 992 @ 0x100086a4 else 993 @ 0x10008641  {"hInNedmallocDLL"}  {"ddestroysyspool"}

 939 @ 1000852f  [ebx].b = [ebx].b + dh
 940 @ 10008531  eax = eax
 941 @ 10008533  [ecx - 0x73].b = [ecx - 0x73].b + cl
 942 @ 10008536  [eax].b = [eax].b + al
 943 @ 10008538  ebp = pop
 944 @ 10008539  eax = eax
 945 @ 1000853b  [eax - 0x73].b = [eax - 0x73].b + ch
 946 @ 1000853e  temp58.b = [eax].b
 947 @ 1000853e  [eax].b = [eax].b + al
 948 @ 1000853e  flag:c = temp58.b + al u< temp58.b
 949 @ 10008540  if (not(flag:c)) then 1014 @ 0x100084cf else 1016 @ 0x10008542

 950 @ 100084a1  al
 951 @ 100084a3  [eax - 0x3fffff8b].b = [eax - 0x3fffff8b].b + al
 952 @ 100084a9  goto 1019 @ 0x100084ab

 953 @ 10008438  if (flag:p) then 1021 @ 0x1000843b else 1022 @ 0x1000843a  {"_except_handler3"}  {"except_handler3"}

 954 @ 100083d6  esi = pop
 955 @ 100083d7  edx = edx + [ebp + 0x72].d
 956 @ 100083db  temp0, edi = __insd(edi, dx, eflags)
 957 @ 100083db  [edi].d = temp0.d
 958 @ 100083dc  ebp = [esi + 0x61].d * 0x72506574
 959 @ 100083e3  esi = __outsd(dx, [esi].d, esi, eflags)
 960 @ 100083e3  goto 317 @ 0x100083e4  {"cess"}

 961 @ 10008447  if (flag:c) then 735 @ 0x1000847d else 880 @ 0x1000844a

 962 @ 10008701  if (flag:z) then 1024 @ 0x10008762 else 1027 @ 0x10008703  {"comalloc"}  {"c_trim"}

 963 @ 10008710  edi = pop
 964 @ 10008710  esi = pop
 965 @ 10008710  ebp = pop
 966 @ 10008710  esp = esp + 4
 967 @ 10008710  ebx = pop
 968 @ 10008710  edx = pop
 969 @ 10008710  ecx = pop
 970 @ 10008710  eax = pop
 971 @ 10008711  temp0, edi = __insb(edi, dx, eflags)
 972 @ 10008711  [edi].b = temp0.b
 973 @ 10008712  temp0, edi = __insb(edi, dx, eflags)
 974 @ 10008712  [edi].b = temp0.b
 975 @ 10008713  temp59.d = [esi + 0x66].d
 976 @ 10008713  ebp = [esi + 0x66].d * 0x656e006f
 977 @ 10008713  flag:c = unimplemented
 978 @ 10008713  flag:o = unimplemented
 979 @ 10008713  goto 1048 @ 0x1000871a  {"dmalloc"}

 980 @ 1000870b  temp60.b = [esi + 0x65].b
 981 @ 1000870b  [esi + 0x65].b = [esi + 0x65].b + ch
 982 @ 1000870b  flag:z = temp60.b == neg.b(ch)
 983 @ 1000870b  goto 915 @ 0x1000870e  {"dmallinfo"}

 984 @ 1000869c  if (not(flag:s)) then 915 @ 0x1000870e else 1059 @ 0x1000869e  {"dmallinfo"}

 985 @ 1000871d  temp0, edi = __insb(edi, dx, eflags)
 986 @ 1000871d  [edi].b = temp0.b
 987 @ 1000871e  temp0, edi = __insb(edi, dx, eflags)
 988 @ 1000871e  [edi].b = temp0.b
 989 @ 1000871f  esi = __outsd(dx, [esi].d, esi, eflags)
 990 @ 1000871f  goto 1070 @ 0x10008720

 991 @ 100086a9  if (flag:c) then 1048 @ 0x1000871a else 1073 @ 0x100086ab  {"ysyspool"}  {"dmalloc"}

 992 @ 100086a4  if (not(flag:c)) then 985 @ 0x1000871d else 991 @ 0x100086a9  {"roysyspool"}  {"lloc"}

 993 @ 10008641  push(0x654e6e49)
 994 @ 10008646  temp0, edi = __insd(edi, dx, eflags)
 995 @ 10008646  [edi].d = temp0.d
 996 @ 10008648  edi = pop
 997 @ 10008648  esi = pop
 998 @ 10008648  ebp = pop
 999 @ 10008648  esp = esp + 4
1000 @ 10008648  ebx = pop
1001 @ 10008648  edx = pop
1002 @ 10008648  ecx = pop
1003 @ 10008648  eax = pop
1004 @ 10008649  temp0, edi = __insb(edi, dx, eflags)
1005 @ 10008649  [edi].b = temp0.b
1006 @ 1000864a  temp0, edi = __insb(edi, dx, eflags)
1007 @ 1000864a  [edi].b = temp0.b
1008 @ 1000864b  esi = __outsd(dx, [esi].d, esi, eflags)
1009 @ 1000864c  temp0, eflags = __arpl_memw_gpr16([esp + (ecx << 1) + 0x4c].w, ax)
1010 @ 1000864c  [esp + (ecx << 1) + 0x4c].w = temp0.w
1011 @ 10008650  temp61.b = [eax + 0x61].b
1012 @ 10008650  [eax + 0x61].b = [eax + 0x61].b + dl
1013 @ 10008653  if (temp61.b == neg.b(dl)) then 1074 @ 0x100086b8 else 1078 @ 0x10008655  {"hInNedmallocDLL"}  {"isablethreadcache"}

1014 @ 100084cf  al = al + dh
1015 @ 100084cf  goto 1110 @ 0x100084d1

1016 @ 10008542  temp62.b = [eax].b
1017 @ 10008542  [eax].b = [eax].b + al
1018 @ 10008544  if (temp62.b s>= neg.b(al)) then 1112 @ 0x100084d3 else 1119 @ 0x10008546

1019 @ 100084ab  [eax].b = [eax].b + dl
1020 @ 100084ad  goto 1124 @ 0x100084af

1021 @ 1000843b  if (flag:s) then 950 @ 0x100084a1 else 1128 @ 0x1000843e  {"ept_handler3"}

1022 @ 1000843a  edi = pop
1023 @ 1000843a  goto 1021 @ 0x1000843b  {"except_handler3"}

1024 @ 10008762  temp0, eflags = __arpl_memw_gpr16([edi + 0x74].w, bx)
1025 @ 10008762  [edi + 0x74].w = temp0.w
1026 @ 10008765  if (flag:c) then 1129 @ 0x100087d0 else 1135 @ 0x10008767

1027 @ 10008703  temp0, eflags = __arpl_memw_gpr16([edi + 0x6d].w, bp)
1028 @ 10008703  [edi + 0x6d].w = temp0.w
1029 @ 10008706  edi = pop
1030 @ 10008706  esi = pop
1031 @ 10008706  ebp = pop
1032 @ 10008706  esp = esp + 4
1033 @ 10008706  ebx = pop
1034 @ 10008706  edx = pop
1035 @ 10008706  ecx = pop
1036 @ 10008706  eax = pop
1037 @ 10008707  temp0, edi = __insb(edi, dx, eflags)
1038 @ 10008707  [edi].b = temp0.b
1039 @ 10008708  temp0, edi = __insb(edi, dx, eflags)
1040 @ 10008708  [edi].b = temp0.b
1041 @ 10008709  esi = __outsd(dx, [esi].d, esi, eflags)
1042 @ 1000870a  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
1043 @ 1000870a  [eax].w = temp0.w
1044 @ 1000870c  esi = __outsb(dx, [esi].b, esi, eflags)
1045 @ 1000870d  temp0, edi = __insd(edi, dx, eflags)
1046 @ 1000870d  [edi].d = temp0.d
1047 @ 1000870d  goto 963 @ 0x10008710  {"allinfo"}

1048 @ 1000871a  temp0, edi = __insd(edi, dx, eflags)
1049 @ 1000871a  [edi].d = temp0.d
1050 @ 1000871c  edi = pop
1051 @ 1000871c  esi = pop
1052 @ 1000871c  ebp = pop
1053 @ 1000871c  esp = esp + 4
1054 @ 1000871c  ebx = pop
1055 @ 1000871c  edx = pop
1056 @ 1000871c  ecx = pop
1057 @ 1000871c  eax = pop
1058 @ 1000871c  goto 985 @ 0x1000871d  {"lloc"}

1059 @ 1000869e  esi = __outsd(dx, [esi].d, esi, eflags)
1060 @ 1000869f  esi = __outsd(dx, [esi].d, esi, eflags)
1061 @ 100086a0  temp0, edi = __insb(edi, dx, eflags)
1062 @ 100086a0  [edi].b = temp0.b
1063 @ 100086a1  temp63.b = [esi + 0x65].b
1064 @ 100086a1  [esi + 0x65].b = [esi + 0x65].b + ch
1065 @ 100086a1  flag:c = temp63.b + ch u< temp63.b
1066 @ 100086a1  flag:z = temp63.b == neg.b(ch)
1067 @ 100086a1  flag:s = temp63.b + ch s< 0
1068 @ 100086a1  flag:o = add_overflow(temp63.b, ch)
1069 @ 100086a1  goto 992 @ 0x100086a4  {"ddestroysyspool"}

1070 @ 10008720  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
1071 @ 10008720  [eax].w = temp0.w
1072 @ 10008720  goto 1158 @ 0x10008722  {"nedmalloc_footprint"}

1073 @ 100086ab  if (not(flag:s)) then 1070 @ 0x10008720 else 1179 @ 0x100086ad  {"yspool"}

1074 @ 100086b8  temp64.d = [ebx + 0x61].d
1075 @ 100086b8  esi = [ebx + 0x61].d * 0x74656c62
1076 @ 100086b8  flag:c = unimplemented
1077 @ 100086b8  goto 1180 @ 0x100086bf  {"hreadcache"}

1078 @ 10008655  push(0x654e6e49)
1079 @ 1000865a  temp0, edi = __insd(edi, dx, eflags)
1080 @ 1000865a  [edi].d = temp0.d
1081 @ 1000865c  edi = pop
1082 @ 1000865c  esi = pop
1083 @ 1000865c  ebp = pop
1084 @ 1000865c  esp = esp + 4
1085 @ 1000865c  ebx = pop
1086 @ 1000865c  edx = pop
1087 @ 1000865c  ecx = pop
1088 @ 1000865c  eax = pop
1089 @ 1000865d  temp0, edi = __insb(edi, dx, eflags)
1090 @ 1000865d  [edi].b = temp0.b
1091 @ 1000865e  temp0, edi = __insb(edi, dx, eflags)
1092 @ 1000865e  [edi].b = temp0.b
1093 @ 1000865f  esi = __outsd(dx, [esi].d, esi, eflags)
1094 @ 10008660  temp0, eflags = __arpl_memw_gpr16([esp + (ecx << 1) + 0x4c].w, ax)
1095 @ 10008660  [esp + (ecx << 1) + 0x4c].w = temp0.w
1096 @ 10008664  temp65.b = [edi + 0x69].b
1097 @ 10008664  [edi + 0x69].b = [edi + 0x69].b + dl
1098 @ 10008664  flag:z = temp65.b == neg.b(dl)
1099 @ 10008667  esi = __outsb(dx, [esi].b, esi, eflags)
1100 @ 10008668  push(eax)
1101 @ 10008669  edi = pop
1102 @ 10008669  esi = pop
1103 @ 10008669  ebp = pop
1104 @ 10008669  esp = esp + 4
1105 @ 10008669  ebx = pop
1106 @ 10008669  edx = pop
1107 @ 10008669  ecx = pop
1108 @ 10008669  eax = pop
1109 @ 1000866a  if (flag:z) then 1185 @ 0x100086cf else 1191 @ 0x1000866c

1110 @ 100084d1  push(zx.d(0))
1111 @ 100084d1  goto 1112 @ 0x100084d3

1112 @ 100084d3  [eax].b = [eax].b + ah
1113 @ 100084d5  [cs.d + eax].b = [cs.d + eax].b + al
1114 @ 100084d8  [ebx].b = [ebx].b + ch
1115 @ 100084db  [eax].b = [eax].b + dl
1116 @ 100084dd  eax = [eax].d * 0
1117 @ 100084e0  al = [0x5000005e].b
1118 @ 100084e0  goto 504 @ 0x100084e5

1119 @ 10008546  [eax].b = [eax].b + al
1120 @ 10008548  ecx = [ebp - 0x72660000].d
1121 @ 1000854e  [eax].b = [eax].b + al
1122 @ 10008550  al = [esi].b
1123 @ 10008550  if (flag:d) then 1202 else 1204

1124 @ 100084af  [eax].b = [eax].b + dl
1125 @ 100084b1  [gsbase + eax].b = [gsbase + eax].b + al
1126 @ 100084b4  push(eax)
1127 @ 100084b4  goto 1206 @ 0x100084b5

1128 @ 1000843e  if (flag:o) then 1206 @ 0x100084b5 else 1212 @ 0x10008441  {"_handler3"}

1129 @ 100087d0  temp66.b = [esi + 0x65].b
1130 @ 100087d0  [esi + 0x65].b = [esi + 0x65].b + ch
1131 @ 100087d0  flag:c = temp66.b + ch u< temp66.b
1132 @ 100087d0  flag:z = temp66.b == neg.b(ch)
1133 @ 100087d0  flag:o = add_overflow(temp66.b, ch)
1134 @ 100087d0  goto 1215 @ 0x100087d3  {"dpmalloc"}

1135 @ 10008767  temp0, edi = __insd(edi, dx, eflags)
1136 @ 10008767  [edi].d = temp0.d
1137 @ 10008768  temp67.b = [esi + 0x65].b
1138 @ 10008768  [esi + 0x65].b = [esi + 0x65].b + ch
1139 @ 10008768  flag:c = temp67.b + ch u< temp67.b
1140 @ 10008768  flag:z = temp67.b == neg.b(ch)
1141 @ 10008768  flag:o = add_overflow(temp67.b, ch)
1142 @ 1000876b  temp0, edi = __insd(edi, dx, eflags)
1143 @ 1000876b  [edi].d = temp0.d
1144 @ 1000876d  edi = pop
1145 @ 1000876d  esi = pop
1146 @ 1000876d  ebp = pop
1147 @ 1000876d  esp = esp + 4
1148 @ 1000876d  ebx = pop
1149 @ 1000876d  edx = pop
1150 @ 1000876d  ecx = pop
1151 @ 1000876d  eax = pop
1152 @ 1000876e  temp0, edi = __insb(edi, dx, eflags)
1153 @ 1000876e  [edi].b = temp0.b
1154 @ 1000876f  temp0, edi = __insb(edi, dx, eflags)
1155 @ 1000876f  [edi].b = temp0.b
1156 @ 10008770  esi = __outsd(dx, [esi].d, esi, eflags)
1157 @ 10008771  if (flag:o) then 1216 @ 0x100087e7 else 1218 @ 0x10008773  {"footprint"}

1158 @ 10008722  esi = __outsb(dx, [esi].b, esi, eflags)
1159 @ 10008723  temp0, edi = __insd(edi, dx, eflags)
1160 @ 10008723  [edi].d = temp0.d
1161 @ 10008726  edi = pop
1162 @ 10008726  esi = pop
1163 @ 10008726  ebp = pop
1164 @ 10008726  esp = esp + 4
1165 @ 10008726  ebx = pop
1166 @ 10008726  edx = pop
1167 @ 10008726  ecx = pop
1168 @ 10008726  eax = pop
1169 @ 10008727  temp0, edi = __insb(edi, dx, eflags)
1170 @ 10008727  [edi].b = temp0.b
1171 @ 10008728  temp0, edi = __insb(edi, dx, eflags)
1172 @ 10008728  [edi].b = temp0.b
1173 @ 10008729  esi = __outsd(dx, [esi].d, esi, eflags)
1174 @ 1000872a  temp0, eflags = __arpl_memw_gpr16([edi + 0x66].w, bx)
1175 @ 1000872a  [edi + 0x66].w = temp0.w
1176 @ 1000872d  esi = __outsd(dx, [esi].d, esi, eflags)
1177 @ 1000872e  esi = __outsd(dx, [esi].d, esi, eflags)
1178 @ 1000872f  if (flag:z) then 1240 @ 0x100087a1 else 1242 @ 0x10008731  {"rint"}  {"nt_calloc"}

1179 @ 100086ad  if (not(flag:s)) then 1158 @ 0x10008722 else 1243 @ 0x100086af  {"pool"}  {"nedmalloc_footprint"}

1180 @ 100086bf  push(0x64616572)
1181 @ 100086c4  temp0, eflags = __arpl_memw_gpr16([ecx + 0x63].w, sp)
1182 @ 100086c4  [ecx + 0x63].w = temp0.w
1183 @ 100086c7  push(0x656e0065)
1184 @ 100086cc  if (flag:c) then 1244 @ 0x10008735 else 1252 @ 0x100086d0

1185 @ 100086cf  temp68.b = [gsbase + esi + 0x65].b
1186 @ 100086cf  [gsbase + esi + 0x65].b = [gsbase + esi + 0x65].b + ch
1187 @ 100086cf  flag:c = temp68.b + ch u< temp68.b
1188 @ 100086cf  flag:z = temp68.b == neg.b(ch)
1189 @ 100086cf  flag:o = add_overflow(temp68.b, ch)
1190 @ 100086cf  goto 1258 @ 0x100086d4  {"dgetvalue"}

1191 @ 1000866c  push(0x6e007265)
1192 @ 10008671  __bound_gprv_mema32(ebp, [fsbase + ebx + (ebp << 1) + 0x73].q)
1193 @ 10008677  temp69.d = [edx + 0x65].d
1194 @ 10008677  edi = [edx + 0x65].d * 0x64656e00
1195 @ 10008677  flag:c = unimplemented
1196 @ 10008677  flag:o = unimplemented
1197 @ 1000867e  temp0, eflags = __arpl_memw_gpr16([ecx + 0x6c].w, sp)
1198 @ 1000867e  [ecx + 0x6c].w = temp0.w
1199 @ 10008681  temp0, edi = __insb(edi, dx, eflags)
1200 @ 10008681  [edi].b = temp0.b
1201 @ 10008681  goto 786 @ 0x10008682

1202 @ 10008550  esi = esi - 1
1203 @ 10008550  goto 1259 @ 0x10008551

1204 @ 10008550  esi = esi + 1
1205 @ 10008550  goto 1259 @ 0x10008551

1206 @ 100084b5  temp0, edi = __insb(edi, dx, eflags)
1207 @ 100084b5  [edi].b = temp0.b
1208 @ 100084b6  temp70.b = [eax].b
1209 @ 100084b6  [eax].b = [eax].b + al
1210 @ 100084b6  flag:o = add_overflow(temp70.b, al)
1211 @ 100084b8  if (flag:o) then 939 @ 0x1000852f else 1284 @ 0x100084ba

1212 @ 10008441  edi = pop
1213 @ 10008442  push(0x6c646e61)
1214 @ 10008442  goto 961 @ 0x10008447

1215 @ 100087d3  if (flag:o) then 1288 @ 0x10008843 else 1290 @ 0x100087d6  {"alloc"}  {"nedpsetvalue"}

1216 @ 100087e7  esi = __outsw(dx, [esi].w, esi, eflags)
1217 @ 100087e7  goto 1307 @ 0x100087e9  {"otprint"}

1218 @ 10008773  temp71.b = [esi + 0x65].b
1219 @ 10008773  [esi + 0x65].b = [esi + 0x65].b + ch
1220 @ 10008773  flag:z = temp71.b == neg.b(ch)
1221 @ 10008776  temp0, edi = __insd(edi, dx, eflags)
1222 @ 10008776  [edi].d = temp0.d
1223 @ 10008778  temp0, edi = __insd(edi, dx, eflags)
1224 @ 10008778  [edi].d = temp0.d
1225 @ 1000877a  edi = pop
1226 @ 1000877a  esi = pop
1227 @ 1000877a  ebp = pop
1228 @ 1000877a  esp = esp + 4
1229 @ 1000877a  ebx = pop
1230 @ 1000877a  edx = pop
1231 @ 1000877a  ecx = pop
1232 @ 1000877a  eax = pop
1233 @ 1000877b  temp0, edi = __insb(edi, dx, eflags)
1234 @ 1000877b  [edi].b = temp0.b
1235 @ 1000877c  temp72.d = [edi + 0x6e].d
1236 @ 1000877c  esp = [edi + 0x6e].d * 0x64656e00
1237 @ 1000877c  flag:c = unimplemented
1238 @ 1000877c  flag:o = unimplemented
1239 @ 10008783  if (flag:o) then 1309 @ 0x100087e8 else 1311 @ 0x10008785  {"alloc"}  {"ootprint"}

1240 @ 100087a1  esi = __outsb(dx, [esi].b, esi, eflags)
1241 @ 100087a1  goto 1328 @ 0x100087a2  {"t_calloc"}

1242 @ 10008731  if (flag:c) then 1329 @ 0x1000879c else 1330 @ 0x10008733  {"pendent_calloc"}

1243 @ 100086af  if (flag:o) then 1070 @ 0x10008720 else 1332 @ 0x100086b1

1244 @ 10008735  temp73.b = [esi + 0x65].b
1245 @ 10008735  [esi + 0x65].b = [esi + 0x65].b + ch
1246 @ 10008735  flag:c = temp73.b + ch u< temp73.b
1247 @ 10008735  flag:z = temp73.b == neg.b(ch)
1248 @ 10008735  flag:o = add_overflow(temp73.b, ch)
1249 @ 10008738  temp0, edi = __insd(edi, dx, eflags)
1250 @ 10008738  [edi].d = temp0.d
1251 @ 10008738  goto 1340 @ 0x1000873a  {"alloc_internals"}

1252 @ 100086d0  temp74.b = [gsbase + esi + 0x65].b
1253 @ 100086d0  [gsbase + esi + 0x65].b = [gsbase + esi + 0x65].b + ch
1254 @ 100086d0  flag:c = temp74.b + ch u< temp74.b
1255 @ 100086d0  flag:z = temp74.b == neg.b(ch)
1256 @ 100086d0  flag:o = add_overflow(temp74.b, ch)
1257 @ 100086d0  goto 1258 @ 0x100086d4  {"dgetvalue"}

1258 @ 100086d4  if (flag:z) then 1357 @ 0x1000874f else 1365 @ 0x100086d9  {"alue"}  {"lloc_stats"}

1259 @ 10008551  eax = eax
1260 @ 10008553  dl = dl + al
1261 @ 10008555  eax = eax
1262 @ 10008557  dl = dl + cl
1263 @ 10008559  eax = eax
1264 @ 1000855b  dh = dh + dl
1265 @ 1000855d  eax = eax
1266 @ 1000855f  ah = ah + ch
1267 @ 10008561  eax = eax
1268 @ 10008563  [esi + (ecx << 2)].b = [esi + (ecx << 2)].b + al
1269 @ 10008566  temp75.b = [eax].b
1270 @ 10008566  [eax].b = [eax].b + al
1271 @ 10008566  flag:c = temp75.b + al u< temp75.b
1272 @ 10008568  [esi - 0x71e60000].b = adc.b([esi - 0x71e60000].b, cl, flag:c)
1273 @ 1000856e  [eax].b = [eax].b + al
1274 @ 10008570  es = [cs.d + eax].w
1275 @ 10008573  [edx - 0x72].b = [edx - 0x72].b + al
1276 @ 10008576  [eax].b = [eax].b + al
1277 @ 10008578  push(edx)
1278 @ 10008579  es = [eax].w
1279 @ 1000857b  [ecx - 0x72].b = [ecx - 0x72].b + ah
1280 @ 1000857e  [eax].b = [eax].b + al
1281 @ 10008580  temp0, edi = __insb(edi, dx, eflags)
1282 @ 10008580  [edi].b = temp0.b
1283 @ 10008580  goto 650 @ 0x10008581

1284 @ 100084ba  [eax].b = [eax].b + al
1285 @ 100084bc  [eax + eax].b = [eax + eax].b & bh
1286 @ 100084bf  [eax].b = [eax].b + dh
1287 @ 100084c1  goto 1376 @ 0x100084c3

1288 @ 10008843  esi = __outsb(dx, [esi].b, esi, eflags)
1289 @ 10008844  if (flag:o) then 1378 else 1379 @ 0x10008848  {"etvalue"}

1290 @ 100087d6  edi = pop
1291 @ 100087d6  esi = pop
1292 @ 100087d6  ebp = pop
1293 @ 100087d6  esp = esp + 4
1294 @ 100087d6  ebx = pop
1295 @ 100087d6  edx = pop
1296 @ 100087d6  ecx = pop
1297 @ 100087d6  eax = pop
1298 @ 100087d7  temp0, edi = __insb(edi, dx, eflags)
1299 @ 100087d7  [edi].b = temp0.b
1300 @ 100087d8  temp0, edi = __insb(edi, dx, eflags)
1301 @ 100087d8  [edi].b = temp0.b
1302 @ 100087d9  esi = __outsd(dx, [esi].d, esi, eflags)
1303 @ 100087da  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
1304 @ 100087da  [eax].w = temp0.w
1305 @ 100087dc  esi = __outsb(dx, [esi].b, esi, eflags)
1306 @ 100087dd  if (flag:o) then 1380 @ 0x1000884e else 1385 @ 0x100087e1  {"alloc_footprint"}

1307 @ 100087e9  esi = __outsd(dx, [esi].d, esi, eflags)
1308 @ 100087ea  if (flag:z) then 1401 @ 0x1000885c else 1402 @ 0x100087ec  {"rint"}  {"edsetvalue"}

1309 @ 100087e8  esi = __outsd(dx, [esi].d, esi, eflags)
1310 @ 100087e8  goto 1307 @ 0x100087e9  {"otprint"}

1311 @ 10008785  edi = pop
1312 @ 10008785  esi = pop
1313 @ 10008785  ebp = pop
1314 @ 10008785  esp = esp + 4
1315 @ 10008785  ebx = pop
1316 @ 10008785  edx = pop
1317 @ 10008785  ecx = pop
1318 @ 10008785  eax = pop
1319 @ 10008786  temp0, edi = __insb(edi, dx, eflags)
1320 @ 10008786  [edi].b = temp0.b
1321 @ 10008787  temp0, edi = __insb(edi, dx, eflags)
1322 @ 10008787  [edi].b = temp0.b
1323 @ 10008788  esi = __outsd(dx, [esi].d, esi, eflags)
1324 @ 10008789  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
1325 @ 10008789  [eax].w = temp0.w
1326 @ 1000878b  esi = __outsb(dx, [esi].b, esi, eflags)
1327 @ 1000878c  if (flag:o) then 1403 @ 0x100087f6 else 1412 @ 0x10008790  {"alloc_stats"}

1328 @ 100087a2  if (flag:z) then 1413 @ 0x10008803 else 1414 @ 0x100087a4  {"calloc"}  {"edpmalloc_trim"}

1329 @ 1000879c  if (flag:o) then 1413 @ 0x10008803 else 1420 @ 0x1000879e  {"ndent_calloc"}  {"edpmalloc_trim"}

1330 @ 10008733  esi = __outsb(dx, [esi].b, esi, eflags)
1331 @ 10008734  goto 1423 @ 0x10008736  {"nedmalloc_internals"}

1332 @ 100086b1  esi = __outsd(dx, [esi].d, esi, eflags)
1333 @ 100086b2  temp0, edi = __insb(edi, dx, eflags)
1334 @ 100086b2  [edi].b = temp0.b
1335 @ 100086b3  [esi + 0x65].b = [esi + 0x65].b + ch
1336 @ 100086b6  temp76.d = [fsbase + ebx + 0x61].d
1337 @ 100086b6  esi = [fsbase + ebx + 0x61].d * 0x74656c62
1338 @ 100086b6  flag:c = unimplemented
1339 @ 100086b6  goto 1180 @ 0x100086bf  {"hreadcache"}

1340 @ 1000873a  edi = pop
1341 @ 1000873a  esi = pop
1342 @ 1000873a  ebp = pop
1343 @ 1000873a  esp = esp + 4
1344 @ 1000873a  ebx = pop
1345 @ 1000873a  edx = pop
1346 @ 1000873a  ecx = pop
1347 @ 1000873a  eax = pop
1348 @ 1000873b  temp0, edi = __insb(edi, dx, eflags)
1349 @ 1000873b  [edi].b = temp0.b
1350 @ 1000873c  temp0, edi = __insb(edi, dx, eflags)
1351 @ 1000873c  [edi].b = temp0.b
1352 @ 1000873d  esi = __outsd(dx, [esi].d, esi, eflags)
1353 @ 1000873e  temp0, eflags = __arpl_memw_gpr16([edi + 0x69].w, bx)
1354 @ 1000873e  [edi + 0x69].w = temp0.w
1355 @ 10008741  esi = __outsb(dx, [esi].b, esi, eflags)
1356 @ 10008741  goto 1427 @ 0x10008742  {"ternals"}

1357 @ 1000874f  temp0, edi = __insb(edi, dx, eflags)
1358 @ 1000874f  [edi].b = temp0.b
1359 @ 10008750  temp0, edi = __insb(edi, dx, eflags)
1360 @ 10008750  [edi].b = temp0.b
1361 @ 10008751  esi = __outsd(dx, [esi].d, esi, eflags)
1362 @ 10008752  temp0, eflags = __arpl_memw_gpr16([edi + 0x73].w, bx)
1363 @ 10008752  [edi + 0x73].w = temp0.w
1364 @ 10008755  if (flag:z) then 1428 @ 0x100087b8 else 1430 @ 0x10008757  {"nt_comalloc"}

1365 @ 100086d9  edi = pop
1366 @ 100086d9  esi = pop
1367 @ 100086d9  ebp = pop
1368 @ 100086d9  esp = esp + 4
1369 @ 100086d9  ebx = pop
1370 @ 100086d9  edx = pop
1371 @ 100086d9  ecx = pop
1372 @ 100086d9  eax = pop
1373 @ 100086da  temp0, edi = __insb(edi, dx, eflags)
1374 @ 100086da  [edi].b = temp0.b
1375 @ 100086db  if (not(flag:z)) then 1427 @ 0x10008742 else 1431 @ 0x100086dd  {"ternals"}

1376 @ 100084c3  [eax].b = [eax].b + dl
1377 @ 100084c5  goto 1439 @ 0x100084c7

1378 @ 10008844  jump(&data_100088bb)

1379 @ 10008848  if (flag:z) then 1443 else 1444 @ 0x1000884b  {"alue"}

1380 @ 1000884e  temp77.b = [gsbase + esi + 0x65].b
1381 @ 1000884e  [gsbase + esi + 0x65].b = [gsbase + esi + 0x65].b + ch
1382 @ 1000884e  flag:c = temp77.b + ch u< temp77.b
1383 @ 1000884e  flag:z = temp77.b == neg.b(ch)
1384 @ 1000884e  goto 1455 @ 0x10008852  {"drealloc"}

1385 @ 100087e1  edi = pop
1386 @ 100087e1  esi = pop
1387 @ 100087e1  ebp = pop
1388 @ 100087e1  esp = esp + 4
1389 @ 100087e1  ebx = pop
1390 @ 100087e1  edx = pop
1391 @ 100087e1  ecx = pop
1392 @ 100087e1  eax = pop
1393 @ 100087e2  temp0, edi = __insb(edi, dx, eflags)
1394 @ 100087e2  [edi].b = temp0.b
1395 @ 100087e3  temp0, edi = __insb(edi, dx, eflags)
1396 @ 100087e3  [edi].b = temp0.b
1397 @ 100087e4  esi = __outsd(dx, [esi].d, esi, eflags)
1398 @ 100087e5  temp0, eflags = __arpl_memw_gpr16([edi + 0x66].w, bx)
1399 @ 100087e5  [edi + 0x66].w = temp0.w
1400 @ 100087e5  goto 1309 @ 0x100087e8  {"ootprint"}

1401 @ 1000885c  if (not(flag:c)) then 1456 else 1457 @ 0x10008860  {"tvalue"}

1402 @ 100087ec  if (flag:c) then 1458 @ 0x10008857 else 1465 @ 0x100087ee

1403 @ 100087f6  edi = pop
1404 @ 100087f6  esi = pop
1405 @ 100087f6  ebp = pop
1406 @ 100087f6  esp = esp + 4
1407 @ 100087f6  ebx = pop
1408 @ 100087f6  edx = pop
1409 @ 100087f6  ecx = pop
1410 @ 100087f6  eax = pop
1411 @ 100087f6  goto 1467 @ 0x100087f7  {"lloc_stats"}

1412 @ 10008790  if (flag:c) then 1467 @ 0x100087f7 else 1475 @ 0x10008792  {"lloc_stats"}

1413 @ 10008803  if (flag:o) then 1481 @ 0x10008874 else 1484 @ 0x10008807  {"alloc_trim"}  {"cache"}

1414 @ 100087a4  temp0, eflags = __arpl_memw_gpr16([ecx + 0x6c].w, sp)
1415 @ 100087a4  [ecx + 0x6c].w = temp0.w
1416 @ 100087a7  temp0, edi = __insb(edi, dx, eflags)
1417 @ 100087a7  [edi].b = temp0.b
1418 @ 100087a8  esi = __outsd(dx, [esi].d, esi, eflags)
1419 @ 100087a8  goto 1500 @ 0x100087a9

1420 @ 1000879e  esi = __outsb(dx, [esi].b, esi, eflags)
1421 @ 1000879f  esi = __outsb(dx, [gsbase + esi].b, esi, eflags)
1422 @ 1000879f  goto 1328 @ 0x100087a2  {"t_calloc"}

1423 @ 10008736  esi = __outsb(dx, [esi].b, esi, eflags)
1424 @ 10008737  temp0, edi = __insd(edi, dx, eflags)
1425 @ 10008737  [edi].d = temp0.d
1426 @ 10008737  goto 1340 @ 0x1000873a  {"alloc_internals"}

1427 @ 10008742  if (flag:z) then 1500 @ 0x100087a9 else 1504 @ 0x10008744  {"rnals"}

1428 @ 100087b8  esi = __outsb(dx, [esi].b, esi, eflags)
1429 @ 100087b8  goto 1505 @ 0x100087b9  {"t_comalloc"}

1430 @ 10008757  if (flag:z) then 1506 @ 0x100087cc else 1511 @ 0x10008759  {"info"}

1431 @ 100086dd  temp78.b = [esi + 0x65].b
1432 @ 100086dd  [esi + 0x65].b = [esi + 0x65].b + ch
1433 @ 100086dd  flag:z = temp78.b == neg.b(ch)
1434 @ 100086e0  temp79.d = [fsbase + esi + 0x64].d
1435 @ 100086e0  ebp = [fsbase + esi + 0x64].d * 0x6e657065
1436 @ 100086e0  flag:o = unimplemented
1437 @ 100086e8  esi = __outsb(dx, [gsbase + esi].b, esi, eflags)
1438 @ 100086eb  if (flag:z) then 1530 @ 0x1000874c else 1533 @ 0x100086ed  {"calloc"}  {"dmalloc_stats"}

1439 @ 100084c7  [eax].b = [eax].b + ah
1440 @ 100084c9  eax = [eax].d * 0
1441 @ 100084cc  al = [-0xfffffffff0000075].b
1442 @ 100084cc  goto 1110 @ 0x100084d1

1443 @ 10008848  jump(&data_100088c1)

1444 @ 1000884b  edi = pop
1445 @ 1000884b  esi = pop
1446 @ 1000884b  ebp = pop
1447 @ 1000884b  esp = esp + 4
1448 @ 1000884b  ebx = pop
1449 @ 1000884b  edx = pop
1450 @ 1000884b  ecx = pop
1451 @ 1000884b  eax = pop
1452 @ 1000884c  temp0, edi = __insb(edi, dx, eflags)
1453 @ 1000884c  [edi].b = temp0.b
1454 @ 1000884d  if (not(flag:z)) then 1545 else 1546 @ 0x1000884f

1455 @ 10008852  if (flag:c) then 1551 else 1552 @ 0x10008855  {"alloc"}

1456 @ 1000885c  jump(&data_100088c5)

1457 @ 10008860  if (flag:z) then 1563 else 1564 @ 0x10008862  {"alue"}

1458 @ 10008857  temp0, edi = __insb(edi, dx, eflags)
1459 @ 10008857  [edi].b = temp0.b
1460 @ 10008858  esi = __outsd(dx, [esi].d, esi, eflags)
1461 @ 10008859  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
1462 @ 10008859  [eax].w = temp0.w
1463 @ 1000885b  esi = __outsb(dx, [esi].b, esi, eflags)
1464 @ 1000885b  goto 1401 @ 0x1000885c  {"edsetvalue"}

1465 @ 100087ee  esi = __outsb(dx, [esi].b, esi, eflags)
1466 @ 100087ef  goto 1573 @ 0x100087f1  {"nedpmalloc_stats"}

1467 @ 100087f7  temp0, edi = __insb(edi, dx, eflags)
1468 @ 100087f7  [edi].b = temp0.b
1469 @ 100087f8  temp0, edi = __insb(edi, dx, eflags)
1470 @ 100087f8  [edi].b = temp0.b
1471 @ 100087f9  esi = __outsd(dx, [esi].d, esi, eflags)
1472 @ 100087fa  temp0, eflags = __arpl_memw_gpr16([edi + 0x73].w, bx)
1473 @ 100087fa  [edi + 0x73].w = temp0.w
1474 @ 100087fd  if (flag:z) then 1457 @ 0x10008860 else 1575 @ 0x100087ff  {"tvalue"}

1475 @ 10008792  temp80.b = [gsbase + esi + 0x65].b
1476 @ 10008792  [gsbase + esi + 0x65].b = [gsbase + esi + 0x65].b + ch
1477 @ 10008792  flag:c = temp80.b + ch u< temp80.b
1478 @ 10008792  flag:z = temp80.b == neg.b(ch)
1479 @ 10008792  flag:o = add_overflow(temp80.b, ch)
1480 @ 10008796  if (flag:o) then 1576 @ 0x10008802 else 1578 @ 0x10008799  {"ndependent_calloc"}  {"nedpmalloc_trim"}

1481 @ 10008874  temp0, eflags = __arpl_memw_gpr16([ecx + 0x63].w, sp)
1482 @ 10008874  [ecx + 0x63].w = temp0.w
1483 @ 10008874  goto 1580 @ 0x10008877

1484 @ 10008807  edi = pop
1485 @ 10008807  esi = pop
1486 @ 10008807  ebp = pop
1487 @ 10008807  esp = esp + 4
1488 @ 10008807  ebx = pop
1489 @ 10008807  edx = pop
1490 @ 10008807  ecx = pop
1491 @ 10008807  eax = pop
1492 @ 10008808  temp0, edi = __insb(edi, dx, eflags)
1493 @ 10008808  [edi].b = temp0.b
1494 @ 10008809  temp0, edi = __insb(edi, dx, eflags)
1495 @ 10008809  [edi].b = temp0.b
1496 @ 1000880a  esi = __outsd(dx, [esi].d, esi, eflags)
1497 @ 1000880b  temp0, eflags = __arpl_memw_gpr16([edi + 0x74].w, bx)
1498 @ 1000880b  [edi + 0x74].w = temp0.w
1499 @ 1000880e  if (flag:c) then 1655 else 1656 @ 0x10008810

1500 @ 100087a9  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
1501 @ 100087a9  [eax].w = temp0.w
1502 @ 100087ab  esi = __outsb(dx, [esi].b, esi, eflags)
1503 @ 100087ac  if (flag:o) then 1662 @ 0x10008819 else 1665 @ 0x100087b0  {"ndependent_comalloc"}  {"lopt"}

1504 @ 10008744  if (flag:c) then 1667 @ 0x100087b4 else 1669 @ 0x10008746  {"endent_comalloc"}

1505 @ 100087b9  if (flag:z) then 1680 @ 0x1000881a else 1682 @ 0x100087bb  {"comalloc"}

1506 @ 100087cc  temp81.d = [esi + 0x66].d
1507 @ 100087cc  ebp = [esi + 0x66].d * 0x656e006f
1508 @ 100087cc  flag:c = unimplemented
1509 @ 100087cc  flag:o = unimplemented
1510 @ 100087cc  goto 1215 @ 0x100087d3  {"dpmalloc"}

1511 @ 10008759  temp82.b = [esi + 0x65].b
1512 @ 10008759  [esi + 0x65].b = [esi + 0x65].b + ch
1513 @ 10008759  flag:c = temp82.b + ch u< temp82.b
1514 @ 1000875c  temp0, edi = __insd(edi, dx, eflags)
1515 @ 1000875c  [edi].d = temp0.d
1516 @ 1000875e  edi = pop
1517 @ 1000875e  esi = pop
1518 @ 1000875e  ebp = pop
1519 @ 1000875e  esp = esp + 4
1520 @ 1000875e  ebx = pop
1521 @ 1000875e  edx = pop
1522 @ 1000875e  ecx = pop
1523 @ 1000875e  eax = pop
1524 @ 1000875f  temp0, edi = __insb(edi, dx, eflags)
1525 @ 1000875f  [edi].b = temp0.b
1526 @ 10008760  temp0, edi = __insb(edi, dx, eflags)
1527 @ 10008760  [edi].b = temp0.b
1528 @ 10008761  esi = __outsd(dx, [esi].d, esi, eflags)
1529 @ 10008761  goto 1024 @ 0x10008762  {"c_trim"}

1530 @ 1000874c  temp0, edi = __insd(edi, dx, eflags)
1531 @ 1000874c  [edi].d = temp0.d
1532 @ 1000874c  goto 1701 @ 0x1000874e  {"alloc_stats"}

1533 @ 100086ed  temp0, eflags = __arpl_memw_gpr16([ecx + 0x6c].w, sp)
1534 @ 100086ed  [ecx + 0x6c].w = temp0.w
1535 @ 100086f0  temp0, edi = __insb(edi, dx, eflags)
1536 @ 100086f0  [edi].b = temp0.b
1537 @ 100086f1  esi = __outsd(dx, [esi].d, esi, eflags)
1538 @ 100086f2  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
1539 @ 100086f2  [eax].w = temp0.w
1540 @ 100086f4  esi = __outsb(dx, [esi].b, esi, eflags)
1541 @ 100086f5  temp83.d = [fsbase + esi + 0x64].d
1542 @ 100086f5  ebp = [fsbase + esi + 0x64].d * 0x6e657065
1543 @ 100086f5  flag:c = unimplemented
1544 @ 100086f5  goto 902 @ 0x100086fe  {"dent_comalloc"}

1545 @ 1000884d  jump(&data_100088b4)

1546 @ 1000884f  temp84.b = [esi + 0x65].b
1547 @ 1000884f  [esi + 0x65].b = [esi + 0x65].b + ch
1548 @ 1000884f  flag:c = temp84.b + ch u< temp84.b
1549 @ 1000884f  flag:z = temp84.b == neg.b(ch)
1550 @ 1000884f  goto 1455 @ 0x10008852  {"drealloc"}

1551 @ 10008852  jump(&data_100088ba)

1552 @ 10008855  edi = pop
1553 @ 10008855  esi = pop
1554 @ 10008855  ebp = pop
1555 @ 10008855  esp = esp + 4
1556 @ 10008855  ebx = pop
1557 @ 10008855  edx = pop
1558 @ 10008855  ecx = pop
1559 @ 10008855  eax = pop
1560 @ 10008856  temp0, edi = __insb(edi, dx, eflags)
1561 @ 10008856  [edi].b = temp0.b
1562 @ 10008856  goto 1458 @ 0x10008857

1563 @ 10008860  jump(&data_100088d8)

1564 @ 10008862  edi = pop
1565 @ 10008862  esi = pop
1566 @ 10008862  ebp = pop
1567 @ 10008862  esp = esp + 4
1568 @ 10008862  ebx = pop
1569 @ 10008862  edx = pop
1570 @ 10008862  ecx = pop
1571 @ 10008862  eax = pop
1572 @ 10008862  goto 1710 @ 0x10008863

1573 @ 100087f1  esi = __outsb(dx, [esi].b, esi, eflags)
1574 @ 100087f2  if (flag:o) then 1710 @ 0x10008863 else 1403 @ 0x100087f6  {"alloc_stats"}

1575 @ 100087ff  if (flag:z) then 1481 @ 0x10008874 else 1713 @ 0x10008801  {"cache"}

1576 @ 10008802  esi = __outsb(dx, [esi].b, esi, eflags)
1577 @ 10008802  goto 1413 @ 0x10008803  {"edpmalloc_trim"}

1578 @ 10008799  esi = __outsb(dx, [esi].b, esi, eflags)
1579 @ 1000879a  if (flag:o) then 1413 @ 0x10008803 else 1420 @ 0x1000879e  {"ndent_calloc"}  {"edpmalloc_trim"}

1580 @ 10008877  push(0x65)
1581 @ 1000887c  [eax].b = [eax].b + al
1582 @ 1000887e  [eax].b = [eax].b + al
1583 @ 10008880  [eax].b = [eax].b + al
1584 @ 10008882  [eax].b = [eax].b + al
1585 @ 10008884  [eax].b = [eax].b + al
1586 @ 10008886  [eax].b = [eax].b + al
1587 @ 10008888  [eax].b = [eax].b + al
1588 @ 1000888a  [eax].b = [eax].b + al
1589 @ 1000888c  [eax].b = [eax].b + al
1590 @ 1000888e  [eax].b = [eax].b + al
1591 @ 10008890  [eax].b = [eax].b + al
1592 @ 10008892  [eax].b = [eax].b + al
1593 @ 10008894  [eax].b = [eax].b + al
1594 @ 10008896  [eax].b = [eax].b + al
1595 @ 10008898  [eax].b = [eax].b + al
1596 @ 1000889a  [eax].b = [eax].b + al
1597 @ 1000889c  [eax].b = [eax].b + al
1598 @ 1000889e  [eax].b = [eax].b + al
1599 @ 100088a0  [eax].b = [eax].b + al
1600 @ 100088a2  [eax].b = [eax].b + al
1601 @ 100088a4  [eax].b = [eax].b + al
1602 @ 100088a6  [eax].b = [eax].b + al
1603 @ 100088a8  [eax].b = [eax].b + al
1604 @ 100088aa  [eax].b = [eax].b + al
1605 @ 100088ac  [eax].b = [eax].b + al
1606 @ 100088ae  [eax].b = [eax].b + al
1607 @ 100088b0  [eax].b = [eax].b + al
1608 @ 100088b2  [eax].b = [eax].b + al
1609 @ 100088b4  [eax].b = [eax].b + al
1610 @ 100088b6  [eax].b = [eax].b + al
1611 @ 100088b8  [eax].b = [eax].b + al
1612 @ 100088ba  [eax].b = [eax].b + al
1613 @ 100088bc  [eax].b = [eax].b + al
1614 @ 100088be  [eax].b = [eax].b + al
1615 @ 100088c0  [eax].b = [eax].b + al
1616 @ 100088c2  [eax].b = [eax].b + al
1617 @ 100088c4  [eax].b = [eax].b + al
1618 @ 100088c6  [eax].b = [eax].b + al
1619 @ 100088c8  [eax].b = [eax].b + al
1620 @ 100088ca  [eax].b = [eax].b + al
1621 @ 100088cc  [eax].b = [eax].b + al
1622 @ 100088ce  [eax].b = [eax].b + al
1623 @ 100088d0  [eax].b = [eax].b + al
1624 @ 100088d2  [eax].b = [eax].b + al
1625 @ 100088d4  [eax].b = [eax].b + al
1626 @ 100088d6  [eax].b = [eax].b + al
1627 @ 100088d8  [eax].b = [eax].b + al
1628 @ 100088da  [eax].b = [eax].b + al
1629 @ 100088dc  [eax].b = [eax].b + al
1630 @ 100088de  [eax].b = [eax].b + al
1631 @ 100088e0  [eax].b = [eax].b + al
1632 @ 100088e2  [eax].b = [eax].b + al
1633 @ 100088e4  [eax].b = [eax].b + al
1634 @ 100088e6  [eax].b = [eax].b + al
1635 @ 100088e8  [eax].b = [eax].b + al
1636 @ 100088ea  [eax].b = [eax].b + al
1637 @ 100088ec  [eax].b = [eax].b + al
1638 @ 100088ee  [eax].b = [eax].b + al
1639 @ 100088f0  [eax].b = [eax].b + al
1640 @ 100088f2  [eax].b = [eax].b + al
1641 @ 100088f4  [eax].b = [eax].b + al
1642 @ 100088f6  [eax].b = [eax].b + al
1643 @ 100088f8  [eax].b = [eax].b + al
1644 @ 100088fa  [eax].b = [eax].b + al
1645 @ 100088fc  [eax].b = [eax].b + al
1646 @ 100088fe  [eax].b = [eax].b + al
1647 @ 10008900  [eax].b = [eax].b + al
1648 @ 10008902  [eax].b = [eax].b + al
1649 @ 10008904  [eax].b = [eax].b + al
1650 @ 10008906  [eax].b = [eax].b + al
1651 @ 10008908  esi = esi - 1
1652 @ 10008909  __out_immb_al(0x40, al, eflags)
1653 @ 1000890b  ebx = 0x44bf19b1
1654 @ 10008910  undefined

1655 @ 1000880e  jump(&data_10008879)

1656 @ 10008810  temp0, edi = __insd(edi, dx, eflags)
1657 @ 10008810  [edi].d = temp0.d
1658 @ 10008811  temp85.b = [esi + 0x65].b
1659 @ 10008811  [esi + 0x65].b = [esi + 0x65].b + ch
1660 @ 10008811  flag:o = add_overflow(temp85.b, ch)
1661 @ 10008814  if (flag:o) then 1718 else 1719 @ 0x10008817  {"allopt"}

1662 @ 10008819  temp0, edi = __insb(edi, dx, eflags)
1663 @ 10008819  [edi].b = temp0.b
1664 @ 10008819  goto 1680 @ 0x1000881a

1665 @ 100087b0  esi = __outsb(dx, [esi].b, esi, eflags)
1666 @ 100087b1  if (flag:o) then 1680 @ 0x1000881a else 1730 @ 0x100087b5  {"ndent_comalloc"}

1667 @ 100087b4  esi = __outsb(dx, [gsbase + esi].b, esi, eflags)
1668 @ 100087b4  goto 1732 @ 0x100087b6  {"dent_comalloc"}

1669 @ 10008746  edi = pop
1670 @ 10008746  esi = pop
1671 @ 10008746  ebp = pop
1672 @ 10008746  esp = esp + 4
1673 @ 10008746  ebx = pop
1674 @ 10008746  edx = pop
1675 @ 10008746  ecx = pop
1676 @ 10008746  eax = pop
1677 @ 10008747  temp0, edi = __insb(edi, dx, eflags)
1678 @ 10008747  [edi].b = temp0.b
1679 @ 10008748  goto 1734 @ 0x1000874a  {"nedmalloc_stats"}

1680 @ 1000881a  esi = __outsd(dx, [esi].d, esi, eflags)
1681 @ 1000881b  if (flag:o) then 1738 else 1739 @ 0x1000881d

1682 @ 100087bb  temp0, eflags = __arpl_memw_gpr16([edi + 0x6d].w, bp)
1683 @ 100087bb  [edi + 0x6d].w = temp0.w
1684 @ 100087be  edi = pop
1685 @ 100087be  esi = pop
1686 @ 100087be  ebp = pop
1687 @ 100087be  esp = esp + 4
1688 @ 100087be  ebx = pop
1689 @ 100087be  edx = pop
1690 @ 100087be  ecx = pop
1691 @ 100087be  eax = pop
1692 @ 100087bf  temp0, edi = __insb(edi, dx, eflags)
1693 @ 100087bf  [edi].b = temp0.b
1694 @ 100087c0  temp0, edi = __insb(edi, dx, eflags)
1695 @ 100087c0  [edi].b = temp0.b
1696 @ 100087c1  esi = __outsd(dx, [esi].d, esi, eflags)
1697 @ 100087c2  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
1698 @ 100087c2  [eax].w = temp0.w
1699 @ 100087c4  esi = __outsb(dx, [esi].b, esi, eflags)
1700 @ 100087c5  if (flag:o) then 1744 @ 0x10008836 else 1749 @ 0x100087c9  {"allinfo"}

1701 @ 1000874e  edi = pop
1702 @ 1000874e  esi = pop
1703 @ 1000874e  ebp = pop
1704 @ 1000874e  esp = esp + 4
1705 @ 1000874e  ebx = pop
1706 @ 1000874e  edx = pop
1707 @ 1000874e  ecx = pop
1708 @ 1000874e  eax = pop
1709 @ 1000874e  goto 1357 @ 0x1000874f  {"lloc_stats"}

1710 @ 10008863  temp0, edi = __insb(edi, dx, eflags)
1711 @ 10008863  [edi].b = temp0.b
1712 @ 10008864  if (not(flag:z)) then 1762 else 1763 @ 0x10008866

1713 @ 10008801  temp86.b = [esi + 0x65].b
1714 @ 10008801  [esi + 0x65].b = [esi + 0x65].b + ch
1715 @ 10008801  flag:c = temp86.b + ch u< temp86.b
1716 @ 10008801  flag:o = add_overflow(temp86.b, ch)
1717 @ 10008804  if (flag:o) then 1481 @ 0x10008874 else 1484 @ 0x10008807  {"alloc_trim"}  {"cache"}

1718 @ 10008814  jump(&data_10008884)

1719 @ 10008817  edi = pop
1720 @ 10008817  esi = pop
1721 @ 10008817  ebp = pop
1722 @ 10008817  esp = esp + 4
1723 @ 10008817  ebx = pop
1724 @ 10008817  edx = pop
1725 @ 10008817  ecx = pop
1726 @ 10008817  eax = pop
1727 @ 10008818  temp0, edi = __insb(edi, dx, eflags)
1728 @ 10008818  [edi].b = temp0.b
1729 @ 10008818  goto 1662 @ 0x10008819  {"lopt"}

1730 @ 100087b5  esi = __outsb(dx, [esi].b, esi, eflags)
1731 @ 100087b5  goto 1732 @ 0x100087b6  {"dent_comalloc"}

1732 @ 100087b6  esi = __outsb(dx, [gsbase + esi].b, esi, eflags)
1733 @ 100087b6  goto 1505 @ 0x100087b9  {"t_comalloc"}

1734 @ 1000874a  esi = __outsb(dx, [esi].b, esi, eflags)
1735 @ 1000874b  temp0, edi = __insd(edi, dx, eflags)
1736 @ 1000874b  [edi].d = temp0.d
1737 @ 1000874b  goto 1701 @ 0x1000874e  {"alloc_stats"}

1738 @ 1000881b  jump(&data_10008891)

1739 @ 1000881d  temp87.b = [esi + 0x65].b
1740 @ 1000881d  [esi + 0x65].b = [esi + 0x65].b + ch
1741 @ 1000881d  flag:z = temp87.b == neg.b(ch)
1742 @ 1000881d  flag:o = add_overflow(temp87.b, ch)
1743 @ 10008820  if (flag:o) then 1766 else 1767 @ 0x10008823  {"emalign"}

1744 @ 10008836  temp88.b = [esi + 0x65].b
1745 @ 10008836  [esi + 0x65].b = [esi + 0x65].b + ch
1746 @ 10008836  flag:z = temp88.b == neg.b(ch)
1747 @ 10008836  flag:o = add_overflow(temp88.b, ch)
1748 @ 10008839  if (flag:o) then 1783 else 1784 @ 0x1000883c  {"ealloc"}

1749 @ 100087c9  edi = pop
1750 @ 100087c9  esi = pop
1751 @ 100087c9  ebp = pop
1752 @ 100087c9  esp = esp + 4
1753 @ 100087c9  ebx = pop
1754 @ 100087c9  edx = pop
1755 @ 100087c9  ecx = pop
1756 @ 100087c9  eax = pop
1757 @ 100087ca  temp0, edi = __insb(edi, dx, eflags)
1758 @ 100087ca  [edi].b = temp0.b
1759 @ 100087cb  temp0, edi = __insb(edi, dx, eflags)
1760 @ 100087cb  [edi].b = temp0.b
1761 @ 100087cb  goto 1506 @ 0x100087cc  {"info"}

1762 @ 10008864  jump(&data_100088cb)

1763 @ 10008866  temp89.b = [esi + 0x65].b
1764 @ 10008866  [esi + 0x65].b = [esi + 0x65].b + ch
1765 @ 10008869  if (temp89.b == neg.b(ch)) then 1800 else 1801 @ 0x1000886c  {"imthreadcache"}

1766 @ 10008820  jump(&data_10008890)

1767 @ 10008823  temp0, edi = __insd(edi, dx, eflags)
1768 @ 10008823  [edi].d = temp0.d
1769 @ 10008825  edi = pop
1770 @ 10008825  esi = pop
1771 @ 10008825  ebp = pop
1772 @ 10008825  esp = esp + 4
1773 @ 10008825  ebx = pop
1774 @ 10008825  edx = pop
1775 @ 10008825  ecx = pop
1776 @ 10008825  eax = pop
1777 @ 10008826  temp0, edi = __insb(edi, dx, eflags)
1778 @ 10008826  [edi].b = temp0.b
1779 @ 10008827  temp90.d = [edi + 0x6e].d
1780 @ 10008827  esp = [edi + 0x6e].d * 0x64656e00
1781 @ 10008827  flag:o = unimplemented
1782 @ 1000882e  if (flag:o) then 1805 else 1806 @ 0x10008830  {"ollist"}

1783 @ 10008839  jump(&data_100088ae)

1784 @ 1000883c  edi = pop
1785 @ 1000883c  esi = pop
1786 @ 1000883c  ebp = pop
1787 @ 1000883c  esp = esp + 4
1788 @ 1000883c  ebx = pop
1789 @ 1000883c  edx = pop
1790 @ 1000883c  ecx = pop
1791 @ 1000883c  eax = pop
1792 @ 1000883e  temp0, edi = __insb(edi, dx, eflags)
1793 @ 1000883e  [edi].b = temp0.b
1794 @ 1000883f  temp0, edi = __insb(edi, dx, eflags)
1795 @ 1000883f  [edi].b = temp0.b
1796 @ 10008840  esi = __outsd(dx, [esi].d, esi, eflags)
1797 @ 10008841  temp0, eflags = __arpl_memw_gpr16([eax].w, ax)
1798 @ 10008841  [eax].w = temp0.w
1799 @ 10008841  goto 1288 @ 0x10008843  {"nedpsetvalue"}

1800 @ 10008869  jump(&data_100088de)

1801 @ 1000886c  ebp = [ebp + 0x74].d * 0x61657268
1802 @ 10008873  temp0, eflags = __arpl_memw_gpr16([fsbase + ecx + 0x63].w, sp)
1803 @ 10008873  [fsbase + ecx + 0x63].w = temp0.w
1804 @ 10008873  goto 1580 @ 0x10008877

1805 @ 1000882e  jump(&data_1000889f)

1806 @ 10008830  esi = __outsd(dx, [esi].d, esi, eflags)
1807 @ 10008831  temp0, edi = __insb(edi, dx, eflags)
1808 @ 10008831  [edi].b = temp0.b
1809 @ 10008832  temp0, edi = __insb(edi, dx, eflags)
1810 @ 10008832  [edi].b = temp0.b
1811 @ 10008833  temp91.d = [ebx + 0x74].d
1812 @ 10008833  esi = [ebx + 0x74].d * 0x64656e00
1813 @ 10008833  flag:o = unimplemented
1814 @ 1000883a  if (flag:o) then 1815 else 1784 @ 0x1000883c  {"ealloc"}

1815 @ 1000883a  jump(&data_100088ae)

10008911                                                     ff ff ff ff ff ff                                              ......

10008917  int32_t __convention("regparm") sub_10008917(char* arg1, int32_t arg2, char* arg3 @ ebp, long double arg4 @ st0)

   0 @ 10008917  [ebx + (eax << 2) + 0x1000].d = [ebx + (eax << 2) + 0x1000].d - 1
   1 @ 1000891e  [eax].b = [eax].b + al
   2 @ 10008920  [eax].b = [eax].b + al
   3 @ 10008922  temp0.b = [eax].b
   4 @ 10008922  [eax].b = [eax].b + al
   5 @ 10008924  if (temp0.b s< neg.b(al)) then 6 else 7 @ 0x10008926

   6 @ 10008924  jump(&data_100088a9)

   7 @ 10008926  [eax].b = [eax].b + dl
   8 @ 10008928  [eax].b = [eax].b + al
   9 @ 1000892a  [eax].b = [eax].b + al
  10 @ 1000892c  [eax].b = [eax].b + al
  11 @ 1000892e  temp1.b = [eax].b
  12 @ 1000892e  [eax].b = [eax].b + al
  13 @ 1000892e  flag:o = add_overflow(temp1.b, al)
  14 @ 10008930  if (flag:o) then 15 else 16 @ 0x10008932

  15 @ 10008930  jump(&data_100088b5)

  16 @ 10008932  [eax].b = [eax].b + dl
  17 @ 10008934  [eax].b = [eax].b + al
  18 @ 10008936  [eax].b = [eax].b + al
  19 @ 10008938  [eax].b = [eax].b + al
  20 @ 1000893a  [eax].b = [eax].b + al
  21 @ 1000893c  push(eax)
  22 @ 1000893c  push(ecx)
  23 @ 1000893c  push(edx)
  24 @ 1000893c  push(ebx)
  25 @ 1000893c  push(esp)
  26 @ 1000893c  push(ebp)
  27 @ 1000893c  push(esi)
  28 @ 1000893c  push(edi)
  29 @ 1000893d  [eax].d = [eax].d + 0x10
  30 @ 10008940  [eax].b = [eax].b + al
  31 @ 10008942  [eax].b = [eax].b + al
  32 @ 10008944  [eax].b = [eax].b + al
  33 @ 10008946  [eax].b = [eax].b + al
  34 @ 10008948  push(esp)
  35 @ 10008949  [eax].d = [eax].d + 0x10
  36 @ 1000894c  [eax].b = [eax].b + al
  37 @ 1000894e  [eax].b = [eax].b + al
  38 @ 10008950  [eax].b = [eax].b + al
  39 @ 10008952  [eax].b = [eax].b + al
  40 @ 10008954  esp = esp + 1
  41 @ 10008955  [eax].d = [eax].d + 0x10
  42 @ 10008958  [eax].b = [eax].b + al
  43 @ 1000895a  [eax].b = [eax].b + al
  44 @ 1000895c  [eax].b = [eax].b + al
  45 @ 1000895e  [eax].b = [eax].b + al
  46 @ 10008960  [ebx + 0x1000 {0x1000}].b - al
  47 @ 10008966  [eax].b = [eax].b + al
  48 @ 10008968  [eax].b = [eax].b + al
  49 @ 1000896a  [eax].b = [eax].b + al
  50 @ 1000896c  [ebx + 0x1000 {0x1000}].b = [ebx + 0x1000 {0x1000}].b - al
  51 @ 10008972  [eax].b = [eax].b + al
  52 @ 10008974  [eax].b = [eax].b + al
  53 @ 10008976  [eax].b = [eax].b + al
  54 @ 10008978  [eax].b = [eax].b + al
  55 @ 1000897a  [eax].b = [eax].b + al
  56 @ 1000897c  [eax].b = [eax].b + al
  57 @ 1000897e  [eax].b = [eax].b + al
  58 @ 10008980  [eax].b = [eax].b + al
  59 @ 10008982  temp2.b = [eax].b
  60 @ 10008982  [eax].b = [eax].b + al
  61 @ 10008982  flag:c = temp2.b + al u< temp2.b
  62 @ 10008984  [ebx + 0x1000 {0x1000}].b = sbb.b([ebx + 0x1000 {0x1000}].b, al, flag:c)
  63 @ 1000898a  [eax].b = [eax].b + al
  64 @ 1000898c  [eax].b = [eax].b + al
  65 @ 1000898e  [eax].b = [eax].b + al
  66 @ 10008990  [eax].b = [eax].b + al
  67 @ 10008992  [eax].b = [eax].b + al
  68 @ 10008994  [eax].b = [eax].b + al
  69 @ 10008996  [eax].b = [eax].b + al
  70 @ 10008998  [eax].b = [eax].b + al
  71 @ 1000899a  [eax].b = [eax].b + al
  72 @ 1000899c  al = al | 0x10
  73 @ 1000899e  temp3.b = [eax].b
  74 @ 1000899e  [eax].b = [eax].b + dl
  75 @ 1000899e  flag:c = temp3.b + dl u< temp3.b
  76 @ 100089a0  [ebx + 0x1000 {0x1000}].b = adc.b([ebx + 0x1000 {0x1000}].b, al, flag:c)
  77 @ 100089a6  [eax].b = [eax].b + al
  78 @ 100089a8  [eax].b = [eax].b + al
  79 @ 100089aa  [eax].b = [eax].b + al
  80 @ 100089ac  [eax].b = [eax].b + al
  81 @ 100089ae  [eax].b = [eax].b + al
  82 @ 100089b0  [eax].b = [eax].b + al
  83 @ 100089b2  [eax].b = [eax].b + al
  84 @ 100089b4  [eax].b = [eax].b + al
  85 @ 100089b6  [eax].b = [eax].b + al
  86 @ 100089b8  [eax].b = [eax].b + al
  87 @ 100089ba  [eax].b = [eax].b + al
  88 @ 100089bc  [eax].b = [eax].b + al
  89 @ 100089be  [eax].b = [eax].b + al
  90 @ 100089c0  [eax].b = [eax].b + al
  91 @ 100089c2  [eax].b = [eax].b + al
  92 @ 100089c4  [eax].b = [eax].b + al
  93 @ 100089c6  [eax].b = [eax].b + al
  94 @ 100089c8  [eax].b = [eax].b + al
  95 @ 100089ca  [eax].b = [eax].b + al
  96 @ 100089cc  [eax].b = [eax].b + al
  97 @ 100089ce  [eax].b = [eax].b + al
  98 @ 100089d0  [eax].b = [eax].b + al
  99 @ 100089d2  [eax].b = [eax].b + al
 100 @ 100089d4  [eax].b = [eax].b + al
 101 @ 100089d6  [eax].b = [eax].b + al
 102 @ 100089d8  [eax].b = [eax].b + al
 103 @ 100089da  [eax].b = [eax].b + al
 104 @ 100089dc  [eax].b = [eax].b + al
 105 @ 100089de  [eax].b = [eax].b + al
 106 @ 100089e0  [eax].b = [eax].b + al
 107 @ 100089e2  [eax].b = [eax].b + al
 108 @ 100089e4  [eax].b = [eax].b + al
 109 @ 100089e6  [eax].b = [eax].b + al
 110 @ 100089e8  [eax].b = [eax].b + al
 111 @ 100089ea  [eax].b = [eax].b + al
 112 @ 100089ec  [eax].b = [eax].b + al
 113 @ 100089ee  [eax].b = [eax].b + al
 114 @ 100089f0  [eax].b = [eax].b + al
 115 @ 100089f2  [eax].b = [eax].b + al
 116 @ 100089f4  [eax].b = [eax].b + al
 117 @ 100089f6  [eax].b = [eax].b + al
 118 @ 100089f8  [eax].b = [eax].b + al
 119 @ 100089fa  [eax].b = [eax].b + al
 120 @ 100089fc  [eax].b = [eax].b + al
 121 @ 100089fe  [eax].b = [eax].b + al
 122 @ 10008a00  [eax].b = [eax].b + al
 123 @ 10008a02  [eax].b = [eax].b + al
 124 @ 10008a04  [eax].b = [eax].b + al
 125 @ 10008a06  [eax].b = [eax].b + al
 126 @ 10008a08  [eax].b = [eax].b + al
 127 @ 10008a0a  [eax].b = [eax].b + al
 128 @ 10008a0c  [eax].b = [eax].b + al
 129 @ 10008a0e  [eax].b = [eax].b + al
 130 @ 10008a10  [eax].b = [eax].b + al
 131 @ 10008a12  [eax].b = [eax].b + al
 132 @ 10008a14  [eax].b = [eax].b + al
 133 @ 10008a16  [eax].b = [eax].b + al
 134 @ 10008a18  [eax].b = [eax].b + al
 135 @ 10008a1a  [eax].b = [eax].b + al
 136 @ 10008a1c  [eax].b = [eax].b + al
 137 @ 10008a1e  [eax].b = [eax].b + al
 138 @ 10008a20  [eax].b = [eax].b + al
 139 @ 10008a22  [eax].b = [eax].b + al
 140 @ 10008a24  [eax].b = [eax].b + al
 141 @ 10008a26  [eax].b = [eax].b + al
 142 @ 10008a28  [eax].b = [eax].b + al
 143 @ 10008a2a  [eax].b = [eax].b + al
 144 @ 10008a2c  [eax].b = [eax].b + al
 145 @ 10008a2e  [eax].b = [eax].b + al
 146 @ 10008a30  [eax].b = [eax].b + al
 147 @ 10008a32  [eax].b = [eax].b + al
 148 @ 10008a34  [eax].b = [eax].b + al
 149 @ 10008a36  [eax].b = [eax].b + al
 150 @ 10008a38  [eax].b = [eax].b + al
 151 @ 10008a3a  [eax].b = [eax].b + al
 152 @ 10008a3c  [eax].b = [eax].b + al
 153 @ 10008a3e  [eax].b = [eax].b + al
 154 @ 10008a40  [eax].b = [eax].b + al
 155 @ 10008a42  [eax].b = [eax].b + al
 156 @ 10008a44  [eax].b = [eax].b + al
 157 @ 10008a46  [eax].b = [eax].b + al
 158 @ 10008a48  [eax].b = [eax].b + al
 159 @ 10008a4a  [eax].b = [eax].b + al
 160 @ 10008a4c  [eax].b = [eax].b + al
 161 @ 10008a4e  [eax].b = [eax].b + al
 162 @ 10008a50  [eax].b = [eax].b + al
 163 @ 10008a52  [eax].b = [eax].b + al
 164 @ 10008a54  [eax].b = [eax].b + al
 165 @ 10008a56  [eax].b = [eax].b + al
 166 @ 10008a58  [eax].b = [eax].b + al
 167 @ 10008a5a  [eax].b = [eax].b + al
 168 @ 10008a5c  [eax].b = [eax].b + al
 169 @ 10008a5e  [eax].b = [eax].b + al
 170 @ 10008a60  [eax].b = [eax].b + al
 171 @ 10008a62  [eax].b = [eax].b + al
 172 @ 10008a64  [eax].b = [eax].b + al
 173 @ 10008a66  [eax].b = [eax].b + al
 174 @ 10008a68  [eax].b = [eax].b + al
 175 @ 10008a6a  [eax].b = [eax].b + al
 176 @ 10008a6c  [eax].b = [eax].b + al
 177 @ 10008a6e  [eax].b = [eax].b + al
 178 @ 10008a70  [eax].b = [eax].b + al
 179 @ 10008a72  [eax].b = [eax].b + al
 180 @ 10008a74  [eax].b = [eax].b + al
 181 @ 10008a76  [eax].b = [eax].b + al
 182 @ 10008a78  [eax].b = [eax].b + al
 183 @ 10008a7a  [eax].b = [eax].b + al
 184 @ 10008a7c  [eax].b = [eax].b + al
 185 @ 10008a7e  [eax].b = [eax].b + al
 186 @ 10008a80  [eax].b = [eax].b + al
 187 @ 10008a82  [eax].b = [eax].b + al
 188 @ 10008a84  [eax].b = [eax].b + al
 189 @ 10008a86  [eax].b = [eax].b + al
 190 @ 10008a88  [eax].b = [eax].b + al
 191 @ 10008a8a  [eax].b = [eax].b + al
 192 @ 10008a8c  [eax].b = [eax].b + al
 193 @ 10008a8e  [eax].b = [eax].b + al
 194 @ 10008a90  [eax].b = [eax].b + al
 195 @ 10008a92  [eax].b = [eax].b + al
 196 @ 10008a94  [eax].b = [eax].b + al
 197 @ 10008a96  [eax].b = [eax].b + al
 198 @ 10008a98  [eax].b = [eax].b + al
 199 @ 10008a9a  [eax].b = [eax].b + al
 200 @ 10008a9c  [eax].b = [eax].b + al
 201 @ 10008a9e  [eax].b = [eax].b + al
 202 @ 10008aa0  [eax].b = [eax].b + al
 203 @ 10008aa2  [eax].b = [eax].b + al
 204 @ 10008aa4  [eax].b = [eax].b + al
 205 @ 10008aa6  [eax].b = [eax].b + al
 206 @ 10008aa8  [eax].b = [eax].b + al
 207 @ 10008aaa  [eax].b = [eax].b + al
 208 @ 10008aac  [eax].b = [eax].b + al
 209 @ 10008aae  [eax].b = [eax].b + al
 210 @ 10008ab0  [eax].b = [eax].b + al
 211 @ 10008ab2  temp4.b = [eax].b
 212 @ 10008ab2  [eax].b = [eax].b + al
 213 @ 10008ab2  flag:c = temp4.b + al u< temp4.b
 214 @ 10008ab4  [eax - 0x7cfbf000].b = adc.b([eax - 0x7cfbf000].b, dl, flag:c)
 215 @ 10008aba  [eax].b = [eax].b + dl
 216 @ 10008abc  al = [-0xfffffffffc100075].b
 217 @ 10008ac1  [eax].b = [eax].b + 0x10
 218 @ 10008ac4  [eax].b = [eax].b + al
 219 @ 10008ac6  [eax].b = [eax].b + al
 220 @ 10008ac8  [eax].b = [eax].b + al
 221 @ 10008aca  [eax].b = [eax].b + al
 222 @ 10008acc  [eax].b = [eax].b + al
 223 @ 10008ace  [eax].b = [eax].b + al
 224 @ 10008ad0  [eax].b = [eax].b + al
 225 @ 10008ad2  [eax].b = [eax].b + al
 226 @ 10008ad4  [eax].b = [eax].b + al
 227 @ 10008ad6  [eax].b = [eax].b + al
 228 @ 10008ad8  [eax].b = [eax].b + al
 229 @ 10008ada  [eax].b = [eax].b + al
 230 @ 10008adc  [eax].b = [eax].b + al
 231 @ 10008ade  [eax].b = [eax].b + al
 232 @ 10008ae0  [eax].b = [eax].b + al
 233 @ 10008ae2  [eax].b = [eax].b + al
 234 @ 10008ae4  [eax].b = [eax].b + al
 235 @ 10008ae6  [eax].b = [eax].b + al
 236 @ 10008ae8  [eax].b = [eax].b + al
 237 @ 10008aea  [eax].b = [eax].b + al
 238 @ 10008aec  [eax].b = [eax].b + al
 239 @ 10008aee  [eax].b = [eax].b + al
 240 @ 10008af0  [eax].b = [eax].b + al
 241 @ 10008af2  [eax].b = [eax].b + al
 242 @ 10008af4  [eax].b = [eax].b + al
 243 @ 10008af6  [eax].b = [eax].b + al
 244 @ 10008af8  [eax].b = [eax].b + al
 245 @ 10008afa  [eax].b = [eax].b + al
 246 @ 10008afc  [eax].b = [eax].b + al
 247 @ 10008afe  [eax].b = [eax].b + al
 248 @ 10008b00  [eax].b = [eax].b + al
 249 @ 10008b02  [eax].b = [eax].b + al
 250 @ 10008b04  [eax].b = [eax].b + al
 251 @ 10008b06  [eax].b = [eax].b + al
 252 @ 10008b08  [eax].b = [eax].b + al
 253 @ 10008b0a  [eax].b = [eax].b + al
 254 @ 10008b0c  [eax].b = [eax].b + al
 255 @ 10008b0e  [eax].b = [eax].b + al
 256 @ 10008b10  [eax].b = [eax].b + al
 257 @ 10008b12  [eax].b = [eax].b + al
 258 @ 10008b14  [eax].b = [eax].b + al
 259 @ 10008b16  [eax].b = [eax].b + al
 260 @ 10008b18  [eax].b = [eax].b + al
 261 @ 10008b1a  [eax].b = [eax].b + al
 262 @ 10008b1c  [eax].b = [eax].b + al
 263 @ 10008b1e  [eax].b = [eax].b + al
 264 @ 10008b20  [eax].b = [eax].b + al
 265 @ 10008b22  [eax].b = [eax].b + al
 266 @ 10008b24  [eax].b = [eax].b + al
 267 @ 10008b26  [eax].b = [eax].b + al
 268 @ 10008b28  [eax].b = [eax].b + al
 269 @ 10008b2a  [eax].b = [eax].b + al
 270 @ 10008b2c  [eax].b = [eax].b + al
 271 @ 10008b2e  [eax].b = [eax].b + al
 272 @ 10008b30  [eax].b = [eax].b + al
 273 @ 10008b32  [eax].b = [eax].b + al
 274 @ 10008b34  [eax].b = [eax].b + al
 275 @ 10008b36  [eax].b = [eax].b + al
 276 @ 10008b38  [eax].b = [eax].b + al
 277 @ 10008b3a  [eax].b = [eax].b + al
 278 @ 10008b3c  [eax].b = [eax].b + al
 279 @ 10008b3e  [eax].b = [eax].b + al
 280 @ 10008b40  [eax].b = [eax].b + al
 281 @ 10008b42  [eax].b = [eax].b + al
 282 @ 10008b44  [eax].b = [eax].b + al
 283 @ 10008b46  [eax].b = [eax].b + al
 284 @ 10008b48  [eax].b = [eax].b + al
 285 @ 10008b4a  [eax].b = [eax].b + al
 286 @ 10008b4c  [eax].b = [eax].b + al
 287 @ 10008b4e  [eax].b = [eax].b + al
 288 @ 10008b50  [eax].b = [eax].b + al
 289 @ 10008b52  [eax].b = [eax].b + al
 290 @ 10008b54  [eax].b = [eax].b + al
 291 @ 10008b56  [eax].b = [eax].b + al
 292 @ 10008b58  [eax].b = [eax].b + al
 293 @ 10008b5a  [eax].b = [eax].b + al
 294 @ 10008b5c  [eax].b = [eax].b + al
 295 @ 10008b5e  [eax].b = [eax].b + al
 296 @ 10008b60  [eax].b = [eax].b + al
 297 @ 10008b62  [eax].b = [eax].b + al
 298 @ 10008b64  [eax].b = [eax].b + al
 299 @ 10008b66  [eax].b = [eax].b + al
 300 @ 10008b68  [eax].b = [eax].b + al
 301 @ 10008b6a  [eax].b = [eax].b + al
 302 @ 10008b6c  [eax].b = [eax].b + al
 303 @ 10008b6e  [eax].b = [eax].b + al
 304 @ 10008b70  [eax].b = [eax].b + al
 305 @ 10008b72  [eax].b = [eax].b + al
 306 @ 10008b74  [eax].b = [eax].b + al
 307 @ 10008b76  [eax].b = [eax].b + al
 308 @ 10008b78  [eax].b = [eax].b + al
 309 @ 10008b7a  [eax].b = [eax].b + al
 310 @ 10008b7c  [eax].b = [eax].b + al
 311 @ 10008b7e  [eax].b = [eax].b + al
 312 @ 10008b80  [eax].b = [eax].b + al
 313 @ 10008b82  [eax].b = [eax].b + al
 314 @ 10008b84  [eax].b = [eax].b + al
 315 @ 10008b86  [eax].b = [eax].b + al
 316 @ 10008b88  [eax].b = [eax].b + al
 317 @ 10008b8a  [eax].b = [eax].b + al
 318 @ 10008b8c  [eax].b = [eax].b + al
 319 @ 10008b8e  [eax].b = [eax].b + al
 320 @ 10008b90  [eax].b = [eax].b + al
 321 @ 10008b92  [eax].b = [eax].b + al
 322 @ 10008b94  [eax].b = [eax].b + al
 323 @ 10008b96  [eax].b = [eax].b + al
 324 @ 10008b98  [eax].b = [eax].b + al
 325 @ 10008b9a  [eax].b = [eax].b + al
 326 @ 10008b9c  [eax].b = [eax].b + al
 327 @ 10008b9e  [eax].b = [eax].b + al
 328 @ 10008ba0  [eax].b = [eax].b + al
 329 @ 10008ba2  [eax].b = [eax].b + al
 330 @ 10008ba4  [eax].b = [eax].b + al
 331 @ 10008ba6  [eax].b = [eax].b + al
 332 @ 10008ba8  [eax].b = [eax].b + al
 333 @ 10008baa  [eax].b = [eax].b + al
 334 @ 10008bac  [eax].b = [eax].b + al
 335 @ 10008bae  [eax].b = [eax].b + al
 336 @ 10008bb0  [eax].b = [eax].b + al
 337 @ 10008bb2  [eax].b = [eax].b + al
 338 @ 10008bb4  [eax].b = [eax].b + al
 339 @ 10008bb6  [eax].b = [eax].b + al
 340 @ 10008bb8  [eax].b = [eax].b + al
 341 @ 10008bba  [eax].b = [eax].b + al
 342 @ 10008bbc  [eax].b = [eax].b + al
 343 @ 10008bbe  [eax].b = [eax].b + al
 344 @ 10008bc0  [eax].b = [eax].b + al
 345 @ 10008bc2  [eax].b = [eax].b + al
 346 @ 10008bc4  [eax].b = [eax].b + al
 347 @ 10008bc6  [eax].b = [eax].b + al
 348 @ 10008bc8  [eax].b = [eax].b + al
 349 @ 10008bca  [eax].b = [eax].b + al
 350 @ 10008bcc  [eax].b = [eax].b + al
 351 @ 10008bce  [eax].b = [eax].b + al
 352 @ 10008bd0  [eax].b = [eax].b + al
 353 @ 10008bd2  temp5.b = [eax].b
 354 @ 10008bd2  [eax].b = [eax].b + al
 355 @ 10008bd2  flag:c = temp5.b + al u< temp5.b
 356 @ 10008bd4  [eax - 0x7d0ff000].b = adc.b([eax - 0x7d0ff000].b, dl, flag:c)
 357 @ 10008bda  [eax].b = [eax].b + dl
 358 @ 10008bdc  [ebp].b = [ebp].b ^ 0x10
 359 @ 10008be0  call(0x10108c67)
 360 @ 10008be5  [eax].b = [eax].b + al
 361 @ 10008be7  [eax].b = [eax].b + al
 362 @ 10008be9  [eax].b = [eax].b + al
 363 @ 10008beb  [eax].b = [eax].b + al
 364 @ 10008bed  [eax].b = [eax].b + al
 365 @ 10008bef  [eax].b = [eax].b + al
 366 @ 10008bf1  [eax].b = [eax].b + al
 367 @ 10008bf3  [eax].b = [eax].b + al
 368 @ 10008bf5  [eax].b = [eax].b + al
 369 @ 10008bf7  [eax].b = [eax].b + al
 370 @ 10008bf9  [eax].b = [eax].b + al
 371 @ 10008bfb  [eax].b = [eax].b + al
 372 @ 10008bfd  [eax].b = [eax].b + al
 373 @ 10008bff  [eax].b = [eax].b + al
 374 @ 10008c01  [eax].b = [eax].b + al
 375 @ 10008c03  [eax].b = [eax].b + al
 376 @ 10008c05  [eax].b = [eax].b + al
 377 @ 10008c07  [eax].b = [eax].b + al
 378 @ 10008c09  [eax].b = [eax].b + al
 379 @ 10008c0b  [eax].b = [eax].b + al
 380 @ 10008c0d  [eax].b = [eax].b + al
 381 @ 10008c0f  [eax].b = [eax].b + al
 382 @ 10008c11  [eax].b = [eax].b + al
 383 @ 10008c13  [eax].b = [eax].b + al
 384 @ 10008c15  [eax].b = [eax].b + al
 385 @ 10008c17  [eax].b = [eax].b + al
 386 @ 10008c19  [eax].b = [eax].b + al
 387 @ 10008c1b  [eax].b = [eax].b + al
 388 @ 10008c1d  [eax].b = [eax].b + al
 389 @ 10008c1f  [eax].b = [eax].b + al
 390 @ 10008c21  [eax].b = [eax].b + al
 391 @ 10008c23  [eax].b = [eax].b + al
 392 @ 10008c25  [eax].b = [eax].b + al
 393 @ 10008c27  [eax].b = [eax].b + al
 394 @ 10008c29  [eax].b = [eax].b + al
 395 @ 10008c2b  [eax].b = [eax].b + al
 396 @ 10008c2d  [eax].b = [eax].b + al
 397 @ 10008c2f  [eax].b = [eax].b + al
 398 @ 10008c31  [eax].b = [eax].b + al
 399 @ 10008c33  [eax].b = [eax].b + al
 400 @ 10008c35  [eax].b = [eax].b + al
 401 @ 10008c37  [eax].b = [eax].b + al
 402 @ 10008c39  [eax].b = [eax].b + al
 403 @ 10008c3b  [eax].b = [eax].b + al
 404 @ 10008c3d  [eax].b = [eax].b + al
 405 @ 10008c3f  [eax].b = [eax].b + al
 406 @ 10008c41  [eax].b = [eax].b + al
 407 @ 10008c43  [eax].b = [eax].b + al
 408 @ 10008c45  [eax].b = [eax].b + al
 409 @ 10008c47  [eax].b = [eax].b + al
 410 @ 10008c49  [eax].b = [eax].b + al
 411 @ 10008c4b  [eax].b = [eax].b + al
 412 @ 10008c4d  [eax].b = [eax].b + al
 413 @ 10008c4f  [eax].b = [eax].b + al
 414 @ 10008c51  [eax].b = [eax].b + al
 415 @ 10008c53  [eax].b = [eax].b + al
 416 @ 10008c55  [eax].b = [eax].b + al
 417 @ 10008c57  [eax].b = [eax].b + al
 418 @ 10008c59  [eax].b = [eax].b + al
 419 @ 10008c5b  [eax].b = [eax].b + al
 420 @ 10008c5d  [eax].b = [eax].b + al
 421 @ 10008c5f  [eax].b = [eax].b + al
 422 @ 10008c61  [eax].b = [eax].b + al
 423 @ 10008c63  [eax].b = [eax].b + al
 424 @ 10008c65  [eax].b = [eax].b + al
 425 @ 10008c67  [eax].b = [eax].b + al
 426 @ 10008c69  [eax].b = [eax].b + al
 427 @ 10008c6b  [eax].b = [eax].b + al
 428 @ 10008c6d  [eax].b = [eax].b + al
 429 @ 10008c6f  [eax].b = [eax].b + al
 430 @ 10008c71  [eax].b = [eax].b + al
 431 @ 10008c73  [eax].b = [eax].b + al
 432 @ 10008c75  [eax].b = [eax].b + al
 433 @ 10008c77  [eax].b = [eax].b + al
 434 @ 10008c79  [eax].b = [eax].b + al
 435 @ 10008c7b  [eax].b = [eax].b + al
 436 @ 10008c7d  [eax].b = [eax].b + al
 437 @ 10008c7f  [eax].b = [eax].b + al
 438 @ 10008c81  [eax].b = [eax].b + al
 439 @ 10008c83  [eax].b = [eax].b + al
 440 @ 10008c85  [eax].b = [eax].b + al
 441 @ 10008c87  [eax].b = [eax].b + al
 442 @ 10008c89  [eax].b = [eax].b + al
 443 @ 10008c8b  [eax].b = [eax].b + al
 444 @ 10008c8d  [eax].b = [eax].b + al
 445 @ 10008c8f  [eax].b = [eax].b + al
 446 @ 10008c91  [eax].b = [eax].b + al
 447 @ 10008c93  [eax].b = [eax].b + al
 448 @ 10008c95  [eax].b = [eax].b + al
 449 @ 10008c97  [eax].b = [eax].b + al
 450 @ 10008c99  [eax].b = [eax].b + al
 451 @ 10008c9b  [eax].b = [eax].b + al
 452 @ 10008c9d  [eax].b = [eax].b + al
 453 @ 10008c9f  [eax].b = [eax].b + al
 454 @ 10008ca1  [eax].b = [eax].b + al
 455 @ 10008ca3  [eax].b = [eax].b + al
 456 @ 10008ca5  [eax].b = [eax].b + al
 457 @ 10008ca7  [eax].b = [eax].b + al
 458 @ 10008ca9  [eax].b = [eax].b + al
 459 @ 10008cab  [eax].b = [eax].b + al
 460 @ 10008cad  [eax].b = [eax].b + al
 461 @ 10008caf  [eax].b = [eax].b + al
 462 @ 10008cb1  [eax].b = [eax].b + al
 463 @ 10008cb3  [eax].b = [eax].b + al
 464 @ 10008cb5  [eax].b = [eax].b + al
 465 @ 10008cb7  [eax].b = [eax].b + al
 466 @ 10008cb9  [eax].b = [eax].b + al
 467 @ 10008cbb  [eax].b = [eax].b + al
 468 @ 10008cbd  [eax].b = [eax].b + al
 469 @ 10008cbf  [eax].b = [eax].b + al
 470 @ 10008cc1  [eax].b = [eax].b + al
 471 @ 10008cc3  [eax].b = [eax].b + al
 472 @ 10008cc5  [eax].b = [eax].b + al
 473 @ 10008cc7  [eax].b = [eax].b + al
 474 @ 10008cc9  [eax].b = [eax].b + al
 475 @ 10008ccb  [eax].b = [eax].b + al
 476 @ 10008ccd  [eax].b = [eax].b + al
 477 @ 10008ccf  [eax].b = [eax].b + al
 478 @ 10008cd1  [eax].b = [eax].b + al
 479 @ 10008cd3  [eax].b = [eax].b + al
 480 @ 10008cd5  [eax].b = [eax].b + al
 481 @ 10008cd7  [eax].b = [eax].b + al
 482 @ 10008cd9  [eax].b = [eax].b + al
 483 @ 10008cdb  [eax].b = [eax].b + al
 484 @ 10008cdd  [eax].b = [eax].b + al
 485 @ 10008cdf  [eax].b = [eax].b + al
 486 @ 10008ce1  [eax].b = [eax].b + al
 487 @ 10008ce3  [eax].b = [eax].b + al
 488 @ 10008ce5  [eax].b = [eax].b + al
 489 @ 10008ce7  [eax].b = [eax].b + al
 490 @ 10008ce9  [eax].b = [eax].b + al
 491 @ 10008ceb  [eax].b = [eax].b + al
 492 @ 10008ced  [eax].b = [eax].b + al
 493 @ 10008cef  [eax].b = [eax].b + al
 494 @ 10008cf1  [eax].b = [eax].b + al
 495 @ 10008cf3  [eax].b = [eax].b + dl
 496 @ 10008cf6  [eax].b = [eax].b + dl
 497 @ 10008cf8  st0 = st0 f+ fconvert.t([edx + 0x78e01000].q)
 498 @ 10008cfe  [eax].b = [eax].b + dl
 499 @ 10008d00  al, ah, eflags = __aam_immb(0x82, al)
 500 @ 10008d02  [eax].b = [eax].b + dl
 501 @ 10008d04  [eax].b = [eax].b + al
 502 @ 10008d06  [eax].b = [eax].b + al
 503 @ 10008d08  [eax].b = [eax].b + al
 504 @ 10008d0a  [eax].b = [eax].b + al
 505 @ 10008d0c  [eax].b = [eax].b + al
 506 @ 10008d0e  [eax].b = [eax].b + al
 507 @ 10008d10  [eax].b = [eax].b + al
 508 @ 10008d12  [eax].b = [eax].b + al
 509 @ 10008d14  [eax].b = [eax].b + al
 510 @ 10008d16  [eax].b = [eax].b + al
 511 @ 10008d18  [eax].b = [eax].b + al
 512 @ 10008d1a  [eax].b = [eax].b + al
 513 @ 10008d1c  [eax].b = [eax].b + al
 514 @ 10008d1e  [eax].b = [eax].b + al
 515 @ 10008d20  [eax].b = [eax].b + al
 516 @ 10008d22  [eax].b = [eax].b + al
 517 @ 10008d24  [eax].b = [eax].b + al
 518 @ 10008d26  [eax].b = [eax].b + al
 519 @ 10008d28  [eax].b = [eax].b + al
 520 @ 10008d2a  [eax].b = [eax].b + al
 521 @ 10008d2c  [eax].b = [eax].b + al
 522 @ 10008d2e  [eax].b = [eax].b + al
 523 @ 10008d30  [eax].b = [eax].b + al
 524 @ 10008d32  [eax].b = [eax].b + al
 525 @ 10008d34  [eax].b = [eax].b + al
 526 @ 10008d36  [eax].b = [eax].b + al
 527 @ 10008d38  [eax].b = [eax].b + al
 528 @ 10008d3a  [eax].b = [eax].b + al
 529 @ 10008d3c  [eax].b = [eax].b + al
 530 @ 10008d3e  [eax].b = [eax].b + al
 531 @ 10008d40  [eax].b = [eax].b + al
 532 @ 10008d42  [eax].b = [eax].b + al
 533 @ 10008d44  [eax].b = [eax].b + al
 534 @ 10008d46  [eax].b = [eax].b + al
 535 @ 10008d48  [eax].b = [eax].b + al
 536 @ 10008d4a  [eax].b = [eax].b + al
 537 @ 10008d4c  [eax].b = [eax].b + al
 538 @ 10008d4e  [eax].b = [eax].b + al
 539 @ 10008d50  [eax].b = [eax].b + al
 540 @ 10008d52  [eax].b = [eax].b + al
 541 @ 10008d54  [eax].b = [eax].b + al
 542 @ 10008d56  [eax].b = [eax].b + al
 543 @ 10008d58  [eax].b = [eax].b + al
 544 @ 10008d5a  [eax].b = [eax].b + al
 545 @ 10008d5c  [eax].b = [eax].b + al
 546 @ 10008d5e  [eax].b = [eax].b + al
 547 @ 10008d60  [eax].b = [eax].b + al
 548 @ 10008d62  [eax].b = [eax].b + al
 549 @ 10008d64  [eax].b = [eax].b + al
 550 @ 10008d66  [eax].b = [eax].b + al
 551 @ 10008d68  [eax].b = [eax].b + al
 552 @ 10008d6a  [eax].b = [eax].b + al
 553 @ 10008d6c  [eax].b = [eax].b + al
 554 @ 10008d6e  [eax].b = [eax].b + al
 555 @ 10008d70  [eax].b = [eax].b + al
 556 @ 10008d72  [eax].b = [eax].b + al
 557 @ 10008d74  [eax].b = [eax].b + al
 558 @ 10008d76  [eax].b = [eax].b + al
 559 @ 10008d78  [eax].b = [eax].b + al
 560 @ 10008d7a  [eax].b = [eax].b + al
 561 @ 10008d7c  [eax].b = [eax].b + al
 562 @ 10008d7e  [eax].b = [eax].b + al
 563 @ 10008d80  [eax].b = [eax].b + al
 564 @ 10008d82  [eax].b = [eax].b + al
 565 @ 10008d84  [eax].b = [eax].b + al
 566 @ 10008d86  [eax].b = [eax].b + al
 567 @ 10008d88  [eax].b = [eax].b + al
 568 @ 10008d8a  [eax].b = [eax].b + al
 569 @ 10008d8c  [eax].b = [eax].b + al
 570 @ 10008d8e  [eax].b = [eax].b + al
 571 @ 10008d90  [eax].b = [eax].b + al
 572 @ 10008d92  [eax].b = [eax].b + al
 573 @ 10008d94  [eax].b = [eax].b + al
 574 @ 10008d96  [eax].b = [eax].b + al
 575 @ 10008d98  [eax].b = [eax].b + al
 576 @ 10008d9a  [eax].b = [eax].b + al
 577 @ 10008d9c  [eax].b = [eax].b + al
 578 @ 10008d9e  [eax].b = [eax].b + al
 579 @ 10008da0  [eax].b = [eax].b + al
 580 @ 10008da2  [eax].b = [eax].b + al
 581 @ 10008da4  [eax].b = [eax].b + al
 582 @ 10008da6  [eax].b = [eax].b + al
 583 @ 10008da8  [eax].b = [eax].b + al
 584 @ 10008daa  [eax].b = [eax].b + al
 585 @ 10008dac  [eax].b = [eax].b + al
 586 @ 10008dae  [eax].b = [eax].b + al
 587 @ 10008db0  [eax].b = [eax].b + al
 588 @ 10008db2  [eax].b = [eax].b + al
 589 @ 10008db4  [eax].b = [eax].b + al
 590 @ 10008db6  [eax].b = [eax].b + al
 591 @ 10008db8  [eax].b = [eax].b + al
 592 @ 10008dba  [eax].b = [eax].b + al
 593 @ 10008dbc  [eax].b = [eax].b + al
 594 @ 10008dbe  [eax].b = [eax].b + al
 595 @ 10008dc0  [eax].b = [eax].b + al
 596 @ 10008dc2  [eax].b = [eax].b + al
 597 @ 10008dc4  [eax].b = [eax].b + al
 598 @ 10008dc6  [eax].b = [eax].b + al
 599 @ 10008dc8  [eax].b = [eax].b + al
 600 @ 10008dca  [eax].b = [eax].b + al
 601 @ 10008dcc  [eax].b = [eax].b + al
 602 @ 10008dce  [eax].b = [eax].b + al
 603 @ 10008dd0  [eax].b = [eax].b + al
 604 @ 10008dd2  [eax].b = [eax].b + al
 605 @ 10008dd4  [eax].b = [eax].b + al
 606 @ 10008dd6  [eax].b = [eax].b + al
 607 @ 10008dd8  [eax].b = [eax].b + al
 608 @ 10008dda  [eax].b = [eax].b + al
 609 @ 10008ddc  [eax].b = [eax].b + al
 610 @ 10008dde  [eax].b = [eax].b + al
 611 @ 10008de0  [eax].b = [eax].b + al
 612 @ 10008de2  [eax].b = [eax].b + al
 613 @ 10008de4  [eax].b = [eax].b + al
 614 @ 10008de6  [eax].b = [eax].b + al
 615 @ 10008de8  [eax].b = [eax].b + al
 616 @ 10008dea  [eax].b = [eax].b + al
 617 @ 10008dec  [eax].b = [eax].b + al
 618 @ 10008dee  [eax].b = [eax].b + al
 619 @ 10008df0  [eax].b = [eax].b + al
 620 @ 10008df2  [eax].b = [eax].b + al
 621 @ 10008df4  [eax].b = [eax].b + al
 622 @ 10008df6  [eax].b = [eax].b + al
 623 @ 10008df8  [eax].b = [eax].b + al
 624 @ 10008dfa  [eax].b = [eax].b + al
 625 @ 10008dfc  [eax].b = [eax].b + al
 626 @ 10008dfe  [eax].b = [eax].b + al
 627 @ 10008e00  [eax].b = [eax].b + al
 628 @ 10008e02  [eax].b = [eax].b + al
 629 @ 10008e04  [eax].b = [eax].b + al
 630 @ 10008e06  [eax].b = [eax].b + al
 631 @ 10008e08  [eax].b = [eax].b + al
 632 @ 10008e0a  [eax].b = [eax].b + al
 633 @ 10008e0c  [eax].b = [eax].b + al
 634 @ 10008e0e  [eax].b = [eax].b + al
 635 @ 10008e10  [eax].b = [eax].b + al
 636 @ 10008e12  temp6.b = [eax].b
 637 @ 10008e12  [eax].b = [eax].b + al
 638 @ 10008e12  flag:c = temp6.b + al u< temp6.b
 639 @ 10008e14  [eax - 0x7d33f000].b = adc.b([eax - 0x7d33f000].b, dl, flag:c)
 640 @ 10008e1a  temp7.b = [eax].b
 641 @ 10008e1a  [eax].b = [eax].b + dl
 642 @ 10008e1a  flag:o = add_overflow(temp7.b, dl)
 643 @ 10008e1c  if (flag:o) then 644 else 645 @ 0x10008e1e

 644 @ 10008e1c  jump(&data_10008e93)

 645 @ 10008e1e  [eax].b = [eax].b + dl
 646 @ 10008e20  eax, es = __les_gprz_memp([edx + 0x1000].6)
 647 @ 10008e26  [eax].b = [eax].b + al
 648 @ 10008e28  [eax].b = [eax].b + al
 649 @ 10008e2a  [eax].b = [eax].b + al
 650 @ 10008e2c  [eax].b = [eax].b + al
 651 @ 10008e2e  [eax].b = [eax].b + al
 652 @ 10008e30  [eax].b = [eax].b + al
 653 @ 10008e32  [eax].b = [eax].b + al
 654 @ 10008e34  [eax].b = [eax].b + al
 655 @ 10008e36  [eax].b = [eax].b + al
 656 @ 10008e38  [eax].b = [eax].b + al
 657 @ 10008e3a  [eax].b = [eax].b + al
 658 @ 10008e3c  [eax].b = [eax].b + al
 659 @ 10008e3e  [eax].b = [eax].b + al
 660 @ 10008e40  [eax].b = [eax].b + al
 661 @ 10008e42  [eax].b = [eax].b + al
 662 @ 10008e44  [eax].b = [eax].b + al
 663 @ 10008e46  [eax].b = [eax].b + al
 664 @ 10008e48  [eax].b = [eax].b + al
 665 @ 10008e4a  [eax].b = [eax].b + al
 666 @ 10008e4c  [eax].b = [eax].b + al
 667 @ 10008e4e  [eax].b = [eax].b + al
 668 @ 10008e50  [eax].b = [eax].b + al
 669 @ 10008e52  [eax].b = [eax].b + al
 670 @ 10008e54  [eax].b = [eax].b + al
 671 @ 10008e56  [eax].b = [eax].b + al
 672 @ 10008e58  [eax].b = [eax].b + al
 673 @ 10008e5a  [eax].b = [eax].b + al
 674 @ 10008e5c  [eax].b = [eax].b + al
 675 @ 10008e5e  [eax].b = [eax].b + al
 676 @ 10008e60  [eax].b = [eax].b + al
 677 @ 10008e62  [eax].b = [eax].b + al
 678 @ 10008e64  [eax].b = [eax].b + al
 679 @ 10008e66  [eax].b = [eax].b + al
 680 @ 10008e68  [eax].b = [eax].b + al
 681 @ 10008e6a  [eax].b = [eax].b + al
 682 @ 10008e6c  [eax].b = [eax].b + al
 683 @ 10008e6e  [eax].b = [eax].b + al
 684 @ 10008e70  [eax].b = [eax].b + al
 685 @ 10008e72  [eax].b = [eax].b + al
 686 @ 10008e74  [eax].b = [eax].b + al
 687 @ 10008e76  [eax].b = [eax].b + al
 688 @ 10008e78  [eax].b = [eax].b + al
 689 @ 10008e7a  [eax].b = [eax].b + al
 690 @ 10008e7c  [eax].b = [eax].b + al
 691 @ 10008e7e  [eax].b = [eax].b + al
 692 @ 10008e80  [eax].b = [eax].b + al
 693 @ 10008e82  [eax].b = [eax].b + al
 694 @ 10008e84  [eax].b = [eax].b + al
 695 @ 10008e86  [eax].b = [eax].b + al
 696 @ 10008e88  [eax].b = [eax].b + al
 697 @ 10008e8a  [eax].b = [eax].b + al
 698 @ 10008e8c  [eax].b = [eax].b + al
 699 @ 10008e8e  [eax].b = [eax].b + al
 700 @ 10008e90  [eax].b = [eax].b + al
 701 @ 10008e92  [eax].b = [eax].b + al
 702 @ 10008e94  [eax].b = [eax].b + al
 703 @ 10008e96  [eax].b = [eax].b + al
 704 @ 10008e98  [eax].b = [eax].b + al
 705 @ 10008e9a  [eax].b = [eax].b + al
 706 @ 10008e9c  [eax].b = [eax].b + al
 707 @ 10008e9e  [eax].b = [eax].b + al
 708 @ 10008ea0  [eax].b = [eax].b + al
 709 @ 10008ea2  [eax].b = [eax].b + al
 710 @ 10008ea4  [eax].b = [eax].b + al
 711 @ 10008ea6  [eax].b = [eax].b + al
 712 @ 10008ea8  [eax].b = [eax].b + al
 713 @ 10008eaa  [eax].b = [eax].b + al
 714 @ 10008eac  [eax].b = [eax].b + al
 715 @ 10008eae  [eax].b = [eax].b + al
 716 @ 10008eb0  [eax].b = [eax].b + al
 717 @ 10008eb2  [eax].b = [eax].b + al
 718 @ 10008eb4  [eax].b = [eax].b + al
 719 @ 10008eb6  [eax].b = [eax].b + al
 720 @ 10008eb8  [eax].b = [eax].b + al
 721 @ 10008eba  [eax].b = [eax].b + al
 722 @ 10008ebc  [eax].b = [eax].b + al
 723 @ 10008ebe  [eax].b = [eax].b + al
 724 @ 10008ec0  [eax].b = [eax].b + al
 725 @ 10008ec2  [eax].b = [eax].b + al
 726 @ 10008ec4  [eax].b = [eax].b + al
 727 @ 10008ec6  [eax].b = [eax].b + al
 728 @ 10008ec8  [eax].b = [eax].b + al
 729 @ 10008eca  [eax].b = [eax].b + al
 730 @ 10008ecc  [eax].b = [eax].b + al
 731 @ 10008ece  [eax].b = [eax].b + al
 732 @ 10008ed0  [eax].b = [eax].b + al
 733 @ 10008ed2  [eax].b = [eax].b + al
 734 @ 10008ed4  [eax].b = [eax].b + al
 735 @ 10008ed6  [eax].b = [eax].b + al
 736 @ 10008ed8  [eax].b = [eax].b + al
 737 @ 10008eda  [eax].b = [eax].b + al
 738 @ 10008edc  [eax].b = [eax].b + al
 739 @ 10008ede  [eax].b = [eax].b + al
 740 @ 10008ee0  [eax].b = [eax].b + al
 741 @ 10008ee2  [eax].b = [eax].b + al
 742 @ 10008ee4  [eax].b = [eax].b + al
 743 @ 10008ee6  [eax].b = [eax].b + al
 744 @ 10008ee8  [eax].b = [eax].b + al
 745 @ 10008eea  [eax].b = [eax].b + al
 746 @ 10008eec  [eax].b = [eax].b + al
 747 @ 10008eee  [eax].b = [eax].b + al
 748 @ 10008ef0  [eax].b = [eax].b + al
 749 @ 10008ef2  [eax].b = [eax].b + al
 750 @ 10008ef4  [eax].b = [eax].b + al
 751 @ 10008ef6  [eax].b = [eax].b + al
 752 @ 10008ef8  [eax].b = [eax].b + al
 753 @ 10008efa  [eax].b = [eax].b + al
 754 @ 10008efc  [eax].b = [eax].b + al
 755 @ 10008efe  [eax].b = [eax].b + al
 756 @ 10008f00  [eax].b = [eax].b + al
 757 @ 10008f02  [eax].b = [eax].b + al
 758 @ 10008f04  [eax].b = [eax].b + al
 759 @ 10008f06  [eax].b = [eax].b + al
 760 @ 10008f08  [eax].b = [eax].b + al
 761 @ 10008f0a  [eax].b = [eax].b + al
 762 @ 10008f0c  [eax].b = [eax].b + al
 763 @ 10008f0e  [eax].b = [eax].b + al
 764 @ 10008f10  [eax].b = [eax].b + al
 765 @ 10008f12  [eax].b = [eax].b + al
 766 @ 10008f14  [eax].b = [eax].b + al
 767 @ 10008f16  [eax].b = [eax].b + al
 768 @ 10008f18  [eax].b = [eax].b + al
 769 @ 10008f1a  [eax].b = [eax].b + al
 770 @ 10008f1c  [eax].b = [eax].b + al
 771 @ 10008f1e  [eax].b = [eax].b + al
 772 @ 10008f20  [eax].b = [eax].b + al
 773 @ 10008f22  [eax].b = [eax].b + al
 774 @ 10008f24  [eax].b = [eax].b + al
 775 @ 10008f26  [eax].b = [eax].b + al
 776 @ 10008f28  [eax].b = [eax].b + al
 777 @ 10008f2a  [eax].b = [eax].b + al
 778 @ 10008f2c  [eax].b = [eax].b + al
 779 @ 10008f2e  [eax].b = [eax].b + al
 780 @ 10008f30  [eax].b = [eax].b + al
 781 @ 10008f32  temp8.b = [eax].b
 782 @ 10008f32  [eax].b = [eax].b + al
 783 @ 10008f32  flag:c = temp8.b + al u< temp8.b
 784 @ 10008f34  [eax - 0x7d47f000].b = adc.b([eax - 0x7d47f000].b, dl, flag:c)
 785 @ 10008f3a  [eax].b = [eax].b + dl
 786 @ 10008f3c  undefined

10008f3d                                                                                         3c 00 10                               <..
10008f40  a8 82 00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10008f60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10008f80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10008fa0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10008fc0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10008fe0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................

10009000  int32_t data_10009000 = 0x0
10009004  int32_t data_10009004 = 0x0
10009008  int32_t data_10009008 = 0x0

1000900c                                      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00              ....................
10009020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009040  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 90 00 10 04 83 00 10 a0 75 00 10  .............................u..
10009060  98 82 00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009080  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00                                      ....................

10009094  int32_t data_10009094 = 0x0

10009098                                                                          00 00 00 00 00 00 00 00                          ........
100090a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100090c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100090e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009100  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009120  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009140  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009160  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 90 00 10 04 83 00 10 a0 75 00 10  .............................u..
10009180  88 82 00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100091a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100091c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100091e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009200  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009220  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009240  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009260  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009280  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 90 00 10 cc 82 00 10 70 75 00 10  ............................pu..
100092a0  78 82 00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  x...............................
100092c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100092e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009300  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009320  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009340  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009360  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009380  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100093a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 90 00 10 cc 82 00 10 70 75 00 10  ............................pu..
100093c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100093e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009400  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009420  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009440  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009460  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009480  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100094a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100094c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100094e0  12 10 00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10009500  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00 01 00 01 00 a0 00 00 80 20 00 00 80  ............................ ...
10009520  18 00 00 00 38 00 00 80 00 00 00 00 00 00 00 00 04 00 00 00 01 00 00 00 b4 00 00 80 50 00 00 80  ....8.......................P...
10009540  00 00 00 00 00 00 00 00 04 00 00 00 00 00 01 00 02 00 00 00 68 00 00 80 00 00 00 00 00 00 00 00  ....................h...........
10009560  04 00 00 00 00 00 01 00 00 00 00 00 80 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00 00 01 00  ................................
10009580  09 04 00 00 90 00 00 00 cc f0 00 00 1c 84 01 00 e4 04 00 00 00 00 00 00 e8 74 02 00 52 01 00 00  .........................t..R...
100095a0  e4 04 00 00 00 00 00 00 09 00 46 00 54 00 58 00 4a 00 4a 00 49 00 48 00 41 00 59 00 0a 00 4f 00  ..........F.T.X.J.J.I.H.A.Y...O.
100095c0  47 00 54 00 4d 00 43 00 55 00 48 00 5a 00 42 00 4e 00 00 00 50 06 00 00 be 10 79 00 10 b9 20 f7  G.T.M.C.U.H.Z.B.N...P.....y... .
100095e0  00 10 bb ab 79 00 10 89 f5 03 4c 24 04 eb 3f                                                     ....y.....L$..?

100095ef  uint32_t __convention("regparm") sub_100095ef(int32_t arg1, int32_t arg2, int32_t arg3 @ ebp, int32_t arg4 @ esi, int32_t arg5 @ edi)

   0 @ 100095ef  edx = edx & 0xfffffff0
   1 @ 100095f2  ecx = 0
   2 @ 100095f4  eax = 0
   3 @ 100095f4  goto 4 @ 0x100095f6

   4 @ 100095f6  push(ecx)
   5 @ 100095f7  ecx = 0x10
   6 @ 100095f7  goto 7 @ 0x100095fc

   7 @ 100095fc  eax = zx.d([esi + ecx - 1].b)
   8 @ 10009601  al = [ebx + eax].b
   9 @ 10009604  [ebp + ecx + 0x62f].b = al
  10 @ 1000960b  ecx = ecx - 1
  11 @ 1000960b  if (ecx != 0) then 7 @ 0x100095fc else 12 @ 0x1000960d

  12 @ 1000960d  ecx = 0x10
  13 @ 1000960d  goto 14 @ 0x10009612

  14 @ 10009612  al = [ebp + ecx + 0x62f].b
  15 @ 10009619  [edi + ecx - 1].b = al
  16 @ 1000961d  ecx = ecx - 1
  17 @ 1000961d  if (ecx != 0) then 14 @ 0x10009612 else 18 @ 0x1000961f

  18 @ 1000961f  ecx = pop
  19 @ 10009620  ebx = ebx + 0x10
  20 @ 10009623  edi = edi + 0x10
  21 @ 10009626  ecx = ecx + 0x10
  22 @ 1000962b  if (ecx != edx) then 4 @ 0x100095f6 else 23 @ 0x1000962d

  23 @ 1000962d  <return> jump(pop)

1000962e                                            56 51 53 8d 99 20 fa ff ff 8d 7d 70 8d 15 c0 05 00 00                VQS.. ....}p......
10009640  8d 71 f0 e8 a7 ff ff ff 01 00 b5 00 41 8b 06 28 00 9d 89 24 05 00 5c 10 00 20 9d 00 2c 01 9d 01  .q..........A..(...$..\.. ..,...
10009660  00 00 01 24 06 06 9d 06 18 01 00 06 01 00 00 00 1c 06 00 01 9d 9d 00 9d 8b 00 06 9d 00 0c 06 28  ...$...........................(
10009680  01 9d 08 00 00 00 06 00 52 04 1b 06 8b 00 7e 85 2c 8d 8b 8b 95 00 00 12 00 ff 50 8d ff b5 ff ec  ........R.....~.,.........P.....
100096a0  50 b9 00 04 d3 ff 8b 00 54 56 c1 0e 14 8b 51 04 1c 24 83 24 8d 53 04 8b a0 75 ff 89 d2 04 00 00  P.......TV....Q..$.$.S...u......
100096c0  59 00 50 81 5e e0 0e f9 88 00 09 e8 02 db 04 73 00 85 e8 00 00 00 02 00 00 85 85 00 17 ff 8b 08  Y.P.^..........s................
100096e0  00 6a 8b 50 05 db d0 6a 00 51 00 50 00 b9 24 04 d0 8b 04 00 ff 83 02 00 b4 00 04 00 54 00 06 10  .j.P...j.Q.P..$.............T...
10009700  40 8d ec 49 68 00 00 ff ef ff b4 00 8d 00 00 00 06 04 ff 8b 08 d0 50 85 59 91 c4 d5 04 58 50 52  @..Ih.................P.Y....XPR
10009720  e2 5e 83 5a 59 8b 58 5b 8a 88 83 9d c0 1c ff 08 8b 54 08 00 04 54 06 00 8b 02 ff 85 e2 18 e9 c1  .^.ZY.X[.........T...T..........
10009740  8b 08 0b 00 f6 85 06 00 8b 01 74 04 11 8b fc 88 c0 5c c9 24 83 d3 54 0c 49 83 13 03 e2 00 05 e1  ..........t......\.$..T.I.......
10009760  b9 c1 01 00 f6 bc 00 51 0d 00 a8 00 05 74 00 05 00 a8 0d 8d 00 8b 22 84 d3 49 24 24 08 04 24 0c  .......Q.....t........"..I$$..$.
10009780  4c 8b 5c 51 8b 8d 50 ff 59 5a 8d 00 24 8b 58 cc                                                  L.\Q..P.YZ..$.X.

10009790  int32_t __convention("regparm") sub_10009790(char* arg1, char* arg2, int32_t* arg3, void* arg4 @ ebp, int32_t* arg5 @ esi, int32_t* arg6 @ edi)

   0 @ 10009790  temp0.b = dl
   1 @ 10009790  dl = dl + ah
   2 @ 10009790  flag:c = temp0.b + ah u< temp0.b
   3 @ 10009790  flag:p = unimplemented
   4 @ 10009790  flag:a = unimplemented
   5 @ 10009790  flag:z = temp0.b == neg.b(ah)
   6 @ 10009790  flag:s = temp0.b + ah s< 0
   7 @ 10009790  flag:o = add_overflow(temp0.b, ah)
   8 @ 10009792  push(flagbit.d(flag:o, 0xb) | flagbit.d(flag:d, 0xa) | flagbit.d(flag:s, 7) | flagbit.d(flag:z, 6) | flagbit.d(flag:a, 4) | flagbit.d(flag:p, 2) | flagbit.d(flag:c, 0))
   9 @ 10009793  [esi].d = eax
  10 @ 10009795  [ebx {0}].b = sbb.b([ebx {0}].b, 3, flag:c)
  11 @ 10009798  [edx + 0x73].b = [edx + 0x73].b + ch
  12 @ 1000979b  [edi + ecx].d = [edi + ecx].d + eax
  13 @ 1000979e  [edx].b = [edx].b + ch
  14 @ 100097a1  [ebp - 0x7bfdff24].b = [ebp - 0x7bfdff24].b + bh
  15 @ 100097a7  [eax + 5].b = [eax + 5].b + al
  16 @ 100097aa  al = al + [ebx {0}].b
  17 @ 100097ac  push(zx.d(0x68))
  18 @ 100097ae  ebp = ebp + 1
  19 @ 100097af  [edx - 0x73].d & ebp
  20 @ 100097b2  push(zx.d(0))
  21 @ 100097b4  [eax].b = [eax].b + al
  22 @ 100097b6  [eax].b = [eax].b + al
  23 @ 100097b8  [eax + (edx << 1) + 0xf008b04].d = [eax + (edx << 1) + 0xf008b04].d - 1
  24 @ 100097c0  edi = eax
  25 @ 100097c2  bh = bh + bh
  26 @ 100097c4  [ebp + 0x8bd000].d & esi
  27 @ 100097ca  [ebp + 0x516a2000].b = [ebp + 0x516a2000].b + cl
  28 @ 100097d0  ecx = [ecx].d
  29 @ 100097d2  [eax].b = [eax].b + al
  30 @ 100097d4  push(eax)
  31 @ 100097d5  eax = [esi].d
  32 @ 100097d7  [ebx - 0x74f9db43 {0x8b0624bd}].b = [ebx - 0x74f9db43 {0x8b0624bd}].b + al
  33 @ 100097dd  [ebp + 0xcc32004].b = [ebp + 0xcc32004].b + cl
  34 @ 100097e3  [ebp + 0x41cb0030].d = [ebp + 0x41cb0030].d + ebx
  35 @ 100097e9  push(&data_100097ee)
  36 @ 100097ee  temp1.b = [eax].b
  37 @ 100097ee  [eax].b = [eax].b + al
  38 @ 100097ee  flag:c = temp1.b + al u< temp1.b
  39 @ 100097f0  [-0xfffffffff4ba8b06].b = adc.b([-0xfffffffff4ba8b06].b, al, flag:c)
  40 @ 100097f6  [ebp + 0x24ff009d].b = [ebp + 0x24ff009d].b + dh
  41 @ 100097fc  [eax].d = [eax].d - 1
  42 @ 100097fe  [0xfd5044].b = [0xfd5044].b + al
  43 @ 10009804  edx = [ebx + 0x6a {0x6a}].d
  44 @ 10009807  ecx = ebx - 0x72f9f000
  45 @ 1000980d  [edi + (ebx << 2)].b = [edi + (ebx << 2)].b + al
  46 @ 10009810  [ebp + 0x9d536a].b = [ebp + 0x9d536a].b ^ al
  47 @ 10009816  temp2.b = [eax - 0x75].b
  48 @ 10009816  [eax - 0x75].b = [eax - 0x75].b + dl
  49 @ 10009816  flag:c = temp2.b + dl u< temp2.b
  50 @ 10009819  esp = esp - 1
  51 @ 1000981a  [esi - 0x7b].b = rrc.b([esi - 0x7b].b, 1, flag:c)
  52 @ 10009820  if ([ecx {0x8d061000}].d == 0x24) then 53 @ 0x1000982e else 62 @ 0x10009822

  53 @ 1000982e  bh = bh s>> 1
  54 @ 10009830  eax, es = __les_gprz_memp([eax].6)
  55 @ 10009832  al = al - 0x4d
  56 @ 10009834  [ebp + (eax << 2) + 4].d = [ebp + (eax << 2) + 4].d
  57 @ 10009839  [eax].d & eax
  58 @ 1000983b  eax = eax | 0xf6c76400
  59 @ 10009840  dl & ah
  60 @ 10009842  [eax].b = [eax].b + al
  61 @ 10009844  undefined

  62 @ 10009822  jump([eax + (eax << 3)].d)

10009825                 24 04 10 00 b9 75 08 ac 8b                                                             $....u...
10009845                 64 05 00 05 8d 00 00 00 00 50 00 00 00 05 85 44 85 8d 54 00 00 05 6a 00 00 6a 00       d........P.....D..T...j..j.
10009860  50 6a 64 00 00 6a 6a 6a 8b 00 6a 45 00 05 04 c7 85 85 00 00 8d 00 00 50 08 20 d0 c4 eb 08 24 6c  Pjd..jjj..jE...........P. ....$l
10009880  83 89 ff 83 04 61 58 c4 89 00 2c 30 24 06 06 34 9d 9d 87 00 89 00 00 5b 06 ad 9d 00 1c 53 8b 00  .....aX...,0$..4.......[.....S..
100098a0  00 00 8b 9d 06 34 8b 30 00 c1 00 d2 00 b9 89 f1 31 f7 06 f3 c3 b8 1d 01 b8 00 41 e2 00 89 00 0b  .....4.0........1.........A.....
100098c0  f7 14 a7 89 00 f7 ca c1 f7 83 29 89 c1 c8 c3 d8 d2 89 e2 cb 31 ec 89 f7 00 6a 89 6a e2 00 00 6a  ..........).........1....j.j...j
100098e0  00 52 04 00 6a 00 6a 6a 05 d2 95 00 5a 52 ff 00 00 00 8d 95 04 8b 8b 2b e8 ff 24 bf 83 ff ff ff  .R..j.jj....ZR.........+..$.....
10009900  04 a5 04 ff c4 81 ff ff 00 ff f3 89 07 95 bf f6 00 31 c2 04 00 ff 42 00 89 04 00 ff e8 ff 46 b5  .................1....B.......F.
10009920  ff 94 00 b7 8d 00 0f d2 ff ff 46 75 83 e6 73 e8 03 ff 00 ff fe ff bf ff 00 ff 89 00 95 00 63 e8  ..........Fu..s...............c.
10009940  04 00 ff ff 52 ff bf ff 8b 00 0f 95 b7 56 06 28 89 85 ff 00 d2 00 04 00 d0 06 00 04 8d 00 2c 9d  ....R........V.(..............,.
10009960  5e 8b 8b 51 8d 00 00 ff 50 b5 8b 69 1b 04 ff d3 8d ff 00 00 8d 56 00 51 b5 00 00 52 00 04 00 04  ^..Q....P..i.........V.Q...R....
10009980  b5 4e 04 00 ff ff 00 ff 00 04 4a ff 04 b5 42 b5 00 ff b5 04 00 00 46 00 1a 53 8d 00 9d 00 00 00  .N........J...B.......F..S......
100099a0  03 04 00 8d fb ff 53 9d 00 6a 83 8d c4 85 00 6a c3 50 d0 04 20 01 1a 00 74 b3 85 00 03 ff 9d 8b  ......S..j.....j.P.. ...t.......
100099c0  00 0e 8b 85 05 04 d0 c0 c3 38 00 b8 50 01 30 25 d3 7b 00 00 ff 58 00 00 2d 58 25 2d 30 25 34 30  .........8..P.0%.{...X..-X%-0%40
100099e0  58 25 2d 34 34 2d 30 58 00 00 30 30 38 34 00 00 25 00 25 7d 58 00 58 00 00 00 00 00 00 00 00 00  X%-44-0X..0084..%.%}X.X.........
10009a00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 35 47 00 24 47 44 32 65  ........................5G.$GD2e
10009a20  74 75 00 63 53 64 47 45 43 75 23 86 64 33 00 5c 74 3a 54 85 64 73 64 56 73 6e 72 64 33 6c 69 72  tu.cSdGECu#.d3.\t:T.dsdVsnrd3lir
10009a40  2e 70 65 00 32 74 6c 77 00 6b 41 00 00 00 00 00 00 00 66 00 00 65 00 00 00 61 6e 32 65 2e 65 72  .pe.2tlw.kA.......f..e...an2e.er
10009a60  33 43 72 6c 6c 74 64 6c 00 00 46 41 69 00 00 00 65 00 65 00 6c 57 00 00 00 00 69 69 74 6c 00 00  3Crlltdl..FAi...e.e.lW....iitl..
10009a80  46 00 72 00 65 00 65 00 6e 00 00 6f 00 73 65 6c 6c 64 00 48 43 00 65 61 61 72 00 00 00 00 50 65  F.r.e.e.n..o.selld.HC.eaar....Pe
10009aa0  00 74 00 72 00 6f 43 65 00 6e 65 00 73 00 65 70 41 4f 63 00 73 50 00 00 00 00 6f 73 63 00 00 00  .t.r.oCe.ne.s.epAOc.sP....osc...
10009ac0  73 00 72 00 65 56 00 00 65 78 72 6c 74 50 45 74 61 63 69 6f 75 00 72 74 65 00 00 65 00 6e 00 41  s.r.eV..exrltPEtaciou.rte..e.n.A
10009ae0  70 78 00 75 4f 00 4d 74 43 65 00 00 00 00 72 72 00 75 00 65 00 6e 47 74 00 56 50 65 72 73 74 65  px.uO.MtCe....rr.u.e.nGt.VPerste
10009b00  63 47 74 49 6f 6f 73 64 61 6e 75 6e 6d 66 6f 69 49 74 6c 72 65 41 6f 6d 72 00 00 68 00 4b 00 00  cGtIoosdanunmfoiItlreAomr..h.K..
10009b20  00 33 00 74 00 00 64 38 75 c6 00 75 00 57 83 48 f0 ff 00 0f 00 56 35 0c 89 ff 83 a5 89 3b f4 23  .3.t..d8u..u.W.H.....V5......;.#
10009b40  47 c7 e6 15 0c dc 74 47 72 48 00 8b 00 c6 45 ff 3b 50 cf 89 45 8b 53 43 75 49 fc 75 c6 45 ff 00  G.....tGrH....E.;P..E.SCuI.u.E..
10009b60  53 37 e0 e1 02 e8 00 dc 00 83 e8 83 ff 39 fc 75 e8 7d ff 4d d8 00 d8 c4 00 75 14 22 5a e6 6a 75  S7...........9.u.}.M.....u."Z.ju
10009b80  5e 00 ff 00 00 83 89 00 0f 0c f7 c6 83 75 35 83 ff 48 01 e6 0f 89 57 83 68 6c 0c ff 56 89 64 6e  ^............u5..H....W.hl..V.dn
10009ba0  c7 61 75 55 f0 65 3b 6e 46 65 45 70 78 74 74 6c 65 69 64 6f 63 72 69 6e 00 dc 02 49 8b 75 00 ff  .auU.e;nFeEpxttleidocrin...I.u..
10009bc0  37 00 00 00 3b ff 45 00 4d c4 d8 83 e8 00 d8 fc 7d 75 75 ff 53 5a 39 14                          7...;.E.M.......}uu.SZ9.

10009bd8  int32_t data_10009bd8 = 0x75000000

10009bdc                                                                                      00 c6 80 00                              ....

10009be0  int32_t data_10009be0 = 0x108310f0

10009be4              e8 10 e6 79 00 00 00 00 00 00 79 10 4c 10 68 8c 00 10 00 f7 00 00 f7 80 00 00 80 48      ...y......y.L.h............H
10009c00  34 10 9c 00 10 10 10 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0a 02 04 0c 08 03 05 0e  4...............................
10009c20  0b 0f 00 09 07 06 01 0d 68 00 00 00 56 8b 74 24 0c 83 fe 01 75 05 e8 f9 96 ff ff 8b 44 24 10 8b  ........h...V.t$....u.......D$..
10009c40  4c 24 08 8b d6 e8 32 b3 ff ff 5e c2 0c 00 ff 25 e0 80 00 10 ff 25 e4 80 00 10 ff 25 88 80 00 10  L$....2...^....%.....%.....%....
10009c60  cc cc cc cc cc cc cc cc cc cc cc cc                                                              ............

10009c6c  int32_t __convention("regparm") sub_10009c6c(void* arg1, void** arg2, char* arg3, void* arg4 @ ebp)

   0 @ 10009c6c  push(ecx)
   1 @ 10009c6d  ecx = esp + 8 {arg_4}
   2 @ 10009c71  ecx = ecx - eax
   3 @ 10009c73  ecx = ecx & 0xf
   4 @ 10009c76  temp1.d = eax
   5 @ 10009c76  eax = eax + ecx
   6 @ 10009c76  flag:c = temp1.d + ecx u< temp1.d
   7 @ 10009c78  ecx = sbb.d(ecx, ecx, flag:c)
   8 @ 10009c7a  eax = eax | ecx
   9 @ 10009c7c  ecx = pop
  10 @ 10009c7d  goto 11 @ 0x10009c9c

  11 @ 10009c9c  temp2.b = [ecx].b
  12 @ 10009c9c  flag:c = bh u< temp2.b
  13 @ 10009c9f  [eax + 0x79].b = adc.b([eax + 0x79].b, al, flag:c)
  14 @ 10009ca2  [eax].b = [eax].b + dl
  15 @ 10009ca4  temp3.d = eax
  16 @ 10009ca4  eax = eax + 1
  17 @ 10009ca5  if (temp3.d s>= -1) then 18 @ 0x10009ca8 else 22 @ 0x10009ca7

  18 @ 10009ca8  [eax].b = [eax].b + al
  19 @ 10009caa  edx = pop
  20 @ 10009cab  [eax + 0x3ffff00].b = [eax + 0x3ffff00].b + dl
  21 @ 10009cab  goto 27 @ 0x10009cb1

  22 @ 10009ca7  [eax].b = [eax].b + al
  23 @ 10009ca9  [edx].b = [edx].b + bl
  24 @ 10009cad  bh = bh + bh
  25 @ 10009caf  [ebx {0}].d = [ebx {0}].d + 1
  26 @ 10009caf  goto 27 @ 0x10009cb1

  27 @ 10009cb1  [ebp + 4].b = [ebp + 4].b + cl
  28 @ 10009cb4  [eax].b = [eax].b + al
  29 @ 10009cb6  [eax].b = [eax].b + al
  30 @ 10009cb8  [eax].b = [eax].b + al
  31 @ 10009cba  [eax].b = [eax].b + al
  32 @ 10009cbc  [eax].b = [eax].b + al
  33 @ 10009cbe  [eax].b = [eax].b + al
  34 @ 10009cc0  [eax].b = [eax].b + al
  35 @ 10009cc2  eax = 0x40
  36 @ 10009cc7  [eax {0x40}].b = [eax {0x40}].b + al
  37 @ 10009cc9  [eax {0x40}].b = [eax {0x40}].b + al
  38 @ 10009ccb  [eax {0x40}].b = [eax {0x40}].b + al
  39 @ 10009ccd  [eax {0x40}].b = [eax {0x40}].b + al
  40 @ 10009ccf  [eax {0x40}].b = [eax {0x40}].b + al
  41 @ 10009cd1  [eax {0x40}].b = [eax {0x40}].b + al
  42 @ 10009cd3  [eax {0x40}].b = [eax {0x40}].b + al
  43 @ 10009cd5  [eax {0x40}].b = [eax {0x40}].b + al
  44 @ 10009cd7  [eax {0x40}].b = [eax {0x40}].b + al
  45 @ 10009cd9  [eax {0x40}].b = [eax {0x40}].b + al
  46 @ 10009cdb  [eax {0x40}].b = [eax {0x40}].b + al
  47 @ 10009cdd  [eax {0x40}].b = [eax {0x40}].b + al
  48 @ 10009cdf  push(ebp)
  49 @ 10009cdf  ebp = esp
  50 @ 10009ce3  [eax {0x40}].b = [eax {0x40}].b + al
  51 @ 10009ce5  [eax {0x40}].b = [eax {0x40}].b + al
  52 @ 10009ce7  [ecx].b = [ecx].b + al
  53 @ 10009ce9  push(esp)
  54 @ 10009cea  ds = pop.w
  55 @ 10009ceb  ah = 0xba
  56 @ 10009ced  [ecx].d = [ecx].d | esp
  57 @ 10009cef  undefined

10009c82        51 8d 4c 24 08 2b c8 83 e1 07 03 c1 1b c9 0b c1 59 e9 0c 00 00 00 34 79 00 10                Q.L$.+..........Y.....4y..
1000a0c5                 a6 5c 79 64 26 ee 55 01 8c a6 7a f7 a2 6c cc 89 09 74 bc a2 cd 2c cd f4 e5 08 ad       .\yd&.U...z..l...t...,.....
1000a0e0  e6 f7 81 c8 0d 4c 7f ed 87 68 54 f2 f4 01                                                        .....L...hT...
1000a11b                                                                                   3a b7 1e 90 2c                             :...,
1000a120  47 28 39 15 e2 bb 90 a3 93 8b 18 c3 b5 f6                                                        G(9...........
1000a13e                                                                                            0e 57                                .W
1000a140  60 d3 92 08 bf 3d 7c 42 73 69 fa 2a 92 81 e1 87 32 fc 53 66 a7 46 b1 9e fa e2 a7 6b 38 50 cc 98  `....=|Bsi.*....2.Sf.F.....k8P..
1000a160  1a e6 cf 01 a5 1a 30 57 0b 0c d1 f2 7f 52 30 84 27 17 86 7f 29 5d 98 8f 65 46 3d c9 fc d1 0c fd  ......0W.....R0.'...)]..eF=.....
1000a180  77 ab a9 c9 4f e4 20 96 05 c1 28 1a 9b ed 5e b1 42 ea 9a be 31 d8 48 ab 93 ee 4d 9f a6 83 45 cf  w...O. ...(...^.B...1.H...M...E.
1000a1a0  23 5e e1 3d 5c 63 88 74 4f 74 39 06 28 9c 4e 70 2b c6 b5 5e b5 b4 fa 13 d7 ee 2f a5 d4 14 9a b8  #^.=\c.tOt9.(.Np+..^....../.....
1000a1c0  16 e7 cd f0 16 24 86 5a 24 61 46 c3 4d 3d 17 7c 47 c9 13 b9 3c 1d 0e ad 99 40 0e 5c 26 d0 86 9c  .....$.Z$aF.M=.|G...<....@.\&...
1000a1e0  f9 72 c3 fa 05 eb 08 86 ea da 74 54 a1 d3 42 f7 39 98 6f 59 91 6e 2c a1 e6 08 ee d0 b6 1b ab 0d  .r........tT..B.9.oY.n,.........
1000a200  fd 06 5c 09 48 6c 41 26 d5 6d 95 b6 7a a3 47 41 cd df d0 b8 65 96 40 9a 0e 4e 26 49 14 4e 14 05  ..\.HlA&.m..z.GA....e.@..N&I.N..
1000a220  05 9c 88 75 bd 1b f4 b7 a2 f2 64 d5 8e a2 eb 02 d8 91 a7 65 99 2b 2d 96 ac ee 56 93 ca 4b 0d a8  ...u......d........e.+-...V..K..
1000a240  a6 76 1d 21 c5 10 e2 f6 32 3c ca f6 7b cf 97 f8 78 40 bf 8a 3f 2d fe ee fc 3b 33 cf 4b de f2 db  .v.!....2<..{...x@..?-...;3.K...
1000a260  34 ce 02 30 8a 88 2e 76 7a 6c ab 01 0c 5c 1d b2 49 cc fa b4 d9 ae ee cf 64 89 5b 91 ff d9 00 72  4..0...vzl...\..I.......d.[....r
1000a280  59 74 83 2f b2 d7 18 c0 51 aa 22 c9 15 63 11 0e 4c 3d 66 4d a0 6a 03 88 bf 6b 5b 13 13 4e 1f 4e  Yt./....Q."..c..L=fM.j...k[..N.N
1000a2a0  53 86 ae ea aa eb 12 f4 00 5b 33 c0 af c5 04 ae 9b f3 c8 dc 61 29 38 26 7f 7a 81 3f b5 15 c8 ff  S........[3.........a)8&.z.?....
1000a2c0  75 d3 48 74 e0 aa 57 52 3d 98 00 89 68 c1 89 1b 91 98 42 cb 9d 80 39 a5 19 65 d1 fb be 20 fc 26  u.Ht..WR=...h.....B...9..e... .&
1000a2e0  1a d7 d2 02 37 c8 36 62 f6 58 d3 c9 da 5d c0 04 6c 59 d4 b6 a7 77 38 56 b8 22 da fb 97 3f f7 3a  ....7.6b.X...]..lY...w8V."...?.:
1000a300  d1 5d 9e e0 d3 93 3a 4f 81 f6 b5 df b1 c0 d6 cc 57 31 43 d0 42 4a c8 dc a9 42 9d 45 89 c2 be 54  .]....:O........W1C.BJ...B.E...T
1000a320  32 72 af 54 19 5e 3f aa 86 57 b2 12 d2 dc 61 a1 ee fb 91 1d 68 3f c3 5e b7 08 12 c0 24 c8 b5 07  2r.T.^?..W....a.....h?.^....$...
1000a340  8e 80 5b 81 a1 be 33 62 26 4c de 47 40 93 2f 2f b1 15 e4 e4 42 28 72 a9 16 56 d8 eb 13 bd f2 d8  ..[...3b&L.G@.//....B(r..V......
1000a360  74 7f fa 9e a0 39 f7 6e ad a5 05 28 10 11 ab 72 9e 37 9e 48 5c a2 cf 58 7e fc e1 89 ed b9 58 03  t....9.n...(...r.7.H\..X~.....X.
1000a380  59 18 5a 44 5b d0 39 af ac 9a 8e 3b                                                              Y.ZD[.9....;

1000a38c  int32_t data_1000a38c = -0x26084ba4
1000a390  int32_t data_1000a390 = 0x583d24cc
1000a394  int32_t data_1000a394 = 0x2413a343
1000a398  int32_t data_1000a398 = -0x1c234f50
1000a39c  int32_t data_1000a39c = -0x2ccfcc92
1000a3a0  int32_t data_1000a3a0 = -0x40b98a6e

1000a3a4              db 55 ef 0d 75 6b 48 7f 25 f1 08 64 bf 84 22 42 6f d3 93 29 ad e2 75 23 9a 0e 4f df      .U..ukH.%..d.."Bo..)..u#..O.
1000a3c0  d2 30 29 46 c0 17 9d c0 0f 18 2c a9 3b 7c 94 a3 58 6b fa 64 8d aa ce b6 a5 2c 4f df e0 20 53 b2  .0)F......,.;|..Xk.d.....,O.. S.
1000a3e0  a4 f8 cc 6d                                                                                      ...m

1000a3e4  int32_t data_1000a3e4 = -0x3a329448
1000a3e8  int32_t data_1000a3e8 = 0x504e5fae
1000a3ec  int32_t data_1000a3ec = -0x5b9f6686
1000a3f0  int32_t data_1000a3f0 = -0x2fbc54b2

1000a3f4                                                              51 7d 8d 80 1b dd 80 fa 33 f5 37 69                      Q}......3.7i
1000a400  data_1000a400:
1000a400  16 82 81 75 ed d2 6d 49 52 5a 29 96 11 67 87 95 ab fe 1e ab 62 ec e8 a9 82 94 cb a5 22 e2 37 01  ...u..mIRZ)..g......b.......".7.
1000a420  0d 91 9b 8f 3d 57 f6 66 5d cb 9e 4e 02 40 a0 2e 50 68 01 c4 01 f9 7d 86 01 a8 f6 ce 3b 59 79 e0  ....=W.f]..N.@..Ph....}.....;Yy.
1000a440  7e 39 83 33 a9 3c 36 1a f4 80 72 21 94 ba 51 56 8f 01 76 f2 e5 3d b3 3f 80 db 37 c6 45 e8 1f ce  ~9.3.<6...r!..QV..v..=.?..7.E...
1000a460  d7 2b a7 01 11 bf ec b6 92 38 6c 91 8b 60 fe 61 bb 12 9a 2e d8 00 f2 0d 86 e0 42 35 03 04 df b8  .+.......8l..`.a..........B5....
1000a480  49 68 89 0d ef de b2 76 db 4f cf 76 41 67 a1 89 9d 7e b5 eb 9b bb ec 24 2a 4b 98 6f 66 af e8 f7  Ih.....v.O.vAg...~.....$*K.of...
1000a4a0  01 93 40 75 ee 1c 0b ae bb 2e 45 f1 df 80 05 89 aa 4e a3 53 fa 20 01 6d 51 0f 12 63 bd bb af 1e  ..@u......E......N.S. .mQ..c....
1000a4c0  98 5a 37 be 0c f9 1b ad cd 57 1d 16 6f 7c 3f ff 05 1f 1e f9 58 d2 c0 6e 1b d4 47 f8 b2 4f 68 01  .Z7......W..o|?.....X..n..G..Oh.
1000a4e0  25 10 65 64 cf eb df 77 9e b3 8a 7e f0 69 6e 16 2c 97 89 69 81 c4 c9 86 ea 1a 9c d2 6f 78 92 8c  %.ed...w...~.in.,..i........ox..
1000a500  0b dd df ca 20 fc 32 8d a9 3b 02 d2 9e a0 4c 1f 96 8a 6c d1 e3 e2 17 42 3b 97 eb cd 69 69 be 52  .... .2..;....L...l....B;...ii.R
1000a520  42 d0 38 0c 0e f3 f2 2a 56 76 c5 73 31 a9 97 85 5c e0 8b ac 70 9f 6d 57 44 86 a2 40 ea 61 82 5a  B.8....*Vv.s1...\...p.mWD..@.a.Z
1000a540  65 3b 8f c8 7b b0 38 c2 0c fb 97 c9 01 ac ba 8d c2 0d 7d ad 76 39 d2 20 37 90 da a1 46 36 b3 8c  e;..{.8...........}.v9. 7...F6..
1000a560  90 3f c9 1a 18 14 0d 42 81 4a 29 c8 25 9d b1 26 0b 65 88 a2 17 7d 49 2f 0d 20 27 f4 85 e5 e4 71  .?.....B.J).%..&.e...}I/. '....q
1000a580  6f 49 c5 40 a9 ab 90 0f a0 db 23 08 c8 30 88 4f 6f b8 d0 a8 ff ff 68 c3 fd 8b 1f 13 86 7b 35 34  oI.@......#..0.Oo.....h......{54
1000a5a0  eb 09 ae 98 a3 98 72 ed 3f cc db 28 7e 1f 0d d2 83 2c 74 37 09 8f de d5 57 54 c7 53 21 dc 60 ff  ......r.?..(~....,t7....WT.S!.`.
1000a5c0  f6 5e 09 10 08 eb af 37 5b 01 11 f7 c5 08 b8 35 0d 5e 1d 81 87 cb 83 e9 c5 55 d8 f3 62 44 02 49  .^.....7[......5.^.......U..bD.I
1000a5e0  17 64 8f 92 5e 56 29 78 d7 4f 77 c1 89 d1 fa 24 21 f0 f9 db 9d 65 c6 97 65 c2 ad a5 1c 5f 08 88  .d..^V)x.Ow....$!....e..e...._..
1000a600  11 d9 cc 89 1c 21 0a 1c e1 03 b6 78 0c 01 ea 4c 94 0e 10 01 1d 51 8d 20 58 42 2a 1f ed 14 4b c4  .....!.....x...L.....Q. XB*...K.
1000a620  01 db 32 7d 45 cf ea ca 61 42 d2 c0 59 7c b8 50 c6 02 75 b8 5d 7e c1 c0 c2 b0 e4 db df 86 ad 23  ..2}E...aB..Y|.P..u.]~.........#
1000a640  60 24 0d b5 c3 9f f6 bd 71 71 e3 e2 3f 53 9a 6b 80 ed 04 24 71 b9 91 91 7f 71 9b 02 c2 a3 73 30  `$......qq..?S.k...$q....q....s0
1000a660  c6 3a 33 ba 2d 60 a2 03 dc 9a 3f af 55 45 e9 14 ff 64 b0 59 80 90 68 0d 60 d1 f0 ec bb ca 12 15  .:3.-`....?.UE...d.Y..h.`.......
1000a680  97 c6 cb 0d 66 1e ab 2d cb 7a 46 36 5a 33 fe a4 67 74 94 b0 1f d9 d4 29 cc a8 f5 37 a7 9e 49 48  ....f..-.zF6Z3..gt.....)...7..IH
1000a6a0  1c 57 d1 41 ef b7 6b 9e 4d 43 7c 87 8b ec c4 d9 b0 fd 63 68 d5 6a 7c 67 53 a9 20 e7 ca ba de af  .W.A..k.MC|.......ch.j|gS. .....
1000a6c0  17 f0 ec 8a 58 bf 46 17 09 14 c9 97 76 29 22 0f c9 94 b6 2f 94 d2 82 62 5f 23 9d eb e1 9d 8d 1c  ....X.F.....v)"..../...b_#......
1000a6e0  36 20 c3 bf db 74 71 2d 09 b0 96 cb e5 a6 6d d2 aa ef c6 ab 22 08 ce a5 58 61 3f 47 d8 d3 0e 3c  6 ...tq-......m....."...Xa?G...<
1000a700  82 b0 45 e0 20 94 23 36 64 85 3d 20 76 9a 5c 8c a7 77 b2 61 00 5c 58 b1 76 ac 8c bc 3d ba a7 56  ..E. .#6d.= v.\..w.a.\X.v...=..V
1000a720  5d b6 cf 9e 87 7b 0f 2b 1f a9 d7 b7 52 83 17 a8 27 ea fe 2c 65 85 69 af 2e 17 2e 46 e3 af bc 3b  ]....{.+....R...'..,e.i....F...;
1000a740  3a d6 e3 aa 39 7b 77 c7 fd 1d cb 1e 76 57 4c ca 4e 05 7a d7 f6 e1 00 1d de 80 e0 0e 08 67 21 0b  :...9{w.....vWL.N.z..........g!.
1000a760  9e 8c d5 7e 70 4f a4 49 68 a6 93 bd 64 90 0e 74 2a ca 76 80 06 e3 8a 3e c8 da 76 20 77 2d 0f cd  ...~pO.Ih...d..t*.v....>..v w-..
1000a780  8b fc b8 5b 83 eb 09 9a 37 ab 6d e2 f8 38 70 c4 5a 1e 36 03 25 e1 94 bd 4f cb 8b 2f 33 55 c5 d9  ...[....7.m..8p.Z.6.%...O../3U..
1000a7a0  a8 c5 19 4f 9a fd 63 55 44 57 b8 ae 1c 33 e5 59 43 17 bd 85 ca 12 92 3f c6 ae ee bc 54 2a b1 c3  ...O..cUDW...3.YC......?....T*..
1000a7c0  02 93 3e 62 01 d0 2a 10 d5 27 27 d9 0c 75 38 f9 fa 8c e6 7c 24 04 c3 26 8d 07 43 27 33 b4 da a5  ..>b..*..''..u8....|$..&..C'3...
1000a7e0  39 68 11 da 3b a0 e1 08 4a 12 b3 f1 bd d6 56 e5 34 63 88 94 5f 4b c8 8b b5 d8 e9 29 5a 14 d0 e1  9h..;...J.....V.4c.._K.....)Z...
1000a800  df 23 58 e6 d4 24 f4 90 34 7a 22 40 d4 f7 54 fd 9a 21 5f 3f d4 72 b7 66 8a 55 c1 32 32 de 8d 23  .#X..$..4z"@..T..!_?.r.f.U.22..#
1000a820  b7 44 ed 1e 75 6a d5 36 a3 21 a8 c2 71 2f b5 03 32 b7 f6 56 98 cb 2f 00 c1 29 f1 1d e5 49 7f 77  .D..uj.6.!..q/..2..V../..)...I.w
1000a840  64 01 08 1f da ef 33 e5 77 09 8b c9 a8 7b 29 69 79 88 09 d9 99 ff e3 dd 32 3d 82 56 09 25 cf 19  d.....3.w....{)iy.......2=.V.%..
1000a860  aa d0 17 61 3c 6d 54 0d cf 28 f4 54 de 79 55 b1 15 b2 a1 81 7f 36 a0 f4 47 e3 b4 59 92 d3 c4 31  ...a<mT..(.T.yU......6..G..Y...1
1000a880  3d 12 0b d2 18 c4 8f 30 12 38 50 1d b3 76 1a f0 66 15 92 a6 7d 86 7a fc 08 5a bb 37 f6 6a 95 79  =......0.8P..v..f...}.z..Z.7.j.y
1000a8a0  b5 2b 2f d5 d0 05 ab 62 36 cf 74 aa 7e bf 3f 98 08 13 d7 cf 8a 0c 33 23 9b d9 63 81 55 21 94 6c  .+/....b6.t.~.?.......3#..c.U!.l
1000a8c0  b0 c8 2d 19 09 9d 40 70 5f 29 13 b9 cd 80 cf d9 e6 8c 52 dc bb 79 09 9f 6f d0 52 53 d4 12 85 01  ..-...@p_)........R..y..o.RS....
1000a8e0  db a6 ae b9 1c c6 a0 2a fd 72 65 6b 8c b7 43 d9 1d 89 3f 75 3d 8e af d1 7c f5 03 fb 5e 1f 89 92  .......*.rek..C...?u=...|...^...
1000a900  a1 8d 3e f4 83 98 48 9c 7e 9f 36 b3 8c 14 2f f8 06 9f 98 90 f2 85 8c 36 b9 65 c1 af 15 5f a7 6d  ..>...H.~.6.../........6.e..._.m
1000a920  94 2f f3 01 6d 1a fa 89 b6 e7 4b 7e ca 0c d2 2f 8c 30 af 85 37 23 a7 98 17 77 27 d7 58 1d af a3  ./..m.....K~.../.0..7#...w'.X...
1000a940  b0 80 32 c1 63 17 4c a6 a4 a3 5f e9 db 8b f3 32 43 22 c6 22 f9 76 38 86 26 2d ac 9d b2 20 a4 b0  ..2.c.L..._....2C".".v8.&-... ..
1000a960  df 56 41 7c 78 19 cc 34 99 f6 f7 20 d5 8b 64 49 bf b7 fc 77 4e 0c b8 ed 41 29 91 cd bb bc 0e cb  .VA|x..4... ..dI...wN...A)......
1000a980  6e 7b 62 7c 27 fb f5 9f 87 bf 55 8d 6a cd 21 d2 fa c0 f5 e4 49 71 a1 ee 43 0d 42 41 d7 55 3e d9  n{b|'.....U.j.!.....Iq..C.BA.U>.
1000a9a0  00 f7 f7 61 33 8a 4f 2a 7a e4 6a ca 38 aa fb 03 93 68 c4 6f 0f 9d 3d 5d 31 8a 45 2c f6 94 45 00  ...a3.O*z.j.8....h.o..=]1.E,..E.
1000a9c0  e7 54 1d 3c 6d 31 bc 79 85 61 9e 9a 8f f0 68 f1 9d d8 b0 8a 76 6c 6a 6b 25 a9 07 cd 6f 30 d7 d1  .T.<m1.y.a....h.....vljk%...o0..
1000a9e0  6f 94 9b df 6c cd 6e 08 a8 d8 78 e3 02 4f 37 dc c6 93 96 33 23 78 16 7c ea c4 a1 8d 65 36 16 d0  o...l.n...x..O7....3#x.|....e6..
1000aa00  71 30 f2 49 71 b2 e3 c6 b1 14 dc 8b 0e 05 15 c7 58 4f 00 89 dd 72 43 11 86 5f e7 df a9 53 f4 11  q0.Iq...........XO...rC.._...S..
1000aa20  5e a9 13 0c 84 3f db 0b 6c 9e d1 6a 6a 5f c9 d9 51 b2 1c 8b 11 0c 9f f9 f7 89 db 5b cc 8b 37 78  ^....?..l..jj_..Q..........[..7x
1000aa40  4f 28 3d 7d bb 41 97 06 82 07 9c 31 a7 b8 94 67 8b ca c2 cd 79 eb 61 db f0 d2 e3 67 06 25 c5 4e  O(=}.A.....1...g....y.a....g.%.N
1000aa60  95 22 be dc 40 d0 c6 a0 17 bf 29 23 0d 12 9c 0b d7 e7 ae d2 5a ea 68 bf ac bf d6 f2 e7 1b 7b 72  ."..@.....)#........Z.h.......{r
1000aa80  f0 0b 66 d6 62 64 2e 6e 17 78 47 9f 11 32 d8 dc c2 69 fe 3f 2a f8 3b bd 78 07 6e 9d 8e 69 5d 2e  ..f.bd.n.xG..2...i.?*.;.x.n..i].
1000aaa0  eb 0f 4d b8 65 da 03 0c b3 30 c1 c9 1c 93 a6 3b 3f 71 ee 54 68 85 58 5f 3d 4d eb 09 d6 f1 a3 2a  ..M.e....0.....;?q.Th.X_=M.....*
1000aac0  08 27 d9 0d 77 62 b5 8e ef 3c 8f 1e c6 2e 8a b1 58 82 39 26 00 be b7 26 5c 9e 76 3c c1 92 0c 3f  .'..wb...<......X.9&...&\.v<...?
1000aae0  ce db 0d 9a 35 d4 62 57 2f ee 5b 2a d3 44 1b a4 23 2c ef ae 54 b5 23 1f 68 f2 2d 68 4e 7a 75 b0  ....5.bW/.[*.D..#,..T.#.h.-hNzu.
1000ab00  ef 75 de 7a 89 89 69 29 e9 bc 81 6a e2 a9 a8 47 8c 90 9d 39 38 32 e6 39 11 18 0f ce 76 18 56 e6  .u.z..i)...j...G...982.9....v.V.
1000ab20  e6 88 08 dc eb 9e bf 47 a6 ec ce 9f 7c f8 43 49 84 0d 86 18 50 89 93 6a a6 34 c9 16 79 4d 34 47  .......G....|.CI....P..j.4..yM4G
1000ab40  00 5b c2 3e 30 65 8b d3 31 60 15 8a e0 58 02 2e 67 c2 bc d0 28 88 d5 39 cc 3a f4 7c 60 10 e9 97  .[.>0e..1`...X..g...(..9.:.|`...
1000ab60  af cf 6f 32 fb 4f 2a 6f 89 3e 8e 9a 93 3a 18 cb 16 22 94 fa fe a9 fd e4 54 8d 80 0d 14 04 ca ec  ..o2.O*o.>...:..."......T.......
1000ab80  d6 76 f4 67 30 4e ed 42 da d8 af 15 d0 b0 08 7c b5 f0 49 22 52 37 88 fd 84 55 76 5b c2 a6 6c 16  .v.g0N.B.......|..I"R7...Uv[..l.
1000aba0  f1 f9 87 59 71 ec 3f 29 dc 5d 93 35 ff ac 57 1c 24 6e b7 ce 1a 31 39 06 3a 7d 2e 01 a4 de 60 9b  ...Yq.?).].5..W.$n...19.:}....`.
1000abc0  99 94 20 a7 c2 d6 c5 a9 82 21 0b 11 4e ed 90 ac 3c 61 3c cd b8 10 5d 02 ee 76 67 15 d5 2d e0 5c  .. ......!..N...<a<...]..vg..-.\
1000abe0  49 63 73 ac 53 f8 f8 94 f8 3f 01 18 72 dd 57 dc d5 25 42 1c 90 f1 98 07 0b 54 bd d7 14 60 4c ce  Ics.S....?..r.W..%B......T...`L.
1000ac00  b3 5d bc f2 e6 85 d1 f1 bb 1e 9c 2a ee 29 f6 e9 42 f6 5e 13 0a fc 6b b8 f8 5e 40 c2 10 1a d0 c0  .].........*.)..B.^...k..^@.....
1000ac20  24 45 13 cf 0f 8a 1e eb 4a 7e 89 76 7d a0 47 5f 3d 38 0c c0 90 4d 47 ff f1 5c cf b9 51 de 53 53  $E......J~.v}.G_=8...MG..\..Q.SS
1000ac40  4a d7 1c 94 92 d9 b1 46 f3 e7 71 4e a1 89 49 07 95 74 8e 36 fb f0 06 a6 26 d9 ae b4 e6 4b bb f5  J......F..qN..I..t.6....&....K..
1000ac60  69 26 58 7d bf 4c 7d 43 dd 6e 63 90 69 f8 4f 20 1c 9b a9 da 72 5e 95 84 75 cd 96 98 16 3d 10 c0  i&X}.L}C.nc.i.O ....r^..u....=..
1000ac80  34 0b 53 97 00 71 42 39 84 bf bd 4b e2 77 3b 98 11 d0 c3 58 40 48 8c 57 c9 93 0c 9c 55 c7 c8 7b  4.S..qB9...K.w;....X@H.W....U..{
1000aca0  08 0c a1 1b 9d ac d1 b1 b4 60 81 8b ef 4f 22 52 91 3f d2 7e 2a 0d 5b ec 06 b7 e4 d9 f7 fb f4 34  .........`...O"R.?.~*.[........4
1000acc0  71 7c 39 f2 f3 93 a4 2e de 63 1a f6 ab 65 16 82 c2 ac dd 2e c8 30 8f 4e d3 85 56 d7 1b 85 c3 bb  q|9......c...e.......0.N..V.....
1000ace0  b6 98 71 62 b7 eb b9 85 8e 04 a9 15 0e 14 8c dc e8 8d e4 cf 39 c7 5b 9b 1f 76 a0 d4 0c 7b b6 7f  ..qb................9.[..v...{..
1000ad00  9f a4 73 ba 46 32 7d 1c 9e 6e c8 15 3a 15 38 12 c5 35 7f 71 7f 10 71 29 ad 7b a4 3d 16 0d 36 b7  ..s.F2}..n..:.8..5.q..q).{.=..6.
1000ad20  5c 42 50 09 17 b6 45 43 9d 93 ec 72 80 fb ad 98 b6 91 a2 9f 17 0e 35 db 65 21 7f ef 0a 9d 2a ca  \BP...EC...r..........5.e!....*.
1000ad40  26 a3 67 5f ca e8 ca bd a1 2f 86 16 06 3d 5f 28 1f 83 f9 09 d0 b2 ff cf 0b 24 6b 98 17 5b 53 95  &.g_...../...=_(.........$k..[S.
1000ad60  61 a3 c4 dd fd 8f e8 f8 f0 fd da 6c 10 03 78 86 7f da 98 13 36 68 29 2e f9 6e a0 c1 9c df 4b b7  a..........l..x.....6h)..n....K.
1000ad80  9a 1e 54 d1 3c 47 c0 68 b7 00 ca 0d b1 e4 79 91 da 18 e0 1c 81 63 b9 b5 cb 40 39 c8 62 45 f2 e7  ..T.<G.h......y......c...@9.bE..
1000ada0  bb cc b5 57 7c d3 ac 36 c7 a4 4d 14 0d d9 87 72 23 6b ce 52 11 33 e5 a2 85 e0 6d d2 53 78 8a c1  ...W|..6..M....r#k.R.3....m.Sx..
1000adc0  26 64 94 73 fa 45 73 9d 6a 20 72 1b 67 5c 93 32 25 9a 91 13 78 cf ee 79 bb 89 24 b1 e2 0c 31 35  &d.s.Es.j r.g\.2%...x..y..$...15
1000ade0  2e 4c 27 69 c9 cc 01 30 00 ad 74 91 58 34 ac 9b da 4c 36 e5 1a 5d 71 2f c6 08 e8 de b1 b6 10 b5  .L'i...0..t.X4...L6..]q/........
1000ae00  06 d6 f7 e3 ba e6 b6 fd 3b 2b 28 84 c0 6c 2b 49 75 1c 0e 73 62 0a 80 63 a0 9c c3 f9 e9 51 bf 22  ........;+(..l+Iu..sb..c.....Q."
1000ae20  45 fe b2 8e 82 92 24 65 b7 af 17 c8 1c 96 93 2d 6f 49 06 12 62 cd 55 15 f4 55 88 e6 28 03 3e dd  E.....$e.......-oI..b.U..U..(.>.
1000ae40  b8 87 da 17 4d 9b 3a fa 17 c7 ca a5 26 90 30 ae 3c 8e 75 12 e5 07 ab 84 05 0d 98 ac 74 17 62 16  ....M.:.....&.0.<.u.........t.b.
1000ae60  e0 40 93 51 e3 98 86 be 56 a4 d8 27 9f 64 8d 8c 93 b1 0e 88 93 8c 8a 8d 9b 64 58 fa f8 a8 54 3a  .@.Q....V..'.d...........dX...T:
1000ae80  13 b0 1c 1a e6 d8 a4 43 6b 9b 3a 3d f8 e6 17 26 7b 15 59 6c ef 7f b7 79 85 55 a1 fe 24 30 ef 7a  .......Ck.:=...&{.Yl...y.U..$0.z
1000aea0  87 1f 7f 8e 01 be fc 05 2b 60 96 8e d8 a4 21 83 9c 00 36 2c a3 f9 32 78 34 d4 84 1b 34 d4 26 04  ........+`....!...6,..2x4...4.&.
1000aec0  b5 7b 12 af a9 be 0f d0 b3 40 a7 d0 30 9b 7d 87 1a c3 c9 3e 9b 80 3a e4 d9 63 9e 32 7b 47 34 be  .{.......@..0.}....>..:..c.2{G4.
1000aee0  cf 27 49 58 f0 9c 57 14 b2 08 23 76 4b 0d 9b 37 53 81 b9 d1 9e 89 07 8b b2 9b b6 a7 d0 18 8e 70  .'IX..W...#vK..7S..............p
1000af00  cf 5a a4 11 dc ea ed 15 76 bf 1a c4 3c 7a e2 95 e7 cf a9 0a c4 bc a8 3e d1 70 9d 8a ac 2a 8d 6e  .Z......v...<z.........>.p...*.n
1000af20  92 d4 14 f4 c5 c3 aa e6 ba 0b c2 be a6 53 c9 92 0e 38 02 6a c9 f2 57 db 51 e1 c6 d5 54 d2 7e 8c  .............S...8.j..W.Q...T.~.
1000af40  12 ae 1f c4 6d 03 a4 c1 21 cb 33 4d 69 0d b4 fc 46 0a 29 42 19 47 46 bd cd 2d ac 01 8d 0d 38 94  ....m...!.3Mi...F.)B.GF..-....8.
1000af60  bd 09 ac a7 1f 8a 87 1b 8d 76 45 71 39 21 b6 8e d4 54 ef ed c2 7e ae 76 3b b7 37 2c 7d 91 30 14  .........vEq9!...T...~.v;.7,}.0.
1000af80  e3 bb e0 0a d5 c2 86 f3 e2 2a 84 22 67 4b 36 db 17 8a 81 3e 9d c7 db 66 e5 fd d7 19 62 37 5f df  .........*."gK6....>...f....b7_.
1000afa0  7e 58 e2 4c 60 a5 3e 6e 5e 32 77 4f 15 61 74 05 b5 ee f1 3a 36 61 3f 48 8b ad 44 d1 8d 24 ab 2e  ~X.L`.>n^2wO.at....:6a?H..D..$..
1000afc0  af 87 8d 01 d9 0d d7 39 b8 94 d8 97 cb 31 b2 ec f7 e6 fc 5e db d5 9a 21 e9 66 3b ce fe 5a 39 2e  .......9.....1.....^...!.f;..Z9.
1000afe0  33 3a bd ee c5 b1 2b 1e bb e3 a8 c5 d4 bd d5 55 b4 ff 93 ca b4 12 6b 37 c8 e1 be 32 ee 09 bb 12  3:....+........U......k7...2....
1000b000  70 86 71 1b 19 16 8c ac b0 1f 1a 8b 41 52 67 cb a8 d4 f0 2a 22 2e 5d 91 3e d5 27 8f 72 6e d1 b1  p.q.........ARg....*".].>.'.rn..
1000b020  f1 fd 0f c5 cd 47 a1 62 e8 9a ed 22 f8 53 93 8f 53 1e b0 14 38 e1 89 b4 fe c8 5c 78 d3 7c 1d 6d  .....G.b...".S..S...8.....\x.|.m
1000b040  09 91 e4 c3 d1 d7 b4 5d e5 ef fc e4 23 2f dd 73 b7 ef d4 d5 53 8a 19 b8 92 d9 3d 2d 71 98 d7 3e  .......]....#/.s....S.....=-q..>
1000b060  68 ce 08 66 cf 45 28 59 f2 8f 3d f4 9f 03 b3 bd f5 ee 45 7c 03 95 3a 79 bd 79 4f 55 f8 79 52 a1  h..f.E(Y..=.......E|..:y.yOU.yR.
1000b080  56 65 ac 21 b3 56 54 1b 47 32 dc 7a 6c b7 92 df a9 d1 bf 20 0f 5f 01 c3 77 22 a6 61 3c 0b 92 0d  Ve.!.VT.G2.zl...... ._..w".a<...
1000b0a0  47 62 15 99 50 1f 17 db da 61 b8 8b 00 65 ad 57 75 66 93 69 ba e7 20 17 ee 94 d8 d7 ab 76 14 82  Gb..P....a...e.Wuf.i.. ......v..
1000b0c0  dd 3c c2 15 bb 7a fe 8e a5 f0 3e e7 f4 ed 22 fd ec d7 3d e7 72 74 1b b6 d3 fa c3 57 73 9b 65 aa  .<...z....>..."...=.rt.....Ws.e.
1000b0e0  f8 0b b4 28 61 8e fa 40 cb 77 a3 30 d4 73 ac 8e b7 a6 82 4c 1d 26 84 52 a5 cf 24 a9 57 bb 9f 3c  ...(a..@.w.0.s.....L.&.R..$.W..<
1000b100  ea 4b 83 bd bb 68 bc b1 62 a2 24 4e f6 3e 66 a0 ec 28 cf 4f ea 8e e4 d6 74 ad ab a9 a6 99 4e 74  .K...h..b.$N.>f..(.O....t.....Nt
1000b120  c2 92 11 81 c1 8c e3 f1 f8 44 76 bd ff b3 91 09 bc f9 2c 1b 17 04 fc 9f a1 2f 3a 21 2a 81 ec bc  .........Dv.......,....../:!*...
1000b140  14 18 d4 35 89 60 cc 00 87 45 eb b1 e7 ab 0c 17 72 83 c8 f2 cd fc e3 70 da 97 b4 d9 c7 51 42 c7  ...5.`...E......r......p.....QB.
1000b160  08 31 49 bc 2c 89 bc 18 d3 26 48 5d 99 5d 35 db 4e 09 bf b6 cc 07 74 24 0c 90 1c 28 22 fb 72 92  .1I.,....&H].]5.N.....t$...(".r.
1000b180  39 3b 95 6f 73 5e d5 d2 00 f9 c1 d8 d0 bd c2 7a 59 0f 02 e8 f2 29 6d 52 e7 81 72 ae 18 a0 59 b5  9;.os^.........zY....)mR..r...Y.
1000b1a0  56 22 cf 3e cb 2d d8 1d aa 4a ae 5a b5 a5 96 4f 0e 1a 0a de 38 b5 98 05 b2 f0 29 1e 61 52 30 79  V".>.-...J.Z...O....8.....).aR0y
1000b1c0  f6 1c d0 c8 81 c6 b3 76 ff 99 c8 27 1e 7c 78 c2 75 00 8f e1 28 3e 07 9e 91 a3 2a 59 1e 81 39 c4  .......v...'.|x.u...(>....*Y..9.
1000b1e0  00 02 11 96 d0 79 31 41 5d 5e f8 ac 97 d4 38 19 3d 17 c8 c3 fc 72 f9 6e b4 8b 0a 97 99 a7 47 61  .....y1A]^....8.=....r.n......Ga
1000b200  b1 b3 bc 93 b5 fc 7f 26 1f 71 45 d0 1a a7 f9 c5 9e 0e 47 2f 16 50 b3 2f e1 7d bd 54 48 9b 86 46  .......&.qE.......G/.P./.}.TH..F
1000b220  36 73 34 66 88 02 53 72 92 0d 90 c8 63 93 8a 1c ca aa aa 1b 02 92 e6 d1 c8 83 ae 8e 91 85 06 d9  6s4f..Sr....c...................
1000b240  1c a1 5d 39 30 a9 a1 cc d8 60 e4 6a 6f 8a 3a 54 88 57 81 7e 2a 12 e9 04 e8 2f f4 08 02 cf 77 be  ..]90....`.jo.:T.W.~*..../....w.
1000b260  3b 23 71 c0 2a 3d f7 3e e1 01 b8 4d 87 02 5e cb 15 bf e1 d7 1f 86 87 72 30 4a 70 47 66 e2 40 0a  ;#q.*=.>...M..^........r0JpGf.@.
1000b280  2a 59 9e 50 3b 34 96 66 9c ef a8 08 48 bc 83 92 5f ba 46 12 1c ef 24 93 fd 9c f8 47 8e 5a 7a 5e  *Y.P;4.f....H..._.F...$....G.Zz^
1000b2a0  2a 05 14 c7 f1 24 f0 28 c3 f1 cc cb a4 4a c7 48 a9 05 fa 4d cd 83 98 c5 1f b9 38 60 61 0e 33 0e  *....$.(.....J.H...M......8`a.3.
1000b2c0  eb 7f f5 fe 35 8a 21 3f 3d 73 63 7b 9e 54 a4 c4 6d 43 89 0d a8 cc 02 26 d9 f0 79 9b 46 46 44 e9  ....5.!?=sc{.T..mC.....&..y.FFD.
1000b2e0  1b 56 d7 03 3b b2 d4 75 11 47 93 83 bf d8 c7 b6 b7 ea 4f 6b b2 8c 0a 64 1d dc 5a 0e 72 85 53 d7  .V..;..u.G........Ok...d..Z.r.S.
1000b300  5c 75 20 8d ad 1c 73 e4 ee 20 18 ff de 27 09 4a bd 1e c5 99 9e 63 ad fa 7d 63 24 17 4c 06 57 75  \u ...s.. ...'.J.....c..}c$.L.Wu
1000b320  4f 6a 50 fa 37 99 f3 44 46 5e a6 37 b2 26 74 41 64 8c da 48 e1 1e fa 6e d8 e5 de f1 59 3f 53 c1  OjP.7..DF^.7.&tAd..H...n....Y?S.
1000b340  f6 48 8a c8 72 ec c9 28 f3 a2 9f dc 8b b2 07 78 2b a8 b4 34 c1 f9 83 c8 e7 53 6e d4 38 15 e0 ab  .H..r..(.......x+..4.....Sn.8...
1000b360  09 87 c6 a9 56 da 83 72 26 4f a7 8c 88 f4 b9 24 47 de 3b 9f 20 98 f2 6b 31 bb d9 fb dc 41 6a 7c  ....V..r&O.....$G.;. ..k1....Aj|
1000b380  c5 74 55 e9 fb ae ff b1 98 7f f6 cd b2 fa 03 a7 55 78 43 eb 92 30 7b 00 74 e0 4c a5 6a 2c 15 73  .tU.............UxC..0{.t.L.j,.s
1000b3a0  cd 9b c7 37 c3 64 df c8 fd 11 1e b9 07 cb fb 6f 51 d6 45 bc a1 72 a6 eb 9b a3 d0 c9 76 6f ef 1b  ...7.d.........oQ.E..r......vo..
1000b3c0  da f8 a1 97 76 41 22 74 92 1b b6 51 7f ea af 1e af 16 9c 0a c5 24 8f a0 3a 20 d0 d8 4b a0 62 09  ....vA"t...Q.........$..: ..K.b.
1000b3e0  94 f0 13 d1 55 8f fe 3b 0a b7 c2 df f9 aa bd b3 ac 09 54 6b f2 eb b4 08 fd b6 76 34 1e a2 27 e6  ....U..;..........Tk......v4..'.
1000b400  69 d9 fb 7b 82 a4 60 8d 6d f5 d3 a0 35 70 53 e4 a4 75 d6 06 b8 fe 32 f8 7b 6e 94 1f c1 f1 a2 84  i..{..`.m...5pS..u....2.{n......
1000b420  a7 93 50 8b 59 75 c3 8a 9f 10 94 94 dc b7 19 d4 6f b6 1c db 84 0e a4 f7 41 d3 cf 62 47 6b 81 96  ..P.Yu..........o.......A..bGk..
1000b440  ef 81 34 a0 7a 9c 87 6f 6e 8d 71 98 0c cf 02 89 b1 ee 50 5e a5 8a df dd 2c 1e 10 b8 b2 ff 60 20  ..4.z..on.q.......P^....,.....` 
1000b460  9a 38 f0 e5 55 3f 1a 5f a5 86 31 1d 76 93 a4 c1 34 42 26 82 04 d6 c5 67 b5 3f 8b 59 39 4b 20 bd  .8..U?._..1.v...4B&....g.?.Y9K .
1000b480  cf 06 3c f2 41 62 8e 5b db a9 9b d6 b0 ca 85 1b 32 44 d7 11 9f 08 db f3 1e 06 58 ca e9 70 a4 f4  ..<.Ab.[........2D........X..p..
1000b4a0  8e 6c b7 52 27 a9 3e 93 4e 18 2f a0 93 ca 5d c1 85 dd ca b0 32 21 90 bb 85 24 f6 8f 1b b2 8e 62  .l.R'.>.N./...].....2!...$.....b
1000b4c0  33 25 2c 7e b4 a5 b8 12 bf 67 4f 67 34 d4 3a fd 2e 36 f2 4c b5 e9 1e 63 09 f6 81 88 dc 80 69 2e  3%,~.....gOg4.:..6.L...c......i.
1000b4e0  b5 7b 42 ee 09 a8 53 38 1c 25 d8 8d 86 c6 20 d0 c7 31 fd 4c 0c 29 7e fb 15 af 37 ea d5 52 68 03  .{B...S8.%.... ..1.L.)~...7..Rh.
1000b500  12 90 f6 b1 a6 e5 5f 6d 17 fc e9 0d 5b 7e d8 9e e5 c4 55 e6 e3 ac 12 55 b4 92 60 11 cf 38 30 c6  ......_m....[~....U....U..`..80.
1000b520  87 f5 f1 0e f3 8f a9 22 13 f8 57 78 fd 5f 9c b1 62 a9 b0 eb db c1 cd 25 15 8c 45 c9 f1 26 49 b6  ......."..Wx._..b......%..E..&I.
1000b540  24 f0 f4 cb 50 a6 a0 41 0d db 80 50 a4 81 68 fd 91 9b 16 0f d4 37 e4 37 69 2c bb ad ed 35 c3 85  $...P..A...P..h......7.7i,...5..
1000b560  45 aa 18 43 05 be f8 95 69 fe db 3d 6a db f5 3c de 28 8d 40 6b a2 91 e2 6a bc eb 50 bf 70 d2 ec  E..C....i..=j..<.(.@k...j..P.p..
1000b580  aa ea dd 67 a1 bd 0b 15 2a 67 13 db 0c 28 02 c8 e7 4a 2e 80 11 85 da dc e1 fc bf 57 32 74 e2 03  ...g....*g...(...J.........W2t..
1000b5a0  d2 42 4f 47 4d 02 17 e2 23 84 00 cd 29 66 98 38 e7 8a da c0 9b f9 2d 7e 61 a0 d4 06 a9 6f ca 0d  .BOGM...#...)f.8......-~a....o..
1000b5c0  1f f5 f5 3e 5c b0 b7 d2 7a d1 24 9a d7 b4 c8 0c af 94 82 2e ed 0d 11 c7 f6 be 61 e1 8b 68 c2 50  ...>\...z.$...............a..h.P
1000b5e0  c3 d4 7b 04 6f 3f c2 d8 65 5f 5d d2 0b c6 2a cf 5c 61 d4 61 e5 30 31 04 2f f2 d0 17 b1 e9 f6 ad  ..{.o?..e_]...*.\a.a.01./.......
1000b600  62 6a 1e ac 1a e7 4c e9 c9 a8 bb 3c 49 79 e9 01 ec c3 f3 68 b0 5f d9 d3 8d e9 70 52 46 d8 46 22  bj....L....<Iy.....h._....pRF.F"
1000b620  c4 d7 0f 1d e5 b6 93 64 5c 45 9f 4d c9 26 09 3c 91 ac 5d 86 d0 b8 aa a6 07 33 3a f7 d9 d8 8a d7  .......d\E.M.&.<..]......3:.....
1000b640  05 2d 24 91 a5 6c 45 d5 7a ea 80 4e 41 b6 f2 6e 69 97 0e 3e 2b f1 1a 2b 64 ff 71 e7 98 f4 05 1f  .-$..lE.z..NA..ni..>+..+d.q.....
1000b660  48 41 7c 84 28 6c e6 26 41 a3 23 4e 75 46 e2 2b 03 db e0 a3 35 1a 26 8b 84 54 5a a5 af 4d f3 56  HA|.(l.&A.#NuF.+....5.&..TZ..M.V
1000b680  08 eb 9a af 67 c5 e2 bf eb 39 b8 af 32 86 ca 16 6e cd 45 3a 63 9a 27 25 35 da ab b6 2f b1 a7 dc  ....g....9..2...n.E:c.'%5.../...
1000b6a0  62 47 2c 34 25 b7 30 42 d2 e0 e8 d2 bf e9 dc 3e 12 25 f2 10 5f 50 8c e3 c6 92 b6 4a 1c 7d 99 63  bG,4%.0B.......>.%.._P.....J.}.c
1000b6c0  7b 08 d6 e4 dd 60 f8 8f d2 83 08 5d 27 25 22 fe e9 47 91 2b c4 c1 6e 27 5c d1 6f 5d ab ed f1 10  {....`.....]'%"..G.+..n'\.o]....
1000b6e0  22 6e fa cf 83 b8 0e 22 9b 6b b0 6b fd ac c4 19 12 18 14 8e ec 7f 5c 4d 11 73 0d f4 ab ba db d0  "n.....".k.k..........\M.s......
1000b700  1a a4 1c bb 22 98 da cf 7f ae 7f 1b 49 4c 07 54 dd c1 4c fb 43 62 43 c5 df 89 6a 0c ef a7 3d ae  ....".......IL.T..L.CbC...j...=.
1000b720  25 37 79 6e 7c 72 06 9a 2f fe 65 0c 90 95 75 86 85 16 e9 0b 3f b8 50 03 3f f8 41 67 7d 5f ad 81  %7yn|r../.e...u.....?.P.?.Ag}_..
1000b740  8e ad 55 46 70 ee 83 ec 5b 0b 14 85 3e 78 29 f1 ad 88 e0 2e 4a a6 47 46 88 b8 8f 01 d1 32 aa 42  ..UFp...[...>x).....J.GF.....2.B
1000b760  be ff 62 5c 3a e6 60 5e 3d 15 78 c1 36 f8 a1 32 63 02 3f f0 85 b5 1c 87 d9 c4 5f 69 2e 2c 11 a9  ..b\:.`^=.x.6..2c.?......._i.,..
1000b780  7b 4c cb b8 f2 d2 16 6b d8 f9 4c 76 f9 19 b8 63 7f ec e5 e5 45 37 8a 3d 06 f9 c6 e5 18 0d e1 e8  {L.....k..Lv...c....E7.=........
1000b7a0  be fa 15 20 67 e6 ee f2 ae 0d 5b af 3d bd 25 03 5e ac 8b a6 47 4c 0c 15 94 ff 07 af ea e2 b6 72  ... g.....[.=.%.^...GL.........r
1000b7c0  2b 17 ff 1d e2 54 52 4b f3 06 e8 d9 b1 b0 3a 27 59 73 7a 14 d0 ae 0f 30 e3 45 49 f4 ae be c8 cf  +....TRK......:'Ysz....0.EI.....
1000b7e0  b0 72 c2 5c 7c 9a 93 00 8e df 4d d2 75 5b 5d 3e e1 61 64 50 37 be cd ed aa 0a 07 ab b8 a8 18 da  .r.\|.....M.u[]>.adP7...........
1000b800  72 8a f3 db 7b ff 59 0f 10 e1 db 3e 5e 7e 7f ba f2 9f 17 6b ce 0c 9c 06 c2 76 d9 d6 db 8c 93 43  r...{.Y....>^~.....k.....v.....C
1000b820  b6 45 28 d4 3d 8d 7b 19 d0 a0 47 9f 5e bc 84 76 3f 41 6f 83 bb ba 79 85 18 a1 7d 79 ac f2 3a 46  .E(.=.{...G.^..v?Ao...y...}y..:F
1000b840  91 8d 91 2f 13 66 c7 2d 52 a1 56 e6 e9 e9 cd ea 4b 74 99 6f ad fb 41 9b 53 c9 b3 26 ae 42 50 26  .../.f.-R.V.....Kt.o..A.S..&.BP&
1000b860  d3 0a 64 b2 12 9e 8a 75 55 d0 1a 3b b8 e0 41 6d 44 0f 2a 69 ee 78 63 c9 2b 28 30 fb 20 4a 21 b7  ..d....uU..;..AmD.*i.xc.+(0. J!.
1000b880  8b b0 3c a8 d7 d8 11 96 6c f7 f1 3b c9 51 7d 9a 81 e3 b7 0c a6 4f 31 b8 22 30 5d 9a dc 15 0d a6  ..<.....l..;.Q}......O1."0].....
1000b8a0  07 8d 6f af ec 77 39 33 e6 c6 db 73 72 54 1d a7 0c bc 43 3d af 51 51 2d 5a 1f 26 68 30 56 08 23  ..o..w93...srT....C=.QQ-Z.&h0V.#
1000b8c0  89 4f 14 65 bd f9 e2 91 89 2f 10 a5 ea 1e 3c 70 49 73 e5 77 1c 94 93 71 d3 4e b0 5d 30 5f b8 a3  .O.e...../....<pIs.w...q.N.]0_..
1000b8e0  92 37 3d ef 9a 3e 75 ab d8 47 13 d5 c8 2c de df ba ea c5 13 90 da 25 85 fa 29 32 f9 dc 26 fb a8  .7=..>u..G...,........%..)2..&..
1000b900  a4 4e 0a b4 cf 11 43 28 90 2f 51 73 95 93 11 70 92 80 eb 9d 13 5d cd ee ff 35 10 4a a9 24 a8 1b  .N....C(./Qs...p.....]...5.J.$..
1000b920  8b be f2 05 b0 3c a6 ac a4 47 56 0d 92 79 e8 cc 81 89 0a 84 c1 e2 69 48 53 3a 1f 69 4d 9f 36 90  .....<...GV..y........iHS:.iM.6.
1000b940  c4 c9 a0 56 5a 90 0c 13 2a cd 2e 66 51 e1 00 eb ea 1d f7 d0 1e 51 a3 fa 19 be a9 0b 3d 74 ca 84  ...VZ...*..fQ........Q......=t..
1000b960  39 93 95 34 b1 3a 42 9c a0 ad 81 8e cb 3a 98 23 f0 0b 0c 48 ca 46 5b a3 bc 0f 28 fb 69 41 cc e9  9..4.:B......:.#...H.F[...(.iA..
1000b980  89 8f f8 c0 4f ee 71 48 34 e8 13 09 76 cb 67 e2 f7 45 1a 9d 5a ca c6 8a dd 3e 7a 19 6a 8c ff 27  ....O.qH4...v.g..E..Z....>z.j..'
1000b9a0  7b 60 dd 72 56 ec 73 43 fc 78 1e 60 43 1f 52 41 4e 3d 9a c2 f5 d1 94 d1 da 06 3a 5c 39 e8 b0 de  {`.rV.sC.x.`C.RAN=........:\9...
1000b9c0  68 22 60 19 5d a5 83 6b f4 7c 16 bd c6 4a b9 87 ac 3b 17 51 af 01 cc 2f 33 3b 79 03 46 65 a5 7c  h"`.]..k.|...J...;.Q.../3;y.Fe.|
1000b9e0  9d 5d 93 bb c3 5b 64 20 19 37 96 43 41 93 15 e8 fe c4 e4 68 ef cc f0 a8 81 e9 77 8c 6e fe ea c6  .]...[d .7.CA......h......w.n...
1000ba00  fb 72 f3 58 5a ef cd 99 fc 26 5f 4c 52 68 36 32 dd 4f 14 cc 32 84 45 3d 3a 41 18 67 0c 67 76 cb  .r.XZ....&_LRh62.O..2.E=:A.g.gv.
1000ba20  45 70 eb 43 f0 90 d2 7f 37 04 64 74 8a 56 4f fb 4a 0f 89 2b c2 a0 9a 85 6a 92 c7 9d ca 7b 34 d1  Ep.C....7.dt.VO.J..+....j....{4.
1000ba40  ab 67 99 2a 1e eb 56 df b7 94 a5 d2 e3 4c b3 d8 9d 2e 47 af 1f 23 57 e8 f3 49 2f 1f 23 6d de 86  .g.*..V......L....G..#W..I/.#m..
1000ba60  cf 51 0a e1 27 c7 a5 d9 58 90 ab d0 fe b7 21 54 8f 09 ed be dc 33 c6 eb f9 81 35 a0 03 d9 79 4d  .Q..'...X.....!T.....3....5...yM
1000ba80  1a 94 80 71 d1 7d ab 68 59 f3 bd 57 ae 2c c8 4b 61 95 94 e6 6b 35 7f 32 86 7a 0b cb cc a1 cb 05  ...q.}.hY..W.,.Ka...k5.2.z......
1000baa0  f0 0f cf d4 d2 1b 3a de 9c 4e 86 08 d8 26 32 b4 d5 16 9e c2 8c 56 75 f9 11 97 f6 6d 29 ca be 80  ......:..N...&2......Vu....m)...
1000bac0  78 27 8e c0 2d 39 69 1b c4 d1 54 9a de 22 ef 55 00 a4 3e 81 7f 7c 6c 93 e3 05 f1 03 52 c6 81 23  x'..-9i...T..".U..>..|l.....R..#
1000bae0  72 f3 fe 78 c5 46 0f c1 7b 15 e8 ed 83 eb 72 7a 3c 4b ae f6 f6 1d b2 bf 2e 69 37 b1 1d 24 cf a7  r..x.F..{.....rz<K.......i7..$..
1000bb00  b1 4e 55 6f 6c af a3 ae 1e 62 49 2c 91 6a 4e b1 cc 30 cb ec fc 4d 5c 81 f3 6d 96 33 b0 34 2b 9f  .NUol....bI,.jN..0...M\..m.3.4+.
1000bb20  27 7e 4e a4 3c 47 6f 73 36 ab f3 da eb 41 5b 88 f9 93 9e a7 d4 d2 80 e1 ab 11 3d 74 b6 95 66 d5  '~N.<Gos6....A[...........=t..f.
1000bb40  2a e1 cc 42 3a 2e c4 ec 9f 6b bf f9 95 c7 c6 f4 b6 c7 5e fa 61 d2 a5 25 40 57 d7 7f 27 c1 96 cd  *..B:....k........^.a..%@W..'...
1000bb60  0f cf 80 3e 17 0d c4 f4 0a 2c 87 1f 97 1a 3e cd b6 2b 49 f1 62 df 5d d2 76 17 cb 35 35 72 ae 98  ...>.....,....>..+I.b.].v..55r..
1000bb80  e5 ff 56 de 6e e5 63 52 af 64 22 ac 93 56 4f 70 68 59 a6 c9 7d ee 78 d4 e1 89 25 ba c6 72 e5 16  ..V.n.cR.d"..VOphY..}.x...%..r..
1000bba0  9f 42 71 ca bc fa d0 e1 b4 b1 43 6c 7e c6 0e 56 35 dd 9f b6 21 4c d6 41 06 06 77 47 ff e3 86 b5  .Bq.......Cl~..V5...!L.A..wG....
1000bbc0  f5 4f 59 ff f2 4c 02 b7 08 82 95 57 ac aa 6c 9f 58 16 7f b0 ef 64 03 c7 ad ea 7d 23 41 72 51 dc  .OY..L.....W..l.X....d....}#ArQ.
1000bbe0  f1 83 14 8a 0f 78 35 70 87 d1 2a 10 fa ae fb f7 47 2a 81 c9 10 b1 8e 2a 3c 96 ec 37 d6 38 6d 81  .....x5p..*.....G*.....*<..7.8m.
1000bc00  e0 ca af a4 a9 e4 25 c6 c8 98 6c 92 67 d2 b6 57 1f 27 09 fc 8a a2 7e 94 43 76 18 bd da b7 8e a5  ......%...l.g..W.'....~.Cv......
1000bc20  9b fc 11 9e ce 88 78 54 64 66 2d c1 ad 1f 94 f7 58 5c 28 9d da 3a 21 8a a8 87 b0 b0 3c 29 2c de  ......xTdf-.....X\(..:!.....<),.
1000bc40  5b 62 72 c4 17 4f d1 5e d2 4c 90 87 c2 88 3c cb bf ff a3 17 7b c3 e0 9d d1 6c 70 93 af 40 bd 6d  [br..O.^.L....<.....{....lp..@.m
1000bc60  b8 90 95 51 7d 9d 57 ad df 7c d1 a9 8f 84 86 bf 74 b0 54 42 b1 2b e7 22 3a 4c db bd 0f 9a 41 3e  ...Q}.W..|......t.TB.+.":L....A>
1000bc80  25 4f 6a f3 bb 62 41 30 6b aa 65 c7 0e 07 8a ea e4 20 f1 05 66 b4 5f db 9e 8a 5a 77 2b 59 57 fd  %Oj..bA0k.e...... ..f._...Zw+YW.
1000bca0  48 3d b4 b6 1f b0 1e cc 8f 1d 64 de e9 5a 0c 47 93 0d 00 a9 1c 14 4e b9 08 17 d7 31 26 7d 26 a7  H=........d..Z.G......N....1&}&.
1000bcc0  96 0c ea 59 2c 13 9a 5c e7 c3 c4 16 02 3b 8a b4 80 ae f8 f1 72 0e 5a 54 94 e3 ca 76 15 bd ad 5a  ...Y,..\.....;......r.ZT...v...Z
1000bce0  5a a1 3b 49 e6 3f b3 af 55 66 24 75 14 3b c4 7a cc d4 6a a8 56 a5 42 3b d0 ad c2 bd 5e 50 ea 56  Z.;I.?..Uf$u.;.z..j.V.B;....^P.V
1000bd00  fd 70 a9 5d de 5f cb ec e6 1b f9 6b e4 fe 11 8e 10 80 bd f0 2c f6 53 a3 99 6d 10 4c 94 0b a0 ac  .p.]._.....k........,.S..m.L....
1000bd20  22 02 87 26 86 84 78 a5 82 0f 2b ce 1c d7 bf aa d0 c3 9b 5c ad 03 8a 09 f4 9c 2f 10 c9 76 c5 19  "..&..x...+........\....../..v..
1000bd40  d9 c5 a4 84 b4 61 0b d4 79 23 e4 63 60 65 6e 1e 20 58 c6 c6 a1 c6 08 03 3e 1b b5 a7 8e 4e 35 46  .....a..y#.c`en. X......>....N5F
1000bd60  16 53 7a 6d b8 c7 d7 16 f5 30 df 98 3f dd 44 98 49 2d 3a 29 76 38 b0 fb b3 62 2a 73 ae 67 9a fa  .Szm.....0..?.D.I-:)v8...b*s.g..
1000bd80  2c 82 b4 72 8b cd 65 20 b4 fa c5 70 d2 c1 91 06 86 b9 88 c6 ee a2 89 a8 17 3f 77 53 e8 7f ad 69  ,..r..e ...p.............?wS...i
1000bda0  47 b4 04 97 ff 3b e6 c3 55 83 63 55 9b 01 4c b0 4b 90 eb 0d 0f 57 48 7f a6 37 18 e9 3d 5b 8e fd  G....;..U.cU..L.K....WH..7..=[..
1000bdc0  37 29 4b 3d e7 d4 23 85 b6 71 a6 de eb 60 a1 2a d0 56 6f 30 ae 1d 95 d0 c8 b6 53 f9 00 86 b1 c6  7)K=..#..q...`.*.Vo0......S.....
1000bde0  58 9b 06 49 82 b0 5a c1 b0 d5 a1 7d 72 4e f2 2b d3 7d 52 2b 3a fe b2 eb 4d 8a ac 79 5d c0 ce 22  X..I..Z....}rN.+.}R+:...M..y].."
1000be00  e6 be 1b c7 62 f9 1e 92 70 48 47 4e c6 01 a6 b7 f6 b9 1c 8a e8 c0 bb 02 7c 93 c0 86 41 b4 21 a7  ....b...pHGN............|...A.!.
1000be20  80 63 b0 fe c7 2e cd 64 d0 26 e3 04 04 c3 f9 ed 48 86 54 dc f8 4b d4 df 06 6a a3 67 1b 55 2a 80  .c.....d.&......H.T..K...j.g.U*.
1000be40  ed ea ad ab f4 63 1a cd 5c 2a f6 cc 0c 69 e0 56 4f 33 4e dc f4 d8 3a 79 72 1f f1 59 f5 4f 92 20  .....c..\*...i.VO3N...:yr..Y.O. 
1000be60  14 d4 6c bc 7f 44 62 b9 8f f5 aa 5f 5c 26 41 7e 0e d1 d2 35 e8 18 ff eb 4a 5b e5 31 14 7f 2f c9  ..l..Db...._\&A~...5....J[.1../.
1000be80  a7 1c 64 1c 92 98 d2 1c 4d a1 40 45 6a a2 4e 23 12 9b 3e b2 c0 d0 74 80 04 27 97 b0 eb 9e 43 01  ..d.....M.@Ej.N#..>...t..'....C.
1000bea0  d0 ea 44 e5 e6 91 5d 71 a9 40 5e 88 fa d6 c6 5a ec 5f d7 f8 71 f7 a6 61 d9 a0 5c 8b 3f 2d 76 73  ..D...]q.@^....Z._..q..a..\.?-vs
1000bec0  86 18 a0 bf 37 7c 8e a3 71 8e 34 cd 26 39 e1 d2 7e 73 a5 c6 8f ed 40 13 d3 31 45 f3 f8 76 0c 6e  ....7|..q.4.&9..~s....@..1E..v.n
1000bee0  e3 30 60 b7 8a e5 b8 46 3e 46 7c 95 2d 0f 97 3a 42 7f b0 f8 52 53 c1 91 a2 e1 a3 60 cb 18 01 9d  .0`....F>F|.-..:B...RS.....`....
1000bf00  1a af a0 1b 54 f5 32 3c c9 10 f3 18 58 f4 05 45 0b 9b 94 c6 66 33 41 e5 67 58 ce 02 91 42 8c 62  ....T.2<....X..E....f3A.gX...B.b
1000bf20  37 71 7d 57 32 8e db c8 67 b7 3f 3b bc 1a 24 10 9b 37 b1 d9 5a 75 84 a3 2b e4 c9 85 c2 f1 6b 3f  7q}W2...g.?;..$..7..Zu..+.....k?
1000bf40  09 49 a2 ba 38 93 76 2c 4c 3d d2 d7 b9 02 74 5a 80 85 73 64 e3 cb 87 11 52 b0 e0 55 8d e7 7b 65  .I..8.v,L=....tZ..sd....R..U..{e
1000bf60  f9 a6 ae 58 73 4c b8 08 f2 b5 13 d8 62 5a c4 d2 35 bc 58 34 e6 34 22 6b 7f 5e d3 ac 14 29 49 84  ...XsL......bZ..5.X4.4"k.^...)I.
1000bf80  f7 18 65 b2 16 75 96 e2 b5 9d 5c 5e 34 dd 6b 8e 23 7b 59 c5 b0 c2 95 79 d8 ca 3a 12 35 00 25 b4  ..e..u....\^4.k.#{Y....y..:.5.%.
1000bfa0  77 f8 8d 9a 27 d1 77 95 5e df 89 ca 22 1b 0e df 26 54 d4 5d ea 18 8a e9 5b 89 f9 cf b1 cc b3 1a  w...'.w.^..."...&T.]....[.......
1000bfc0  20 4b 45 1b ac 13 50 52 3a b7 26 8a 3d d6 61 35 71 4e e9 77 77 15 b5 c7 06 7a 6d 24 eb bc 4f 7c   KE...PR:.&.=.a5qN.ww....zm$..O|
1000bfe0  1a 4d 3e 18 96 3d 7e d9 ff a4 66 02 ed 4c b9 14 87 86 30 53 7c 28 db 5d ac 82 4f c2 51 a7 48 3d  .M>..=~...f..L....0S|(.]..O.Q.H=
1000c000  f9 ee d1 1f 44 7d fa 5f d2 20 9b 33 8a 1e 16 23 5c ba 52 37 81 b9 91 a7 97 3e 15 b6 9f 77 18 7b  ....D}._. .3...#\.R7.....>...w.{
1000c020  32 97 2a cb f8 81 47 ac f0 b3 69 69 87 3e 4d a5 a1 1d 28 29 2a b3 b6 61 b6 a5 ce f7 1a f4 6c d3  2.*...G...ii.>M...()*..a......l.
1000c040  81 5f 52 ea fb 99 e5 23 e9 d0 e2 2c 1c eb 42 13 03 c6 d9 34 67 78 3f 5f 8a b7 5c 8a 79 a3 c0 f3  ._R....#...,..B....4gx?_..\.y...
1000c060  3d fd c6 73 6f 2e a1 8c 1a 07 a8 53 59 06 cc 5c 03 46 0c d4 0f d5 5d 8e c3 71 91 f3 24 02 fd 4e  =..so......SY..\.F....]..q..$..N
1000c080  f6 57 ec 76 53 d7 bf df 07 04 80 51 c3 1c b6 1a 38 83 63 d9 8c 37 69 6e 6e d7 b7 4f f6 0a 7c 50  .W.vS......Q....8.c..7inn..O..|P
1000c0a0  c5 af c3 de d6 bb 2f fa ab e6 3b 02 2b a9 d1 be 95 c1 24 0e 3d 23 f1 89 1f f3 03 c8 71 62 65 cc  ....../...;.+.....$.=#......qbe.
1000c0c0  84 8b 2f 16 39 84 91 02 f9 ed ed 90 20 89 05 f5 e6 65 1a 9d 02 13 1c 97 57 c4 c5 20 d3 46 34 af  ../.9....... ....e......W.. .F4.
1000c0e0  5a d9 15 1a 95 e8 cb 9f 6d e0 86 c3 ae da 8c 6b 42 43 f2 d8 ad 2b 98 4e 33 8b 1d 9d 69 ba 4c 35  Z.......m......kBC...+.N3...i.L5
1000c100  6b f8 cf 41 46 bc e9 77 af de f9 6f 37 13 d6 d1 37 c1 64 bb 2e 40 23 90 34 69 fb bf a8 6b 6e de  k..AF..w...o7...7.d..@#.4i...kn.
1000c120  9d a6 6c 5a bb af ff 5f ca 09 92 1b e2 9a a6 25 76 b1 e6 34 6e a3 19 f2 2c 03 ec e7 f3 db 92 91  ..lZ..._.......%v..4n...,.......
1000c140  92 f3 62 b0 f9 19 52 25 be 72 94 ae 04 1b 6c 7a eb 5c 83 ea 4f 7a d6 45 c4 44 43 91 41 e1 94 fe  ..b...R%.r....lz.\..Oz.E.DC.A...
1000c160  3e b8 ea 59 ac a3 bc f8 9e 7d cc 8c 29 01 71 2d 4d 7e d2 87 28 fd 29 09 dd 66 80 2c bc db f0 74  >..Y.....}..).q-M~..(.)..f.,...t
1000c180  4e 2a 0b 5d 73 f7 45 d7 b7 1c f7 53 e5 2a 82 7c 84 3f ba 25 db 20 74 8a 2e 6d 3f cc 42 68 d1 f4  N*.]s.E....S.*.|.?.%. t..m?.Bh..
1000c1a0  32 08 ac d4 e6 68 82 e2 a1 a6 fb 85 cc 30 a0 b5 62 97 d3 26 ac 0f f3 07 c8 a9 6c f2 01 4e 2f 9d  2....h.......0..b..&......l..N/.
1000c1c0  28 22 41 6b c0 ba e8 ce bd 71 69 4a e1 f1 13 27 3c b6 cf ea b2 e0 39 4b 39 ab f7 79 55 5f 08 ce  ("Ak.....qiJ...'<.....9K9..yU_..
1000c1e0  a1 5e 1a c8 7a b0 cd 7d c0 4e b1 e5 2d 81 3c 6a 74 0a 73 77 64 04 e0 8b 77 18 70 c2 e9 94 a6 61  .^..z..}.N..-.<jt.swd...w.p....a
1000c200  b5 68 9d 31 78 7c 40 4a 24 ea 72 e0 75 35 10 61 e6 49 8f c9 c0 72 82 9c 35 1b 24 48 c2 10 53 28  .h.1x|@J$.r.u5.a.I...r..5.$H..S(
1000c220  90 06 59 9d ff b4 c7 00 c0 b2 8a 30 a3 be b9 df d3 7c e4 bd e8 08 bb e1 6a 5d d2 4b 64 5f de 03  ..Y........0.....|......j].Kd_..
1000c240  af bb be 55 ff 2a 4b 4a fd 51 3b 5f da db 49 5d 1d fb 4f f3 9f a2 ba 91 60 6f 6e 66 b0 cc 4b f2  ...U.*KJ.Q;_..I]..O.....`onf..K.
1000c260  ce fe a1 47 8f 55 26 59 c1 ff 5c 46 98 78 0e b4 b0 3f e0 9e 2b 0f df 1a ba 0d e0 b8 dd aa a5 c6  ...G.U&Y..\F.x...?..+...........
1000c280  bf 3c 5e 0e 6f 57 22 b4 1a f9 7d f5 f4 9b d7 75 e0 83 36 69 87 fa 14 0c c7 bb 23 f6 ae ea f4 90  .<^.oW"...}....u..6i......#.....
1000c2a0  d7 c4 51 0a 84 e2 88 eb 56 f1 14 da 26 f6 f7 0e c5 15 8e 95 04 9d ed 87 79 5c 55 16 cb 74 5f a7  ..Q.....V...&...........y\U..t_.
1000c2c0  cc c1 c0 05 80 5a 21 1d c2 5d c4 65 70 f8 f5 2b 11 e6 86 be c4 1b 89 32 9a de 83 de 1c e1 ee 29  .....Z!..].ep..+.......2.......)
1000c2e0  0f d0 34 83 af ce ba 4b 20 e3 79 64 b1 fd b9 5e 8e fd 2a 5a 10 1e 41 3e 6b 5f a6 65 ed 73 65 26  ..4....K .yd...^..*Z..A>k_.e.se&
1000c300  ef e9 8f 00 1c e3 a7 23 d0 cb 0f 61 33 70 5e b2 f4 a3 50 8c 68 d7 a6 b8 71 12 3d 51 63 21 f3 00  .......#...a3p^...P.h...q.=Qc!..
1000c320  f1 b6 2a 29 7c 2f a8 3f 2b f6 25 b8 93 f9 07 45 66 ea 44 d5 f5 18 22 1c a5 6e 02 63 cf 65 e7 23  ..*)|/.?+.%....Ef.D..."..n.c.e.#
1000c340  34 68 e6 21 81 63 b8 8d 8d fc 52 0e 21 f3 f3 dd 53 27 7d b9 d9 78 13 61 52 81 ad 90 49 fc 4c d1  4h.!.c....R.!...S'}..x.aR...I.L.
1000c360  92 59 e7 2f 1e 20 06 c9 f3 f4 ee b5 94 30 2a 11 f7 18 8d 05 25 37 34 55 47 9b dd 48 8f 1a 21 fa  .Y./. .......0*.....%74UG..H..!.
1000c380  86 53 89 25 f6 5e fa 83 7f 80 2a b1 3c 13 25 3d 34 58 d3 aa 11 19 76 ba 94 b5 f7 3d a0 30 10 f1  .S.%.^....*.<.%=4X....v....=.0..
1000c3a0  50 41 2d 3a 56 75 df 04 04 7a e2 b7 98 56 23 c4 b3 93 0e 98 5e 30 ed 2e fa 9e de 95 1c 54 96 99  PA-:Vu...z...V#.....^0.......T..
1000c3c0  1a 1d 3d 1d 73 1d 1e 04 d4 71 3b 42 45 46 1f 61 49 46 9a ad af 25 13 75 6b 1c e4 24 fe 39 f3 cf  ..=.s....q;BEF.aIF...%.uk..$.9..
1000c3e0  60 96 4c 1b b9 5a 78 ff 89 bd ed d4 07 93 1b 1e af fb ce 35 c9 60 f6 ed 2b a7 a3 48 78 c5 62 01  `.L..Zx............5.`..+..Hx.b.
1000c400  6d c1 fc d1 06 a8 fb 97 e6 65 ec 5e a0 4b 4c a3 cc 08 f3 d9 6b 30 dd 3b 12 b0 56 a2 10 95 16 a5  m........e.^.KL.....k0.;..V.....
1000c420  1b 63 19 68 29 13 4e c9 0b 70 82 5c df 1b 25 8a 2b cd a2 39 ea cf 92 3e cc 1e 39 f7 b0 94 4b 51  .c.h).N..p.\..%.+..9...>..9...KQ
1000c440  8c 81 29 d6 be 7e 74 98 2a c8 b5 0b ff b7 a6 c4 09 8b 19 b4 11 47 ec 6b 34 b4 66 25 b5 2f 61 9c  ..)..~t.*............G.k4.f%./a.
1000c460  41 18 06 13 47 e9 d0 ca 47 7c 40 7d 74 1c 8f 39 84 b3 06 0b 16 48 45 f4 7d fb a0 8b eb 8f c5 cb  A...G...G|@}t..9.....HE.}.......
1000c480  59 41 57 b2 9c 6a b7 97 f6 c4 f1 ca c2 a3 7a 7e 0f c4 1e 5f 9c b6 dd 60 08 f2 81 9e 72 92 fb 1e  YAW..j........z~..._...`....r...
1000c4a0  56 1d 0c de 8b 66 ba 3b ad f6 95 b2 6f 50 ae 54 a9 05 d6 1e aa 60 a7 e6 74 71 01 3a 5e ca 15 83  V....f.;....oP.T.....`..tq.:^...
1000c4c0  bb 19 03 00 86 a5 ab 5c 4f 7b 5b 2e 86 63 49 1c 23 8d 3f 8e f2 c8 5b 2b 21 a1 27 46 51 8b 2b f8  .......\O{[..cI.#.?...[+!.'FQ.+.
1000c4e0  bf 5d e6 10 5a 8f ca d7 d3 14 09 44 92 2c 5d 5b 36 39 15 94 d4 b2 24 7e f8 d6 43 be 33 93 93 e9  .]..Z......D.,][69....$~..C.3...
1000c500  a1 ef 77 b4 3d 2d 1f 90 b6 d4 81 b3 7c 64 a7 aa b2 82 ed 72 c1 1a c2 aa af 0f 6c 86 69 27 2b d5  ..w.=-......|d.....r......l.i'+.
1000c520  8b 4f 4f fe 55 2a 91 c3 26 25 a3 27 64 0e 6a f6 42 a0 4a 3b 1a 08 0c bc 6d 04 7b ec f8 37 2d 1c  .OO.U*..&%.'d.j.B.J;....m.{..7-.
1000c540  9e c1 bd bf a7 f0 c0 c7 57 15 e3 af 38 c7 7c 7d f5 4f 1b 7c e2 d4 dc 42 5b 9c 51 b5 ed 8d 5a 2a  ........W...8.|}.O.|...B[.Q...Z*
1000c560  35 28 a7 4e 9a 81 52 dd 45 49 69 fc 0b 42 f7 b6 2a 6e e8 a7 48 4b 64 a0 e2 36 d7 2b 77 98 bc 09  5(.N..R.EIi..B..*n..HKd..6.+w...
1000c580  db 81 81 1b 8a 06 5d 97 40 d7 13 92 91 bf f2 64 fe 9d 8a 3d b0 2a 45 30 f0 d6 db f8 bc b1 9a 17  ......].@......d...=.*E0........
1000c5a0  ff 24 60 a3 26 98 b2 ee 75 8f c4 f9 19 58 d7 da 9d 26 39 12 ba 30 ff 78 1b fd e9 5b a9 1d cd 74  .$`.&...u....X...&9..0.x...[...t
1000c5c0  d0 a0 04 b2 ce 66 73 c8 9b 46 48 38 fe ef d9 0a ac cc d7 ac 95 d0 f0 54 43 63 a0 b2 5f ca 71 be  .....fs..FH8...........TCc.._.q.
1000c5e0  56 91 77 4e d0 00 6f ae d5 fc 85 f6 1d 46 58 18 ea 93 eb 92 e2 1b 18 fc 09 d8 c5 9f f1 e5 2a d4  V.wN..o......FX...............*.
1000c600  ad 95 ed 4d 5f 09 41 6b e3 db 33 80 17 1e eb 0a 4a e7 4f ba 3f b7 17 8a 52 f7 28 bf 15 a9 84 c9  ...M_.Ak..3.....J.O.?...R.(.....
1000c620  51 5b b6 d3 57 45 5c 70 16 8d be db ec 24 f3 1c b6 64 98 bd 01 74 1a 94 f4 24 37 ce 5a 23 06 4a  Q[..WE\p.....$...d...t...$7.Z#.J
1000c640  ab 3c 9b 13 83 84 74 30 eb 32 60 c0 f6 3e d6 7f 9d 79 d0 88 8e cb 70 e9 48 f6 3e e5 3f 81 81 d0  .<....t0.2`..>...y....p.H.>.?...
1000c660  9a f4 d7 1e 66 c1 2b b3 b1 ad da b5 bd e0 be 96 7d 30 1e 8c 7c b7 9e d4 7b cc 10 56 1e e5 81 af  ....f.+.........}0..|...{..V....
1000c680  1b 36 f2 f8 5c 11 d6 67 1f f2 4f 0d ca 28 c5 f0 1d b7 5a 8b b0 bb 90 25 b5 45 ba 8e d7 83 31 3b  .6..\..g..O..(....Z....%.E....1;
1000c6a0  58 08 2a 28 ca 52 e0 22 51 fa 5d 9a 05 12 5f 2d 04 73 b0 f7 1a bd df 8b e5 10 37 11 c5 e3 14 a3  X.*(.R."Q.]..._-.s........7.....
1000c6c0  16 b3 31 2a 05 41 9a 6a ee 0a f9 8a 8f 18 c1 da 41 a7 d5 2e c7 42 d1 f0 b9 e9 b5 ec ed 6b 1e 32  ..1*.A.j........A....B.......k.2
1000c6e0  4c b5 74 f7 50 c9 04 55 a6 bb c2 39 fe 37 76 3f df 5f 77 ab dc e3 5a 89 0a 87 63 9f 93 2b fe 7f  L.t.P..U...9.7v?._w...Z...c..+..
1000c700  41 1e b7 34 e8 6c 60 d0 f2 3a 62 ac c2 c0 76 65 9f 4f 75 9e be 8c 9a 80 61 cb 96 05 01 94 8a 3d  A..4.l`..:b...ve.Ou.....a......=
1000c720  f3 d3 90 db 5a 41 cb 50 ed 41 e2 e9 b0 08 6a 3e ed 8d 8e d0 f7 71 a2 aa 66 ad 70 92 74 e8 5d 8f  ....ZA.P.A....j>.....q..f.p.t.].
1000c740  b0 44 cd 2f be 5c e5 b9 9d 73 7b d2 56 67 cc da a1 d3 9f ee af ed 0e 10 35 c1 5a 6f 0a 80 93 b8  .D./.\...s{.Vg..........5.Zo....
1000c760  39 e9 e1 92 11 68 e5 33 f7 4a 7b 98 de dc 4a 40 67 ab 1a 5d da 60 60 73 71 be ca 88 c5 f2 fb ae  9....h.3.J{...J@g..].``sq.......
1000c780  1a 43 62 cf 38 a5 46 be 7c 83 d3 79 55 ec 5d 20 6f 4c d1 ba 01 79 43 c4 83 7d 28 b1 81 4c 43 ba  .Cb.8.F.|..yU.] oL...yC..}(..LC.
1000c7a0  69 c3 5a 86 da 7d d9 69 e7 8f 85 26 57 d9 c5 bd 47 09 9d 46 4a c0 08 05 a4 86 a4 f0 df 9c a7 a8  i.Z..}.i...&W...G..FJ...........
1000c7c0  ff 82 ed 93 ac a3 41 af 78 dc cf 88 43 d1 e1 3e f9 1d 42 11 50 e5 ef d0 3c 0f e7 37 3a 63 b4 b6  ......A.x...C..>..B.P...<..7:c..
1000c7e0  a7 58 a3 b4 fd 6d a3 cd 1d 40 7e 75 bf cf 08 de 58 a4 46 05 e0 a2 42 44 13 58 e9 48 dc 54 6c 0b  .X...m...@~u....X.F...BD.X.H.Tl.
1000c800  55 13 69 b7 68 2a eb 97 db cc c0 6a 28 e6 c1 66 8b 01 2d 40 88 25 00 3b 2b c0 97 b7 99 d7 46 d0  U.i.h*.....j(..f..-@.%.;+.....F.
1000c820  0a 86 7a 93 5d d7 05 06 6e 32 a5 81 4e 8c fb 3d 2c f9 4a 98 ef 91 a8 f1 b7 15 2f f4 21 36 cd 6e  ..z.]...n2..N..=,.J......./.!6.n
1000c840  43 e3 a7 ac a0 79 9b 26 64 2b 78 05 d4 c7 4c 35 c2 ab f7 c2 41 8b 96 48 a7 19 ac f6 22 ae 25 30  C....y.&d+x...L5....A..H....".%0
1000c860  88 b9 60 f4 27 e0 05 20 97 8b 7b fa 34 fc 8f f5 e2 ea 29 d6 7d d3 d9 d7 78 15 f4 ba 37 03 d2 9e  ..`.'.. ..{.4.....).}...x...7...
1000c880  c0 8a fa d5 e7 7e 88 06 de ed 9a 3b ec 02 09 26 86 a5 ba 37 e6 76 74 a2 a4 0a 2c de 71 8f 59 de  .....~.....;...&...7.vt...,.q.Y.
1000c8a0  0e f7 a6 44 1f 84 56 72 6b 67 cb eb cc f8 a6 16 c1 3f 2b 37 29 5a 2c 84 c9 c1 65 b2 12 7a ec 12  ...D..Vrkg.......?+7)Z,...e..z..
1000c8c0  c7 54 25 cd a1 f1 66 59 9c 6b 69 80 12 6e 25 ca 44 19 59 f5 36 b8 99 1a f2 ad d4 ff b6 e1 39 30  .T%...fY.ki..n%.D.Y.6.........90
1000c8e0  ec ea 99 1e 52 62 95 53 01 51 90 c6 74 4d a8 29 d1 ab a0 c5 28 0a 22 27 c0 18 33 0d 1e 05 5e 27  ....Rb.S.Q..tM.)....(."'..3...^'
1000c900  a3 8f 0d 75 6f 69 84 b9 6b dd 3f 2e 54 df f4 ee b7 1f 13 33 88 6c fd 50 d4 a3 79 f3 81 d9 e5 b6  ...uoi..k.?.T......3.l.P..y.....
1000c920  1e 19 bd d8 fe 6f 28 b3 f1 26 42 a7 f5 df 46 29 e5 ac 6d eb d2 07 58 16 b4 85 1c 52 e6 05 3d b8  .....o(..&B...F)..m...X....R..=.
1000c940  ed a2 fc e6 d1 d4 ca 18 ff f5 5b 78 02 87 5a d0 7e a6 a1 58 a6 dd be 70 19 0d aa cc fa d5 f9 41  ..........[x..Z.~..X...p.......A
1000c960  71 02 af 81 c0 bf 76 2d e2 4a 67 68 72 30 83 cf c9 2c 86 13 d3 8f 7f f6 47 75 47 a7 d3 a8 89 06  q.....v-.Jghr0...,......GuG.....
1000c980  58 9d 86 57 00 5a 00 91 6d 4d 34 58 46 ef 7f 86 ed 69 c9 a6 31 8e 63 75 cb 64 b2 61 40 1c 0f bd  X..W.Z..mM4XF....i..1.cu.d.a@...
1000c9a0  0e b3 3c 5d 30 95 f2 ea 46 90 11 1c 50 79 1b 26 9d 1e 5f 61 6b 45 b0 24 2a c0 dd 49 54 39 22 c9  ..<]0...F...Py.&.._akE.$*..IT9".
1000c9c0  5f 98 42 a7 6d 89 17 f2 11 1a 46 5f 32 d6 d0 f7 1c b2 99 aa 8f 86 67 fe af d4 9d 24 9c b4 6a b7  _.B.m.....F_2.........g....$..j.
1000c9e0  d7 3f 28 5e 5a 9e 12 27 0f 98 8d 40 01 4b e0 2e 61 73 aa a2 b4 d0 d4 1a 28 d9 98 5f 26 4c 38 df  .?(^Z..'...@.K..as......(.._&L8.
1000ca00  5e 49 8c 7f c6 b2 85 6c d5 24 80 cb 8e ed 3b 84 6c f7 be c9 f8 ae f7 7d 2d 55 ee 10 58 76 93 5c  ^I.....l.$....;.l......}-U..Xv.\
1000ca20  dd 80 f2 71 14 50 62 ef c3 4f 08 ca 02 0d b8 8a 41 30 64 b8 5a 48 0f f6 d1 e4 34 de 3c ef a1 18  ...q.Pb..O......A0d.ZH....4.<...
1000ca40  bc 43 cd a7 14 d5 9a 82 65 27 d3 aa ca cd f1 b3 79 76 69 68 73 5a f4 66 c7 ac a6 31 4f 80 aa de  .C......e'......yvihsZ.f...1O...
1000ca60  29 cd 37 fd c4 8c 08 4f 62 a0 00 6e d5 ab 73 3f 2e 04 bb 03 50 d5 e7 7b 47 4b 08 86 7d 99 dd 63  ).7....Ob..n..s?....P..{GK..}..c
1000ca80  69 5b 35 b3 b2 91 8e 06 9f 08 5a 8b 5a a9 99 da 52 f9 f5 11 15 5c 04 9e d9 c8 36 a9 b8 d0 37 01  i[5.......Z.Z...R....\....6...7.
1000caa0  2f db ce e2 35 04 17 28 a1 3e e4 3c aa 2c 83 51 31 fd 10 cc 6b 50 9b 4e 9c 5b d3 af b9 a7 2e 87  /...5..(.>.<.,.Q1...kP.N.[......
1000cac0  6e 29 f9 a0 7d 16 75 9c 25 a7 a8 ae 52 fa c8 9b 6c fa a2 78 79 87 0d 94 5d 6f bd 40 4f 79 1f 39  n)..}.u.%...R...l..xy...]o.@Oy.9
1000cae0  b2 37 d4 67 56 d5 d9 8c 95 cf 0a 4c 3b 45 92 ed e0 d3 b5 3c 0c f6 2e 8d d1 1a 07 eb a1 8e 6c 68  .7.gV......L;E.....<..........lh
1000cb00  d6 2f b9 b5 09 3d 55 64 a4 76 2d fb 38 cd b1 33 ed ad bb 1d 1b 5d a8 8f a3 da f3 b2 10 af c8 1c  ./...=Ud.v-.8..3.....]..........
1000cb20  fc 2d 90 89 61 5e 60 c2 b7 94 73 0a 57 e2 7c b1 5a 0e 51 31 4a d0 4c ec 26 a6 4c 4c 4d ee 56 4c  .-..a^`...s.W.|.Z.Q1J.L.&.LLM.VL
1000cb40  05 44 9e 88 98 e3 ac 04 e9 7d d9 12 b3 71 36 be 94 5e dc 85 98 60 99 30 8c b3 1c 30 8c c2 0e 44  .D.......}...q6..^...`.0...0...D
1000cb60  df 2a 4a 54 4f b1 e0 6c 25 c5 47 50 12 99 ff 28 8d 16 5f d5 09 8b 9b 4b 0a 99 d8 05 19 09 0f ff  .*JTO..l%.GP...(.._....K........
1000cb80  8c 56 42 b8 2f e0 22 e4 e2 47 33 73 46 22 52 dd 57 1d e1 35 c2 9a c6 29 ff a0 e8 29 15 ac d6 73  .VB./."..G3sF"R.W..5...)...)...s
1000cba0  e2 58 7d fe 8e fc 42 a3 53 37 48 21 21 02 6a af 02 81 6f 92 f7 56 11 8a 39 eb 1f ba dc 02 4b 26  .X}...B.S7H!!.j...o..V..9.....K&
1000cbc0  1f ba e7 0e c0 60 d5 60 a0 6f a3 80 92 02 9e 6f d5 d5 92 69 b5 f4 ff f7 a1 5c d2 3d bf fc 42 86  .....`.`.o.....o...i.....\.=..B.
1000cbe0  26 fd 48 d1 28 be 13 ad 15 ff 25 d6 cd 19 46 32 5f 81 d3 f8 b8 1e f4 b1 67 c0 2a bb f4 3a a9 0e  &.H.(.....%...F2_.......g.*..:..
1000cc00  5a d2 99 1f 86 0e 04 f6 a2 84 07 25 14 54 e6 d6 57 22 f3 03 8e 15 51 f6 93 af 0f ab 8a 90 d6 4a  Z..........%.T..W"....Q........J
1000cc20  fa f0 b5 7c a9 4b f7 7a 6e 6f 29 e2 fd 0f 12 bc b1 32 65 72 4f fd 83 49 9d 26 2b bc 54 06 53 df  ...|.K.zno)......2erO..I.&+.T.S.
1000cc40  55 5f c1 1f 43 45 eb ea c2 2a 89 cc 96 94 ca c0 8d 33 e0 42 e5 9a a0 3a fe 61 57 4c 15 9a ef c7  U_..CE...*.......3.B...:.aWL....
1000cc60  d4 1b 6b 05 40 52 91 6f d9 f8 69 99 15 11 16 f8 b4 28 1b 32 6b e1 53 34 58 77 25 f1 cd 33 b8 bd  ..k.@R.o..i......(.2k.S4Xw%..3..
1000cc80  81 0d bf 73 30 01 3e f4 64 d3 0d f3 d5 ae 47 e7 02 68 58 cf 78 c3 06 5f 26 df 38 4a 62 50 fb 66  ...s0.>.d.....G..hX.x.._&.8JbP.f
1000cca0  1b 4a 81 c9 0d 1a 93 ef 33 63 12 e1 58 9e 28 35 4f 1a fa 5f a0 aa c8 43 32 8a 8c 47 56 74 b0 fb  .J......3c..X.(5O.._...C2..GVt..
1000ccc0  6d 11 b0 c4 55 09 ba a7 a3 ad 04 a6 0b 4c 80 26 19 bc 81 f3 d7 65 45 3c a9 24 91 66 10 c8 a4 e9  m...U........L.&.....eE<.$.f....
1000cce0  c5 58 7b 59 62 e0 43 5e ee 9c 7f fb 8a d5 02 3d 52 36 5d 74 ae 2f 73 61 84 ac 46 ad 74 09 61 57  .X{Yb.C^.......=R6]t./sa..F.t.aW
1000cd00  48 08 ec a0 f4 a2 c7 2f f6 00 20 d4 0f 8a d4 98 ab 43 fc f3 f7 00 49 14 07 6d 4c dd 44 7a 01 a7  H....../.. ......C....I..mL.Dz..
1000cd20  b7 a4 39 bf 4c 7b 64 41 5b 7b 73 c7 93 b0 5f 7f 2e 0b dc d5 44 0a d0 9f a8 9f e6 d0 ee 34 6f c0  ..9.L{dA[{s..._.....D........4o.
1000cd40  cb 82 9a b5 1e 4c c4 48 f1 02 d3 f9 1e 2c 4c 8d 96 06 47 58 d0 7e 10 f6 c7 24 b8 9f fd 8c ee 18  .....L.H.....,L...GX.~...$......
1000cd60  35 c7 31 fb b4 9e 11 4e a0 92 77 46 69 d7 d1 63 58 79 f3 a3 34 dd 2d 3f 39 c4 b9 4a 2e fe aa 73  5.1....N..wFi..cXy..4.-?9..J...s
1000cd80  2e 06 bb e4 61 1a b8 ab e7 ac 0f 4a d1 23 69 0b 67 a9 65 be c3 0d 9c ae 90 8e f1 78 c0 16 0c 09  ....a......J.#i.g.e........x....
1000cda0  2b 5f 87 4f 4a f4 eb 7f ab db ad 52 23 3c 98 13 02 e2 f2 6e 4b f4 1d 09 4b 7e 6b 16 21 b7 11 fd  +_.OJ......R#<.....nK...K~k.!...
1000cdc0  20 ee e5 27 f3 c4 99 2f 66 25 65 d2 11 70 e3 82 e1 80 80 f4 37 1a db 25 7a 49 32 b1 21 71 5e b0   ..'.../f%e..p......7..%zI2.!q^.
1000cde0  5e ab 27 6c d1 96 62 16 1a c0 e8 62 a8 b7 32 6e e8 55 20 90 32 f7 88 31 3c 89 62 05 36 81 17 2c  ^.'l..b....b..2n.U .2..1<.b.6..,
1000ce00  9e 20 d4 4d a5 c5 35 a5 96 04 f8 99 bc 34 ab 64 65 3c f7 0a ac 48 98 95 0c 5c 46 87 7d af 0d 67  . .M..5......4.de<...H...\F.}..g
1000ce20  4a 6a 02 4f a7 ea d2 eb 9a d4 92 a3 0b 76 1e 45 98 af 9d 92 5a 53 a6 b4 8c 85 00 8d e9 87 bd 6c  Jj.O.........v.E....ZS.........l
1000ce40  9a f7 6d a4 1f 94 59 1f c5 e3 58 c4 73 ce 0b 8d 5d 13 c7 27 f0 34 4b e5 32 02 55 8c 83 02 b7 e3  ..m...Y...X.s...]..'.4K.2.U.....
1000ce60  b1 4f 97 1b 6b b9 8a 15 34 c4 96 ee d0 82 4c 13 98 f0 cf 2c 0f 45 14 1b a8 07 57 e0 ef d3 b6 5a  .O..k...4.....L....,.E....W....Z
1000ce80  16 ce ca 6d 61 a0 dd d8 0e 71 d8 7a 61 58 56 44 62 f3 2c d5 09 d6 8a dd e1 de 95 d5 f8 b1 7b 46  ...ma....q.zaXVDb.,...........{F
1000cea0  81 e8 4a c2 9c 6e 2c c2 71 7a d3 55 02 b0 d8 ea 31 0c db 2b 9f 2a 44 e6 32 bb 0e 39 ff d0 ee 84  ..J..n,.qz.U....1..+.*D.2..9....
1000cec0  70 4b 1d f7 50 0e 9d 56 09 48 cf de 98 ef 56 50 b9 56 9d 92 65 f1 33 ff 27 1d 7c 61 08 b7 64 df  pK..P..V.H....VP.V..e.3.'.|a..d.
1000cee0  29 b4 9a 13 37 f5 c4 a3 3c 1d b1 ab 12 59 8a 91 af 16 1e 25 1b ea 9b df 47 b2 89 ec e9 04 77 fb  )...7...<....Y.....%....G.....w.
1000cf00  53 e5 9a d0 8e 5d cf b8 50 20 c7 d3 ae 5a 13 c2 08 67 d1 31 79 79 fb f3 e4 84 df 9c 32 da 59 b7  S....]..P ...Z...g.1yy......2.Y.
1000cf20  e7 7f 14 54 05 9f 6f 49 b9 55 0a 34 21 76 44 92 4a 82 86 ce de fb 74 46 5b 57 53 65 c1 07 00 30  ...T..oI.U.4!vD.J.....tF[WSe...0
1000cf40  b8 52 c6 02 24 e4 3e b7 84 e2 e4 3a 59 4d 8b 7d ba cc d4 31 83 d0 60 fb 90 f6 4f 72 42 40 42 da  .R..$.>....:YM.}...1..`...OrB@B.
1000cf60  52 cc cf 28 9e e2 d2 e3 6d b0 61 f6 24 9c 3c 76 9f 8a ad e9 3e 4a 96 65 a0 6e c1 59 02 09 37 86  R..(....m.a.$.<v....>J.e.n.Y..7.
1000cf80  39 4a 44 c5 97 0d b2 80 2e a3 6f 51 e8 13 cb c9 c4 59 2a 39 ba 11 73 17 d5 40 e4 5c df 30 a7 f6  9JD.......oQ.....Y*9..s..@.\.0..
1000cfa0  ac 12 aa c3 fa c2 ad a9 0e 81 19 1e 2f 60 1f f3 4b ff 0f 87 fc 3b b7 f5 3c 4f 21 4f b0 c5 c9 04  ............/`..K....;..<O!O....
1000cfc0  7d fd cb d7 8d 76 9c 9d 2c 2f 4d f1 20 53 23 8c de 7a c4 a8 9a f3 ea 96 b0 a2 93 e7 f6 25 65 0e  }....v..,/M. S#..z...........%e.
1000cfe0  4f a2 44 6e 39 8f ca 78 04 8a 34 7a 8f 72 53 f6 c6 cc b9 c3 0d 73 78 9f 94 65 4d da b5 f4 d9 ce  O.Dn9..x..4z.rS......sx..eM.....
1000d000  80 5e 39 6a 16 2e e6 9c 1c ad 58 63 81 a9 cb d7 2d 1d 58 55 f8 d1 7b b0 5e e1 aa 97 b8 de 57 39  .^9j......Xc....-.XU..{.^.....W9
1000d020  83 3f 74 b4 08 6f 2a 48 39 a6 7d ab b5 4e 14 3b cf 0a 59 66 f2 25 80 2a db 91 e4 56 b4 7c d0 c8  .?t..o*H9.}..N.;..Yf.%.*...V.|..
1000d040  a7 fc 50 10 a5 9b 9e 53 db ca b2 1d 9d 9c 85 19 7f 1a 21 7c 11 90 90 43 ef 8b a5 84 2c f1 60 dd  ..P....S..........!|...C....,.`.
1000d060  d6 3f ba f5 1d 44 47 89 22 cc 4d be a8 23 91 3e c6 85 ec cc 0a d9 35 ee 9e a4 5f 03 ea 2c 34 d2  .?...DG.".M..#.>......5..._..,4.
1000d080  5b 0a 7a fb 84 40 01 2e 68 f0 6c 4d ff 27 e5 fd 7a d3 50 31 93 81 35 28 58 96 37 62 52 5f 96 95  [.z..@..h.lM.'..z.P1..5(X.7bR_..
1000d0a0  03 d3 ef 07 18 b6 da 72 27 d6 c8 ec 9c 65 c9 56 2b 19 28 17 55 f0 2b 42 88 a8 e4 89 6e 09 31 ec  .......r'....e.V+.(.U.+B....n.1.
1000d0c0  53 e6 00 2e f6 0f c0 69 8e 58 1a f3 2d 07 84 9f 78 ec 48 19 e6 b0 b7 30 7e 56 09 ce 00 38 43 a6  S......i.X..-...x.H....0~V...8C.
1000d0e0  2f e9 df 7a d5 9f 0e 75 e0 dc be 7b 95 f3 c9 3a 46 81 5e 6e 00 56 ac d0 cf ec a1 b3 4b 36 56 61  /..z...u...{...:F.^n.V......K6Va
1000d100  d6 a4 b1 74 d6 08 47 d8 93 d7 dd 54 dc b5 6b 57 80 f7 a8 cb 76 cf e5 b9 27 4a 73 44 6b cc f4 4b  ...t..G....T..kW....v...'JsDk..K
1000d120  0f 15 7c de 2b 73 02 a7 32 30 5d ea 82 58 63 d6 53 99 40 cb 46 99 c3 db b3 cd f2 86 7f 5d f8 eb  ..|.+s..20]..Xc.S.@.F........]..
1000d140  08 8c 35 97 08 a0 67 b4 87 47 ac fc ff 23 91 43 d1 0b 24 ed 64 2d 7b 0d c5 69 c2 63 64 d7 2b d1  ..5...g..G...#.C..$.d-{..i.cd.+.
1000d160  04 47 d0 b8 6e a5 29 35 e1 66 a3 a4 b5 dd 06 6f 83 92 48 2d 9a c9 f8 23 3c c2 71 23 53 59 33 0a  .G..n.)5.f.....o..H-...#<.q#SY3.
1000d180  21 09 23 8a f3 c2 65 6e 93 ad 51 b6 37 1e 7a 45 d2 6e 40 9e af b1 9c 4a 0e d3 2d 09 d5 c8 a5 c6  !.#...en..Q.7.zE.n@....J..-.....
1000d1a0  55 9c b3 d7 35 e6 27 4e 4b f0 c8 59 42 b1 9f 14 fb 6b 7d 01 49 dc ee 53 45 85 98 6a 81 d8 4c 70  U...5.'NK..YB....k}.I..SE..j..Lp
1000d1c0  c0 c8 67 fc 15 0e 69 df be 33 04 97 cb 03 f5 89 13 c5 ef b6 b0 86 dd da 41 10 29 4f dd 1d 7a 89  ..g...i..3..............A.)O..z.
1000d1e0  5d e8 f7 4f ea 41 ab 2b 7c 91 13 ce 5f 63 28 8d a4 a2 d0 6f be 82 2e a5 fb c4 bd e0 a5 5e 4c 1b  ]..O.A.+|..._c(....o.........^L.
1000d200  f7 7c 91 4b 3f 84 3c 51 24 71 f3 d7 28 47 e5 85 a6 56 8f cf d5 8a 06 c0 d9 ce f3 e3 e8 fa ce 87  .|.K?.<Q$q..(G...V..............
1000d220  47 89 0c 45 6c 8a b4 7a 97 29 98 42 e4 9f 15 87 2c ac 30 23 0c a3 b6 5f bb f8 aa 81 1b b8 f5 8a  G..El..z.).B....,.0#..._........
1000d240  bd 33 7e 19 59 38 58 47 7b 3d 97 da 08 1b e8 1e 83 d7 c2 05 5c fc b0 da 1c 52 44 92 23 5a 94 1f  .3~.Y8XG{=..........\....RD.#Z..
1000d260  44 3c 22 ce f3 c3 f8 c8 44 84 09 3f da 44 09 6e 25 6b 81 9b e5 b9 66 ca 55 d4 84 be 46 a3 cd 6e  D<".....D..?.D.n%k....f.U...F..n
1000d280  7c 2c df ae 70 cd 5b e3 79 b5 77 d0 69 da b4 5d 6f d7 ac 09 60 cf f3 66 78 83 ac bb 80 ce ab b1  |,..p.[.y.w.i..]o...`..fx.......
1000d2a0  03 f3 20 ec d2 a9 17 5c 5d fc 11 5a 35 d4 8c 9e cd df 6d 2b 86 18 f2 b1 06 d4 7e a5 c7 f2 ea 9c  .. ....\]..Z5.....m+......~.....
1000d2c0  47 83 24 f1 e3 cd 85 dd f7 4a a2 03 58 d7 57 ab d6 cf 9d a7 0d 26 71 d4 43 3f 03 92 86 6b cb d6  G.$......J..X.W......&q.C?...k..
1000d2e0  d7 28 75 42 3a 83 0c 2e 74 b0 0f 69 bd 17 6f 4d 3b ec ae 99 40 5c 9d 73 c4 3c e3 7d d8 74 7a b3  .(uB:...t..i..oM;...@\.s.<.}.tz.
1000d300  70 96 a2 5c eb 3b 39 b2 d4 9e 2e 39 52 5a 80 d7 57 28 6e cb db 63 a9 36 c0 2f a0 7c 1f f6 86 3c  p..\.;9....9RZ..W(n..c.6./.|...<
1000d320  a3 e6 fa bf 8b d1 52 06 a2 6c f2 00 67 9f 57 6f 9b 7c 6d e0 9a ca 3f 00 13 88 6e bc 6e fd 14 08  ......R..l..g.Wo.|m...?...n.n...
1000d340  9c c1 cc ab e3 4e 0b 00 e9 48 d3 86 35 b9 b1 22 c2 88 88 21 2e 97 b1 e9 b4 3e 8c 13 a4 d6 b1 91  .....N...H..5.."...!.....>......
1000d360  c9 8c 59 2e b0 06 da 48 d1 aa 53 20 87 10 7b a0 59 46 9c fc bf 9a 9d 77 fa 15 6c 77 46 d2 32 45  ..Y....H..S ..{.YF.....w..lwF.2E
1000d380  8b 78 42 b6 bc c4 23 80 0c 7f b3 5d e3 90 85 cc 9d 6d c4 13 c1 5a 6d 6b 9b 46 18 02 75 8d b7 e9  .xB...#....].....m...Zmk.F..u...
1000d3a0  b6 e7 16 81 a9 90 7f 7c 3e 76 cc a4 fd bc c6 5c de 92 d6 ff c2 9f 16 46 42 d6 34 65 29 7a c9 3f  .......|>v.....\.......FB.4e)z.?
1000d3c0  56 ff db 05 99 1b 92 04 ec d5 92 88 a4 39 55 fb 5f ea 64 75 eb 6e fd 6e 56 27 51 42 e6 dc 22 2c  V............9U._.du.n.nV'QB..",
1000d3e0  0e ee b0 a4 b0 44 ce 6c 92 de 81 d9 4f 83 df 19 cc 59 5b 88 6d 45 19 d6 7e 41 17 dd 85 c2 85 35  .....D.l....O....Y[.mE..~A.....5
1000d400  26 a6 d4 70 46 66 84 49 4d 87 a4 54 ef 0a f8 03 b3 e0 59 1e 3f d8 a4 03 fd ad 85 4a 7f 67 e7 a2  &..pFf.IM..T......Y.?......J.g..
1000d420  1c e1 85 37 ed ec a5 3c fa b3 ac 2d 00 38 5b 3f a7 ff 52 77 25 47 db a7 64 a7 de 6a 89 76 84 7d  ...7...<...-.8[?..Rw%G..d..j.v.}
1000d440  85 a1 29 41 c9 b0 38 5b 5a fc 71 b6 5a e8 ad e1 d1 83 d5 4d 0d 3c ae 61 d1 14 35 0d ae 1a 23 20  ..)A..8[Z.q.Z......M.<.a..5...# 
1000d460  a2 6d d9 75 af f9 45 45 e4 09 47 3c 57 ec f7 11 5c 9d 27 ef 38 99 aa 57 93 f2 79 58 82 37 9e 27  .m.u..EE..G<W...\.'.8..W..yX.7.'
1000d480  44 bd 2f 28 1c a8 27 11 ee db 8d fa 13 d7 78 6e 74 4f 84 8e 11 3f 74 72 20 bc e9 fe dd 2e d4 cd  D./(..'.......xntO...?tr .......
1000d4a0  60 a1 f0 1d dd 1b bf f3 de 28 6e 1f f6 83 0b 0d 84 72 72 99 e7 5f d7 f6 47 25 26 7b 2c d3 fa f7  `........(n......rr.._..G%&{,...
1000d4c0  7a f6 88 8c 8d 24 54 6b d9 39 b0 12 c7 cc ed 3b f4 cf 59 25 28 a4 1a e7 81 60 0e ce b4 a1 24 fe  z....$Tk.9.....;..Y%(....`....$.
1000d4e0  68 2c be 81 77 fe db df 92 06 f2 41 17 e6 f4 a1 0e 6f c3 d7 da 20 db 88 76 43 6a aa 69 2f d5 a8  h,..w......A.....o... ..vCj.i/..
1000d500  77 cc 40 68 c4 8a 93 fe 61 97 2d 56 ff 64 68 27 f3 e0 c6 3a 3c e6 bc 47 21 e4 ac 65 eb 6a 36 92  w.@h....a.-V.dh'...:<..G!..e.j6.
1000d520  29 c9 5c f8 8c 67 2e 27 dc 7a 62 77 7a ba 03 5a 15 21 5f b4 f2 e5 cc a3 38 a1 12 c8 45 80 7c 34  ).\..g.'.zbwz..Z.!_.....8...E.|4
1000d540  23 58 1b e0 f3 6b 70 1d 7c 52 04 3e 4d 85 21 9d c1 82 4c c0 29 8b 8f 8e e6 ff 33 b9 3d a1 ee 18  #X...kp.|R.>M.!...L.).....3.=...
1000d560  f9 46 9f f7 51 4a fb cc 28 22 f8 6f ae cf 52 45 f7 be 91 00 fd 14 66 07 ae 13 f9 af 91 8f f9 4a  .F..QJ..(".o..RE......f........J
1000d580  47 5f cd f6 6f ef b4 9c 1a 61 3f ed cd 03 a2 e8 e9 8d 4d 10 d3 38 f5 17 fd e0 db 74 58 07 1b 72  G_..o....a?.......M..8.....tX..r
1000d5a0  90 47 a4 e8 db 80 fa f0 5e 6e 0b 5c 32 e6 2a eb f4 29 b0 87 04 94 fe 52 79 15 5b 26 53 54 e4 75  .G......^n.\2.*..).....Ry.[&ST.u
1000d5c0  a9 4b 31 0c 79 2d 84 2f 5e 78 a1 82 28 a0 68 de 82 28 1f a1 16 58 f3 04 e3 3f 9b c2 07 6d 1f 81  .K1.y-./^x..(.h..(...X...?...m..
1000d5e0  f6 63 5c 09 be 29 e2 db a0 c2 5c 4f ab 53 ed dc 8f 2b 71 fd 5c 97 31 71 2a b4 53 c4 c9 73 13 68  .c\..)....\O.S...+q.\.1q*.S..s.h
1000d600  70 25 95 63 3a 46 af 9c 9b 3c 2d 9e ed b8 bd da 94 be 83 c5 48 a1 51 b3 10 01 f3 1f 5e f9 82 1b  p%.c:F...<-.........H.Q.....^...
1000d620  eb 0c 22 f1 4d 7a ee f6 8c b2 31 36 a2 14 b2 64 c8 20 d1 47 28 bd 41 15 e8 5b ce 94 2f b5 89 59  ..".Mz....16...d. .G(.A..[../..Y
1000d640  16 80 91 b1 ab 5a 07 af f1 15 84 ee de c1 1b 6d 97 42 35 0c d4 30 3d ce 83 15 bf 7a 7e 37 29 cb  .....Z.........m.B5..0=....z~7).
1000d660  84 b5 fb ca 2a 27 a8 4d fb fc 73 cc 52 d5 f7 db 61 44 5a ef 74 8a 4a e1 0c 5e ff 4b a3 ea f6 bd  ....*'.M..s.R...aDZ.t.J..^.K....
1000d680  ea b8 af 7b 85 49 77 8b f9 d3 d3 47 84 75 f1 6f 83 40 cd 15 be a6 86 2b e5 1b 20 5a 04 1e cb 48  ...{.Iw....G.u.o.@.....+.. Z...H
1000d6a0  69 2f 1e f7 3a 4f 5a 4f 2b b8 c0 e8 f4 5f 71 c4 82 50 78 d6 1b dd 03 a3 0e 3b 4c 03 ac 83 47 75  i/..:OZO+...._q..Px......;L...Gu
1000d6c0  a4 9d 4a 36 85 b3 cc e5 f8 a0 76 32 1c 9c 3f 19 cd 73 dc 42 4a af 3a f2 40 d2 b3 fa e3 e4 dc 45  ..J6......v2..?..s.BJ.:.@......E
1000d6e0  76 e3 e3 90 98 ed 7f 44 6a 1e e1 0f 1a d5 8b ef 6a da 0b 96 66 20 e9 95 79 be b6 24 40 58 5e c4  v......Dj.......j...f ..y..$@X^.
1000d700  10 cc e4 dd 01 38 d3 17 38 5c 95 1b 55 2b 7c 3c 8a 43 1f 6e 1e 21 83 e3 da 72 18 eb f7 1d ef d7  .....8..8\..U+|<.C.n.!...r......
1000d720  84 77 17 eb 24 2f 99 9e 5d 0d da e3 6b 68 b5 82 fd 6b f6 84 c3 1c 71 38 63 51 db 3a 1b 2d f7 1e  .w..$/..]...kh...k....q8cQ.:.-..
1000d740  cc df db 25 ee 21 5b 05 6f 57 6b bd d1 ed 2b d0 1c b6 b2 71 52 78 06 a2 64 85 db b4 f7 e9 1e ba  ...%.![.oWk...+....qRx..d.......
1000d760  b2 d3 a5 3c ea 7e 96 7a a0 81 28 82 aa 15 56 e8 4b 27 66 48 f7 27 ef 50 13 b6 97 ad 5a 82 95 79  ...<.~.z..(...V.K'fH.'.P....Z..y
1000d780  9e 08 7d 22 fa 17 40 92 d3 c0 9a bc 83 6a 6a 91 6c f5 44 cd 30 52 97 99 45 b7 2f ee 61 7f 45 b9  ..}"..@......jj.l.D.0R..E./.a.E.
1000d7a0  98 fa 56 bf 2f 1f 6a f3 82 e4 f6 34 7d 03 75 f3 f3 3a fb c7 2d 9e 73 91 4e 86 3b 45 cb df 83 54  ..V./.j....4}.u..:..-.s.N.;E...T
1000d7c0  3d 07 8c 2f 33 0e aa 5d 7c 63 72 09 f5 25 d6 f9 4b fb f1 b7 49 2a 36 98 53 c8 07 02 c4 0c b4 23  =../3..]|cr..%..K...I*6.S......#
1000d7e0  81 1e ab aa ba a1 fd 34 50 be 90 a4 89 da f1 f8 5e aa db f7 42 cc 2c 40 a8 c4 f6 19 65 4e b4 ef  .......4P.......^...B.,@....eN..
1000d800  67 6a f3 a8 00 1f 8b b2 b2 21 32 bc fb 76 29 c4 38 dc 37 52 27 4c d6 37 2b 36 cb 1b 72 2f 66 80  gj.......!2..v).8.7R'L.7+6..r/f.
1000d820  1e 66 78 43 31 58 b8 1c 00 34 ff 35 62 db 97 49 17 0d cf 49 b2 2a 96 97 cb b4 4d 44 35 63 df 12  .fxC1X...4.5b..I...I.*....MD5c..
1000d840  d9 f5 70 e1 97 c9 41 95 8c 40 69 76 1a 39 e3 7b 9c 83 89 5e 23 0c f3 f9 8a 6d 16 7c 4b ab d8 d7  ..p...A..@iv.9.{...^#....m.|K...
1000d860  13 7c 79 9f 84 ac 45 5b c0 75 75 c1 f6 5d 1c 4d 07 bc 2a 72 77 05 6d 1e 0b 3f ec 99 c1 92 3c 4c  .|y...E[.uu..].M..*rw.m..?....<L
1000d880  27 36 51 d4 64 ce ff 29 2e e0 86 9d df 6a b9 d5 05 47 cc ef 52 61 bc c0 7f 88 e4 27 06 17 cd c3  '6Q.d..).....j...G..Ra.....'....
1000d8a0  3d 95 a1 22 c4 bc b0 0a a8 07 3e 10 57 e8 92 c1 fb bc 07 3c f6 1a 42 b8 0f fd 0c dd 1b 2c bb ba  =.."......>.W......<..B......,..
1000d8c0  6d 68 31 bd 60 cb f8 54 3e d5 13 63 ec ba 38 9c 73 82 92 18 17 1c a5 3d f3 73 6e c4 ac 58 2b 97  mh1.`..T>..c..8.s......=.sn..X+.
1000d8e0  6e 38 b7 4e bd 39 ee 55 85 e9 97 b4 cf 79 77 92 94 1e a3 bb 73 02 3a 2a 5d 72 ee da 2b e4 54 23  n8.N.9.U.....yw.....s.:*]r..+.T#
1000d900  1f 68 7b 2e 80 c6 aa c9 81 2c ac 85 ae e6 f4 53 75 cf d5 da 53 3d 22 03 d6 80 83 08 8e f8 e8 0e  .h{......,.....Su...S=".........
1000d920  a0 3f 51 f2 8d 3e 14 6a 7a 1d a6 7a 80 b7 fc f9 81 7e cc ee 5b 07 2c ac cf 28 c1 ae 5c 7e a1 b3  .?Q..>.jz..z.....~..[.,..(..\~..
1000d940  45 a0 da d4 77 69 2d 17 92 e2 fa 77 25 80 b9 07 4a d1 9c 94 0f a9 81 ee 8e 7b 0f 8a 7d 34 60 46  E...wi-....w%...J........{..}4`F
1000d960  69 ae b6 84 e6 93 02 08 5b f9 df 6f 7a 6e 90 27 0a f0 74 43 b8 a4 9e 50 59 cc 9b 03 aa 83 d2 89  i.......[..ozn.'..tC...PY.......
1000d980  22 c7 86 26 a2 89 3a 10 a8 71 83 43 c0 44 eb 01 b1 3f c9 48 31 33 04 62 6a 84 ad 4d 5f 3c 08 d3  "..&..:..q.C.D...?.H13.bj..M_<..
1000d9a0  2d 58 b6 e6 36 6e 7c 8c 32 b5 55 05 70 82 17 e5 43 b9 c1 8a 48 65 f0 73 eb 1c 72 2f ad 68 d8 eb  -X..6n|.2.U.p...C...He.s..r/.h..
1000d9c0  9a 70 78 ad b2 0e 07 93 d6 0a 1b 42 4b cb 31 c0 48 65 55 ec 68 10 90 40 1c 37 f9 0c ab 2b 1e a9  .px........BK.1.HeU.h..@.7...+..
1000d9e0  fd 8e b5 1c 41 36 53 68 bb 21 a6 d5 5f 3d 22 c8 a5 4b c5 54 11 d1 07 3c 5c a3 2b a9 36 ac 91 c6  ....A6Sh.!.._="..K.T...<\.+.6...
1000da00  c3 c5 c9 bc 66 93 a7 b3 1f 41 43 a2 e1 ee 47 f0 81 1e 5f a7 de f8 00 b8 11 96 45 0d b9 39 22 a2  ....f....AC...G..._.......E..9".
1000da20  42 67 b2 ce 5e ef ef 61 63 73 56 2e 44 97 69 69 51 3a 75 eb 0b 28 e5 0f 18 08 7a 74 65 45 8d d4  Bg..^..acsV.D.iiQ:u..(....zteE..
1000da40  de a4 86 66 61 0b 5a a2 ef c7 5e 03 de 69 48 57 ff 0d af 93 38 b4 81 9b 0e f1 15 f2 f5 1d 88 d7  ...fa.Z...^..iHW....8...........
1000da60  f3 16 f4 92 c7 5c 97 59 7c ec 35 dc 7a 21 7e 44 81 30 57 9e 65 bb f2 da 31 f2 1e f6 0e b8 68 92  .....\.Y|.5.z!~D.0W.e...1.....h.
1000da80  2f 21 07 49 84 7c bd 9f eb 2a 97 7f bd 68 20 9a c9 98 9f 83 53 5c 73 5a dc 7a 20 c5 27 54 e2 9c  /!.I.|...*...h .....S\sZ.z .'T..
1000daa0  a3 3c e4 7c 76 69 e0 b3 ca 09 d5 7b 45 96 50 29 ab ed 26 b6 0e 7f 24 f5 0f 7c 22 c5 cb 66 69 3d  .<.|vi.....{E.P)..&...$..|"..fi=
1000dac0  4e 7a 6d e3 fb da 91 c4 48 b1 50 b0 c2 a6 58 be be 29 15 11 af a2 04 ba 42 d6 33 cb 2c b7 ad fd  Nzm.....H.P...X..)......B.3.,...
1000dae0  45 68 53 e4 58 7a be 34 e0 6a 3b 42 39 0e 95 85 51 53 38 77 4c 36 3b 48 37 00 57 5c 24 d2 57 ee  EhS.Xz.4.j;B9...QS8wL6;H7.W\$.W.
1000db00  02 d2 22 38 14 3c 43 c4 3f d5 21 8b 08 45 8c c4 00 64 80 06 15 20 a9 52 91 92 6e b1 14 c5 5f 4f  .."8.<C.?.!..E...d... .R..n..._O
1000db20  0c 7a ba 3b ea 81 31 af 32 92 72 14 ad d7 e8 98 86 0c cf f6 4c b2 df b3 7d 4e d3 41 d4 8d 33 9e  .z.;..1.2.r.........L...}N.A..3.
1000db40  eb 76 87 93 6b d5 05 07 20 c2 9b 59 94 60 de e1 98 9d dc 87 b4 13 48 c4 99 9d 3c dc 83 33 f1 42  .v..k... ..Y.`........H...<..3.B
1000db60  a1 31 c3 3b 9e 30 7f a4 5a 53 79 81 e3 fd aa e0 6b ea a2 1b 62 68 98 79 47 6f e2 f1 58 ee 88 e6  .1.;.0..ZSy.....k...bh.yGo..X...
1000db80  df ad ef c3 61 b1 b9 73 d0 d2 b3 a2 d0 42 1c 7e 69 2d 1d a7 3e 50 9c 14 e4 14 e4 b9 7c c7 3d 0e  ....a..s.....B.~i-..>P......|.=.
1000dba0  1f d8 a7 e1 21 22 fc 16 3d 76 5a e7 9f 58 4b 98 87 b9 df 2b 4f 61 ee ce 65 da 62 6b 8f 38 f2 4e  ....!"..=vZ..XK....+Oa..e.bk.8.N
1000dbc0  82 57 61 83 af 8f 3d 7b 22 b0 8c 51 a4 66 cb 3c 4b df dd a6 91 b9 7e 6a 33 c4 64 c5 9d d8 68 5d  .Wa...={"..Q.f.<K.....~j3.d...h]
1000dbe0  3d 2e d1 25 fe 4f be 67 52 88 b0 13 e1 eb b4 05 35 1c 34 f9 df e0 07 c5 25 30 50 af da aa 9d 63  =..%.O.gR.......5.4.....%0P....c
1000dc00  e7 43 96 22 7e 9e af b3 c3 ff d0 60 ee e8 a6 85 68 a2 e4 39 b0 c9 54 52 5c a7 b9 b4 1e 80 92 da  .C."~......`....h..9..TR\.......
1000dc20  df 5d 9e 2d 76 d3 ef 8c 98 cd 58 e8 6b 4a 59 56 d2 93 81 bf 19 7d 85 cb 3b 3f 30 3d c9 63 b0 3c  .].-v.....X.kJYV.....}..;?0=.c.<
1000dc40  62 48 e0 aa 8c d7 ac 69 ba 8d bf 12 7e 10 80 4e d3 26 9a c2 80 e8 a4 4b 1e 02 bd 01 09 ad 97 81  bH.....i....~..N.&.....K........
1000dc60  9c 66 86 af b7 bf f8 a4 93 ce e2 1e 0f 6f 8a 3b b9 87 14 d3 13 41 fa 30 a8 21 20 dc 84 ef c7 ba  .f...........o.;.....A.0.! .....
1000dc80  b0 89 ff 0f 05 3b 8c 58 d4 95 82 fc 70 91 df 54 6f b7 42 52 e4 91 a5 57 df 07 de f9 b4 37 17 fa  .....;.X....p..To.BR...W.....7..
1000dca0  64 e1 4e d0 e9 0d 64 9c 9c 26 bd 49 c5 2e 52 bd e9 ed 26 c7 ae 71 ef bc fc f4 38 64 28 af bc dc  d.N...d..&.I..R...&..q....8d(...
1000dcc0  fa 25 eb 32 ba d6 e6 a6 f7 6d 9d 63 b7 f0 5a 81 c1 f7 1b b7 9b 2f 14 57 94 79 66 00 32 03 60 b8  .%.2.....m.c..Z....../.W.yf.2.`.
1000dce0  16 dc 4f ab 6e 39 69 37 cf 32 81 46 4d 71 5f 5f 36 e4 86 6f 76 0d 07 5a 3b 8a 0e 88 2c b9 f4 a3  ..O.n9i7.2.FMq__6..ov..Z;...,...
1000dd00  ee c2 82 e3 69 68 cf b3 9a bf 61 0e 09 3b bf 02 71 ef e1 8d 6a e9 7f 42 6b 96 38 9e 0f fd ac f3  ....ih....a..;..q...j..Bk.8.....
1000dd20  13 cf 10 12 e5 63 9b 72 ab 7b 9d 68 af ff fe e0 c3 e7 68 79 d0 f5 f5 ff 6a b4 1a 3d 84 af 56 f9  .....c.r.{.h......hy....j..=..V.
1000dd40  62 2c 29 da 1c 2f 9a 42 fe 5e f6 38 75 93 14 33 15 cb a9 fb 3c 5c 03 ed 6e 80 04 0d 2b 1e 7b b1  b,)../.B.^.8u..3....<\..n...+.{.
1000dd60  c8 da eb 11 5d a2 c9 34 f9 1c 73 9e 7e 7c bb e9 13 26 80 e7 74 7a f6 09 8e ea b5 25 31 2c 72 09  ....]..4..s.~|...&..tz.....%1,r.
1000dd80  8d 0d 39 b3 17 b7 86 14 a7 8c a3 9f 35 43 26 d0 af 20 0b 40 55 f4 79 0e 80 96 d7 bb ec e7 3e 99  ..9.........5C&.. .@U.y.......>.
1000dda0  de 3d 4a 74 b5 aa a7 8b 13 15 db c5 ed fa 18 99 3a 5c b7 bc bc 5a 50 72 60 0b 43 8b 87 8c 3e b5  .=Jt............:\...ZPr`.C...>.
1000ddc0  45 30 b5 a2 96 f7 a9 bb 45 40 a9 0c 88 56 28 d7 23 30 68 96 ef 26 d8 44 aa 43 71 2f 3f 37 22 99  E0......E@...V(.#0h..&.D.Cq/?7".
1000dde0  49 da 28 7d 82 02 89 f7 d3 e9 e0 7b 1e 03 93 ac 04 32 6f 3e 7d 64 d9 39 71 a2 91 73 06 be 71 df  I.(}.......{.....2o>}d.9q..s..q.
1000de00  f0 5d 79 8b a7 94 d0 05 e7 df b6 25 d8 73 e2 3f 28 d3 d1 f1 24 a7 fb bc f0 4b 39 80 58 80 19 39  .]y........%.s.?(...$....K9.X..9
1000de20  9e 05 86 41 db 28 6e ec ab e5 80 d7 71 36 26 41 61 8c 75 27 aa bc 21 ce ae 45 2b b7 62 f2 c1 ae  ...A.(n.....q6&Aa.u'..!..E+.b...
1000de40  1b 47 ac 04 56 92 56 41 87 ac 32 97 33 94 64 f3 a1 e4 95 f5 0c fc 30 ea 3d 27 b2 9c c5 7a ba 8a  .G..V.VA..2.3.d.......0.='...z..
1000de60  c1 6f 43 be ae 5a f8 0f 07 64 62 ff e7 5d 37 25 6e 9f d8 a8 90 cf a7 93 83 30 74 ff 14 1a db 4e  .oC..Z...db..]7%n........0t....N
1000de80  d5 13 f8 9a be 32 62 6a bd ac a9 5b 89 41 92 5c 62 63 b2 2b d5 1b e7 fe dc ee a0 f4 54 f9 b4 e8  .....2bj...[.A.\bc.+........T...
1000dea0  92 ca 7f 89 a3 ca 29 3d 02 00 ad ff be 72 3d 98 72 77 38 f3 af 12 ac c1 5f 1f 62 50 80 3b 34 5a  ......)=.....r=.rw8....._.bP.;4Z
1000dec0  e3 e9 90 10 ff c8 09 ba 36 bf 01 19 dd c7 47 20 cd 32 7e 28 16 45 8f fc 5c d5 59 22 a4 f2 dc 4a  ........6.....G .2~(.E..\.Y"...J
1000dee0  ca a9 79 64 9a 9a 23 07 21 9d eb d5 71 6b bd 7d e5 34 33 b0 fa 0f 26 0d 2b ec 8b 58 42 5a 14 21  ..yd..#.!...qk.}.43...&.+..XBZ.!
1000df00  df 7e 4c fb d2 ae 1b f6 e6 21 f7 d4 1e 7e b4 c6 09 ed cc 77 09 1e f5 c2 be 99 d6 4e af d7 53 02  .~L......!...~.....w.......N..S.
1000df20  35 fa f5 f8 cb 55 43 cc 35 21 00 a1 8c 11 39 ea 1b 06 b3 55 fb fa b2 d9 35 fa 3b b9 78 d6 d7 d0  5....UC.5!....9....U....5.;.x...
1000df40  e3 7d ce a8 3c 0e 66 6e 84 c7 0b 71 18 f9 6b 19 e8 74 21 9a 89 d6 98 ec a4 36 62 37 29 ae de 14  .}..<.fn...q..k..t!......6b7)...
1000df60  79 43 91 13 86 f4 de f1 8b 1e 8f 53 1d 5d b3 5c 1e f6 da 09 49 50 7c b1 d6 ae f2 aa 80 60 df 3e  yC.........S.].\....IP|......`.>
1000df80  b7 c1 7b a0 34 3b 72 f1 41 e1 e7 ba 98 8d 75 10 b7 53 cd 9d cb 99 b8 a6 1d 0f 7b 1d 63 5a b1 dd  ..{.4;r.A.....u..S........{.cZ..
1000dfa0  db 5f 0b 42 7a fe fb ef f3 74 35 4a de ed 7b f2 d4 de 1d 5a ca 88 9d c4 53 62 87 a0 b7 3f 4e c7  ._.Bz....t5J..{....Z....Sb...?N.
1000dfc0  d8 a4 36 79 3e 0c f8 a4 49 ea 02 89 a2 e4 91 dd 7a ac e9 78 19 4e a0 63 79 b3 d2 97 f7 60 f3 99  ..6y>...I.......z..x.N.cy....`..
1000dfe0  4a ab c8 3c ea 94 e6 84 95 21 f2 7f 8d db e5 11 12 b4 f2 8a 73 f1 09 c4 a2 a2 d0 6f 7b ad 66 6a  J..<.....!..........s......o{.fj
1000e000  69 eb 61 c2 d3 48 b6 bf 50 d3 17 78 6b a5 be 37 ad 6f 24 6b 4a 1a c8 f0 e8 eb 71 b5 d0 8f f2 90  i.a..H..P..xk..7.o$kJ.....q.....
1000e020  8c b4 0d 94 87 e1 b9 9a 41 db 25 fd 34 71 bb 8e 3e 48 5b 2e 58 fb 7d 40 a4 da d4 5a a4 25 f9 49  ........A.%.4q..>H[.X.}@...Z.%.I
1000e040  81 7f 2a 4d b2 eb 7a f9 fb 13 8d 17 b9 17 6c 8b 15 97 eb ed 2d e5 2d 3c 78 18 3b 16 5c 88 71 e9  ..*M..z.......l.....-.-<x.;.\.q.
1000e060  98 d2 16 10 fd 0f e7 b1 b3 3e 82 7c ec 7f c1 d9 35 1b 11 9a e4 fe c7 7d 92 bf 95 61 6c 1b 6e 18  .........>.|....5......}...al.n.
1000e080  bd 8d 68 44 cf a8 8b a7 77 ba f7 77 0f df 15 f9 94 32 b5 a7 ff 7d 30 06 3e 5b 68 e0 5e 1f 1b 1e  ..hD....w..w.....2...}0.>[h.^...
1000e0a0  63 84 9d 79 f3 9e 51 85 99 0c aa 46 7a e6 5f 5a ba 17 92 bb f1 3b 58 fe fc ad 62 36 d3 dd 27 09  c..y..Q....Fz._Z.....;X...b6..'.
1000e0c0  b1 91 1a 11 ad 90 cd 73 c0 ab b8 c6 f3 bd 60 a2 79 cc 58 0b 6d c8 5f 5e 77 be b0 4c 14 04 1c 17  .......s......`.y.X.m._^w..L....
1000e0e0  05 03 be 62 c0 83 95 09 04 42 4f 44 d9 30 54 f5 65 ad ed 35 5d 59 82 77 51 d9 a5 b9 93 6a 0c a7  ...b.....BOD.0T.e..5]Y.wQ....j..
1000e100  21 17 2f 3f 46 78 3a 8b 4e bd ce a2 c0 3f 14 de 61 3b 5f 58 d0 27 b6 fc c3 06 e9 5c d4 87 57 76  !./?Fx:.N....?..a;_X.'.....\..Wv
1000e120  56 ac cc ba de b3 75 f0 4e 9b fe bd 6f 93 13 a3 49 08 c2 fb 23 74 b4 72 04 22 7f d1 a4 ac c5 18  V.....u.N...o...I...#t.r."......
1000e140  9b 16 e6 95 58 17 62 c9 78 cd 9c be 65 fd 45 c1 b6 31 85 4a 03 37 87 9a 8b 91 4b 4b e0 2b 66 99  ....X.b.x...e.E..1.J.7....KK.+f.
1000e160  0f 19 9e 7a a4 71 25 59 b3 7c 38 39 c8 0d c6 d3 d8 08 d3 36 33 9f e4 8a 53 0a 56 ba 8c 0e 56 50  ...z.q%Y.|89.......63...S.V...VP
1000e180  ee 69 a1 a5 f9 6b c9 54 a3 c4 24 9a c1 02 36 74 7d 05 55 94 e9 49 3e f6 39 88 9e 8e 4b d5 0c d4  .i...k.T..$...6t}.U..I>.9...K...
1000e1a0  52 bb 44 c3 38 20 44 c9 df 90 3d 3b b8 f3 64 f5 70 eb 6c d3 c3 45 e4 94 4e 5f f0 ea ae a7 c4 30  R.D.8 D...=;..d.p.l..E..N_.....0
1000e1c0  e3 ec 4c 3b 7a 1d 84 ec 1d e5 6f 9f 2e 1d ef fd 7a 4f 9e 2d 44 a9 0b 67 91 d6 0c dd bf dd 5a 34  ..L;z.....o.....zO.-D..g......Z4
1000e1e0  3c 86 53 ec 44 ba 01 4b dc 93 d9 bb cc 57 3e 3e db fd fc 38 d6 ac 4d 48 7f e5 ea a5 da 6a 10 3f  <.S.D..K.....W>>...8..MH.....j.?
1000e200  d8 a9 1e dd 11 dc 83 a9 a9 b3 bb 33 84 a0 07 ce 59 65 de 9f 9b b3 e8 e4 2f 09 34 79 bb 57 11 9d  ...........3....Ye....../.4y.W..
1000e220  f4 2b f3 2d ad 7b fd 1c 35 a1 60 cb ef 0e 4c 7e 6f 76 6e 48 cc 0a aa a5 f5 14 2c 08 0d 61 b5 19  .+.-.{..5.`...L~ovnH......,..a..
1000e240  c5 2a a0 1d 1b 26 0a 99 0e fa eb 4e f0 3b 95 d3 b3 63 d4 3b e2 fe 0a 67 0a 75 aa 48 dd eb e1 7b  .*...&.....N.;...c.;...g.u.H...{
1000e260  6a bc b7 92 18 b0 d6 48 ab 39 b8 30 2e cb 03 0b fb 2e 29 65 0d 5f ad 57 6b db c0 6a 7c b3 c5 2b  j......H.9.0......)e._.Wk..j|..+
1000e280  3f 09 41 fb 4b e0 13 0b 17 94 c7 ce 24 30 b7 04 1d 09 f3 84 a0 9f 0d fc d2 c8 2e b6 9b 42 17 cf  ?.A.K.......$0...............B..
1000e2a0  9a eb c2 da b5 eb a6 3c a5 d9 ef 26 08 ba 38 27 e2 a9 9e f8 18 b8 fe 4c b7 31 3c 78 cc d7 8c 17  .......<...&..8'.......L.1<x....
1000e2c0  ee da e3 7c e5 75 c8 ba fe 61 63 3a d3 0a 80 1f cf 1a fe 2e 16 bf 85 92 9a fc 00 29 51 02 6a 58  ...|.u...ac:...............)Q.jX
1000e2e0  40 cc 03 eb c2 0a 28 c5 07 ed 3e a3 95 28 4b 79 e6 35 fe be 61 5b 3b 6a d3 9f 68 ad 29 6b 70 9e  @.....(...>..(Ky.5..a[;j..h.)kp.
1000e300  21 32 85 24 23 19 54 42 b6 65 f4 1e 35 f2 49 fa 80 cc 02 20 ac 79 18 18 68 c5 23 3d 03 e7 44 42  !2.$#.TB.e..5.I.... .y..h.#=..DB
1000e320  da 48 f8 cc 21 3b d4 a0 7a 24 35 cf 74 ce 43 26 7a a2 c0 1b 46 96 3c 96 20 05 78 4d df c4 5d 56  .H..!;..z$5.t.C&z...F.<. .xM..]V
1000e340  92 8a 2e 4b 49 85 56 ae 43 d3 b4 d1 b4 78 a8 54 c4 7a 63 3a 0f 78 73 71 22 07 b9 b9 87 de e2 92  ...KI.V.C....x.T.zc:.xsq".......
1000e360  fc a6 6a 61 f0 65 19 d2 8b cc ea 4d a4 69 84 5b 6f 68 97 22 72 5d 0c 5f f6 51 d3 f9 c1 83 52 30  ..ja.e.....M.i.[oh."r]._.Q....R0
1000e380  e5 24 05 26 87 e2 2e 0f 10 d9 b2 2c 2b 0e ce 78 41 15 ac 89 64 1d bc 81 e0 bb c3 ba 44 e7 7d ac  .$.&.......,+..xA...d.......D.}.
1000e3a0  ff 96 ae 5a e9 6d 9e 21 7d db 41 73 e1 4f a4 4a 72 d1 00 9f 40 c5 5d 18 93 9a 58 8c 3f 05 09 18  ...Z.m.!}.As.O.Jr...@.]...X.?...
1000e3c0  0b 2c 52 9d e4 fb 60 84 95 43 34 0d a0 f3 7d 6f 63 4f cb ed 5b 90 18 66 bb 93 54 a1 3b 83 11 bf  .,R...`..C4...}ocO..[..f..T.;...
1000e3e0  59 ee 4e 3d 11 d2 c1 0e 7a e1 ba 48 9c 10 c7 2c 1c 05 11 93 d9 d9 2f 52 8e 32 59 0e 16 c2 d1 e9  Y.N=....z..H...,....../R.2Y.....

1000e400  int32_t data_1000e400 = 0x636dbb24

1000e404              23 dd 7b 69 81 f7 36 18 18 e5 b1 45 88 03 2f d4 fb ba 52 e4 cc 8c ec f0 97 f3 c8 57      #.{i..6....E../...R........W
1000e420  61 f6 81 d7 27 07 73 ff 8a 08 75 14 ac 68 27 f6 49 e9 6e 20 ec 15 e9 be 60 02 82 59 2b 20 97 9a  a...'.s...u..h'.I.n ....`..Y+ ..
1000e440  42 b3 19 da                                                                                      B...

1000e444  int32_t data_1000e444 = 0x142dcf82
1000e448  int32_t data_1000e448 = 0x29f2a111
1000e44c  int32_t data_1000e44c = 0x1730af6f
1000e450  int32_t data_1000e450 = -0x46ec07af

1000e454                                                              12 5f 3b 1c                                              ._;.

1000e458  int32_t data_1000e458 = -0xfd3b4d6
1000e45c  int32_t data_1000e45c = 0x38b8fb54
1000e460  int32_t data_1000e460 = -0x77acfdf2

1000e464              ca bd b1 6e a2 e2 d2 a9 87 45 13 cc 24 9d 5d 34 a6 a3 b4 0b 86 63 9b d5 70 00 d0 d4      ...n.....E..$.]4.....c..p...
1000e480  c2 e0 27 3e e7 07 3e a1 05 8d 46 e1 ff 30 80 6f a2 89 47 01 33 2d 5e fe 85 19 54 99 3b 2a c6 2f  ..'>..>...F..0.o..G.3-^...T.;*./
1000e4a0  55 1d 18 86 ef e2 2a a5 12 77 47 68 13 3c 3f 03 f5 38 0a db fb 29 42 a1 ce e1 74 19 36 b0 6b dc  U.....*..wGh.<?..8...)B...t.6.k.
1000e4c0  26 ca eb bc 07 d5 cf 67 25 26 1b 45 87 2e 6b 82 c5 b4 1a 52 dd 32 2e 12 fd 06 49 f1 25 66 b3 44  &......g%&.E..k....R.2....I.%f.D
1000e4e0  96 ec eb 51 04 5e 45 9d 24 cb 38 52 f9 20 b1 c7 5c 00 ec 06 af b5 b4 ac 8f cc 6a c7 f8 55 82 1d  ...Q.^E.$.8R. ..\.........j..U..
1000e500  1f 0d 70 d0 cc b7 ee 07 70 b8 48 34 51 1f 3c 48 70 0a 13 d0 90 ee fb e9 1b 2e fb 5d c4 7a d2 56  ..p.....p.H4Q.<Hp..........].z.V
1000e520  b8 e6 28 8d 1b 92 6c 14 5f 32 5f da 7f 73 8a e3 cb 5d 8a b4 28 0a f2 f1 3b f5 04 b2 f6 bf 02 f0  ..(...l._2_..s...]..(...;.......
1000e540  b1 b2 b4 f9 d1 29 5a 8c e6 b3 2d dc 82 c4 5b ee b8 bb b9 b8 50 df eb e6 1a f4 32 5e c8 87 32 5f  .....)Z...-...[.....P.....2^..2_
1000e560  05 5e fc b7 4f 4a 46 fb 02 63 bd ea ca ca 65 52 31 1d cd 4d c6 31 a7 b7 fc a7 c8 37 b5 ee 66 23  .^..OJF..c....eR1..M.1.....7..f#
1000e580  83 82 ae 14 c9 55 64 55 85 33 f6 93 fa 5b 46 3d d6 cf a9 bb f6 a3 e8 07 e8 2e 74 7e 2c 07 30 87  .....UdU.3...[F=..........t~,.0.
1000e5a0  40 5e 0a ad 1e b7 d4 87 ad 4b 60 f5 ed de 50 17 80 f5 7b 80 0d 7e 31 0d e4 3f f2 b5 be 29 b1 71  @^.......K`...P...{..~1..?...).q
1000e5c0  ed ae 68 9c 11 f4 5f 97 92 23 af a3 49 5e 5a 19 9b a0 2d 98 51 49 d4 25 16 9f d4 6f 0e 4c 01 58  ..h..._..#..I^Z...-.QI.%...o.L.X
1000e5e0  6b ad e9 96 89 66 c8 23 8e 40 93 5e df 2f 2a 04 14 f5 aa 13 07 89 6f 20 7b 22 37 40 53 56 ee 41  k....f.#.@.^./*.......o {"7@SV.A
1000e600  8f 00 08 2a b4 41 71 b7 60 72 be 4f f5 59 94 ca c7 bb 45 62 cb 1f af d1 e9 c2 78 b9 86 d6 11 43  ...*.Aq.`r.O.Y....Eb......x....C
1000e620  dd fa 02 42 04 c2 3a 5f 94 87 8c f4 a3 a1 76 9f 4b 51 8d dd 5e 6c f9 7d 2a 57 e3 79 0e 15 3d d0  ...B..:_......v.KQ..^l.}*W.y..=.
1000e640  4c 5f 5c 40 b4 77 a6 ed 59 ad 4b 15 9c 5e 2d ba 90 98 ef a3 70 41 df 63 7b 3d 90 cb db 68 38 27  L_\@.w..Y.K..^-.....pA.c{=...h8'
1000e660  1b 44 3a dc be 4b ff 2a 9f e5 00 b4 8f 82 10 20 87 09 1a 3b 37 3a f4 0a fb 9d 9f 65 a3 cb d3 30  .D:..K.*....... ...;7:.....e...0
1000e680  53 9e 5b 4e 07 7c e4 5a d0 29 8c 60 a0 4b 05 fc 12 08 11 98 71 69 44 37 e8 91 91 c5 e3 bb bf 3f  S.[N.|.Z.).`.K......qiD7.......?
1000e6a0  09 09 63 d9 16 be 66 64 59 22 56 eb af d3 5f 8c b7 d9 cb c9 4d 5f 72 87 3a a9 6a f1 f2 d2 a5 2e  ..c...fdY"V..._.....M_r.:.j.....
1000e6c0  95 74 91 1c 8d ef 69 3e df dc ca 74 e8 02 e1 71 41 0c 11 03 50 2d 74 ff 90 8e ea 42 d8 22 43 8e  .t....i>...t...qA...P-t....B."C.
1000e6e0  6d 9b 56 3c 4f 4e cb 39 f7 50 77 f1 7b 98 e7 13 af 2c 04 21 3d 86 d6 3b c6 2d 7d 16 2d b5 a2 89  m.V<ON.9.Pw.{....,.!=..;.-}.-...
1000e700  58 9d a8 2b 10 88 db 82 be 62 c2 cc 37 f6 9d b3 ee 51 44 1d c1 00 2b 36 5a a9 9a 8c c5 2f d6 d9  X..+.....b..7....QD...+6Z..../..
1000e720  58 ca 83 16 9b f5 b6 f9 ab 07 0c 91 28 91 31 20 d5 5a 41 20 b8 90 8d 70 60 ea 2d 78 80 43 0a a6  X...........(.1 .ZA ...p`.-x.C..
1000e740  30 d1 14 14 fd 89 8d d6 b3 b4 25 03 a3 05 7f ed 50 cd 64 16 a3 4f 83 ac f3 e1 e7 42 a1 1e f4 af  0.........%.....P.d..O.....B....
1000e760  79 5d fb 25 da 77 79 24 5a 66 1f 79 d1 24 70 94 16 b0 e8 31 17 db 49 b1 ab 8a bb 3c fe 8b 88 9a  y].%.wy$Zf.y.$p....1..I....<....
1000e780  37 a4 50 30 c3 a5 83 29 95 99 c3 08 8f 8b 50 90 b0 83 59 d8 4f c2 d9 f0 c1 66 44 d8 c7 3f dd c9  7.P0...)......P...Y.O....fD..?..
1000e7a0  93 4f df c6 6d 8a b4 09 08 1f b6 68 28 2b 01 ab 12 56 9d 71 65 6e 44 f6 de 81 d6 99 2d 53 d2 ec  .O..m......h(+...V.qenD.....-S..
1000e7c0  7d 8f 17 d5 a2 30 35 f0 44 a8 2c ce ef 0e 69 c2 99 18 79 53 c4 d1 42 45 91 69 6b 56 bd 7f 06 b5  }....05.D.,...i...yS..BE.ikV....
1000e7e0  ba 0d b5 bc 0d 08 81 f7 ee eb 4f f4 3d a3 d1 8b 6e 14 6c 76 77 13 4a a1 8b 89 3d a3 81 2d f9 89  ..........O.=...n.lvw.J...=..-..
1000e800  57 f6 c0 8b df f9 2c d2 1c 8a e5 31 41 03 fd 31 60 c5 8b 65 e9 bc 00 a4 02 79 c9 79 dd 79 79 79  W.....,....1A..1`..e.....y.y.yyy
1000e820  ae 9e 79 79 78 79 79 dd da 79 39 be 02 bc ab ed c9 dc ac e6 81 c0 e8 e9 48 87 2d c2 3c 37 f6 20  ..yyxyy..y9.............H.-.<7. 
1000e840  ea f2 43 8d d5 bc 15 86 44 eb 70 61 a7 78 d1 8b c2 48 74 e3 9c 13 72 85 8d 05 51 d3 8b 9f 59 77  ..C.....D.pa.x...Ht...r...Q...Yw
1000e860  83 3d c0 c0 f6 cd 83 ff be a5 e5 00 41 00 f0 38 47 ce 8b 01 e9 20 00 bb dd e1 39 ef af 7e 2b f0  .=..........A..8G.... ....9..~+.
1000e880  56 b4 49 ac 55 fe 7b c9 e5 22 dd bc 6f f1 5a 44 ad a7 7c ab 43 dd 92 59 f7 e9 ca 99 d3 62 2a b4  V.I.U.{.."..o.ZD..|.C..Y.....b*.
1000e8a0  f7 8c ce 20 e1 6e eb e0 c1 5a 8b 15 29 39 eb 33 e3 05 84 b6 8f 8b 14 45 8d 3a eb 8b 13 c0 f1 9f  ... .n...Z..)9.3.......E.:......
1000e8c0  7f 05 d1 d1 c0 17 83 6f 00 56 8b 41 c0 e9 d5 26 e5 e3 49 30 8b f7 9d 03 00 c8 42 5c 5c e8 40 51  .......o.V.A...&..I0......B\\.@Q
1000e8e0  15 5a 95 69 7c ea 90 58 16 f9 e4 b1 6e bc e8 45 a4 17 06 3a 8b 29 6d e5 30 7d 8e 6f 94 14 0e f8  .Z.i|..X....n..E...:.)m.0}.o....
1000e900  71 9d eb cb 3f 8e 17 b9 db 7c e1 9f f1 b5 ed 88 fd 65 d5 71 47 49 69 c2 79 c9 ec 53 d2 7b 14 29  q...?....|.......e.qGIi.y..S.{.)
1000e920  e7 93 54 aa b7 d5 4a 2a 24 a4 a2 e9 16 a1 ed 3c bc 97 a4 20 a6 29 11 82 ad 68 37 d9 72 0e f7 9e  ..T...J*$......<... .)...h7.r...
1000e940  37 20 f6 b1 f5 58 1d b5 ae 4f 72 8b 70 25 72 b4 9e 9e 8d 2b b6 19 fa de 46 fa bc 59 3e 07 8a b0  7 ...X...Or.p%r....+....F..Y>...
1000e960  11 8c 0d 55 f0 42 00 1d 32 f7 92 c5 be c7 f2 19 d3 e9 ea 01 11 cc 73 34 09 51 0b 15 75 1d ad db  ...U.B..2.............s4.Q..u...
1000e980  98 8f 0d 73 3a dd a0 90 5d f3 90 27 6c 3b d9 19 81 5e 01 50 1f d0 2d d8 92 0f 63 23 f2 fd 24 0e  ...s:...]..'l;...^.P..-...c#..$.
1000e9a0  7f d4 9d 63 08 b1 68 3b 52 d6 a0 f6 b5 87 f7 8b 7b d9 df 6b ed d7 fb 78 42 80 ca 07 75 20 a0 8a  ...c..h;R.......{..k...xB...u ..
1000e9c0  d5 2a ab 0d 92 9c 40 b4 f0 80 c6 60 23 23 9d de f8 34 04 55 0a d6 01 38 52 c3 d6 f1 c8 c5 bd 62  .*....@....`##...4.U...8R......b
1000e9e0  1c 34 c7 64 e4 67 6d 46 0b 62 79 4f 9e b3 69 d9 2e 6e ae 2b a1 29 65 dd d9 f5 49 65 22 b5 6f c8  .4.d.gmF.byO..i..n.+.)e...Ie".o.
1000ea00  d9 53 a2 11 01 3c a5 17 4f ac 9c 7d a4 48 54 f1 a2 86 ac a4 79 f9 44 b4 33 c1 35 a4 da 87 c4 81  .S...<..O..}.HT.....y.D.3.5.....
1000ea20  51 ac ce c5 a2 cb f0 ca ae 32 93 b5 3a 89 4d 9f ee 11 b5 65 d0 6b de 79 c9 66 ed 3f 32 ab 5f 16  Q........2..:.M....e.k.y.f.?2._.
1000ea40  05 63 55 8f ce 89 21 c4 8c a5 c5 1c 57 b3 c8 48 09 52 18 bd 10 bf 9a 41 9c 3b 01 a2 80 62 3c 5c  .cU...!.....W..H.R.....A.;...b<\
1000ea60  bb 14 f2 4a 11 87 e3 e0 3b eb 57 ae 9e 0e 7c ec d8 53 f3 b8 7c a9 e6 9f e5 09 09 a4 e0 f8 de b7  ...J....;.W...|..S..|...........
1000ea80  c1 0f 8a 36 fe 63 51 09 4a fb 79 ed cf 3e 7a 17 d9 cf cc ad b3 dd c8 18 68 72 2d 0d da 6b 8f 8d  ...6.cQ.J.y..>z.........hr-..k..
1000eaa0  9a 49 6e f5 ec 57 fd ab 3a d7 ac 72 a8 1c 7c ea 10 9d d9 51 5a 70 64 74 21 00 ae 5c d5 40 92 83  .In..W..:..r..|....QZpdt!..\.@..
1000eac0  f8 d7 93 62 62 cf 32 bb 16 3e 56 d6 9c c0 6d 36 5a 68 79 d7 c8 34 31 d2 21 e0 51 5c e2 f8 0a 63  ...bb.2..>V...m6Zhy..41.!.Q\...c
1000eae0  20 a5 df c8 83 f8 92 4b 04 6a 71 a3 90 a7 9d 2e 2f 98 7b 18 b2 bf b8 64 64 e7 c2 49 c8 79 44 f3   ......K.jq...../.{....dd..I.yD.
1000eb00  ad a8 c6 48 d4 7c c9 ca ef 01 9c bc 8b 8d 7a 83 64 d5 1b b4 b5 67 e9 75 a9 be 41 30 00 bb 80 04  ...H.|........z.d....g.u..A0....
1000eb20  20 a2 ba 91 4a aa cc 77 23 cc b6 1f 87 41 fc ee ac d5 a1 5c b0 aa 3d 50 9d d0 d2 bc 36 20 f0 fc   ...J..w#....A.....\..=P....6 ..
1000eb40  20 54 5e d7 69 84 06 c1 3d 96 3c 76 6a f8 06 79 e9 36 6a 40 41 87 b4 3d 76 6d a7 fb 0a ba e6 37   T^.i...=.<vj..y.6j@A..=vm.....7
1000eb60  2a 17 8a 82 09 19 65 06 aa 73 bb 28 d4 bf 6d e5 21 67 74 74 2f 6b 46 dd b4 d0 2c 41 11 44 cb 95  *.....e..s.(..m.!gtt/kF...,A.D..
1000eb80  20 f9 75 ca 61 9c 9a 23 b4 dc 69 61 66 2c c5 98 5d 93 91 7a 3d cd e0 4e e7 6d 6a 0f ed c4 97 5e   .u.a..#..iaf,..]..z=..N.mj....^
1000eba0  7a 04 ef 6f a5 28 8c f2 ce cf 12 dd 46 62 9a a2 6e 3e f6 56 85 94 0e 49 a7 4a ad de b3 75 49 5a  z..o.(......Fb..n>.V...I.J...uIZ
1000ebc0  9c 28 37 9b 16 19 7d ed 91 91 12 fd 67 c3 88 ad 1a ee d5 d2 60 67 9e e0 e6 d5 bc 53 76 27 b1 11  .(7...}.....g.......`g.....Sv'..
1000ebe0  6f 50 92 53 15 3d 96 b3 2c b4 87 08 4d d8 b6 f3 f1 b3 f0 df c4 be 91 a5 8a 94 c8 53 b4 45 5b 5e  oP.S.=..,...M..............S.E[^
1000ec00  14 89 54 df 22 fe fd d4 c6 2f 37 11 04 c5 a5 fc 11 84 87 30 3a ec 10 de 08 ee b2 37 8f dc 7d 36  ..T."..../7........0:......7..}6
1000ec20  ed 83 30 d4 e9 7a e7 29 86 dd 99 a1 f1 15 27 db b2 2d 76 6a 7f 08 76 67 7f 0f 39 a0 d8 c5 33 bd  ..0..z.)......'..-vj..vg..9...3.
1000ec40  e8 d2 b4 46 f5 1b 4d 0f 1f 6b 9b 7f e9 2f 2a 42 93 61 ef aa 83 50 37 61 c6 08 86 6f ad 7b 5f e1  ...F..M..k.../*B.a...P7a...o.{_.
1000ec60  d3 b5 62 3a 7d 46 65 09 04 e1 67 9c a6 b0 3c e1 c5 2f 12 14 2f 21 c5 32 0c 10 02 5f c8 4d d9 7e  ..b:}Fe...g...<../../!.2..._.M.~
1000ec80  65 2a 18 ec b0 13 11 73 55 2e a8 2e 32 09 83 e2 91 3f 8b 11 22 57 91 fe 0c 13 4a a2 e7 be e8 c4  e*.....sU...2....?.."W....J.....
1000eca0  a4 be 7d 25 ab 8b 1c 31 2d ed f6 e6 0f ab 64 fa 7e f6 a5 21 4a ab da a0 e0 0d 5f 92 c0 83 61 05  ..}%...1-.....d.~..!J....._...a.
1000ecc0  36 cc 85 8f 4a 84 89 89 4a 51 d3 27 c0 f6 83 ed e0 6a 23 09 6a d4 7e 8f 9a 5d 9a df df c5 3f ab  6...J...JQ.'.....j#.j.~..]....?.
1000ece0  17 33 58 21 89 82 42 72 0c c7 42 5d 39 72 da ed c1 cf 7e 2c c5 a9 b8 f1 74 9a df ef 17 13 f1 e4  .3X!..Br..B]9r....~,....t.......
1000ed00  d5 1d 9c f3 70 f4 67 b5 9b 75 ff 68 03 7e 6f 90 dc 8f f0 c7 e1 0a b0 61 f4 d2 91 6e a4 87 af 1d  ....p.g..u.h.~o........a...n....
1000ed20  ea 0d f4 52 77 8a fd 4d 4c 05 94 19 24 80 6b 09 c5 d8 a7 51 6c 9b 49 64 d5 15 f1 d4 3b 84 f4 95  ...Rw..ML...$.k....Ql.Id....;...
1000ed40  8c 4e 3e ad fc 20 c1 92 76 2f 80 e5 e7 89 96 5d 04 45 91 f6 c7 81 da 64 b8 f1 c3 a0 f8 14 63 0e  .N>.. ..v/.....].E.....d......c.
1000ed60  d6 f5 1a 79 4b 11 c3 b8 3a fe 47 05 13 81 73 81 7c 7c 5e 7a 87 36 6c 5e b9 06 44 38 55 68 bb 4d  ...yK...:.G...s.||^z.6l^..D8Uh.M
1000ed80  c9 7b b0 20 81 db a7 6d 59 ae 2a d9 79 51 2e e6 dc e6 90 61 54 9a 80 4d 42 30 eb 6b 2c f8 c9 a9  .{. ...mY.*.yQ.....aT..MB0.k,...
1000eda0  f4 f1 64 e9 aa 77 54 7d e5 11 a3 75 04 aa 89 15 03 d2 89 ba f0 fa 41 6d 4e 8f 38 43 7e 06 b4 52  ..d..wT}...u..........AmN.8C~..R
1000edc0  9c 82 23 de c1 01 25 84 30 88 89 8f e1 01 ac df ac 0f 4e 39 7e 1b c0 37 f1 9c 70 aa 1d a5 45 f2  ..#...%.0.........N9~..7..p...E.
1000ede0  67 bf 91 12 50 7d 75 58 3c 70 39 d3 93 8e 0f a2 d8 de 79 ae 22 59 cb d9 fe 3b b1 1f 90 31 88 24  g...P}uX<p9.......y."Y...;...1.$
1000ee00  95 c3 96 f4 fb 4c f7 cf b7 1a 0d 53 d6 82 29 71 20 04 9d 78 15 e9 9a 94 87 c0 5b 98 10 65 0c 7b  .....L.....S..)q ..x......[..e.{
1000ee20  03 a3 bd 06 67 e2 75 69 b0 05 df 9a 35 2c 37 8b 4d 92 82 3f 69 4f 42 c0 8f 50 f3 ae 8d 30 36 45  ....g.ui....5,7.M..?iOB..P...06E
1000ee40  51 28 01 69 60 0c 21 df a4 63 29 6a 3b 79 b3 d1 c1 e5 39 eb 9e 3b ad 61 15 d6 dc b3 69 87 0d a1  Q(.i`.!..c)j;y....9..;.a....i...
1000ee60  de aa a1 47 96 c6 a3 41 05 92 cd fa 45 7d 8a 62 97 98 41 30 00 b5 5d ca 43 c2 5b 3c 5e d0 86 cf  ...G...A....E}.b..A0..].C.[<^...
1000ee80  b9 2e 30 c4 8c 09 12 d6 12 e1 55 71 a7 92 93 27 e4 c9 1f 00 71 68 8b 45 c3 e7 3a 9b f9 98 9f 5d  ..0.......Uq...'....qh.E..:....]
1000eea0  68 8a dd b1 d2 c3 26 b0 bc f4 da de 08 81 83 48 6f e6 9a 79 82 38 9c cb 0d 61 3d cb c8 a7 a1 de  h.....&........Ho..y.8...a=.....
1000eec0  ee e2 83 92 c2 0d 2a f9 12 6e 00 88 27 4c 0d 12 85 a4 4e 6e 6d ce b7 3c ec 20 26 b1 06 cc 7a 15  ......*..n..'L....Nnm..<. &...z.
1000eee0  2c fe 9d 2f c4 ee 48 8f 15 36 62 da d7 5b ec 5e 82 8b 10 f3 87 e1 49 18 a2 80 3d 7d ce b2 f8 7e  ,../..H..6b..[.^......I...=}...~
1000ef00  25 c9 3e af 06 23 13 e2 fb 8a 2a d9 c5 2c ae fe 07 4a 46 7b c4 50 f8 0b 5e f5 a1 6d e5 93 bd 1e  %.>..#....*..,...JF{.P..^..m....
1000ef20  10 2b db b9 55 c9 cc c9 54 66 7c 1c e5 2b bb 54 a5 1c 8d fa 04 fc f6 2c a5 f5 22 14 74 b1 60 9a  .+..U...Tf|..+.T.......,..".t.`.
1000ef40  ea 92 91 74 43 be a3 66 ad 07 d5 35 d0 c9 8a 44 f1 06 b2 86 86 59 9d 59 a6 77 58 67 8b 0b b0 97  ...tC..f...5...D.....Y.Y.wXg....
1000ef60  3b 5c d0 16 9a 49 b3 5e 6d fa 3b 28 e5 aa 8a a5 5f a6 a9 b6 96 3f d3 57 db ab 38 48 1d 3b 12 33  ;\...I.^m.;(...._....?.W..8H.;.3
1000ef80  a0 9f 8b 2d 4f 40 f7 8d 95 d9 8a 69 35 74 7e b6 60 94 37 34 74 f6 27 c2 84 b5 d1 e3 60 fb 5b 0d  ...-O@.....i5t~.`.74t.'.....`.[.
1000efa0  9a 5b 51 af cb d4 3f f7 e3 12 d3 d1 95 1a 3e b0 15 5a fc 62 81 07 6e 20 4a 99 ca 10 d6 7f a0 8e  .[Q...?.......>..Z.b..n J.......
1000efc0  a4 ec 04 25 0d 94 e6 40 0b 84 4f 43 9e cc de d8 25 dd 61 97 62 89 96 15 ea c4 b5 93 df d4 f4 58  ...%...@..OC....%.a.b..........X
1000efe0  28 dd 49 2c a8 3f 07 ec 8a 6f 8e 13 a8 41 d7 83 1b 9c b6 24 55 3f dd 10 3f ab 7e 7a 37 b2 c6 76  (.I,.?...o...A.....$U?..?.~z7..v
1000f000  28 fd 08 cb eb 61 be fb c5 37 f8 22 90 40 a2 8d a4 9c e0 11 b3 f3 5d ba 7e 59 cf 7c 41 c6 03 6a  (....a...7.".@........].~Y.|A..j
1000f020  98 ab d9 2b a8 ea 87 86 39 75 4b 5b ef de a2 3e 1a 74 c6 dc f1 2d 00 dd c4 27 8b 4e fb 36 25 82  ...+....9uK[...>.t...-...'.N.6%.
1000f040  9b 87 41 0e 9f 39 cd e3 25 9a d2 0b 1d 93 96 72 fa 72 75 85 10 22 a9 18 94 10 1f 45 d2 79 42 97  ..A..9..%......r.ru..".....E.yB.
1000f060  5d 63 3f 36 c6 f5 05 97 e6 72 e3 9e 44 1a 53 02 c2 54 b6 d5 d3 a3 81 96 31 8a 03 56 c4 0c ed 07  ]c?6.....r..D.S..T......1..V....
1000f080  91 ed c6 6f d2 5d 57 73 56 54 4e 9d c6 f1 60 f0 b8 ef 5d 7c 33 83 a4 64 fb a8 46 5f bb d9 1c 14  ...o.]WsVTN...`...]|3..d..F_....
1000f0a0  c0 00 7c 70 ed e9 1c cf e0 6b 9d 49 9c b6 97 fc ec b8 38 ae fa 37 1a a3 db 08 36 b4 64 96 81 b1  ..|p.....k.I......8..7....6.d...
1000f0c0  4d fe d1 dc e6 53 3e 19 49 5d 9d 81                                                              M....S>.I]..
1000f0cc  data_1000f0cc:
1000f0cc                                      87 2c 6d 61 23 1f 5e 6a 95 21 83 36 7c 0a 34 ca 34 a3 da 03              .,ma#.^j.!.6|.4.4...
1000f0e0  7a b1 96 3f e9 f4 60 18 fe 6c ec a4 c2 4d 9e 2d ee 09 6e 5b b7 0c 31 49 2b 97 11 a5 ee 9a 29 3a  z..?..`..l...M.-..n[..1I+.....):
1000f100  5c bb d5 4c cf 71 a7 4a 8d bc 93 d5 22 5d 8e 78 2b 1a 24 59 62 14 79 2c 46 09 83 5d d5 7b f8 4f  \..L.q.J...."].x+.$Yb.y,F..].{.O
1000f120  ad cb 2c 21 7a 37 18 9b 5e 0b 04 c0 6c 83 e7 6c 17 0a 25 e1 b1 c8 ed df 77 75 07 21 d7 da ed cb  ..,!z7..^...l..l..%.....wu.!....
1000f140  4a 5b 3d 47 6e 72 39 65 7b 81 0f 93 0d 40 c8 12 9e a1 4d 9a a7 28 cc e1 50 eb 5e 85 40 48 7c 62  J[=Gnr9e{....@....M..(..P.^.@H|b
1000f160  64 bb 7e c1 69 c3 da 40 ad 2b be 87 fe 04 46 23 3a 20 b3 d4 76 66 cc c8 57 87 e2 c4 24 0d 8d 92  d.~.i..@.+....F#: ..vf..W...$...
1000f180  a3 d1 1c 4c ab 30 11 69 25 3e f0 22 c3 c1 d3 5c 00 5c e3 7b e9 d0 0a f6 ee 10 3f 3f 02 5b 41 8a  ...L.0.i%>."...\.\.{......??.[A.
1000f1a0  de f5 2f 97 48 e4 c5 e9 06 b3 2b ab 26 07 31 c5 8a fd ed db 29 82 3b 86 d3 f0 3e 01 d3 19 15 6c  ../.H.....+.&.1.....).;...>....l
1000f1c0  a5 97 be b1 f0 12 31 33 01 64 cf 96 85 58 0a 1a fa da 36 06 20 a5 e1 8b 5e fc 43 46 e0 21 2d 63  ......13.d...X....6. ...^.CF.!-c
1000f1e0  9e 8b a8 50 4d 48 9d da 4e 32 5e 87 2b cb 98 7e 59 70 9e 99 6e 1f 08 10 8e d4 fe 17 b2 a9 e2 00  ...PMH..N2^.+..~Yp..n...........
1000f200  45 3f 0f 7d 93 2f 8e 98 ba 23 b0 c7 12 ae 07 e4 1e 44 0d b9 b2 24 22 20 3e 2e 99 f6 f0 ef 9d bd  E?.}./...#.......D...$" >.......
1000f220  bf 64 64 bf 8c a1 90 b4 67 57 cd 33 df 44 75 a8 20 4f 46 e2 64 f9 06 53 74 18 0d 5c e6 a4 3a 72  .dd.....gW.3.Du. OF.d..St..\..:r
1000f240  50 0f 96 aa 6f 16 7a c0 dc 64 d5 0b 90 90 f1 e0 71 59 7c 94 0c 09 2c 4d b1 b8 92 0c 38 fb 9b d7  P...o.z..d......qY|...,M....8...
1000f260  5a 6e bf 55 2c 16 ce 44 07 e4 26 ce f1 37 50 98 88 0c 18 71 11 89 9b 7f 21 3a 33 fc 99 67 f5 5b  Zn.U,..D..&..7P....q....!:3..g.[
1000f280  e7 6b 1e da 85 e5 2b 51 17 ad 04 22 11 1f 24 1e fd 94 0d 30 60 4d 69 1c 43 17 fd 9e d9 f5 93 e6  .k....+Q..."..$....0`Mi.C.......
1000f2a0  74 ce 96 df 2c 8e 3a f0 b9 b9 69 0f 6d 7a 29 ee 52 2c 9e 11 8d 7e ee d6 21 62 fd a5 52 93 13 ef  t...,.:...i.mz).R,...~..!b..R...
1000f2c0  fb 5e b4 07 42 2e 65 44 69 4e 85 8d 11 8e b9 0d fa da e0 b0 4d 39 6f ce 5d d1 eb 47 38 50 6d 13  .^..B.eDiN..........M9o.]..G8Pm.
1000f2e0  a6 c8 9d 48 4a 58 7a 5e af 54 b4 59 6d d1 3a f0 cf 87 3b f1 63 77 a7 eb 53 0c 10 f6 b4 d6 df 61  ...HJXz^.T.Ym.:...;.cw..S......a
1000f300  b7 47 b2 de 28 23 4d 92 62 0d b8 71 a4 9a 19 42 25 e3 ea fc 99 70 58 6f 95 08 c3 05 73 5a 9a 05  .G..(#M.b..q...B%....pXo....sZ..
1000f320  b3 8e 50 44 5e 01 cc 81 7f f9 7f aa d4 da 61 de 57 65 83 de dd a1 3d 02 9a 17 ee 66 27 92 be 86  ..PD^.........a.We....=....f'...
1000f340  6a 55 66 37 3e f4 d4 49 54 b0 64 67 c6 b1 18 de d9 bf f1 b0 35 8c 54 f4 d2 31 5d d2 02 36 13 9a  jUf7>..IT.dg........5.T..1]..6..
1000f360  8e e1 85 08 b0 6b 38 d9 67 d8 d8 74 68 7b 96 d2 61 24 4c 21 55 9f 9e 65 17 fa 6c f6 49 a8 d6 65  .....k8.g..th{..a$L!U..e..l.I..e
1000f380  51 7a 69 5d a6 06 8f ab 85 e5 87 78 53 64 76 a1 4f 98 5c 02 63 f5 4a 02 01 f5 52 46 e4 c0 74 9b  Qzi].......xSdv.O.\.c.J...RF..t.
1000f3a0  1e c4 33 ea db f0 de f8 cf d6 48 86 8c 25 44 17 2f 90 1b c8 d4 5c e1 2a 60 c7 8d df a0 eb 7a 90  ..3.......H..%D./....\.*`.....z.
1000f3c0  63 76 0f 0a 8d 27 22 a3 77 68 9d 35 92 ad 13 5c c8 fe 6f 33 6a 0a 73 8f 79 9d 81 4b 63 4f b1 9f  cv...'".wh.5...\..o3j.s.y..KcO..
1000f3e0  ed dd 7f 94 0f 93 a9 85 71 2a 99 c2 87 9b e9 d2 1c ff 4b 1e 81 16 30 b0 0a 0d 14 28 56 3f f8 7b  ........q*........K...0....(V?.{
1000f400  13 81 96 66 e2 a6 3b 41 8b 51 53 f0 78 25 74 35 ca fe c0 72 af 0a c8 9e ca 7a 62 a1 6d 44 09 ef  ...f..;A.QS.x%t5...r.....zb.mD..
1000f420  82 e2 a5 c8 4e 12 c2 54 19 7c f4 bb fe 0c c9 41 71 62 5e 44 4c 85 3c 47 6d 30 c9 bd 27 bf bf e6  ....N..T.|.....Aqb^DL.<Gm0..'...
1000f440  1a 11 70 43 82 eb 5d 9c 1d ca 31 9c e5 d4 62 d9 c5 aa dd 08 ab 9d b3 04 46 5f 71 12 43 e0 1f 16  ..pC..]...1...b.........F_q.C...
1000f460  e2 76 69 38 28 7a 5c ef 4e 65 7f 00 15 b6 b7 a8 64 6a 67 92 5f 0b d4 5a 7c 1a ab ac 60 3a e6 59  .vi8(z\.Ne......djg._..Z|...`:.Y
1000f480  a7 93 d7 05 a8 ae 59 4a 6f 4d 3c 80 5a d7 d2 43 1b d9 74 ab 3f a8 50 b4 8e 14 18 6f 37 f1 2d 53  ......YJoM<.Z..C..t.?.P....o7.-S
1000f4a0  42 8c 81 93 55 85 a4 2f ba 24 db a0 95 59 83 a3 0f 55 66 ec 50 de e5 1d 8f 52 25 68 8b 6e 6e 74  B...U../.$...Y...Uf.P....R%h.nnt
1000f4c0  c2 0c ee e6 6f b6 64 20 00 ca 56 df 4a d5 66 69 3f e8 2f a3 59 b7 a7 a6 b9 88 e2 66 a4 4b f0 9f  ....o.d ..V.J.fi?./.Y......f.K..
1000f4e0  73 95 67 c3 e4 d7 13 8b 3b a3 8d 8a ff 92 49 34 04 a7 ed 96 60 ff 76 de 49 9c 8e 7a a3 d1 f2 43  s.g.....;.....I4....`.v.I..z...C
1000f500  e6 72 e7 13 a7 88 62 98 c8 6b 3c 3a f9 9e c4 3d 33 85 ea 84 02 24 8c f1 4a 8a f8 78 be 04 38 dc  .r....b..k<:...=3....$..J..x..8.
1000f520  d5 50 6e 53 94 c5 6e 65 d4 12 eb 3e 28 bd bb f4 36 cc 66 fe 30 4d 30 9f 36 a3 5f 82 b8 21 7a a1  .PnS..ne...>(...6.f.0M0.6._..!z.
1000f540  ff ce ca 87 a2 c9 5e f8 e3 a5 00 6c 25 75 b0 3f fe ce 3f a9 7e 9f dd af 62 14 f6 d8 2b 34 14 f0  ......^....l%u.?..?.~...b...+4..
1000f560  9c 83 bd f5 51 47 40 92 70 84 44 59 67 96 37 ee dd 88 82 27 67 3c 26 a0 3a 7e a1 ec 5a 10 d1 97  ....QG@.p.DYg.7....'g<&.:~..Z...
1000f580  3d d8 a7 cc dd ec ed 27 b2 ce 84 d9 0d 40 4b 24 5f bc 88 21 32 0a c0 8d f8 27 5a fc d8 07 60 71  =......'.....@K$_..!2....'Z...`q
1000f5a0  38 e3 12 56 b5 52 50 2d 37 a1 c3 4f 99 b7 c1 20 ce 1f 2a 71 93 dd c1 0f 47 cb d9 35 fe 29 30 be  8..V.RP-7..O... ..*q....G..5.)0.
1000f5c0  fa 64 57 41 61 ec 2e 07 4f af c8 4f 72 92 2b 4d a2 a4 a7 55 6d 88 de 4f 42 ee 2c b2 cb 8e c3 ef  .dWAa...O..Or.+M...Um..OB.,.....
1000f5e0  b6 08 63 42 f4 e9 d8 f1 f2 66 07 c6 6a ca 62 13 c0 3a 21 8b a1 73 06 eb a5 8b 28 ed 5b b0 ec 58  ..cB.....f..j.b..:!..s....(.[..X
1000f600  d0 54 14 60 0b c6 a0 f4 12 26 9f 68 82 56 1a ec cf 23 3e 48 94 9e 4d 89 81 6d 38 10 ae f1 21 d9  .T.`.....&.h.V...#>H..M..m8...!.
1000f620  be 0a 9a 36 9a 2b 5d d5 62 f5 65 5e 7a 4c 55 21 3c ee 9e 51 34 f9 3b 6b a7 f0 e8 4e 63 05 b6 8e  ...6.+].b.e^zLU!<..Q4.;k...Nc...
1000f640  27 b1 cb 35 d5 ac a6 6b 19 75 07 88 db 59 ca 95 a6 b8 73 b7 26 2e 25 4e e0 d4 c0 b9 73 a1 bd 77  '..5...k.u...Y....s.&.%N....s..w
1000f660  c6 3c 47 f5 b0 21 7e 5e 17 bd ca fd 3c ca 79 3b 17 03 5f f4 ca 80 b8 34 a5 f9 b8 ba 0a 93 8c e3  .<G..!~^....<.y;.._....4........
1000f680  38 ae 95 27 b3 1f 5b 34 cc e6 38 fb af 7c 2b f2 a6 74 7a 04 9b fc 60 87 8b e0 6c ae 0f 97 74 d3  8..'..[4..8..|+..tz...`...l...t.
1000f6a0  7c 02 4a fa a1 9b 92 b4 69 2a 6c 55 11 33 a1 a1 c5 76 35 1a a5 8c f1 7f 31 65 66 00 6f 55 e2 f0  |.J.....i*lU.3...v5.....1ef.oU..
1000f6c0  50 57 f9 0e 71 83 dd d8 a6 77 32 d5 57 5e 9a c2 12 d2 f2 e4 58 65 f0 f1 03 35 59 39 22 ef 34 4b  PW..q....w2.W^......Xe...5Y9".4K
1000f6e0  eb d1 da a3 d7 0c de 6a 06 51 1f a7 93 a4 0a 4c 81 d5 28 54 69 37 55 04 fd 38 29 9e 89 11 03 97  .......j.Q.....L..(Ti7U..8).....
1000f700  f0 ec c6 3b 3b 18 64 6f c3 42 5b 58 dd de 56 a2 a3 f6 7a 11 64 70 e0 6d 3c dd d3 6f 1d cf cc 38  ...;;.do.B[X..V...z.dp.m<..o...8
1000f720  e2 48 fb 63 e1 6a 61 c5 a7 2b 37 c1 6e 57 ef 9a bd 19 e9 95 58 cc da 07 6d d3 f1 36 7d 5e 35 bf  .H.c.ja..+7.nW......X...m..6}^5.
1000f740  72 dc 5a 18 9e ca 38 cf 52 d0 ac a2 0f 85 c7 8a 17 4d de d7 d9 6f 4d fb 4e 94 31 6c ec a0 19 d6  r.Z...8.R........M...oM.N.1l....
1000f760  51 49 a0 d3 44 40 b9 df b2 13 06 fb d7 75 e9 e2 f3 d0 32 36 8a 51 e2 fb 26 32 ea d4 40 5d 44 2d  QI..D@.......u....26.Q..&2..@]D-
1000f780  ae da a0 60 ca f3 7c 3f 05 b9 e8 49 ef 36 d3 0c c1 66 20 83 b0 f6 6b a6 16 aa ce 65 6f 5b 33 68  ...`..|?...I.6...f ...k....eo[3h
1000f7a0  ad 4f 5e ab 10 fc bd f3 32 4b 95 93 19 9f b9 be f2 92 c9 c7 8f d6 34 37 df cd e6 c4 84 9f 84 fb  .O^.....2K............47........
1000f7c0  b6 ef 34 64 cd 9b c8 43 8c bb fe 09 93 1e 3a dd ae 83 7a e9 ee 26 8c 44 d0 4f 98 19 f6 de 9e 3e  ..4d...C......:...z..&.D.O.....>
1000f7e0  4b 5e f4 80 17 56 fa ad e9 57 3c a4 f1 94 26 55 c2 9b cc 4d 7c e3 71 8f 1d 7e cf 83 ad 3c ef 8d  K^...V...W<...&U...M|.q..~...<..
1000f800  35 62 77 3c a0 14 55 eb 9c ef 10 c2 42 f7 e7 cf 7e c1 79 ef ef fe b1 65 77 4f 17 7a 54 bc 21 47  5bw<..U.....B...~.y....ewO.zT.!G
1000f820  25 63 2c 1b c0 f6 7d 24 47 ed 8a d2 62 6d 6b 34 56 4a 7a 53 99 b7 f4 c4 1d fb df 30 31 7d 88 0a  %c,...}$G...bmk4VJzS.......01}..
1000f840  3e 0d 2e c5 76 f0 85 d8 3f 30 6e dc b3 18 bd 08 d8 40 ab be eb 0b 5d 83 72 5d 85 9e 2d 27 2b 20  >...v...?0n......@....].r]..-'+ 
1000f860  a6 8a a0 16 e9 46 9e d3 f5 a9 55 78 fb bb 20 48 0e 7a 6c af 00 8e 47 6e e2 11 95 dc e3 3b d1 d1  .....F....Ux.. H.zl...Gn.....;..
1000f880  ad f1 31 fb 89 c3 e1 d2 c7 5d 6b 1c 05 b6 e8 fd 62 eb d2 cc 29 87 3a 5c f8 11 fc b3 c5 78 ff 06  ..1......]k.....b...).:\.....x..
1000f8a0  5e 73 ea 84 0a 88 96 71 13 b5 04 df 5b e2 b8 8b 97 c1 a8 46 89 d1 56 fe 63 53 cf ff d5 f0 68 6a  ^s.....q....[......F..V.cS....hj
1000f8c0  3c d2 59 c0 31 68 9f 98 08 09 f6 35 f4 cc c5 c2 00 5a fe 18 11 31 41 dd d0 d8 63 84 bf aa a7 88  <.Y.1h.....5.....Z...1A...c.....
1000f8e0  2d 19 a6 b4 10 e1 53 12 36 df 23 57 e2 32 07 0f e8 aa b9 c7 f0 87 b2 ca f3 70 b2 6a 67 f3 d3 62  -.....S.6.#W.2...........p.jg..b
1000f900  aa b5 42 29 e9 17 b4 d3 18 ed 36 05 15 c5 e0 77 71 92 1e 82 c2 0b cd 62 31 2a a8 e1 0a 77 c5 55  ..B)......6....wq......b1*...w.U
1000f920  b7 80 86 ca 82 08 ea 8e 8c 56 0b 30 bd e2 ba 3d 0e a6 26 d6 6a ce 76 09 3d 86 de bb 1e 25 d4 ce  .........V.0...=..&.j.v.=....%..
1000f940  f1 b4 2a 43 e3 31 0a e2 20 aa 9f e4 f6 37 85 d9 4f e4 bf a7 93 08 81 37 b2 73 e2 15 01 25 50 c0  ..*C.1.. ....7..O......7.s...%P.
1000f960  a3 ba 77 af 75 82 0b 53 7a 79 ed 31 c6 c2 5d 16 2e f5 c3 3a 76 d0 34 63 6e f7 60 85 e0 07 39 64  ..w.u..Szy.1..]....:v.4cn.`...9d
1000f980  f4 90 37 3b 46 b9 85 c2 2b b9 9c ed cc 0c 27 27 2a ee b6 6e ca d7 95 2f 45 98 70 26 5c 7b 90 1b  ..7;F...+.....''*..n.../E.p&\{..
1000f9a0  93 3c 8b c9 c6 c7 b8 76 c7 29 da 67 6a 34 67 80 fb b0 ff 20 28 11 ef bb 32 6d f3 4e 65 0d 0d 14  .<.....v.).gj4g.... (...2m.Ne...
1000f9c0  99 6a 20 8f 55 90 38 fd 27 8a 3d 56 0b df e1 53 52 e5 d8 21 27 ed 82 1b 30 80 d7 fa d9 3f 36 d7  .j .U.8.'.=V...SR..!'...0....?6.
1000f9e0  75 cd 66 f2 bb d2 e8 03 86 2e aa 58 c6 08 fa 21 50 b2 5b 36 0b 69 4d e3 0f b0 15 43 2b 22 6e 78  u.f........X...!P.[6.iM....C+"nx
1000fa00  c2 8a f8 ea 75 3e f6 fb ec 81 6f 7a 94 5a 85 3e 72 eb 0b b1 fd 7c 1c 48 17 69 2f 5e 52 ad dc dd  ....u>....oz.Z.>r....|.H.i/^R...
1000fa20  b0 75 19 39 a1 f0 82 22 e7 77 8b 8a ba 08 1d e4 37 40 16 d5 41 5a 82 a4 a6 8d 93 d0 a9 4a 8f ca  .u.9...".w......7@..AZ.......J..
1000fa40  48 ec c4 09 1b be bd af 09 52 e2 77 5c d6 c4 9e 16 a9 88 82 02 2f 30 ba ea e2 1a c2 6a a5 80 97  H........R.w\......../0.....j...
1000fa60  b2 e1 64 2c 49 12 ac 17 f1 02 87 59 08 38 9e d7 15 55 a3 6c de b8 fc 75 75 5f 7d 32 1b f1 55 e2  ..d,I......Y.8...U.l...uu_}2..U.
1000fa80  9a 40 39 5c 10 d0 63 23 f9 60 78 c4 1e fc 25 c7 21 aa 88 d3 dd 50 ba a4 b3 8b f0 aa 8e fb 23 d4  .@9\..c#.`x...%.!....P........#.
1000faa0  79 30 d3 68 fd 5f 2c 10 ea aa 79 ef 0e ba e8 60 1a 1c 44 7c 2c fc 44 ac f5 c3 56 4a 2a e5 4a f1  y0.h._,...y....`..D|,.D...VJ*.J.
1000fac0  5a 81 4a ef 7b 93 92 0a 81 58 53 ec 64 ef b2 99 80 c7 c4 b6 c4 90 7e 69 6e 73 fc f9 ea 19 26 d3  Z.J.{....XS.d.........~ins....&.
1000fae0  19 05 04 d1 b0 a1 0a ea bd fd 2a da 8d 20 4e 40 98 75 18 7c a6 b9 14 e7 e4 40 bc 29 77 74 90 10  ..........*.. N@.u.|.....@.)wt..
1000fb00  67 13 c3 b4 78 05 56 62 6d dc f9 11 a5 64 78 4a 23 b3 9f e4 c7 3c 1a b0 58 b3 03 3f 04 a0 65 3d  g...x.Vbm....dxJ#....<..X..?..e=
1000fb20  0a 0e 3a b3 c2 b7 7a 86 a3 6a 0f 09 d4 28 a9 05 ee bd 25 fe 2f f9 eb fe d6 7a 65 cc aa 21 c6 7b  ..:...z..j...(....%./....ze..!.{
1000fb40  22 19 50 92 2d 2b d6 65 98 f9 53 19 69 da 67 3d b5 0a 71 30 69 f7 c0 1a d0 52 05 84 8a 62 03 46  ".P.-+.e..S.i.g=..q0i....R...b.F
1000fb60  a4 99 e0 9f a7 7c 35 7e 1c 0a 3a 20 17 ac e3 8c f0 de 27 c2 b5 b5 bd 3a 79 dc 86 d2 68 8c 32 c3  .....|5~..: ......'....:y...h.2.
1000fb80  96 5d a7 2d ff 1e 59 03 08 d0 1a 32 c5 1d 82 d4 70 51 a4 9d e3 94 85 c2 3d 3c 02 ac 3f fd 6a 0d  .].-..Y....2....pQ......=<..?.j.
1000fba0  3a f4 fe ec 6a a5 39 29 9e c1 f1 b7 87 f9 66 7f 39 7a e6 bc 6b 9d 46 a8 05 61 ff c9 18 21 75 8a  :...j.9)......f.9z..k.F..a...!u.
1000fbc0  72 1c 44 86 a3 d1 73 11 e5 73 30 e6 5e 18 21 29 17 a7 ad fd fc c1 0c 76 92 9b a6 9c 4d 72 e4 2a  r.D...s..s0.^.!).......v....Mr.*
1000fbe0  98 35 ac 03 63 a3 35 c5 aa 95 f0 4f 86 af 0d f0 06 75 69 26 fb e9 49 4d 77 dc 00 fe b2 53 7f e2  .5..c.5....O.....ui&..IMw....S..
1000fc00  00 23 a1 85 b6 d1 83 bc ae fd e1 70 2c 76 22 e0 94 f2 1f 91 5d cc e3 be 8d 3a 01 64 bf d3 d3 84  .#.........p,v".....]....:.d....
1000fc20  37 3c 0d 8f 70 cc 96 6d d5 d0 11 c8 d5 b5 2d 31 34 e4 74 59 a9 b8 5a 1e 3a 65 81 2e 87 a9 c8 63  7<..p..m......-14.tY..Z.:e.....c
1000fc40  12 0d 82 0e ac 6b 5f a6 e4 9e a8 94 e0 a4 fb 29 4a 54 2e f7 88 a7 da 46 d6 b0 e9 2a e1 ff 71 f4  .....k_........)JT.....F...*..q.
1000fc60  96 c0 dc ac 3f 6d f0 4d ce ac dc d1 35 83 65 b1 f0 39 41 f2 7a 62 9f 88 5e 60 0b ef 6e 79 69 b5  ....?m.M....5.e..9A.zb..^`..nyi.
1000fc80  f8 fc 1b be 07 75 8e f5 0c c0 59 c9 5f f6 eb 5c 7c 98 72 5e bd 4a 91 40 10 63 21 2b 25 f8 a7 18  .....u....Y._..\|.r^.J.@.c!+%...
1000fca0  e9 69 c8 a2 36 22 02 81 11 0c 56 0f 7a 90 b6 3d ac f5 c3 25 d8 d2 e6 5a 0c 03 77 8d 05 63 5e 81  .i..6"....V.z..=...%...Z..w..c^.
1000fcc0  e9 fc b0 a2 dd f5 b0 1a ba fd 60 24 7e dc 0b e2 bb 45 11 2c 79 c0 80 68 11 95 7f a5 1c 0a 7f b5  ..........`$~....E.,y..h........
1000fce0  d4 9f 6f ff 22 30 9f ca d8 44 c2 e8 8e 0b 67 5a 67 ca f9 56 ef 96 9a 45 53 73 0c 1f 73 15 ea 23  ..o."0...D....gZg..V...ESs..s..#
1000fd00  de f7 af 5d 09 79 5e a5 04 b1 3a cd 21 b3 98 c7 ab 1c f8 2c 20 96 de 4e 65 9b 9d 93 48 d1 ee b6  ...].y^...:.!......, ..Ne...H...
1000fd20  8f 8a b6 0d 7f e9 17 7a 2c c8 9f bb ed 41 b0 22 59 c9 8d cf ca 42 33 f1 c6 3e 51 c0 f9 1c 4b d4  .......z,....A."Y....B3..>Q...K.
1000fd40  10 f8 e8 61 82 f5 78 13 5a 99 be 72 18 a7 06 bb b5 30 9f f2 5a 1f ba 02 42 e2 96 29 5e a3 3f 50  ...a..x.Z..r.....0..Z...B..)^.?P
1000fd60  95 91 15 10 70 d4 07 a1 a0 bd f1 f7 52 24 d4 93 fb ed d2 59 9a e0 c8 d3 07 5a a7 bd 7d 7e 21 63  ....p.......R$.....Y.....Z..}~!c
1000fd80  ae ee 2a 10 8c 64 17 f1 73 65 71 f4 9b 1f e3 96 c6 26 7f de ac b3 c8 a5 37 63 4c bc 2f 4b f2 6b  ..*..d..seq......&......7cL./K.k
1000fda0  28 df 34 10 77 59 45 f9 5b 38 54 8c 7e 11 5c e3 c3 9d 04 09 e6 50 32 39 2f c6 56 d2 ed 93 d0 20  (.4.wYE.[8T.~.\......P29/.V.... 
1000fdc0  fe da 72 70 33 bb 52 af c7 fd 92 83 8e 34 1a c8 e9 62 ff 59 4d a6 53 bb 64 f8 43 f9 9e 08 60 7a  ..rp3.R......4...b.YM.S.d.C...`z
1000fde0  db 9b d3 14 3a 6c 05 d1 92 0f 71 f9 fc 1a 7e 9e 4d 99 da 56 e6 1a b8 f4 50 5b 51 70 74 a2 aa 48  ....:l....q...~.M..V....P[Qpt..H
1000fe00  72 13 85 91 ba 08 0a 9f d8 95 32 24 20 6c a2 45 bc 4a 73 fb 83 3b 27 87 65 02 ed 77 f6 72 23 7f  r.........2$ l.E.Js..;'.e..w.r#.
1000fe20  93 25 72 c9 19 0d a1 94 c9 91 da 5b 44 62 f5 7f 20 58 f0 3a 14 0d fb a5 7e 6d ba 5d cf 92 b5 d6  .%r........[Db.. X.:....~m.]....
1000fe40  ed 93 89 d8 90 79 8b 7b 57 02 68 4b 06 be 5a bf 36 c5 02 f1 8a 1c 04 1b 55 08 17 24 dd 18 70 34  .....y.{W.hK..Z.6.......U..$..p4
1000fe60  fa f2 b8 fa 8a 01 cc fe ff 6e fb cf cd 6c 63 d9 b7 68 42 33 d4 f0 cd 1a e6 a8 db 26 e0 75 d9 53  .........n...lc..hB3.......&.u.S
1000fe80  a8 7a 95 d9 be e6 24 cc b2 3b d8 8f 5d c6 11 81 4d e1 ee eb 24 ad 01 37 fe da 1e 28 cd d0 4e 84  .z....$..;..]...M...$..7...(..N.
1000fea0  79 e0 d4 72 82 c5 bd b1 eb 48 c9 59 d6 d9 11 f6 78 b1 c5 5d e0 8c a9 3e c7 24 47 8a 85 90 ad cf  y..r.....H.Y....x..]...>.$G.....
1000fec0  93 ad 92 4b cf 65 da 1a 8e 0b b4 89 90 85 57 ef e6 82 4d a7 fc 78 c1 e4 86 4f 25 a4 6c 4c 16 10  ...K.e........W...M..x...O%.lL..
1000fee0  f7 36 60 2d 16 d7 34 f0 7d 4d ca d6 8b 09 6e a5 b0 a6 4a fe 8d 8d 95 7b fd dd 6f 34 07 7b bf 2a  .6`-..4.}M....n...J....{..o4.{.*
1000ff00  65 1b e9 24 88 e8 e6 2f a5 8f 07 38 e8 40 4b b3 08 54 96 1f 07 53 31 8b 4f 38 33 ba e7 d8 69 d2  e..$.../...8.@K..T...S1.O83...i.
1000ff20  54 32 65 5e 5e fd 8d 52 2e ae f1 c9 51 59 68 42 42 3f 0c 20 39 92 b4 74 29 4b 89 7c 5c 22 4a 52  T2e^^..R....QYhBB?. 9..t)K.|\"JR
1000ff40  99 a8 df 6f e9 58 f7 cc b8 1b 8a a0 bd bb 11 35 63 9d 31 20 5f fc 1b f2 9d 4b 4e 50 9e 68 a1 aa  ...o.X.........5c.1 _....KNP.h..
1000ff60  18 df ec 7e 69 72 69 a2 11 87 ec 57 09 4c 8a 91 1a de 02 95 65 74 46 2e 41 91 48 33 c0 d8 fe 3e  ...~iri....W.L......etF.A.H3...>
1000ff80  a6 e2 3f a5 bc f8 71 e5 5e 0b 7f 8d ee b2 4c 71 c8 49 dc 5c eb bb d3 89 32 e1 62 72 07 89 48 e2  ..?...q.^.....Lq.I.\....2.br..H.
1000ffa0  e1 b8 39 5c 27 b2 8b 89 52 7c a9 f6 76 ed e2 06 7d ac 34 20 76 28 9c 86 e8 1c fb 8a c3 5a 6d b1  ..9\'...R|..v...}.4 v(.......Zm.
1000ffc0  f4 4f 72 b0 e3 33 48 8d b9 f9 aa b3 c3 60 4d 7f 4d a5 1f 97 e6 73 f3 e7 c4 1e c5 3f f8 56 3d 16  .Or..3H......`M.M....s.....?.V=.
1000ffe0  02 bd 8c 0b ba 92 d8 58 23 de ed 0a d9 9e 5a 9e fb df d4 ae 6e fb b0 79 76 62 ef 43 ba a3 4f 80  .......X#.....Z.....n..yvb.C..O.
10010000  02 c1 18 29 39 ca 48 eb 12 8b ca 4f d6 77 8f 72 80 53 3c 39 de 22 73 42 d7 6c 39 70 e6 7f 2f 48  ...)9.H....O.w.r.S<9."sB.l9p../H
10010020  e1 91 cf c6 00 6f 7e c9 09 fb 4b 3f c7 a6 20 6e c7 c3 3b d3 10 0e 67 e7 c9 78 21 46 d2 f7 9c d8  .....o~...K?.. n..;...g..x!F....
10010040  27 4b b9 5f 03 53 75 31 73 a0 92 52 d2 d5 37 16 32 51 82 91 79 58 bd dd c9 c4 0b f3 b7 c1 b7 f5  'K._.Su1s..R..7.2Q..yX..........
10010060  3e 6c 63 ab 6f ae b0 cc 19 d7 ea dd e1 4f 93 70 dc 73 0b 67 f4 2a b1 46 4e 10 01 22 83 e4 de ce  >lc.o........O.p.s.g.*.FN.."....
10010080  07 82 c8 9b 0e 38 32 73 ce c9 3d 1c 3e 45 ab 0e 89 8a 12 8c 45 ec b8 cd 8c fc c3 65 45 13 1f c9  .....82s..=.>E......E......eE...
100100a0  46 93 55 e1 77 37 d8 63 4b 15 ca 7f db b0 92 8b 76 f6 82 42 4a b5 d7 11 a5 62 36 95 02 4f 1e 2b  F.U.w7.cK.......v..BJ....b6..O.+
100100c0  d8 78 3e 53 d2 1f 6e 9a bd de 3d d4 74 d5 de 1c b1 31 cc ed 06 0a 4d 80 70 bb 88 7b 89 95 4d 9b  .x>S..n...=.t....1....M.p..{..M.
100100e0  50 e9 82 1b 2b 94 83 4f f3 98 8e d0 35 5d c5 70 1f b5 c9 62 7f e4 67 28 cd a7 4b 44 6d bd 8d 34  P...+..O....5].p...b..g(..KDm..4
10010100  64 51 14 6b 97 ca 64 a6 34 e6 30 2d 2d d4 ef 9f e9 2a e6 09 0f 3b 55 26 87 1d 9c 9d ed e3 08 aa  dQ.k..d.4.0--....*...;U&........
10010120  27 b2 12 1f 77 88 5a 26 99 9d 28 84 ed 5c 6f cc db b4 d2 e6 18 48 b3 b2 78 08 4a 05 50 b6 ca ab  '...w.Z&..(..\o......H..x.J.P...
10010140  56 c9 da 55 84 90 f6 e6 92 1f 3b 79 e7 9f 8a 1e 95 09 6b a0 d1 d2 99 44 3e 45 cb 1e 71 c7 c8 5e  V..U......;y......k....D>E..q..^
10010160  f4 bb c5 23 13 56 1a f2 c9 d2 8b b3 23 57 02 d4 07 de 96 5f a7 a9 9a 9f 0b 03 31 9a 20 dd b3 ac  ...#.V......#W....._......1. ...
10010180  3c 79 71 c5 82 83 b5 10 05 a6 7a 5e e3 67 7b 74 79 b2 a0 e6 7c a3 70 92 6d 86 0e f3 5d 4e f7 e6  <yq.......z^.g{ty...|.p.m...]N..
100101a0  8d 3d 50 9f 65 09 e6 29 c1 4e c5 6d 7d 2a fa 11 a8 68 2f 64 ee 26 a7 f5 29 46 9c f2 53 3f 48 35  .=P.e..).N.m}*...h/d.&..)F..S?H5
100101c0  19 fa 07 05 49 24 46 1b dc 29 7f ee ff 19 56 97 2f 79 12 0e 90 8b b7 c5 e6 97 ea 23 b1 7b e5 ef  ....I$F..)....V./y.........#.{..
100101e0  f8 28 cc 05 82 1a d2 8b 08 13 45 50 4b b0 8a 22 8a 93 02 9f 3b 5a e7 c6 b4 c3 4e 0d b9 6a 97 cd  .(........EPK.."....;Z....N..j..
10010200  11 81 b4 7a 52 c8 4f dd a4 f5 06 25 1f cc 6a 77 d0 ec 45 36 38 4c 90 5c ea 95 5e a3 e4 65 4f e9  ...zR.O....%..jw..E68L.\..^..eO.
10010220  e1 f5 6b a0 c6 21 86 57 93 26 a4 2f 1b 18 b3 ec 8b 59 03 0c e4 9d 9b f8 3a 04 cf 0f f5 92 7e d7  ..k..!.W.&./.....Y......:.....~.
10010240  66 52 3d 94 5f fe be 38 67 b0 5c df 79 62 1f d2 d4 14 62 13 9a 5f 16 03 23 d2 61 b1 cf 7f 68 fd  fR=._..8g.\.yb....b.._..#.a...h.
10010260  4f 9d 40 c0 b0 90 cc 5a 7c 17 6b 0a cc 84 d1 84 38 45 66 13 51 77 e5 59 52 80 54 52 2d c5 d9 3d  O.@....Z|.k.....8Ef.Qw.YR.TR-..=
10010280  de f4 f5 9d 19 5c ec f1 d3 c1 b6 8f 5c ec dd c9 60 54 5d 7b c8 83 94 31 50 f6 11 65 76 33 9a 8f  .....\......\...`T]{...1P..ev3..
100102a0  f7 c5 05 f1 af 41 ac b9 84 3e d7 95 48 3a 2e da 8b 40 ac 03 ed b4 be 7f 55 4e a6 46 33 9e 19 00  .....A...>..H:...@......UN.F3...
100102c0  10 8a 3d ec 0e 9d d1 17 e6 2e 33 78 db 17 83 cf db 14 00 98 66 93 6a ff ab 17 0d 46 d9 1b b5 d2  ..=.......3x........f.j....F....
100102e0  88 de 15 e0 e9 b2 fe 3c 42 a4 7b f9 7b 41 fb b4 37 1b a5 ef 89 b8 99 69 27 b7 31 47 6a ba 7b 10  .......<B.{.{A..7......i'.1Gj.{.
10010300  3f 4c 84 b2 86 0b a0 98 4a f2 d9 53 8c 81 ec 22 4c 76 a7 33 0b 18 42 00 1e e7 51 d4 0f e0 09 33  ?L......J..S..."Lv.3..B...Q....3
10010320  23 a7 ab 8d 39 41 39 45 9b c0 1e ac 99 6e b2 29 b6 65 4c 2f f3 8c 21 f2 2e 13 60 f8 f0 54 10 37  #...9A9E.....n.).eL/..!...`..T.7
10010340  cf e4 e9 e6 cd 60 3e 23 64 9c bb 07 94 7a 1b 92 46 f4 66 91 ba 17 d4 04 2a ae a7 2b 78 7a e0 ea  .....`>#d....z..F.f.....*..+xz..
10010360  5e 48 4c 77 b0 f6 9b fb f8 db 96 ec f1 1e f0 f2 73 da 14 8d d8 ba cf df 51 fa 74 dc b0 0e 99 04  ^HLw............s.......Q.t.....
10010380  59 04 07 46 5b 11 65 a1 89 c2 23 b9 8d 18 47 11 88 12 01 69 51 6b a7 b7 94 21 d8 37 06 db fd 5f  Y..F[.e...#...G....iQk...!.7..._
100103a0  c7 ac 5e dc a3 23 c3 53 1b 6a f7 34 48 d7 c2 aa 89 cf 40 da 55 42 13 2b 6d 64 93 24 0d d3 d5 fe  ..^..#.S.j.4H.....@.UB.+md.$....
100103c0  f5 48 43 0d 40 7c 00 f4 77 91 d0 b6 32 17 d6 46 32 c9 46 d8 af 23 19 35 cb 41 4f bb a1 a6 e7 fc  .HC.@|..w...2..F2.F..#.5.AO.....
100103e0  f4 a0 8d 7f 0a 05 8e ee 2f c6 e1 5f 33 b3 b2 20 c0 7e 42 84 39 b6 a6 d8 58 3c dd 2d 66 57 9b a0  ......../.._3.. .~B.9...X<.-fW..
10010400  be cd 78 3d 3d 6e d4 27 08 85 59 11 30 28 22 73 38 bd e0 0d ff 35 69 fa 13 ff 84 a7 36 46 91 6e  ..x==n.'..Y.0("s8....5i.....6F.n
10010420  2b 26 2e d7 1d 96 b4 9b f6 92 a2 b3 04 42 0e 7f 93 b8 a7 0f 09 59 15 f2 09 d4 87 17 66 58 bc da  +&...........B.......Y......fX..
10010440  05 82 40 71 8d 10 70 fe 08 15 e1 b8 4c b6 88 03 ef 60 72 b4 12 44 65 29 14 7a 55 1f d7 71 d8 29  ..@q..p.....L....`r..De).zU..q.)
10010460  b1 4a 5a 63 0a fe 00 4a cd ed d2 9a 0d fb 91 c2 22 a3 68 b8 b1 72 0f 71 ef aa 45 58 1c c1 c3 55  .JZc...J........".h..r.q..EX...U
10010480  02 31 dd fa 2b 8d 0e ca c4 19 51 af ad dd 79 24 2b 61 84 53 3a 71 8b 05 79 9c 36 b9 03 84 64 d3  .1..+.....Q...y$+a.S:q..y.6...d.
100104a0  99 58 9b db a2 4c 39 d6 7b f6 38 04 13 5d e1 a7 8b 29 d9 21 08 81 bf cc da d4 03 8e 6d 0f 09 f8  .X...L9.{.8..]...).!........m...
100104c0  43 5d 4e 34 0b e5 41 48 71 6a dc a9 7e 91 f8 f3 6a 08 67 16 03 b2 42 5b 7d 7c 99 f6 78 e3 b7 a0  C]N4..AHqj..~...j.g...B[}|..x...
100104e0  bf 2f d8 80 80 a5 7a 19 7e b1 50 3a c2 b2 e0 07 0b 67 73 59 01 37 77 e6 6a e8 d1 95 7a 6c 4b 3d  ./....z.~.P:.....gsY.7w.j...zlK=
10010500  04 cd ae b4 53 b1 af d8 bc 7f 1d ba 0d 2a f0 d7 41 8b 3a a9 37 6a af d9 b5 1d e0 16 b8 d0 46 cf  ....S........*..A.:.7j........F.
10010520  c0 d0 52 d9 c0 19 25 11 13 c5 e1 d8 10 64 85 c8 3a 37 90 b8 8b 0e 84 fc 05 4e 0e 4a 13 da d3 b5  ..R...%......d..:7.......N.J....
10010540  d1 9e db 22 4f ac 47 7e 8f 7f 00 3e ec 7b 5b 4a cc 5b 99 b6 65 bf 82 98 af 15 a6 a8 ab 5a 66 50  ..."O.G~...>.{[J.[..e........ZfP
10010560  e3 b1 5c a4 ff c5 ab ab 63 04 fa 62 1c 35 82 3d fd 59 03 41 f0 16 a0 23 0f 13 b9 63 30 8c cd ae  ..\.....c..b.5.=.Y.A...#...c0...
10010580  ee 8e 74 52 75 fd 09 5e d6 ef a4 dd 17 73 b2 f3 56 bc 07 7c 2d 48 54 22 d7 4c 80 6b 9d 1e b9 74  ..tRu..^.....s..V..|-HT".L.k...t
100105a0  c8 8b a1 58 6c f6 ba e3 57 1c 9c 4f ac f1 bd e7 38 e7 64 45 69 ca a7 3d 31 eb 79 14 32 8d ec e5  ...Xl...W..O....8.dEi..=1.y.2...
100105c0  0f 76 c3 17 92 3c 99 a7 14 de 0a 8c 5e 65 8e fa 44 56 37 fa a2 e6 47 44 a8 cd 6a 98 e1 e5 e6 70  .v...<......^e..DV7...GD..j....p
100105e0  45 f5 83 27 77 47 c2 69 a7 a2 1d 7d 20 d6 20 83 45 f2 21 57 5f 9b ed e6 57 8d ee ea e1 3f 48 a2  E..'wG.i...} . .E.!W_...W....?H.
10010600  e8 89 47 20 fc aa 1c 10 38 fc e3 02 16 b0 8b 81 87 a7 ed 8e 85 73 f7 e7 be 76 57 5f d7 18 fe 82  ..G ....8............s...vW_....
10010620  d1 e0 63 09 5a 55 35 54 36 f2 9c 07 7c 61 1e 13 fc 15 4b fb 55 63 84 28 fc f6 2f 30 4b 45 ae c2  ..c.ZU5T6...|a....K.Uc.(../0KE..
10010640  d8 9e 5e 4c 8d 18 12 53 c3 dd 3d ae f2 5d 77 46 05 1c c6 5d a4 f3 1b 6b 9c 34 f0 b9 85 f7 f3 db  ..^L...S..=..]wF...]...k.4......
10010660  ae 7c a8 c9 de a1 a1 ed 82 a2 fb 7c 04 af fd 1e c0 33 86 e1 bd 0d ee 9f 77 3b b8 7b 15 4a ec cb  .|.........|.....3......w;.{.J..
10010680  6d c1 9f 55 86 67 a3 b5 aa 8b 77 0d b0 96 08 b0 6a 68 0f c1 57 2e 18 67 a8 39 54 bc f1 70 a8 29  m..U.g....w.....jh..W..g.9T..p.)
100106a0  36 8f c3 89 b3 17 e3 70 29 1b 48 e0 bb f2 38 0f fa 6b 65 54 f0 6e 87 3a b4 d3 a3 c8 6f ef dd a8  6......p).H...8..keT.n.:....o...
100106c0  fa 91 ec 36 1a 61 00 8c 77 64 a0 f4 89 69 b6 cd 57 d7 8a 8c f7 14 98 0f 25 9e f3 bd 0d 04 0e 5e  ...6.a..wd...i..W.......%......^
100106e0  9e e7 1f 88 a4 b9 a3 af cf 79 69 b4 6d 9a c3 92 9d 17 1e c4 c0 96 81 80 bd ee 16 59 71 13 46 37  .........yi.m..............Yq.F7
10010700  ea 98 73 71 60 9c ae b1 9c 5b e4 2d 3d e0 ee ee f9 43 95 df 6c fc 9b 9a 8b c9 c0 b1 0e 84 b0 64  ..sq`....[.-=....C..l..........d
10010720  ca 1c 54 f3 de f2 8c 70 ba ae 05 ec 5d 2b 6b 62 0a 36 e4 4e e3 f4 0c b2 43 19 db 95 74 ad 5f af  ..T....p....]+kb.6.N....C...t._.
10010740  69 36 7c 66 18 95 2e 26 eb b1 bb ba 0d 5e 0a ce c4 a6 51 8d 31 49 96 e2 76 b3 d6 fc e9 b7 e1 57  i6|f...&.....^....Q.1I..v......W
10010760  5d d8 f8 00 6b 39 d2 1b 9f bb 1f cb 69 5d 38 f1 35 c2 47 c8 55 94 db 5c 6c 54 da 99 c8 de 80 86  ]...k9......i]8.5.G.U..\lT......
10010780  04 88 84 37 69 6e 8a d9 c1 bb 78 8e 6c 73 5c 53 97 6c e0 95 4a 66 b2 d5 76 84 26 5d a8 85 9a c4  ...7in....x.ls\S.l..Jf..v.&]....
100107a0  54 d1 3f b3 7c 3d 4e 0c c6 2d ad ad 8f 07 24 71 80 fa 87 55 0f bb de 73 a1 32 92 ed bd 90 35 ba  T.?.|=N..-....$q...U...s.2....5.
100107c0  e7 78 45 d2 ba 67 45 6d df c2 04 99 e4 07 da 16 d3 00 81 d6 fe 0c b7 0f 45 d4 88 89 3f 13 2a e6  .xE..gEm................E...?.*.
100107e0  c8 2a b6 c3 b9 69 5d 23 15 e9 33 bb 01 60 2b 10 11 b8 db bf 06 59 0a 31 7f 0d cc af da 8c 87 fa  .*...i]#..3..`+......Y.1........
10010800  b3 d3 ab a4 ac 5e be 2b 37 8e a8 7a 00 03 fb 16 e2 e4 06 b0 94 cd a3 44 4b 04 37 c4 e4 f8 0d 6e  .....^.+7..z...........DK.7....n
10010820  c1 69 a7 52 01 29 6a 90 f5 18 ca 3c 5e 28 19 22 02 b1 d8 ed a8 22 86 f5 15 44 be 43 88 ea c9 70  .i.R.)j....<^(."....."...D.C...p
10010840  fd ef 9b d5 75 d4 1d 82 7c 36 1c b5 72 e6 4c cc 4a 53 a7 20 9e 36 90 67 34 17 6d 59 d2 d1 7d 82  ....u...|6..r.L.JS. .6.g4.mY..}.
10010860  86 ba 73 7c 7a c9 0b b2 a9 71 b6 9d 10 89 7e a7 ca 01 f0 b7 e6 17 6f 26 71 ee b7 ab 21 4b 8d 6b  ..s|z....q....~.......o&q...!K.k
10010880  e1 25 20 15 02 b5 a5 02 fd a0 d1 50 6a 82 08 f9 a2 bb 3a 46 6d b8 bc f6 a4 bc 45 13 8f f1 45 da  .% ........Pj.....:Fm.....E...E.
100108a0  fa bf 34 97 52 67 75 63 0f 0b 59 49 cc 90 e5 7e f5 49 e8 08 a1 6f 7d ae ff 15 f5 f8 17 6f fe 7a  ..4.Rguc..YI...~.I...o}......o.z
100108c0  1f 11 f1 61 14 77 66 a8 fa 8e d0 9c 59 8a 3d 7a 4c a6 fd 28 1e 18 a0 c4 82 5f e2 10 50 c0 88 f5  ...a.wf.....Y.=zL..(....._..P...
100108e0  16 07 a8 9c 14 6e 68 35 43 f9 07 00 26 3d 1c fc 4f b3 51 6b 62 91 1b 43 ba 97 ed b1 b7 8a 5a cd  .....nh5C...&=..O.Qkb..C......Z.
10010900  b8 81 0e 65 4a dd 74 72 ca e8 e3 a3 ac 60 2b 59 17 07 59 29 b1 b9 cf c1 49 2e 8e 67 b3 b9 81 8c  ...eJ.tr.....`+Y..Y)....I..g....
10010920  7c 3e 9f fa ad 37 1b 67 bd 5c 62 73 cc f0 66 1a fa 5f 5e a6 4a 99 68 d1 a4 0d 93 cf 29 a4 2d 4b  |>...7.g.\bs..f.._^.J.h.....).-K
10010940  65 1e 84 8f 5d 08 16 da 8c cf ff 46 4a 8a 51 07 62 2c ec 9e 08 42 4d 8a 57 fc b2 22 6c 41 01 10  e...]......FJ.Q.b,...BM.W.."lA..
10010960  3c 5c c8 5d 38 fa fe bc e0 d3 5a 99 37 02 3c 3d 9c 4a d1 12 9f f9 6d 2b ce af 1e 7c 0c 35 64 73  <\.]8.....Z.7.<=.J....m+...|.5ds
10010980  23 a2 d0 c6 64 e6 76 8d 20 39 d8 9d 3f a8 72 24 fd 2d 7d 73 82 a8 44 17 c9 17 48 00 f7 d9 9d d2  #...d.v. 9..?.r$.-}s..D...H.....
100109a0  ef 9d bb 7d 65 1c 91 69 fa 4e ea ec 94 b1 1f 89 1b b3 b6 6d 34 9c f8 c5 ae b0 87 55 7e 6e da 5b  ...}e..i.N.........m4......U~n.[
100109c0  bd ec 3f 9e bf 92 95 38 ab 14 45 7c ee 5f ec 3a b3 0d 94 8f 32 94 2c 95 dc 6b 4d 81 64 07 4a b7  ..?....8..E|._.:....2.,..kM.d.J.
100109e0  ab 00 36 8d 33 d8 0c 2b 1d b1 be 69 1c 49 af 35 5c 7e 94 38 0f f7 63 3f c0 f5 1e 72 94 62 4a 39  ..6.3..+...i.I.5\~.8..c?...r.bJ9
10010a00  7d 72 87 35 4b 7f 81 28 03 8e b3 ce 6f d4 dc a6 29 7b 9c 71 8d ed 8e 37 45 d7 f6 0f bf bf a5 d1  }r.5K..(....o...){.q...7E.......
10010a20  4a a2 0e 27 4b 22 01 ec c8 8a a9 57 13 b5 cc c4 ef a9 95 b2 eb d7 2f c0 c4 e6 a1 a3 27 82 ab 45  J..'K".....W........../.....'..E
10010a40  90 1b 28 40 88 fc 69 c6 3a 95 d5 59 7f ef a3 50 80 ae b9 55 f6 1b 89 db a6 45 bb 5b 54 a6 bd f3  ..(@..i.:..Y...P...U.....E.[T...
10010a60  a8 82 57 5b f7 8c e8 8b cf 49 3d d5 3a 5f 5e 47 11 fc 75 cf 72 e7 b0 d5 c4 62 12 d7 44 af a4 82  ..W[.....I=.:_^G..u.r....b..D...
10010a80  e7 60 02 76 c7 46 bd 82 8c d3 22 3d 46 ad 83 30 49 fb 0a 5a ea de 70 66 4d 19 4f 17 48 7a db f9  .`.v.F...."=F..0I..Z..pfM.O.Hz..
10010aa0  a6 7f a0 69 fd eb 2f 15 7b b3 ff 06 c1 09 6c 0d 44 59 07 cd 3c ac c2 a7 49 b1 fa 16 82 28 a2 e5  ...i../.{.....l.DY..<...I....(..
10010ac0  4e a8 e4 b2 21 09 99 1b 60 83 32 c9 78 51 e9 50 bd 57 71 79 78 36 d2 be 3e 27 71 80 b8 99 52 e8  N...!...`.2.xQ.P.Wqyx6..>'q...R.
10010ae0  ed bc 16 c0 0b ae dd 0f eb 32 4d fb 22 f3 12 05 51 c7 fa 1b ca 0d 48 a8 a4 de 7d 1c ac 19 58 43  .........2M."...Q.....H...}...XC
10010b00  b3 06 71 1f 7b ac 4e e4 21 05 67 c7 6f 0a e5 76 fb 11 d8 d7 d1 95 5b 14 1f 3b 2e ac 96 0f 46 f4  ..q.{.N.!.g.o..v......[..;....F.
10010b20  c4 27 eb 90 d8 a9 64 86 f3 11 13 84 a2 0d 1e b4 53 a9 aa b2 db d9 af a2 33 ec 3a 12 3e 0f 89 0e  .'....d.........S.......3.:.>...
10010b40  72 58 cd 24 5a 5e a3 b3 1f 9e 09 6b 37 03 a8 60 00 10 cf f1 ae 8b 21 73 c9 df 86 8d 58 2f 46 d2  rX.$Z^.....k7..`......!s....X/F.
10010b60  d0 81 d9 c6 d2 cc db 58 61 fa fa d8 1f bf 5e e2 08 8a a2 6b 2d 97 96 3e a4 f7 b9 26 58 ca 25 2b  .......Xa.....^....k-..>...&X.%+
10010b80  cb 03 cf ac aa 02 4c 42 57 9e 56 79 1f 3c 6c 84 c0 90 7d 60 4f 48 70 f9 01 ce cb fb a4 f8 bb c2  ......LBW.Vy.<l...}`OHp.........
10010ba0  9a ea c9 98 92 ad ad d9 0e 91 a8 ca 0c 48 23 72 85 51 50 e5 ed 89 87 f7 dc f1 a5 22 19 eb 07 43  .............H#r.QP........"...C
10010bc0  ad f4 84 09 76 6f 64 ee 62 5f 4d ae 65 54 9f 47 b6 f4 73 4f e2 ef e0 32 0f 5e 8b 93 e1 ed 0b 29  ....vod.b_M.eT.G..sO...2.^.....)
10010be0  ad 29 1a 5f 94 66 41 a8 98 c1 63 d4 5d 6d bb e3 cc 89 cf 2a 0d 62 1f 44 3b ee 2f 98 ab 21 2e 83  .)._.fA...c.]m.....*.b.D;./..!..
10010c00  dd a6 8a 28 bb f2 04 81 91 e9 32 11 76 ef 99 62 9c ac e1 da 2f 54 de 9b 3a 9a de b3 14 fb 1c c7  ...(......2.v..b..../T..:.......
10010c20  d6 2c 09 31 fe 38 92 5a 83 16 5d 86 11 61 34 54 9d 07 60 57 f8 31 c9 08 cf bd 1e d0 b5 f6 85 c5  .,.1.8.Z..]..a4T..`W.1..........
10010c40  9c 35 77 9c 02 63 7f a9 c7 fc 8c 91 b6 79 2a 65 ed ee 2b b3 a2 49 7a 11 9b 24 23 ba e4 1e ad 5c  .5w..c.......y*e..+..Iz..$#....\
10010c60  28 a6 29 c4 80 41 e4 a7 80 bf c4 ad 36 42 b8 2a 58 94 fa 73 ef 80 fa 90 a8 56 2b 55 3a f5 9c c9  (.)..A......6B.*X..s.....V+U:...
10010c80  61 4e 66 c6 e3 e3 e2 2a 7f ef fc 91 83 87 0a 6d 8d f6 23 9b 18 fe 9e 5a 17 dd a3 df f8 c6 eb 72  aNf....*.......m..#....Z.......r
10010ca0  45 88 ff 32 75 f8 30 fc 72 54 43 4d 3e 4d b3 3e 60 01 fb 30 79 bf c1 aa b0 e9 78 08 87 c2 fc 68  E..2u.0.rTCM>M.>`..0y.....x....h
10010cc0  ea 3f 85 6f 3f 0f de 68 b3 dd a2 3f c5 2d 5e 74 70 62 c0 8d d7 ac b4 c0 de ea 94 0d 11 85 1c a3  .?.o?..h...?.-^tpb..............
10010ce0  07 ce 2b 89 b4 81 9a 9e 89 f3 2f ad 4b 1f 2c ca ac 1e ae 2b 8a 11 99 48 df f1 ce a6 2f 02 84 3b  ..+......./.K.,....+...H..../..;
10010d00  82 6c b4 39 06 ea 93 ed 84 d0 7b 6a e6 09 ff e3 61 a2 1f 47 56 17 e2 61 72 80 22 42 7f da ea 9e  .l.9......{j....a..GV..ar."B....
10010d20  aa 0f fd af 2e b4 ed a1 0d db 75 f5 67 1d 3d 92 f7 55 d6 e1 67 61 cd fd c0 60 5e a9 ff c7 9f a7  ..........u.g.=..U..ga...`^.....
10010d40  aa cc 99 a5 38 09 f5 2c 25 48 be 82 28 65 4d d5 e9 40 57 6a d3 4c b9 64 c2 12 62 a3 7c bd c2 3c  ....8..,%H..(eM..@Wj.L.d..b.|..<
10010d60  bb 2d 44 1b 0a 7c c3 47 87 fb 31 3d 2f d1 80 3f 32 33 29 67 84 d5 f1 ce 8b 75 a2 4a 48 cb 9f ce  .-D..|.G..1=/..?23)g.....u.JH...
10010d80  33 11 64 d0 3b 4b ad 4c f0 27 11 eb 0d 8d 76 c7 9f 06 83 1f 45 3a 94 fb d6 d4 81 cb 26 1a 2f a8  3.d.;K.L.'....v.....E:......&./.
10010da0  e3 d3 e5 0a 2e 33 05 38 83 cb 29 05 64 cc 87 76 db ac a5 39 37 3a a2 7c 92 ca 00 19 f2 19 cf 8d  .....3.8..).d..v...97:.|........
10010dc0  82 eb da 5c 01 20 70 cb 68 19 2e 82 46 69 02 af 57 44 5b 88 63 38 44 73 b5 af af 11 fa f9 90 a5  ...\. p.h...Fi..WD[.c8Ds........
10010de0  49 d2 0a 99 98 ba 63 41 40 0d a8 80 70 8f f0 5d 07 25 7e 75 6d 8e cc a4 c0 7b cf 21 d6 48 ee c8  I.....cA@...p..].%~um....{.!.H..
10010e00  40 bc f2 ea a5 d2 a5 c2 97 58 c5 4e 7a bc 1d 2e b5 8c cf 49 89 54 df 71 ea 7e 5c dd 0b db ea d3  @........X.Nz......I.T.q.~\.....
10010e20  29 fd 2f 26 e2 4c a6 38 46 92 56 2e b2 40 4c 54 13 61 16 58 fc a2 03 69 a3 6a 2b a7 f7 44 20 40  )./&.L.8F.V..@LT.a.X...i.j+..D @
10010e40  5d 64 3b 8a e5 13 7c ce a2 6c a7 7d 21 b3 47 99 93 8c 6c 52 cb ad 37 b2 5f 4a 29 61 ba 80 47 da  ]d;...|..l.}!.G...lR..7._J)a..G.
10010e60  5a 75 96 18 a8 36 ca 4a ba af d8 9f 89 b0 71 b6 cb ce d9 63 f8 e4 53 90 80 21 91 1f 5b a6 66 1f  Zu...6.J......q....c..S..!..[.f.
10010e80  bc 09 32 f9 dd f9 3b 9c 2e c6 6c fd 8b 22 60 4c c5 44 fb 34 8c c7 7b 20 47 d9 7b 82 3f 25 32 5e  ..2...;...l.."`L.D.4..{ G.{.?%2^
10010ea0  60 c0 cf 56 df fc eb 27 97 13 44 5e 94 6e 4c 9e 88 78 09 51 ca 04 5e 39 fe b9 8a 7a ec 96 d6 55  `..V...'..D^.nL..x.Q..^9...z...U
10010ec0  20 85 c1 4a 75 40 b3 d9 aa 0f 99 c2 16 0d 83 b4 45 ca 61 e7 63 48 b2 7c 54 af 7d 53 a8 a0 a4 32   ..Ju@..........E.a.cH.|T.}S...2
10010ee0  f2 6d f7 02 a4 8c 90 56 bb bf 43 07 9c f5 19 ec 2b 54 f7 43 e3 b5 75 0b 3f 82 ad 20 82 ff 78 d1  .m.....V..C.....+T.C..u.?.. ..x.
10010f00  c7 b6 a7 41 05 76 b1 1c 2c 00 21 b6 e0 00 7a 90 60 43 7a ad bc 90 3b 93 87 eb ee df 9d 9c 03 d7  ...A.v..,.!...z.`Cz...;.........
10010f20  7b 7b ac 3c 5e 79 87 5a 97 d3 b7 8c 35 bb 50 13 5c 30 57 62 d0 75 36 7a ff 52 fb 39 9c ab b0 80  {{.<^y.Z....5.P.\0Wb.u6z.R.9....
10010f40  5a 8e ca 93 40 17 59 79 64 6a 7a 94 3d 1f af 6c f3 e3 9d cc 43 61 f1 f0 af f0 76 00 8a 25 de 96  Z...@.Yydjz.=..l....Ca....v..%..
10010f60  f3 23 ae 56 1a 84 7d 19 42 e1 17 b8 4f f2 55 02 89 be ec 98 17 60 5b 48 78 59 97 cb f5 f2 49 96  .#.V..}.B...O.U......`[HxY....I.
10010f80  cf bd ff a9 51 71 74 18 3a 57 29 8e ce 00 df c5 cd 83 59 60 d3 35 1b ba 3e 70 c9 2d f2 a9 80 9b  ....Qqt.:W).......Y`.5..>p.-....
10010fa0  37 0b 63 6c fa b7 ba b3 3c 87 85 ce ed c2 ff cb ae 86 3f b3 dd d7 c9 65 5b 04 54 4e 8c 73 70 93  7.cl....<.........?....e[.TN.sp.
10010fc0  aa 4f 00 84 9f 94 3b fb e3 74 6b cc 05 fc 7f 88 5c 4a 74 37 df 98 16 37 0e a5 ad 94 ac f2 69 6e  .O....;..tk.....\Jt7...7......in
10010fe0  a8 08 13 f1 da a0 f9 2e 3d b4 51 95 4a 00 48 a7 05 66 ad f7 16 16 2e 65 b6 31 b7 3f a2 3f 94 54  ........=.Q.J.H..f.....e.1.?.?.T
10011000  dd 69 9d 93 a8 a3 e6 ce 45 90 53 54 a8 f6 11 33 84 c4 2e 5c 8c ad 5c dd 70 92 36 f1 d3 9f df 53  .i......E.ST...3...\..\.p.6....S
10011020  10 40 4c 5c 53 36 41 4f 57 01 20 6e 6a 9f 0f 2b 1f 32 44 1a 2b 92 a1 eb f8 ce ee 7a e6 c4 63 56  .@L\S6AOW. nj..+.2D.+......z..cV
10011040  93 90 62 e7 37 e4 f3 e7 5a f8 30 f9 d9 cd 4a 84 59 69 26 c8 c7 7b 3b 4c 81 b4 c9 32 d3 1d 63 24  ..b.7...Z.0...J.Yi&..{;L...2..c$
10011060  87 04 16 5c 3f ed 3e af a7 a0 47 45 2a 26 a2 da cc 36 b4 7c 4d fe a2 5d b7 d7 2f d4 e4 18 30 a2  ...\?.>...GE*&...6.|M..]../...0.
10011080  77 42 3e 57 a7 a4 9e ba 07 4d 4b d4 d1 06 fb 37 cc 17 b9 df 74 43 58 f1 9d 62 d0 86 3b 88 aa e2  wB>W.....MK....7....tCX..b..;...
100110a0  a6 cb cc 22 0e a8 77 5e 60 eb 9d 71 7e b9 5f 7b 53 76 68 ff 04 24 60 7d 3e 28 43 6e 3f bf 69 71  ..."..w^`..q~._{Svh..$`}>(Cn?.iq
100110c0  d8 de 0e 4b fd f4 a1 15 0e 1d 0a d7 5d 0a 47 e3 90 74 fc 37 5f 21 8d 7c 13 56 c9 e5 ef b3 90 ba  ...K........].G..t.7_!.|.V......
100110e0  93 1d d5 67 a9 32 d8 d0 9c 2b a7 e9 e8 c7 62 c6 5f 14 90 2e 01 f1 1b 5a 02 22 93 77 48 11 16 b6  ...g.2...+....b._......Z.".wH...
10011100  80 8e b5 68 c9 59 b0 50 0a 5b 8c a6 c2 98 84 03 0e 0f 55 9a ce c2 f5 91 41 ae b6 ba 51 ec f8 e4  ...h.Y.P.[........U.....A...Q...
10011120  80 15 1b 64 5e 01 42 f3 8f d7 04 68 f8 51 c6 4f 2c 43 b1 b8 74 ca bd 2c ac 61 61 38 0c b0 1c 5b  ...d^.B....h.Q.O,C..t..,.aa8...[
10011140  b5 a0 30 04 21 04 cf e8 e9 ed a2 1d 46 c4 8e 3a b4 83 cc ef ae 5b f1 f4 db 9a 1f 85 cb 86 14 dd  ..0.!.......F..:.....[..........
10011160  28 38 e1 b4 83 16 1a 4d 82 e3 18 72 cd a3 23 48 01 7f 42 b1 ff 70 ee 65 d9 1c a1 1d 55 a4 14 ed  (8.....M...r..#H..B..p.e....U...
10011180  dc fe 79 43 2d 5e 3a af 8f 89 f2 10 e7 c5 12 f8 ec fa e4 f1 a3 fb f4 0d 6f ba 00 92 b8 c7 85 6f  ..yC-^:.................o......o
100111a0  69 8c 21 2b c9 df d8 0d 02 f6 63 d5 1c 70 03 d0 b5 3a ef ee 66 24 46 04 c5 bd e2 e1 98 65 8c 6f  i.!+......c..p...:..f$F......e.o
100111c0  81 a8 42 b6 b0 a0 e4 fe 59 61 ab 54 90 e5 ef a5 a7 0c 5e 0f dd 7b 6f a3 ad 66 70 0e 80 81 12 18  ..B.....Ya.T......^..{o..fp.....
100111e0  09 1b 52 e3 20 df cd cb c4 a8 91 b8 4d f1 3f c2 c8 74 85 16 9d 29 31 01 d4 66 80 39 47 48 1d 76  ..R. .......M.?..t...)1..f.9GH.v
10011200  7c af e6 60 9c ef f3 0e 97 0a b0 64 4e cd 6a f7 92 e5 2c bb 8c d7 46 7a ae df d5 82 ed 7b c3 be  |..`.......dN.j...,...Fz.....{..
10011220  b5 9e d0 16 14 29 81 5f 17 0d 5a c5 9e ce 9c c5 ed 38 d0 06 e9 58 96 6a 96 b1 74 7f 6b c1 f0 9e  .....)._..Z......8...X.j..t.k...
10011240  ef 8c 4f e0 9f d2 4a bc 4f 5e 61 e1 37 0f 02 59 9c 32 2c bd 2c 2d a7 ee 76 b4 22 69 9f 24 c7 17  ..O...J.O^a.7..Y.2,.,-..v."i.$..
10011260  4b 7b bf 90 a8 09 80 a8 c8 10 41 80 a7 72 18 c9 70 d6 80 b5 05 33 4e fe d6 52 bb e3 6a 89 73 7a  K{........A..r..p....3N..R..j.sz
10011280  d3 62 e3 f8 d2 ae 46 b5 40 c0 04 52 c1 31 24 06 bb 8a 35 2f e4 25 c7 db d0 18 9e 26 67 1c 2e b9  .b....F.@..R.1$...5/.%.....&g...
100112a0  53 d2 5a 7b 4d 94 83 dc d7 59 3e a3 3b 42 95 fc 25 67 00 d0 df a2 da 45 02 db 45 a1 fa aa c3 c2  S.Z{M....Y>.;B..%g.....E..E.....
100112c0  1d 2c 75 d4 69 29 3d 1b 78 6f 7c 1a de 7a a3 fa 62 dd 5f 50 a8 b7 0d be 0d 42 ed 34 09 3e 51 d9  .,u.i)=.xo|..z..b._P.....B.4.>Q.
100112e0  e5 42 e6 4a 3a c7 39 fe c8 a5 38 f5 ee 7d 84 2d 8c b3 90 61 4c dc 1d a6 92 51 3b 8e 13 03 77 b9  .B.J:.9...8..}.-...aL....Q;...w.
10011300  c5 36 5b 2f c5 b0 69 02 b6 66 0e 4c 09 25 c3 eb 60 91 3e 9b 7d 00 7e e9 b2 08 a9 82 df ef 47 40  .6[/..i..f.L.%..`.>.}.~.......G@
10011320  f4 74 a7 48 04 fd ec 6c 76 25 63 01 1e 98 3f 08 37 29 0d f2 75 7b 09 a8 d7 19 43 90 a7 f0 70 4c  .t.H...lv%c...?.7)..u{....C...pL
10011340  78 50 ce 7b 5c 1d 81 28 32 74 df 47 86 9e 95 bc cd b7 ba 6d f8 e1 13 95 5f f0 cb c7 98 a0 ee 24  xP.{\..(2t.G.......m...._......$
10011360  61 dd 23 0a f2 49 4c 2f 31 2d 0c ce e4 72 a9 95 1e 45 98 d7 67 c8 eb de d8 a5 23 2d c3 63 d3 bd  a.#..IL/1-...r...E..g.....#-.c..
10011380  4b 30 b6 22 c5 03 1f 46 aa d9 e7 3e 06 7f d6 51 ed cb 08 b6 a2 f6 5c 91 17 ad 84 4b 09 78 02 00  K0."...F...>...Q......\....K.x..
100113a0  31 9a d8 1f 50 11 5e 80 30 b8 ad a6 0d 9b c1 75 18 d6 61 e6 ee 15 be 09 02 72 db cf 82 ae c5 2a  1...P.^.0......u..a......r.....*
100113c0  c5 c5 bd d7 73 e0 3b 90 79 e5 48 19 3b c3 12 11 21 b9 0f a0 b5 82 83 87 05 c9 38 59 9d e5 c5 87  ....s.;.y.H.;...!.........8Y....
100113e0  26 54 f3 80 e1 65 82 29 ed e5 16 ab 4a 49 5e dd 6c 66 fe 69 bf e9 8a dc b7 e0 05 87 bd 28 0e b0  &T...e.)....JI^.lf.i.........(..
10011400  e5 8a 0a 66 f9 17 cd 0e 8e fa 93 7a 48 5a 40 82 7d 09 74 3c 28 b1 83 fb 5f e6 36 52 9d 6e df 46  ...f.......zHZ@.}.t<(..._.6R.n.F
10011420  8f 24 2a e8 b8 e7 00 bd 6e 54 f6 8b 5d d3 04 80 f9 58 15 9a 34 83 6b 1a 67 0f 58 b1 eb 07 85 c0  .$*.....nT..]....X..4.k.g.X.....
10011440  86 8b c6 a5 4e 4c e6 a7 5e c7 89 9c 56 23 48 24 d7 1b da 71 06 45 46 08 6d d8 87 26 d3 e6 92 93  ....NL..^...V#H$...q.EF.m..&....
10011460  c8 9e 22 f8 3c 7c 04 ed e8 71 44 eb 9f 1e 4f 2b 00 5d 56 c8 2d a5 c8 d2 48 71 52 fb 5a 8d 98 4d  ..".<|...qD...O+.]V.-...HqR.Z..M
10011480  74 88 c3 01 2a 17 8a 37 2e f6 6f 90 f8 5a 5d 09 21 80 1e 4b 25 9b a5 75 43 90 93 34 b0 e9 80 93  t...*..7..o..Z].!..K%..uC..4....
100114a0  17 a7 d2 f4 0c af d1 b0 9a 20 14 32 b4 f9 2a b6 6e 16 37 a7 7d d3 e4 7a 24 23 a6 ed 44 89 1d 15  ......... .2..*.n.7.}..z$#..D...
100114c0  29 17 d9 cc 10 74 15 ed f4 e1 a7 3d 48 76 8b c6 e4 81 aa 20 19 b5 8f 1b 71 5e 8a db de ce 8b 7c  )....t.....=Hv..... ....q^.....|
100114e0  c2 95 25 72 5b 5d af 6d 66 08 15 6c 10 66 6d ab 2f 91 88 00 80 37 bf df 3f 37 88 d6 86 48 91 25  ..%r[].mf..l.fm./....7..?7...H.%
10011500  fe 09 b7 f4 a2 47 c2 8a 62 01 80 d0 e9 03 ee 11 71 ef 07 1e 2e 09 35 81 f0 a7 e9 0d c0 71 0f eb  .....G..b.......q.....5......q..
10011520  b7 9c b1 af 42 58 38 d3 b8 38 85 0c 35 ff d9 ef 02 a3 80 4d 8e 13 dd 55 fb fc 46 83 7d f8 bc 44  ....BX8..8..5......M...U..F.}..D
10011540  55 c5 2b 78 1a 4f b1 ec 7c 75 fa 20 ce 36 4d 31 6d 1e aa 9c 7b d5 c2 34 1b 8c d1 7f 15 91 ed cf  U.+x.O..|u. .6M1m...{..4........
10011560  3e 1c 50 a9 15 cf bb 6d f1 2c 96 e1 43 81 23 fb cc ff 76 2f 8f 99 87 b3 39 82 10 2c 71 e7 5f 58  >.P....m.,..C.#...v/....9..,q._X
10011580  4a a8 80 59 4f 96 e8 93 f7 46 58 21 6d 54 43 b2 78 ae 88 2d 7b a4 a1 fb ac d9 cc 78 d7 2b 49 79  J..YO....FX!mTC.x..-{......x.+Iy
100115a0  68 37 a5 6f 6a 72 3a bb bf a3 e1 6c 9e 32 9b ca 6f 5f 47 86 0d ad f5 48 6c 46 46 e6 90 54 7c 6d  h7.ojr:....l.2..o_G....HlFF..T|m
100115c0  2c 6d 2e 2c 26 24 81 75 67 9f 56 38 57 44 43 10 53 03 04 51 d0 1e 46 ef 76 68 fc b4 17 f4 d5 c2  ,m.,&$.ug.V8WDC.S..Q..F.vh......
100115e0  cf 1a 85 a0 d7 d8 e5 ea ca 2f 76 6b 15 91 be 5c 77 b6 2a 36 5a 00 ea 4d da 87 19 e1 2c 20 7a d1  ........./vk...\w.*6Z..M...., z.
10011600  21 9d 40 77 69 ef 9e ec 4c 69 0b e5 c1 57 50 50 31 14 f2 6c b7 84 f3 87 d5 48 d2 5c 84 76 85 02  !.@wi...Li...WPP1..l.....H.\.v..
10011620  73 81 05 7b 11 e7 b4 c0 fb 17 9a e6 ec 59 b3 6e 34 e2 43 6f 23 4c 53 52 88 0a e5 7d f0 66 c4 78  s..{.........Y.n4.Co#LSR...}.f.x
10011640  a2 3c 10 8e ff 9f e7 1c c1 a4 28 11 24 87 0e 1d 6b 98 5d 12 83 c3 77 55 31 50 46 44 d7 92 6f 57  .<........(.$...k.]...wU1PFD..oW
10011660  ef 31 26 d7 25 09 da 50 3a 2b 64 92 a6 f4 f1 be c8 bd 1f f5 5a 17 9a 43 ce 12 77 17 2f d8 d1 00  .1&.%..P:+d.........Z..C..w./...
10011680  ee 89 31 35 6c 27 71 27 4c 16 27 1c be 12 c1 e0 c3 db ee db e2 c7 67 f4 2f 69 7f 6c 9c f9 f9 c8  ..15l'q'L.'...........g./i.l....
100116a0  58 56 e9 42 22 11 bf 1a b3 f6 41 f6 ad b5 06 03 b5 3d b3 20 4a cc 72 9a 80 4a a2 84 b2 b8 44 12  XV.B".....A......=. J.r..J....D.
100116c0  71 e5 b7 c1 5a da c7 0d 7c a1 d7 aa 14 3f 6f c9 9a 50 01 8a 6b 1c 24 d1 b9 dc 80 60 4d 34 7e 03  q...Z...|....?o..P..k.$....`M4~.
100116e0  f8 9f 94 16 95 3e da 35 2f 16 d1 28 5d 0e 0f aa 5c a3 21 81 09 26 9d 47 df 6b b1 dc 4f d5 57 27  .....>.5/..(]...\.!..&.G.k..O.W'
10011700  e7 0a 38 18 41 f1 86 38 b2 1c 3e d9 58 c8 01 0f e6 a0 27 88 64 82 39 5c e5 62 55 f3 bf f6 2a b8  ..8.A..8..>.X.....'.d.9\.bU...*.
10011720  9f af 20 88 24 44 c1 f7 2f 0e 39 d4 ca 92 59 99 04 c0 da b7 65 64 91 dd 8c ac 9c 09 ff b0 89 20  .. .$D../.9...Y.....ed......... 
10011740  46 0a 9b 24 e5 b8 be 7d ef c1 91 d0 cf b7 f3 13 fc fa 67 ce 6a f2 14 ff 70 9c 8f f4 bb 1a 78 59  F..$...}..........g.j...p.....xY
10011760  e4 d8 f9 f7 04 ee 33 10 54 48 cf ed 2d ac cd 5f 43 bb b5 ff 53 5f 9c d1 07 e8 3b ce 5e 1e 83 ad  ......3.TH..-.._C...S_....;.^...
10011780  37 e0 b8 69 23 cf 0b cf b9 a6 1f 2f c1 7b a2 1b 78 a6 49 0d 9d 76 b1 df 1f fc dc 3b fc ba 4d 52  7..i#....../.{..x.I..v.....;..MR
100117a0  dd fd 89 1b 72 7c b8 ae a6 02 57 56 ff 76 38 f1 65 c9 5c c1 02 11 5d 5b 1b 3d 0b 32 99 0e 3d 06  ....r|....WV.v8.e.\...][.=.2..=.
100117c0  cd 75 59 c7 fd bd 68 e3 a0 51 9e 10 31 93 dd bd 55 1d a1 7e 8c bd 10 10 78 e6 0b 02 ed c0 ed f4  .uY...h..Q..1...U..~....x.......
100117e0  d1 18 d0 be 59 98 b1 53 72 c1 bd 37 53 b7 29 c9 37 ef bf 05 14 67 61 59 d4 0a be ce 67 79 62 ef  ....Y..Sr..7S.).7....gaY....gyb.
10011800  c7 75 dd 9f 28 88 04 a4 0d ac 54 36 0e 04 12 87 c5 a3 6a e4 7f fb 1c 42 44 d6 87 85 d1 d9 70 55  .u..(.....T6......j....BD.....pU
10011820  52 c0 39 2d 72 e1 54 51 b1 47 16 64 79 12 54 3e eb 04 0d f9 a8 06 79 6f da 3b e5 e1 1a 8b 78 bc  R.9-r.TQ.G.dy.T>......yo.;....x.
10011840  b9 63 d2 45 c2 11 67 84 12 ef 09 1e a1 17 fe 43 1d e5 54 7b a5 51 dd de e0 97 a1 77 ab e3 d9 42  .c.E..g........C..T{.Q.....w...B
10011860  05 13 d0 1d b3 85 cb 76 2e e4 c5 10 0c d7 cb 9f bc 42 54 b3 2b e5 af d3 07 58 55 76 28 fa d1 68  .......v.........BT.+....XUv(..h
10011880  21 36 ef b0 f0 8f 2c dd e2 62 05 35 e2 1b d6 b2 3e 2e ba 3a 33 3c 1d db 80 4c 4c 62 da b5 06 fb  !6....,..b.5....>..:3<...LLb....
100118a0  ea ac ea 2d 66 1a 35 a4 28 00 73 d6 f6 ce 42 73 94 f6 da d3 3a 0f 7a 1b 71 44 e6 21 1a 2f 3a 8c  ...-f.5.(.s...Bs....:.z.qD.!./:.
100118c0  f3 58 f8 29 10 6c 09 96 39 f8 6b c5 bd ce ca 01 9c ba d7 fe 3c 0c 68 44 3a 74 2a 45 47 63 5e 1e  .X.).l..9.k.........<.hD:t*EGc^.
100118e0  01 31 38 bc b5 db 93 f7 81 6f b3 f5 25 01 46 42 ed b0 04 e7 26 ae 13 18 1d c2 53 cb 87 5f 00 07  .18......o..%.FB....&.....S.._..
10011900  83 22 4a e8 f4 23 b4 35 2c 53 65 7f 89 41 60 b7 ac 9d d8 b9 f7 c1 38 c4 68 70 f6 5c 98 8b ab ac  ."J..#.5,Se..A`.......8.hp.\....
10011920  05 c6 11 69 a7 8a d1 d4 d9 17 69 27 9f df f1 3f fa fc 56 55 49 73 b5 aa c1 8a 6a a3 e1 97 f3 1a  ...i......i'...?..VUIs....j.....
10011940  5b 0d 02 40 c9 78 77 63 86 26 2f 27 b6 a0 b0 60 0c 24 93 a9 8a bc 27 fc 78 d0 89 62 72 1a 5f 13  [..@.xwc.&/'...`.$....'.x..br._.
10011960  4c a2 e5 1d ea 33 51 6a e8 13 0e ce f7 8b 0d 64 a8 6a 51 d6 23 20 c7 8a 11 a8 9f 60 73 6e 8e 12  L....3Qj.......d.jQ.# .....`sn..
10011980  ea 3c 1a 76 ff 6e 1b 2d 08 90 b4 bb 16 ea 06 1b 6d a0 93 e4 2d b6 c5 66 96 94 02 61 2a 9b ed f5  .<.v.n.-........m...-..f...a*...
100119a0  88 10 11 88 4f 68 39 51 cf 6f a4 ac 6d c6 9f 42 c3 01 1e 9d 2a 39 bd 85 54 fc 26 67 0b 3c c2 99  ....Oh9Q.o..m..B....*9..T.&g.<..
100119c0  8f cc e4 65 18 92 f7 8b 26 f0 5a 3d 6b 97 77 3c 09 9e 52 0d 38 ca 66 bf 22 75 3c e9 bc 2f 53 58  ...e....&.Z=k.w<..R.8.f."u<../SX
100119e0  e6 99 de b3 b0 54 6c f4 ac 59 04 a2 89 2b 0d a4 5f ae b4 5d 30 ab 74 a0 bd 9c 04 46 2e aa c5 c5  .....Tl..Y...+.._..]0.t....F....
10011a00  b5 ac 56 99 be 24 a0 cc b8 b3 0f c1 5e 57 a9 70 d5 73 ae 3a 4d c2 6d 39 74 b3 93 bf fa 5b 52 31  ..V..$......^W.p.s.:M.m9t....[R1
10011a20  62 a0 41 2e ed fd 71 ee a9 ca 66 c6 da c6 2a 30 37 9b 30 14 d2 e5 b9 08 3f 9a 40 5a 09 31 90 8b  b.A...q...f...*07.0.....?.@Z.1..
10011a40  b3 b0 ab 4b a4 cb ed e4 6a e1 a6 6d 33 10 34 f4 c8 a2 a7 9e 9b 7f 14 cc 9b b8 01 d0 ae af 62 85  ...K....j..m3.4...............b.
10011a60  f1 39 56 19 3a 75 7b f2 7a 76 18 06 80 1d ef 33 b6 89 de aa 4a d1 78 7d 60 f1 3c 22 0b 1a 8f 06  .9V.:u{.zv.....3....J.x}`.<"....
10011a80  a1 17 7b b9 6f cd b1 0b f2 bb 44 37 e3 2b 33 6e f9 c2 a3 9b 45 69 c3 91 2b 3b 8b 83 4b 9f d7 18  ..{.o.....D7.+3n....Ei..+;..K...
10011aa0  13 d7 96 a0 21 32 48 cb 7a 1c 55 84 55 61 b1 e6 57 bf e4 94 65 91 06 09 53 3f 17 a8 1d 7e 1b 2b  ....!2H.z.U.Ua..W...e...S?...~.+
10011ac0  52 49 40 a2 02 49 e0 52 27 71 96 c3 6e fe 6d cc bb eb 1b 92 ca 72 24 59 d4 b0 05 fa 34 1f e4 24  RI@..I.R'q..n.m......r$Y....4..$
10011ae0  f8 0e fd df 3f 9a a6 39 b2 5d 92 02 0c a0 6f 23 ba 72 47 1b cc f9 76 b3 a9 60 5d 03 a5 9e a3 80  ....?..9.]....o#.rG...v..`].....
10011b00  24 c5 17 b4 20 62 1a da 6e 5d 75 da 71 f9 1e 97 e0 72 a7 4f c4 5d 43 6f 5a 1b 7f ba dd 58 67 52  $... b..n]u.q....r.O.]CoZ....XgR
10011b20  41 02 9c d5 4d 11 f0 17 36 63 59 ff 9e e0 b2 f4 97 2f bd 6b e7 f9 55 a2 24 e3 ce bb 61 e0 00 21  A...M...6cY....../.k..U.$...a..!
10011b40  32 d9 e8 4f de 96 2f c7 b1 7c c0 c0 f6 b1 97 c8 27 e7 bb 84 de 3c 34 51 ec 15 4f a5 93 9f 40 61  2..O../..|......'....<4Q..O...@a
10011b60  be 53 bc ae 1f 12 bf 6c 91 da 72 bb e5 5f fa 79 0e 23 38 18 b9 7c 29 a5 a9 96 a3 10 06 54 4e 0b  .S.....l..r.._.y.#8..|)......TN.
10011b80  78 45 08 29 63 12 f9 f9 cd 3a 2e 81 7a dc bd 9c 78 a7 5b 6a 4a 75 f1 75 bd f2 58 7b fe 56 2f 50  xE.)c....:..z...x.[jJu.u..X{.V/P
10011ba0  0a 21 70 ab 00 f9 c1 b2 ca d8 1d bc f4 65 61 51 45 ec b5 d0 fb ea 6a ec 15 ca 2f f2 44 2f 88 c6  .!p..........eaQE.....j.../.D/..
10011bc0  16 64 38 41 6a ff d8 6d 7a 74 3f d0 29 9e 87 95 55 58 88 69 b3 28 5a 20 11 a9 96 7a a7 4b 2a 57  .d8Aj..mzt?.)...UX.i.(Z ...z.K*W
10011be0  53 66 fd db f4 30 0d 3b 94 f8 00 70 13 83 6e ff 9d 57 ea 7b 0f 08 eb c9 6e d5 0c 68 c0 78 fc a2  Sf...0.;...p..n..W.{....n..h.x..
10011c00  13 d2 55 54 48 63 18 56 bf 59 a1 d0 6f 98 49 91 7e 79 f7 d0 f5 91 cd 02 d1 fc 44 d8 b2 86 cc 39  ..UTHc.V.Y..o.I.~y........D....9
10011c20  3b 93 91 91 d3 4e ca 4a f9 4c 46 f4 a4 7a 1b de fd f9 58 13 ff 2d 9c 64 81 d0 36 c7 a3 fb 0f 2d  ;....N.J.LF..z....X..-.d..6....-
10011c40  28 09 6d eb 8f 62 ab 7f bb f7 11 2c 4d a5 fa 00 a4 b0 c4 72 03 5d 18 27 61 28 13 d2 2f 86 30 1e  (.m..b.....,M......r.].'a(../.0.
10011c60  eb 33 c9 6e 28 1b 00 cf 5f 78 8a 83 3a d9 c9 37 5f 13 10 f1 09 c2 fd 62 59 56 53 db 56 95 66 96  .3.n(..._x..:..7_......bYVS.V.f.
10011c80  d9 d6 9d 3d e9 29 bc 9d 48 fc 1f e0 7f 0a c6 c3 84 42 4f 8e 91 97 fa 22 54 d4 e2 c0 c4 d9 4d 5a  ...=.)..H........BO...."T.....MZ
10011ca0  27 c0 82 61 56 d0 4d 81 66 9b b2 10 94 fe 30 40 c8 67 4d 54 ed 25 b1 83 c1 51 6b e9 fd c3 b0 34  '..aV.M.f.....0@.gMT.%...Qk....4
10011cc0  82 9f 52 dc 4d a3 5b 67 7b cb 7f 8e 70 c1 74 65 86 1e fe b8 e4 19 be f5 77 59 54 01 30 db 08 fd  ..R.M.[g{...p.te........wYT.0...
10011ce0  bd cc 61 0c e5 22 ec 0c e2 26 94 17 e2 f0 2f 63 61 86 1e ce 19 d6 2d b2 d0 fb 2d 19 f2 33 7a f4  ..a.."...&..../ca.....-...-..3z.
10011d00  82 eb bf 3e 40 64 84 37 cb 4a 99 26 7e 41 db a7 28 92 f3 62 e6 9f d3 5e 98 03 c4 d0 f2 2d c2 d7  ...>@d.7.J.&~A..(..b...^.....-..
10011d20  16 b9 8c c8 6e 32 14 e5 fa 36 30 74 77 bf c4 6f 47 6e c3 cf d4 69 a6 a7 19 3e 3d db 56 11 c3 2f  ....n2...60tw..oGn...i...>=.V../
10011d40  fc e8 a4 5f 6c bf 5b 41 51 06 c1 75 97 59 a8 9a 3f 85 db 84 52 c7 65 24 32 1d 53 81 40 ea 92 af  ..._l.[AQ..u.Y..?...R.e$2.S.@...
10011d60  cc 97 8e e7 18 a5 00 51 f1 04 4c 44 d6 09 9a 64 db 54 8c 78 c8 b8 9d 34 01 e9 22 cd fe 92 04 38  .......Q..LD...d.T.x...4.."....8
10011d80  e1 72 4e b9 34 0f 1b 9e 08 a6 3c 9f a8 03 4a 80 00 7e 2a f4 c3 77 f6 b2 ba 91 35 c1 0e 62 43 e9  .rN.4.....<...J..~*..w....5..bC.
10011da0  fa b8 2d 7f 0f 39 0f 38 42 9d da ad 6f 4a 66 18 86 c3 df e2 3d 34 6d ea 04 73 ce 5b 3d d0 b7 70  ..-..9.8B...oJf.....=4m..s.[=..p
10011dc0  ca 31 77 f5 37 00 fc b5 ab 25 84 4c 8e 96 94 a6 fc 51 c3 85 4f de 13 d9 e9 68 29 30 d4 4f d8 57  .1w.7....%.L.....Q..O....h)0.O.W
10011de0  13 4d b4 c3 8a f1 e1 9c 4d bb a7 3a 12 4d 3d e7 ef ae fd d4 9c 5a 3b b1 7e 2b c4 a1 7a b6 58 6d  .M......M..:.M=......Z;.~+..z.Xm
10011e00  14 77 d6 f1 aa 8a ce 96 df 14 61 f3 e7 c2 0e 24 46 05 d6 c0 b1 f9 71 73 2a 3c f0 b6 43 e2 7c 13  .w........a....$F.....qs*<..C.|.
10011e20  db 83 47 a0 ca 36 f7 ab 28 03 70 39 a3 fa 6d a3 e2 ca b1 2c 2b 48 e6 19 7a 8e 74 af e9 eb fe ed  ..G..6..(.p9..m....,+H..z.t.....
10011e40  a0 48 e8 ff de 4f 6d 5f e8 48 b5 7d 41 56 88 1a 02 0d 46 dc 7e 18 70 44 51 c9 cb 48 e3 0b c5 5b  .H...Om_.H.}AV....F.~.pDQ..H...[
10011e60  52 18 ca 1d b7 01 5c fe f2 c7 72 c2 a3 bc 36 ad 04 9f 6e 84 7b 18 a2 b7 2e 92 99 ee 8f 9f 7a 08  R.....\...r...6...n.{.........z.
10011e80  12 74 53 90 9a 80 a7 f6 a8 c2 1b a0 bd de bc 06 35 64 4e ff 84 7f f9 c2 ea c9 f4 7c 26 43 48 28  .tS.............5dN........|&CH(
10011ea0  b2 08 a8 83 b2 0f e5 a3 1e 62 cb 3e 6b 7c 46 42 ab dc a1 c0 ea 38 c1 89 4d 10 20 95 90 8f 1e f5  .........b.>k|FB.....8..M. .....
10011ec0  dc d6 fd 42 38 6b b8 9f 27 6b e9 fd 2f 1b bf 29 3b ec db 55 02 04 98 8b 55 8d 59 31 e3 7e f1 fa  ...B8k..'k../..);..U....U.Y1.~..
10011ee0  13 1e a4 ae 85 f0 ff 4d be f2 c4 5b 9c f7 47 44 e4 33 96 74 87 93 49 11 6f db a5 14 d3 98 12 4c  .......M...[..GD.3.t..I.o......L
10011f00  2a f1 61 a5 1c 94 81 d7 13 7b 2a a5 b2 62 ba 7b 66 70 2a b1 53 14 1f b6 41 f7 96 53 ee f9 fb a3  *.a......{*..b.{fp*.S...A..S....
10011f20  96 29 b6 0c e8 cc 5d 0e 52 72 ee b3 67 71 aa 84 36 d8 ba 5a 31 5c 96 bf fb 59 d8 07 3e 5c a5 39  .)....].Rr..gq..6..Z1\...Y..>\.9
10011f40  ad 64 9d 8f e3 9e 8b 23 d2 0c cf 8c e8 b5 60 94 19 d7 91 5f 8d 09 15 b3 f0 bd 64 25 1a c6 c5 fd  .d.....#......`...._......d%....
10011f60  ac 21 b4 de 2d 85 28 b0 2d 52 87 b3 7f e8 08 b0 37 84 38 0c 79 52 e9 5b 0a c2 5f 40 c1 03 cd a1  .!..-.(.-R......7.8.yR.[.._@....
10011f80  c6 dd dd 39 4c ba 0d ea 2b 25 37 61 f1 80 4a e2 3f c5 cf 70 b3 3e 08 71 69 84 78 e0 50 86 96 1d  ...9L...+%7a..J.?..p.>.qi.x.P...
10011fa0  26 f6 be b3 65 05 80 5b cb f6 14 da dd 29 bb 1b b1 d4 92 ce 58 91 d2 cc 3c 6a 7c e4 ac d2 7e fe  &...e..[.....)......X...<j|...~.
10011fc0  0a d9 e7 9d ca a1 20 1a f1 ea e0 85 fa fc 5c 48 d7 d5 7c 1b ef 77 2d dc 64 5c a0 60 9c e9 da be  ...... .......\H..|..w-.d\.`....
10011fe0  5c 6d 7e 62 eb 6a 51 bd cd 74 18 f4 ba 50 14 49 95 5f c9 12 8c a4 5a d5 0d 02 fa 78 88 d1 63 b5  \m~b.jQ..t...P.I._....Z....x..c.
10012000  aa a2 65 29 2f ed 90 57 32 08 97 22 72 d2 22 0e bd f1 d1 b9 f4 bd 08 e6 2a 62 62 d3 7d 0e 09 d6  ..e)/..W2.."r.".........*bb.}...
10012020  4e d0 c0 f2 8b 30 a5 d2 65 c6 56 89 77 8a 16 a8 1d 77 23 d1 44 e8 45 9c e0 c4 ea 34 6c 73 ab 5d  N....0..e.V.w....w#.D.E....4ls.]
10012040  6f 0b 8d 10 af 7d 5f a6 60 d4 8c c7 57 9b 0e f7 71 76 6a 3c e5 3d 70 3d 2d ee 52 a5 96 62 23 8f  o....}_.`...W...qvj<.=p=-.R..b#.
10012060  f6 4e 8f 98 eb 14 dd f7 4c d3 17 9b 23 26 af f5 98 c2 33 df 02 cb 71 7b 3d e3 c5 0f 50 db 53 5f  .N......L...#&....3...q{=...P.S_
10012080  59 e2 42 e9 dd 09 f5 ff 9e c3 59 b8 31 8e 00 4b bb d7 03 9e 61 b3 b9 92 d2 0e bd 41 79 54 52 dc  Y.B.......Y.1..K....a......AyTR.
100120a0  22 cb cc 87 67 49 6f 7f eb 1b 09 f2 84 f1 15 4e ca ac 8e db 61 4b 28 17 05 47 9b 6a f7 87 82 3f  "...gIo........N....aK(..G.j...?
100120c0  04 db aa d9 d0 32 e8 c9 6e 52 3f b1 31 37 47 2e e6 d7 e7 88 fd 93 59 c2 b5 cc 5e 8b 0c 1c 33 60  .....2..nR?.17G.......Y...^...3`
100120e0  2b c5 00 6a b6 44 86 76 ea 51 21 a6 d0 10 53 97 cc 76 ab 19 02 a0 c8 5c dd ce c7 ac 17 4c 57 71  +..j.D.v.Q!...S..v.....\.....LWq
10012100  cf a7 69 d7 1b 08 59 a8 12 9d b0 9d e4 0e 6c f6 80 ee b1 75 5f 9b 7f 2f 58 61 9b b9 86 3d d1 0a  ..i...Y.......l....u_../Xa...=..
10012120  0d 00 71 e3 c9 f4 c2 cd 12 3f 92 c8 a0 a1 8e 65 04 4f 37 c8 84 ed e0 59 62 c6 8d 64 c5 0e f3 cf  ..q......?.....e.O7....Yb..d....
10012140  39 1d 7c 8d 33 27 c9 2a e1 ed 9d 68 e4 99 44 f2 ce d5 60 ce d4 a2 29 43 da 2b fe 90 6f e5 ed 21  9.|.3'.*...h..D...`...)C.+..o..!
10012160  50 bc f7 74 9c e4 55 15 6e d3 48 3a 0f 9c 21 19 f8 c9 be 33 e4 5e 5e af 55 73 28 93 2c 1b 15 17  P..t..U.n.H:..!....3.^^.Us(.,...
10012180  ad e8 94 df 07 f0 2b 37 f4 96 c4 0d 4d 26 ae cb 1d a3 4c 4a e2 5a 82 17 8e 7f 95 fa c5 84 78 bf  ......+7....M&....LJ.Z........x.
100121a0  45 db ed 4f 95 2f 75 cb 86 a0 8b 08 89 ba 82 fd 6f 88 ee ca 12 93 c2 27 ec 6a f1 92 f3 f5 2a 2f  E..O./u.........o......'.j....*/
100121c0  bf 0f 3b f0 40 5c 5d 98 1d e8 0d 65 8a 55 c4 a6 48 c3 68 eb bd 23 10 51 0e 41 c4 0a 5e b2 92 4a  ..;.@\]....e.U..H.h..#.Q.A..^..J
100121e0  d3 f8 21 05 a2 32 c7 9f b1 78 f3 96 30 ba 7d 24 06 8b 7e 97 d2 82 87 07 68 fa bb 23 0b 1a a3 91  ..!..2...x..0.}$..~.....h..#....
10012200  2a 37 a1 10 b4 ee 73 d5 f0 11 a0 c0 e4 1b b5 f2 0c c7 32 52 2d b1 c6 95 f2 01 83 78 ec 06 8f 24  *7....s...........2R-......x...$
10012220  86 c8 7f 2d 5d 87 3a 51 04 61 8a 6c 9f 53 96 88 99 66 42 37 71 22 ab 50 17 09 4b 60 53 e1 68 e0  ...-].:Q.a.l.S...fB7q".P..K`S.h.
10012240  35 36 da b0 67 f7 60 d0 8d 5d 5d f8 54 50 8d 30 c1 78 ec 48 3d 7b 9a ed 63 f2 79 3b 4e 4c be 41  56..g.`..]].TP.0.x.H={..c.y;NL.A
10012260  fb 20 4f af ca 2f 46 15 f8 e2 ef 17 e9 18 a1 bc 23 f4 23 7f 13 70 1b 3e 9b ad 11 38 93 37 80 5d  . O../F.........#.#..p.>...8.7.]
10012280  59 72 5a 4b 13 f1 46 50 d4 89 f7 70 31 be 3b 7d 87 6d 00 9a 3e 98 14 0d 70 7b 6e 69 94 1a 6e cd  YrZK..FP...p1.;}.m..>...p{ni..n.
100122a0  01 94 5c af 4f 50 c0 b1 fb 8d b8 f2 e6 bb ba 59 38 db c8 96 ef 01 33 58 11 95 a0 2a ea f5 18 87  ..\.OP.........Y8.....3X...*....
100122c0  3d a0 cf de 94 44 6c 2b 9d 52 63 f8 45 3f 76 dc 4e 57 70 72 66 2f d9 ba fd 0d 92 b6 f7 2d 33 33  =....Dl+.Rc.E?v.NWprf/.......-33
100122e0  5d 20 ff 1a 43 14 87 86 3b e6 98 eb b2 fa 77 a1 11 e0 e4 da 94 8e cf 91 59 93 49 80 8b c2 4c ce  ] ..C...;.....w.........Y.I...L.
10012300  23 36 6f 0a 71 5b 0d e1 94 2a 8b 7c d8 d6 05 a2 a7 69 2e 7c 20 4f 37 6e 37 2c 80 09 03 c7 52 d1  #6o.q[...*.|.....i.| O7n7,....R.
10012320  c4 07 63 1d 6c 12 87 54 77 c3 7f 59 35 33 77 60 24 b8 5f 10 26 0f 60 f9 8b ad fe ec 2c 37 ed 3e  ..c.l..Tw..Y53w`$._.&.`.....,7.>
10012340  33 c8 2b 88 ba 91 fc cb d9 60 ba c9 37 97 dd b5 93 8c d0 e0 e8 ef 9b 4a ef 81 4f 1d 8a fa 08 3d  3.+......`..7..........J..O....=
10012360  a7 d5 bb eb d2 b3 41 2b c3 23 7c 92 be 07 79 02 69 60 ee 4c 38 97 d1 fa d1 5a 57 72 a5 50 60 84  ......A+.#|...y.i`.L8....ZWr.P`.
10012380  71 38 c9 92 fa ca 1f 14 37 8d 20 8c 7e 53 0b 28 d5 ac dd a8 0d a4 56 47 8c 3a 47 d2 82 4d 1f d2  q8......7. .~S.(......VG.:G..M..
100123a0  78 0f 38 26 fc 26 61 6b d1 de 0d 1d 0b 94 6a 3e c7 40 52 43 dd 59 ac 39 14 ec 2d 22 f2 42 6b fa  x.8&.&ak......j>.@RC.Y.9..-".Bk.
100123c0  16 a7 d8 b8 04 80 21 f7 3f 9b d5 db d0 09 dd a0 1a 8c 66 73 78 fc 3e c5 f5 6a 40 63 2a b9 4f 7e  ......!.?.........fsx.>..j@c*.O~
100123e0  21 29 bc e1 49 9c bf 28 0c ce 65 a0 7f 6c af 48 d4 71 65 ba 48 dd 7a c7 7b 33 da db 1b 6f 6a 8c  !)..I..(..e..l.H.qe.H.z.{3...oj.
10012400  90 c2 66 ab c8 55 be c7 ec 96 30 01 d0 1c ec b9 85 08 f4 53 8b 57 86 78 07 df 51 06 49 34 90 91  ..f..U....0........S.W.x..Q.I4..
10012420  ad 3e 56 0f 7c e3 a6 27 e3 a3 eb ad 70 ac 0e c1 ab 46 9f e6 3e 82 f4 21 0c b1 6b 6b 95 e9 b2 6f  .>V.|..'....p....F..>..!..kk...o
10012440  22 cb f6 de a5 20 02 46 c5 e6 85 4b 1e b2 70 d6 4e ac 3b ed 98 b8 d0 c6 bc 05 c4 ad 04 63 41 4a  ".... .F...K..p.N.;..........cAJ
10012460  ca 45 83 bb 6f ab 6f 56 29 59 78 fc 00 ca 80 d2 72 e9 ee 42 5f f7 a1 da 2c 38 82 34 64 9a ae 53  .E..o.oV)Yx.....r..B_...,8.4d..S
10012480  0a 6e 0a 6f ad 82 a1 cd 09 74 8f 20 3a 68 4b 08 46 79 4e c4 09 88 90 b0 24 ee 2e 40 a6 d9 e2 4d  .n.o.....t. :hK.FyN.....$..@...M
100124a0  57 00 ec 98 d3 41 6e d7 d1 25 a6 3e 5c 6f d1 c1 9a d7 ad 54 5f cc dc 4c 1e e5 b8 f3 a0 a4 6c c3  W....An..%.>\o.....T_..L......l.
100124c0  e4 3f cb 17 11 4a 4b c3 59 4a b1 47 c5 8c 28 3e 85 4f 6f 88 cc be 07 19 29 2a c2 bc e3 92 29 72  .?...JK.YJ.G..(>.Oo.....)*....)r
100124e0  c7 47 6a eb 7d b4 b8 30 ea ad 80 ae 5d 37 93 e1 da 34 95 47 d9 bf 13 e8 70 68 2e 9e 98 5e de 52  .Gj.}..0....]7...4.G....ph...^.R
10012500  d8 33 b8 44 6a 02 a5 4d 32 07 56 de 9c 1d ea 5a a9 0d 54 2a a3 1b 76 af 10 7e 7e 0a ba 6f 99 a9  .3.Dj..M2.V....Z..T*..v..~~..o..
10012520  a4 78 3d e2 6c f3 84 b5 5b 21 c4 e8 50 73 d6 60 1b d3 c9 00 7a af 5a 75 5c 71 f6 53 cf af e1 ad  .x=.l...[!..Ps.`....z.Zu\q.S....
10012540  d3 76 d4 e2 fd f4 b7 95 19 7b 32 e4 bd f4 b4 7d 2d 00 e4 87 54 c9 ec 53 4a 68 3f bd 43 8a 2e 98  .v.......{2....}-...T..SJh?.C...
10012560  10 67 53 8a f2 a4 63 b3 27 bf 89 f1 c8 45 9b 6d 81 b3 ec ed 11 34 df 50 ec 76 a6 b1 17 75 53 cf  .gS...c.'....E.m.....4.P.v...uS.
10012580  be ac 90 b7 c4 39 f4 b0 2a c4 dd e3 ab 49 45 82 86 e2 4e d3 fe 4c ad 1a 77 e5 ea 3a 5d eb f7 d6  .....9..*....IE...N..L..w..:]...
100125a0  95 81 8a bf 9b 7a d0 38 5e 52 d3 4e b3 71 b8 9b a4 1c a5 22 43 94 f1 cb 7c aa 64 d3 84 89 a5 c7  .....z.8^R.N.q....."C...|.d.....
100125c0  fd b7 01 f3 00 91 84 ba b0 42 72 4c f8 78 40 3b b4 cb 64 c6 7c 27 77 36 47 5c 3f 67 2f 7b f7 bd  .........BrL.x@;..d.|'w6G\?g/{..
100125e0  9e 62 3d 28 71 00 d1 71 e5 05 99 75 2c d4 ee 55 a7 98 37 5f 72 c1 06 ce 5d 09 a3 c7 a0 61 03 0a  .b=(q..q...u,..U..7_r...]....a..
10012600  9b ed 50 cb da 91 7e 7c d2 dd 45 57 48 63 be 33 0c b5 8d 2e f9 76 80 fc db 41 b4 0c 46 65 39 85  ..P...~|..EWHc.3.....v...A..Fe9.
10012620  78 6a 5d f8 5d c4 5d f7 16 28 15 94 27 d9 a9 bc 61 0b 35 06 e5 24 43 80 bb 7d 5f 13 c7 ad de c0  xj].].]..(..'...a.5..$C..}_.....
10012640  ed 9c c8 cc 57 ff 15 e6 f0 53 ff 64 20 65 54 67 c6 64 63 cf ee 81 3e 80 47 36 93 b5 1a 76 41 0e  ....W....S.d eTg.dc...>.G6...vA.
10012660  53 a6 3a 36 8c 28 85 61 ac ff 27 ac ac ab 8f 1b 81 33 26 cc 82 52 ff a2 fc 7a 08 05 32 63 43 c0  S.:6.(.a..'......3&..R...z..2cC.
10012680  e0 13 08 ed 3f 7b 96 7a eb eb 50 67 4e b6 8b ff 36 ac c2 0b 2f 43 c9 81 ee ea da a5 63 bc 49 ca  ....?{.z..PgN...6.../C......c.I.
100126a0  35 19 7e c4 bd 34 be 58 6f 9b 7c 7c 2b 6c 4b f1 e8 97 99 c6 79 60 27 64 69 b2 55 ff 57 49 05 13  5.~..4.Xo.||+lK.....y`'di.U.WI..
100126c0  8e 5c ff 66 8d 98 b0 f3 8d 98 2f b1 27 17 0d f7 de 78 9c c0 5d 19 c9 06 75 3f c9 98 35 db cf c2  .\.f....../.'....x..]...u?..5...
100126e0  1e b3 c3 5a 27 e1 37 0a b9 58 3e c6 12 9c 9f 32 d0 c9 97 36 ca ba ce f8 81 d9 25 35 62 15 ac bd  ...Z'.7..X>....2...6......%5b...
10012700  f1 16 94 e9 ff 07 b4 c7 41 d9 2c 81 b0 b8 6e ab 05 96 10 74 53 55 83 98 2d fd d1 5f 1e de 1e 71  ........A.,...n....tSU..-.._...q
10012720  d2 f9 3b a5 aa ff 8f f7 1f 71 d1 7d ff 92 05 fa d4 af 06 49 27 c8 ad 1a 27 d1 5e 46 e1 16 89 7d  ..;......q.}.......I'...'.^F...}
10012740  b8 78 ff e2 71 07 d1 f0 f9 0c d7 1c 63 fe 00 fd 49 16 c9 b3 bb b1 d4 ba 09 a2 a0 64 7c 2f 5c ea  .x..q.......c...I..........d|/\.
10012760  d2 2a a2 ca 24 2a 7d b5 de 07 ee 66 15 4c 11 06 42 7b af ce 3b c6 54 8a 67 a9 68 ef 05 69 36 78  .*..$*}....f.L..B{..;.T.g.h..i6x
10012780  3e 42 8d 00 ae 26 33 e1 41 42 fa fb b8 c2 ff 14 15 5c df 94 d3 7b 7e 31 49 d4 ab 9e a1 01 5c ec  >B...&3.AB.......\...{~1I.....\.
100127a0  19 84 63 23 1c d8 aa a9 32 1e 9d f5 0d e1 83 70 a6 43 ef 4d 69 a6 f9 10 ff 9b f1 2f 0d 21 0e ed  ..c#....2......p.C.Mi....../.!..
100127c0  b2 7b 03 9e 04 49 f5 07 19 48 7b f3 8f 57 35 5e bf bb 86 22 df 8b db 06 92 aa 65 17 e2 4e 44 53  .{...I...H{..W5^..."......e..NDS
100127e0  5d a4 5b 82 0c c8 cc 03 4b 28 f3 c7 6c 1a d0 48 7f b1 08 4a 3c 23 96 9c 6a 21 77 88 9d c6 34 98  ].[.....K(..l..H...J<#..j!w...4.
10012800  0b 94 a4 39 87 69 21 21 a7 73 18 cf be 86 51 1d 22 4d 22 fe 9c 34 03 85 9b 6d 2c 06 0f a9 c0 65  ...9.i!!.s....Q."M"..4...m,....e
10012820  27 76 6c cb 3d e7 51 7d 16 b5 0f 0c 7a c5 29 6b c2 8d 2e bb 47 2e df cd 84 51 4a 20 1b d1 2f 2d  'vl.=.Q}....z.)k....G....QJ ../-
10012840  e5 67 67 d2 3e d5 65 d3 c3 d3 d6 ef 28 f2 0a 84 c3 12 f2 5d 84 81 0c 41 c7 38 05 7e d4 a3 75 c5  .gg.>.e.....(......]...A.8.~..u.
10012860  8e cd ee a1 80 d2 29 1c 54 c4 f8 93 55 22 91 3e fe 85 11 0e 83 46 a9 7c 58 37 d8 a1 d9 9d a3 4f  ......).T...U".>.....F.|X7.....O
10012880  63 7e 94 1a 4f 30 dc a4 d3 b8 95 23 c6 d1 19 04 53 15 cc 13 e2 90 69 10 53 c8 6e d0 60 80 2f b4  c~..O0.....#....S.....i.S.n.`./.
100128a0  a9 13 cd ee 54 80 fc 8f 02 64 a4 43 b4 65 a3 53 ad 61 1e b3 ab 64 f4 ac 10 65 1d 34 be 5e 43 4e  ....T....d.C.e.S.a...d...e.4.^CN
100128c0  7f 5b 0f f6 32 fc 08 38 ba 88 fd d7 f8 59 9a 5f 1b b5 7d f2 51 ee 3c 39 e6 f2 eb 95 40 b0 8f 73  .[..2..8.....Y._..}.Q.<9....@..s
100128e0  86 70 0a 27 22 8f 06 79 36 54 ad a9 4c 8e 66 f0 57 2e 22 4c 6a 63 e4 a8 a6 d5 37 ab bb b8 6f 7a  .p.'"..y6T..L.f.W."Ljc....7...oz
10012900  62 49 4a 08 15 5d 70 9e 7c 3c d0 05 81 1e 4f 8f d1 6d b0 d0 9c 7c 00 9f 61 41 35 78 b9 62 bc a3  bIJ..]p.|<....O..m...|..aA5x.b..
10012920  34 03 7d e9 61 d6 3b 1b 0e 4f c8 f5 ec 47 29 e2 39 12 11 03 4f fb cf 95 3b 79 10 2c f6 eb e2 e3  4.}.a.;..O...G).9...O...;y.,....
10012940  76 55 fe 4f 02 59 ed 3a ad a7 c8 99 60 86 10 19 57 6e 0d 72 15 26 10 a7 79 e4 d2 39 be 3c 12 92  vU.O.Y.:....`...Wn.r.&..y..9.<..
10012960  d4 91 86 b1 51 22 0e 08 2d 1f 79 92 82 52 21 f8 84 88 f8 f6 4f fe 95 17 2c 7b 3e db 66 a1 3d d0  ....Q"..-.y..R!.....O...,{>.f.=.
10012980  55 e8 91 e3 7f 07 9e cc 7f 67 17 69 94 74 1e 67 c7 d5 9e 2f 09 e8 3d 34 0a e8 1b ea 4d 97 e2 90  U........g.i.t.g.../..=4....M...
100129a0  64 be ef 6c 24 cb 09 66 b0 ec 57 e8 72 87 8d d6 68 e4 72 1e a0 52 7c 3d 65 a6 2c 88 07 9d 70 83  d..l$..f..W.r...h.r..R|=e.,...p.
100129c0  0c ff be 64 79 ed 8b 34 d9 16 64 74 b7 88 fb 6e 7a fc 5a 58 04 d6 cd 54 ca e8 cb 29 3f 1b f7 b3  ...dy..4..dt...nz.ZX...T...)?...
100129e0  3d e0 e2 09 05 1f 74 3c 3d 70 c0 9e e4 42 ad 71 00 07 5a dc 2a c3 cd 3f dd 1e 1d 25 c6 2f 55 af  =.....t<=p...B.q..Z.*..?...%./U.
10012a00  03 ff 7c f5 ca 23 72 53 a2 59 0c ec 63 9d 0e 5a 20 38 37 6c 74 c7 7e f9 f3 e4 6f 52 26 4a 1a 7d  ..|..#rS.Y..c..Z 87lt.~...oR&J.}
10012a20  6d f1 ab 98 aa fe 57 c4 51 b6 31 02 0d 51 e5 a7 1c 37 0f 66 8f b3 3f 1c 5e 55 f0 16 fb 71 b6 06  m.....W.Q.1..Q...7.f..?.^U...q..
10012a40  ea 40 2e 02 bc 51 0b ed 31 d2 b2 ad 56 30 19 60 09 a2 f6 35 b6 d9 ce 4e ae f3 0a b9 e3 6f b0 ff  .@...Q..1...V0.`...5...N.....o..
10012a60  3e 95 66 be cb 10 9c c2 81 c7 e8 41 69 be 23 7a 86 0d d5 12 4b 30 6f 26 11 9c 21 63 4f a5 4d 85  >.f........Ai.#z....K0o&..!cO.M.
10012a80  07 71 7c c6 2d d6 c3 a3 04 7d 05 0e c9 37 0b ca 7f 92 35 f5 c7 d6 75 27 8b 5f 6a fa 71 18 3a 3c  .q|.-....}...7....5...u'._j.q.:<
10012aa0  ac dd 87 43 72 09 df cb 25 f1 d9 67 10 be 59 e0 20 6a 8d ea 0a 53 2c d5 2b f2 65 71 52 da 8a 2c  ...Cr...%..g..Y. j...S,.+.eqR..,
10012ac0  1b dc 40 ba 19 fa bf e3 96 c5 fd 61 37 b1 46 b5 80 1e ba 15 af 16 95 9d cf 77 79 a5 5e 45 52 5e  ..@........a7.F..........wy.^ER^
10012ae0  e5 ef a5 ed 72 ad a2 84 7e 83 ca aa 29 3e 2a 83 12 b7 c3 81 a8 e4 2e 1d 17 fa 18 20 55 0d 22 ff  ....r...~...)>*............ U.".
10012b00  01 e1 05 9f 80 c1 14 62 89 3a 78 d7 d8 fe 55 c2 a4 1f 89 58 fd 66 7a a7 1c d5 07 5d 25 0d 0a b7  .......b.:x...U....X.fz....]%...
10012b20  d7 77 8e 36 fe 16 b8 24 f3 bf 3d 11 ee 02 6d cc a3 9a ce a0 c8 43 21 24 4f f6 48 34 c0 cf 7c 97  .w.6...$..=...m......C!$O.H4..|.
10012b40  1f a7 82 87 33 ba 02 e3 c4 85 15 5d 77 48 ef e7 d1 84 d8 95 b8 ef 63 0b 7e f5 65 f7 62 00 59 6a  ....3......]wH........c.~.e.b.Yj
10012b60  9c 45 1c 84 52 83 8b 10 d9 ae 49 73 cc 50 28 3d ec 28 f1 64 ff 53 d9 44 d3 cb 21 e2 5b 0b 3e db  .E..R.....Is.P(=.(.d.S.D..!.[.>.
10012b80  fd 3e 36 f4 e0 3a 83 b9 b7 45 be b2 20 78 ae 5c fd 24 f9 b7 65 be 41 10 1d b4 91 b4 2d e0 62 d4  .>6..:...E.. x.\.$..e.A.....-.b.
10012ba0  04 98 d3 30 a4 42 5a c2 92 2d 53 83 5d 8c 24 ac 19 0a 1f b0 4e 6b 3a e4 8f c4 08 30 6c c3 60 e5  ...0.BZ..-S.].$.....Nk:....0l.`.
10012bc0  27 60 d7 f0 c1 57 27 39 de e0 f8 6e a7 a2 74 22 e4 63 ff 37 2a 2d 18 7c d8 12 91 6e c8 fd d3 d7  '`...W'9...n..t".c.7*-.|...n....
10012be0  2d 71 84 dc 3e 36 bf 5e 97 f0 0e f2 19 d0 99 02 16 b6 66 8d b0 45 dd 2f 0d f4 b3 99 0e 5d 50 1a  -q..>6.^..........f..E./.....]P.
10012c00  aa c2 63 cb a5 03 70 4b ed 98 eb 7f 29 6a 36 06 00 1b 8d 7e 4e f8 dd f5 e2 3c 16 ec b9 12 2f 77  ..c...pK....)j6....~N....<..../w
10012c20  98 45 99 46 de bf 64 61 13 ab 41 f5 f2 30 5b ef 76 47 e7 5e 46 58 e9 00 49 01 4c cb 6e c7 a1 5c  .E.F..da..A..0[.vG.^FX..I.L.n..\
10012c40  e8 6a cc 97 44 37 22 36 f4 ac 43 c4 67 f9 f4 43 73 f7 a0 14 29 3f 67 bf b6 68 34 4b 3b 22 60 ff  .j..D7"6..C.g..Cs...)?g..h4K;"`.
10012c60  e6 a7 34 6f 6c ef 9b 05 bd 0a ff 34 d0 41 fa eb 22 64 11 3a cc 86 2f eb 35 88 ce f3 f8 8e 20 93  ..4ol......4.A.."d.:../.5..... .
10012c80  6e 63 62 37 e0 7a e9 3f a3 24 a7 5e cb 1f 3b 90 ad a3 02 26 97 6a 6e 6f 9c a8 d4 f0 a7 a0 38 40  ncb7.z.?.$.^..;....&.jno......8@
10012ca0  f1 64 31 cd 37 e2 d5 7c 3f e5 5c c4 d7 6d 0d 31 b4 8f b1 6c 00 7d c9 0a 55 7e 14 2c 61 18 2e 42  .d1.7..|?.\..m.1...l.}..U~.,a..B
10012cc0  fc 1c dd a8 a7 07 67 51 cb 6d 66 56 34 ae 11 89 dd 4c 16 cf 73 41 df 7a 79 f4 a1 d3 8e 73 91 b0  ......gQ.mfV4....L..sA.zy....s..
10012ce0  96 85 c2 16 2a d9 27 cf ad 5f 08 c0 d7 8f a2 50 eb cf a0 5e 6f 67 49 7f fc e4 4c 50 87 9b 25 ab  ....*.'.._.....P...^ogI...LP..%.
10012d00  03 ac 8e 11 29 27 b0 11 3f cf d6 f0 49 7f 49 0e a4 f4 bd 7d 1a 46 0c 9a cf 31 5a f6 09 ff b0 aa  ....)'..?...I.I....}.F...1Z.....
10012d20  34 05 57 28 a3 6d 32 31 1c 9d b4 de 5d 5a af 21 3f 69 2d 04 91 95 50 c0 d1 37 8d 29 76 2e dd 41  4.W(.m21....]Z.!?i-...P..7.)v..A
10012d40  18 5f e6 6e b0 90 23 df 7d 4a a3 9a cd 32 e4 28 58 25 e1 d7 12 ba f6 5f 23 83 b9 e2 4f e6 8d 09  ._.n..#.}J...2.(X%....._#...O...
10012d60  d0 f8 0c 7d 24 a0 b7 a6 ec 41 cb 82 9c d6 60 a9 7d 4c 3c d5 b3 5f 71 52 b5 e6 b0 7c 00 62 cf e2  ...}$....A....`.}L<.._qR...|.b..
10012d80  a0 c1 3a 8c 92 85 74 e9 d2 38 e6 f1 27 da 8d ae d0 ed 8a 05 14 e0 57 f1 cb 0a 85 d6 f6 45 e4 75  ..:...t..8..'.........W......E.u
10012da0  51 2b 69 75 5b a7 f6 dc 35 91 08 25 df 0e 26 27 86 78 47 a7 1f a9 ce 8d c6 27 39 56 c3 a1 ad 65  Q+iu[...5..%..&'.xG......'9V...e
10012dc0  41 6c 6c 61 05 58 c3 11 fb 86 9d e3 a0 1d 64 5b 7b 5f ae 8c 1a 89 55 8b 02 c1 89 11 07 94 64 f8  Alla.X........d[{_....U.......d.
10012de0  ad ef cd 84 fb c2 b2 01 89 f7 c1 bb db ff 50 78 09 f5 2f 74 a3 99 f0 14 bd 96 9e 9c 73 f0 6e 35  ..............Px../t........s.n5
10012e00  57 bd 63 35 23 1a 2e 0a c4 27 03 2d e7 e2 2b ba e5 85 f6 d3 b9 13 38 3a d5 f9 c7 32 c1 ad f0 c4  W.c5#....'.-..+.......8:...2....
10012e20  b3 e0 a5 34 88 5b 95 1e 3d 03 ca 66 a8 32 07 0c 07 b8 b4 c1 43 a6 4e 01 e5 bf 34 9a fc ad ed b2  ...4.[..=..f.2......C.N...4.....
10012e40  c5 cd 0b 1c 80 3c cb 9b 5b 51 75 a6 22 65 73 de 85 fc 42 45 fd 1b 2c dd 3d 36 91 a5 8b fb 09 de  .....<..[Qu."es...BE..,.=6......
10012e60  e1 f8 fe 83 4e aa c8 74 f2 b9 bc 01 2b e0 d7 68 28 6a 7f ce 70 3e bd 16 17 89 33 d2 bd 29 4a ce  ....N..t....+..h(j..p>....3..)J.
10012e80  13 7d 51 ab 58 83 04 bc 61 d9 ea 1c a7 1a 19 22 45 da 83 e5 80 78 26 bb bf 75 19 ca 84 34 60 1f  .}Q.X...a......"E....x&..u...4`.
10012ea0  34 2d ea 23 7d 6b d6 b6 55 12 cd 09 5d b2 15 e8 9c 37 78 6c 60 5d c6 b6 ed 9a 88 cc 11 df e3 3e  4-.#}k..U...]....7xl`].........>
10012ec0  42 b5 42 66 9b 6b 99 6a 32 22 ac 20 52 32 0a f8 f3 69 9a 5d 9a ea 2c d1 91 b0 97 9c cf c1 dd 13  B.Bf.k.j2". R2...i.]..,.........
10012ee0  6d a1 84 86 17 2d 32 bf 08 2f ff 9f 16 8e 47 9e 55 06 eb 1a 9e d6 46 a0 b0 e4 12 fc 30 f2 c5 8d  m....-2../....G.U.....F.....0...
10012f00  bb ac fe 6d d7 7b 9e 33 71 d0 b8 c8 9c 14 fd a6 f9 08 85 25 b2 1b 30 ad 1e d2 7d 93 60 6c 2a 45  ...m.{.3q..........%..0...}.`l*E
10012f20  36 2f c8 1d 2a ea 9f 2e b2 43 24 f3 65 cd 89 6b 26 51 bf 0d e4 0b 35 e3 ad a6 a0 5e 13 52 ad 30  6/..*....C$.e..k&Q....5....^.R.0
10012f40  ac af 6e 0f d3 88 07 7f 11 54 53 1a 61 e1 d8 f5 20 ca 4c 41 d5 cb 05 63 af db 4a 47 38 18 58 62  ..n......TS.a... .LA...c..JG8.Xb
10012f60  8f 5e dd db 4a 9e f4 90 ec 8b 62 bb 09 9d ae 50 fb 92 39 ec a2 79 35 ba 41 c6 b0 ae d7 b5 2a 58  .^..J.....b....P..9..y5.A.....*X
10012f80  1b 81 20 5f d5 f1 f2 0b 8b c1 7f 9e 63 0f c7 dd 05 cd 37 3d 6d 4c af 84 c6 1c 41 30 e2 4a a7 81  .. _........c.....7=mL....A0.J..
10012fa0  92 bc 49 62 0f 08 80 83 21 20 c6 a8 36 1c 3c 87 6e f1 c3 32 9b 90 bb 8e a2 23 26 b9 a2 42 11 ce  ..Ib....! ..6.<.n..2.....#&..B..
10012fc0  fc 8c b7 9b c9 ed 7c 0a eb bb 12 30 e5 44 c1 86 cd f0 19 99 58 e7 85 68 91 bf 60 fc c2 8b 31 ad  ......|....0.D......X..h..`...1.
10012fe0  26 e6 7e a4 92 b2 2e 99 1d f7 dd 67 da 43 53 cf a5 a2 09 83 03 cd 64 7e 87 c5 db 51 ba 64 87 e8  &.~........g.CS.......d~...Q.d..
10013000  b9 70 9c db b3 4e 42 62 30 16 00 c7 63 ee 6e 10 75 ee 65 0c 01 3b 2d f5 21 63 cf e1 e0 13 63 72  .p...NBb0...c.n.u.e..;-.!c....cr
10013020  43 c3 89 57 88 88 af f9 ea 4b 48 d3 8d 6b 63 1b 1c 0f 84 54 cd 59 32 81 65 21 8b 55 e1 5e 87 25  C..W.....KH..kc....T.Y2.e!.U.^.%
10013040  c5 59 2f d5 10 20 e5 c5 76 3d 2b 3b c8 c7 e0 90 11 6c 3c 80 d4 17 f6 09 71 57 d7 f4 f1 7f b0 b9  .Y/.. ..v=+;.....l<.....qW......
10013060  fc 26 3c a4 aa 0d b9 e7 f9 02 f4 11 a8 fb 26 df 1a 52 3d 5f e8 5f e6 20 2e 90 c3 ca 98 96 75 dc  .&<...........&..R=_._. ......u.
10013080  ab f0 3e 8c 71 ec 36 52 1c 24 3b e9 3a 47 37 e7 c6 32 7d 11 a1 8e f9 cf 69 9e 19 16 fb 4a d9 83  ..>.q.6R.$;.:G7..2}.....i....J..
100130a0  bd d0 a1 1f b3 49 3c 37 cf 53 70 bd b9 0e 91 0b a7 25 88 00 ad 1d a6 c3 e7 b9 d2 d4 c5 41 15 b9  .....I<7.Sp......%...........A..
100130c0  a2 21 9f 13 0c 25 99 06 98 46 bd 35 52 c9 f1 2c f4 3e 82 ad 43 54 2c 26 c3 b5 80 19 53 86 d1 c7  .!...%...F.5R..,.>..CT,&....S...
100130e0  7c f7 9c fe 65 77 72 68 69 23 0c e0 dc f5 d7 0e fa 7a 6a d7 96 64 7a 89 17 6c 45 08 63 4c a3 db  |...ewrhi#.......zj..dz..lE.cL..
10013100  74 e6 99 71 27 ac dd 40 24 3a 49 94 0f f4 80 cf 84 28 f2 f1 20 bb 80 27 d6 e5 38 d7 87 f5 21 8c  t..q'..@$:I......(.. ..'..8...!.
10013120  50 5c d9 3f d1 ca 2d 4b 76 4d 27 5a 4e af 46 56 b5 37 2c c9 fa 6d 85 a4 04 99 4b c5 14 46 73 7d  P\.?..-KvM'ZN.FV.7,..m....K..Fs}
10013140  53 20 fb 97 51 0e 9b 82 01 a5 83 42 75 8d ed c5 01 45 4f a1 23 b6 89 25 ec 74 a0 67 58 5d 75 00  S ..Q......Bu....EO.#..%.t.gX]u.
10013160  8b c0 fb 5e c8 3d 6d c7 76 f2 cf dc f4 94 1b d9 a9 2a 5e 3e 46 32 a1 fc a4 48 4a 1e 47 3b 39 ff  ...^.=m.v........*^>F2...HJ.G;9.
10013180  7c f4 f2 9a 77 2d 80 b8 d4 93 da a7 18 90 5a 52 c8 e6 04 04 b6 37 dd 97 66 a2 59 0d 96 78 8b ef  |...w-........ZR.....7..f.Y..x..
100131a0  90 28 9e 85 d2 7e dd 73 ed 81 ef d4 e4 0c 45 45 db 4a 08 34 43 ec 82 82 f1 bb 42 1b d9 df 5a b5  .(...~.s......EE.J.4C.....B...Z.
100131c0  e7 8a 75 b2 9b 9d af a6 e4 f0 51 0b e6 dc 2a 7b 29 1d b6 0a 3b 39 9e 97 00 49 e9 db b3 89 e1 3f  ..u.......Q...*{)...;9...I.....?
100131e0  6b 13 f3 b3 5b d8 dc 22 43 db f3 7f ce 95 61 a2 01 11 a7 73 44 63 d6 56 91 c8 f2 2d e3 e9 a9 2c  k...[.."C.....a....sDc.V...-...,
10013200  c4 de 88 a8 f9 02 58 ba 54 8e 07 73 3b d0 40 37 47 16 17 bf 82 9e b0 16 e3 46 7b a4 b2 83 4c 06  ......X.T..s;.@7G........F{...L.
10013220  9c fd 12 36 60 87 47 51 21 39 88 bf 73 ac 64 53 dc 52 98 05 8e 0f a2 f9 e0 c1 5a ee fc 37 4a 91  ...6`.GQ!9..s.dS.R........Z..7J.
10013240  16 72 f3 4f 4d f7 89 6f 21 a1 ba 29 2a e3 88 f9 4a 9e 76 3b 01 2e 72 17 fe 6c 79 b0 59 63 05 91  .r.OM..o!..)*...J.v;..r..ly.Yc..
10013260  c0 3b 96 1a ae ca dd b4 a5 f2 00 d1 db e3 89 ba 88 ab fe 7d 9e 88 90 03 7a 89 31 98 ec bf c7 49  .;.................}....z.1....I
10013280  e1 10 87 66 d7 e0 ca 9c e0 8d d9 2d e8 eb c3 23 77 80 db d0 df 4b cf 54 84 83 14 ee d4 55 74 0d  ...f.......-...#w....K.T.....Ut.
100132a0  48 83 cc 19 29 2c 1c 37 c8 4b a5 32 eb e0 17 6d 37 90 3c 10 b9 82 7e a9 5f b2 75 af 1d f3 00 28  H...),.7.K.2...m7.<...~._.u....(
100132c0  7d 97 9d da 38 80 35 e2 e6 5f 40 f2 d2 8a 27 1b 5e 54 78 84 55 7d af b9 4d 99 e6 75 97 4d 60 d5  }...8.5.._@...'.^Tx.U}..M..u.M`.
100132e0  d2 05 ae da 78 6a e0 6e c2 51 0f 4d 9e 9e 10 ec aa b5 06 59 65 43 26 bf cb 70 63 9e 5d ab cf 1d  ....xj.n.Q.M.......YeC&..pc.]...
10013300  66 c8 16 37 b6 db 61 7d 61 29 14 da 5a 4a f8 4a f6 15 6f 04 16 fa 37 0f ea 9d 4b a2 3d b7 b3 b4  f..7..a}a)..ZJ.J..o...7...K.=...
10013320  3e 02 5f 51 45 8d bd 1d 1c c9 34 69 cb ae da ba 6e 98 97 81 0e 19 76 ca 94 3c 4c 4c 32 0c dc 23  >._QE.....4i....n.....v..<LL2..#
10013340  7d 12 ed 78 f8 0c 67 b2 38 d7 ef 91 4d f2 b6 5a cb a4 6b 29 b1 68 13 96 d4 b6 8c 20 03 f0 b0 f1  }..x..g.8...M..Z..k).h..... ....
10013360  85 d3 fc eb 65 94 ea bd 95 af 6a 58 2c a3 4e 4c fa 70 37 36 d6 6b 74 82 b6 43 a2 6a 71 0f fa 5b  ....e.....jX,.NL.p76.kt..C.jq..[
10013380  08 3c 6d 03 36 37 8b ec fd c5 98 97 3b 14 ec 5e 07 19 ea 57 e3 f6 a0 db 58 b4 32 17 38 dd 62 1f  .<m.67......;..^...W....X.2.8.b.
100133a0  81 11 a7 eb 73 6e b4 36 b6 27 19 50 de d4 ac 0d 57 6b ad 3b 86 0e 73 40 ff b7 d8 e6 8c 40 66 a7  ....sn.6.'.P....Wk.;..s@.....@f.
100133c0  77 8f 6b 0a 42 ba 84 36 af 99 9f 8a 02 b8 1c d8 5e c2 42 1a 41 34 ab ab 84 2f 0d 59 8d b4 3c 78  w.k.B..6........^.B.A4.../.Y..<x
100133e0  21 40 91 8b e9 01 5c e6 78 45 97 1a ec 82 74 e7 d1 ad 62 49 e4 61 c9 4e b9 32 6e 1c bb f6 fd 3f  !@....\.xE....t...bI.a.N.2n....?
10013400  51 67 e6 d3 09 4b fe 48 ec f7 10 b4 c4 44 40 04 92 83 41 79 3c f1 d6 fe d2 d9 69 b9 57 77 2b e9  Qg...K.H.....D@...Ay<.....i.Ww+.
10013420  e6 80 91 8f f4 b2 d3 67 a8 16 89 f9 dd 7b f2 25 6f a6 3a e0 e1 1a 7a 5d f1 e0 73 5c 53 90 10 eb  .......g.....{.%o.:...z]..s\S...
10013440  ed 4e 46 03 8a 94 06 ee 3a c1 1c 4e 20 46 7a d2 09 42 e8 e4 53 41 75 2e 72 63 40 f4 08 d6 8e 67  .NF.....:..N Fz..B..SAu.rc@....g
10013460  de 01 e8 76 d0 0d 9e 90 e6 6c f8 5b 7e 61 0c 9b 78 c8 86 4c 08 2c 60 ef 49 f0 b5 e0 5d bd c1 af  ...v.....l.[~a..x..L.,`.I...]...
10013480  eb 88 fd 4d 69 7d e0 b2 1a 48 05 f0 78 5c e0 26 71 42 65 49 5a d9 a8 a9 3b f4 47 de 3a 22 32 20  ...Mi}...H..x\.&qBeIZ...;.G.:"2 
100134a0  5a ef ac 42 e0 75 cd b4 99 c4 3b 41 35 90 d9 e0 aa 1e 26 78 3a 43 15 a4 bd 47 88 48 09 30 54 1b  Z..B.u....;A5.....&x:C...G.H.0T.
100134c0  29 cb c1 ce db 99 2d b8 8f 44 55 41 0a 43 7b bb fd 70 19 4d 91 5d ef 44 94 0e 02 b3 ec a2 60 b5  ).....-..DUA.C{..p.M.].D......`.
100134e0  b6 20 46 bf 8d 9c fe 15 bf 1e a9 e5 36 1d 18 70 40 98 ca 0e 57 c9 d5 9d 72 b9 5f 8e 21 af 36 c9  . F.........6..p@...W...r._.!.6.
10013500  8a 4f c2 e3 71 23 77 97 54 3c 0b 1a ab 1a 28 12 16 e2 da db 09 21 32 ad 99 2c 84 c5 44 72 d9 ab  .O..q#w.T<....(......!2..,..Dr..
10013520  ff 64 c9 0e 52 d8 9f 57 64 d0 62 d9 57 3a 95 96 77 57 1e 32 62 25 f1 a1 59 cb 8d 5c e0 5e 04 a6  .d..R..Wd.b.W:..wW.2b%..Y..\.^..
10013540  61 c2 e3 56 05 19 55 b2 55 bb ce 9a c7 ee 60 ae 4b 78 1d c0 32 53 e9 c0 50 7d fa e1 2a af 66 25  a..V..U.U.....`.Kx..2S..P}..*.f%
10013560  c5 1c 14 c7 44 9c 8e aa 70 57 2c 40 a5 e3 42 be 93 a8 d8 dd d8 4d 2f 33 91 de ff ef 1f b3 6d 18  ....D...pW,@..B......M/3......m.
10013580  32 68 1c ff 8c b2 1c dd c3 7c 58 a9 a7 f6 98 42 36 07 a2 c8 58 20 2c ea 04 a9 8a 55 5d a1 e9 dd  2h.......|X....B6...X ,....U]...
100135a0  1c 0b b3 bb f2 e0 57 23 fa 67 e1 5f 4f 52 48 c8 df 37 e2 1c 30 24 30 03 6f 9c 84 98 f3 78 02 94  ......W#.g._ORH..7..0$0.o....x..
100135c0  de c8 a9 76 1b d9 f7 43 25 9f 3d 33 35 a9 5c 0d d4 90 80 6d 6c fc 57 05 79 cd 8d f7 77 b4 c4 9a  ...v...C%.=35.\....ml.W.y...w...
100135e0  6a 4a 1f 59 59 98 34 a3 02 e8 da 90 25 0d 17 9f b1 ad f3 ee ee d3 3d a0 1f c8 4f 87 43 ed b1 07  jJ.YY.4.....%.........=...O.C...
10013600  d0 2a e1 e6 52 1f 24 c9 cd bd 9b af fb 68 4c 22 db 73 5c 4b 39 20 f8 ab 68 50 6b d4 77 6f af 18  .*..R.$......hL".s\K9 ..hPk.wo..
10013620  d2 05 04 da be f5 8f a0 b3 3d de 51 c6 af b5 71 17 ab 33 06 a8 53 50 e2 19 c8 04 dc 52 72 a4 4b  .........=.Q...q..3..SP.....Rr.K
10013640  04 d2 f4 9c 58 94 cf f0 d8 0d 17 44 1a 62 b9 0e 32 fe 6d b9 bf f8 72 c6 c7 6f 07 ab 33 68 5b 0e  ....X......D.b..2.m...r..o..3h[.
10013660  a2 3d 62 fe 39 d1 22 ba bc 19 30 73 a2 8e 4e da c7 9d c9 3b ec fc f3 a6 01 c4 a5 a9 cb a0 93 98  .=b.9."...0s..N....;............
10013680  80 c5 5c 46 6e 93 3c 5c c6 27 ca 2a e5 b7 b8 61 51 5d 9c f4 0d 1c bc b3 7d cd e4 17 8a 94 65 0b  ..\Fn.<\.'.*...aQ]......}.....e.
100136a0  30 ac 49 65 34 6a 0c e7 46 f6 29 2f a7 04 54 3c 6c 24 0e 7d 8f 09 64 77 ad f1 08 65 73 28 94 26  0.Ie4j..F.)/..T<l$.}..dw...es(.&
100136c0  4c 43 bd db 29 b9 13 1a 39 84 1c 74 7e ce 41 a0 ff f5 e7 e8 99 28 89 a3 3e 2b 02 ff 72 07 4b c4  LC..)...9..t~.A......(..>+..r.K.
100136e0  91 c8 5a 71 39 b2 9a 54 fd e4 6a ed f8 90 b8 95 78 2e fc cb 0e 1a 12 7d e7 0e a6 26 d8 07 88 ab  ..Zq9..T..j.....x......}...&....
10013700  fa 52 32 97 75 e8 e1 ff 6b ee 9e e1 a5 ab b8 53 08 5a c8 e1 d1 fa 1f 91 d4 a1 c2 54 9a 5f 93 b2  .R2.u...k......S.Z.........T._..
10013720  90 50 5e c4 a8 61 7a c6 b8 af a3 c1 13 e2 5f 6a c3 2a cc 76 10 7b dd c8 9d 2f a6 27 89 37 c6 24  .P^..az......._j.*.v.{.../.'.7.$
10013740  e2 b2 e4 4d 15 74 5f 5a 1a 61 8a cd 86 21 7d 1f 1b ce 4b b2 7e 50 0e c7 e5 2a 25 5e 44 5d e2 3e  ...M.t_Z.a...!}...K.~P...*%^D].>
10013760  ae ea 39 44 a4 ac 3b 91 59 68 4a 49 33 fa 50 34 bb 23 11 88 98 8b 82 23 70 71 8d 62 12 da ad 41  ..9D..;.YhJI3.P4.#.....#pq.b...A
10013780  e5 0a 82 51 62 b0 6d 5c 79 48 03 0d 8a 78 43 2e 90 a1 d3 45 7b 16 b3 d1 bf 4d c0 fe 80 47 81 c6  ...Qb.m\yH...xC....E{....M...G..
100137a0  ea 35 27 00 d2 81 89 39 dd 77 19 aa 9c 55 7b 5c fd 6a 5a 02 1e 16 45 3b 9f 8d a3 81 c2 4d 32 53  .5'....9.w...U{\.jZ...E;.....M2S
100137c0  e5 1f 56 fc 17 1c 1f ef f9 2a dd 16 47 51 02 5a 06 cb 6a d6 40 e5 b2 40 e4 c9 1b 3b 81 f3 26 b9  ..V......*..GQ.Z..j.@..@...;..&.
100137e0  c1 fc 5b b3 71 42 3e 8f e1 7f eb bb 23 c5 21 1e be 3a de 0b ac 20 01 54 4e dc fa a4 35 3d 8f e2  ..[.qB>.....#.!..:... .TN...5=..
10013800  f5 a1 42 e7 71 fb de 50 a1 88 76 0f e9 26 11 a3 05 9b 69 8f 0b 05 d1 14 0b 53 dc a4 df 84 94 d7  ..B.q..P..v..&....i......S......
10013820  93 c6 99 92 3d dc 62 45 17 84 c4 36 ab 47 7a 5e 5e 1f 02 6a aa bb 08 ee a4 27 f4 23 79 e4 28 b9  ....=.bE...6.Gz^^..j.....'.#y.(.
10013840  e0 81 02 f8 57 bc fe 8a a3 a8 62 de 86 94 18 c9 89 fb 81 25 91 7e 07 17 d5 f9 46 8f 19 bd f8 d7  ....W.....b........%.~....F.....
10013860  4f c4 de 9d 6e d3 5c 80 cc 7b b8 f2 8d 28 26 70 14 19 ba 70 c0 e0 9a 4d c5 48 7d 82 b8 78 2d 2d  O...n.\..{...(&p...p...M.H}..x--
10013880  70 a2 61 c1 e7 d2 73 37 5f 51 e6 f6 99 e4 13 08 06 d8 f8 cf ad 65 08 e2 c1 aa 94 cd 61 9b bb bc  p.a...s7_Q...........e......a...
100138a0  8c 17 56 9b 6a 6c c6 e0 e0 1d c1 cf 42 1c bf dd 0e 38 d3 4c 10 f5 52 dc c5 97 33 af d4 89 8f 8c  ..V.jl......B....8.L..R...3.....
100138c0  77 12 cc 10 4d d4 88 1d 98 19 42 06 a6 4d ef 94 00 6a e4 19 46 eb 8e b1 c3 45 46 ae df 86 e0 bf  w...M.....B..M...j..F....EF.....
100138e0  e1 fb 2c 8d 31 d5 36 e7 bf 4b 26 6b 4a 02 46 99 8e b7 c7 2b 76 be d0 09 02 12 ee 91 a6 db 76 ae  ..,.1.6..K&kJ.F....+v.........v.
10013900  4a 9b b1 b3 36 44 23 1c a7 15 47 9f 6c 4c 8b 0e 44 40 73 03 14 5b 9b be f1 f5 97 b9 cb 28 ea d1  J...6D#...G.lL..D@s..[.......(..
10013920  8b 14 a0 b9 df 13 d9 9c 50 32 d2 34 da 3c 7c 05 6d 24 c1 35 08 32 6a 3f 80 b4 eb ea ea 49 93 ef  ........P2.4.<|.m$.5.2j?.....I..
10013940  31 13 c7 18 5f 25 b1 39 30 87 ca 2d 5d 70 c1 23 a2 ba cb e4 a1 60 69 e4 db 18 a3 42 f8 2a c9 77  1..._%.90..-]p.#.....`i....B.*.w
10013960  26 dd e7 06 44 4c 4a 18 35 9f 1f 8b f8 a7 75 d9 a7 5b 4a 96 80 05 b5 b7 c2 b1 78 42 79 fd 4b 70  &...DLJ.5.....u..[J.......xBy.Kp
10013980  f2 e3 e9 41 2c e1 3e b5 e2 ff 0f ae 98 61 b9 94 85 1d 01 44 3d aa c4 1b 13 12 8c 79 51 00 7d 88  ...A,.>......a.....D=......yQ.}.
100139a0  d1 13 2f 7b b7 74 20 7d 7e e4 59 9f e8 13 ef ab 38 e2 44 96 9d 93 58 f6 89 b6 18 b6 c3 9b 82 78  ../{.t }~.Y.....8.D...X........x
100139c0  22 ad e9 da 7a f0 e6 62 ea 30 4c 17 10 35 4a ff 8c 69 54 95 79 df ce 81 67 09 24 a4 0f 8b a3 b2  "...z..b.0L..5J..iT.y...g.$.....
100139e0  a1 d2 32 04 82 b1 fa 58 82 e4 cf f6 e8 b4 9c 9f fd 69 c9 0c 2d 52 21 8e 62 1f 05 32 c2 34 db 0a  ..2....X.........i..-R!.b..2.4..
10013a00  3f db 28 92 ef 0f 71 bd dc 95 69 a1 dc f7 5f f0 25 f5 89 78 46 1f fb 45 f7 24 02 51 d0 47 d8 b7  ?.(...q...i..._.%..xF..E.$.Q.G..
10013a20  cd 07 43 ff bd 9a 23 b0 e8 76 fc ee 81 78 ae cf 56 e9 a0 2e 31 64 2f 16 c1 05 d3 93 fa 5d c6 9b  ..C...#..v...x..V...1d/......]..
10013a40  b7 2a 69 ed a3 6e ef 01 86 98 b1 80 8e 8f 45 95 06 63 e0 2b 72 52 1f 7e e1 e6 d5 6f 70 d2 1f a9  .*i..n........E..c.+rR.~...op...
10013a60  fb 00 90 87 ba 3d 18 8b 25 00 7b fa 7c dd 1c fc d4 b5 f9 85 d9 b9 b0 7f dc 21 cd bf 96 14 3e bb  .....=..%.{.|............!....>.
10013a80  fb ac b6 aa 01 6d 67 d0 0d 50 cc 60 66 28 95 99 02 d2 a2 27 8f 90 8e 9c e7 bb c7 14 57 98 df 7e  .....mg..P.`f(.....'........W..~
10013aa0  9e 53 e0 b9 98 99 3c f6 51 e1 18 77 84 3c 91 1b 1d aa e9 f7 1f d6 14 7c 01 31 19 c5 dd 98 a1 98  .S....<.Q..w.<.........|.1......
10013ac0  c3 d5 4d 7a 7e 2c 7d 7e ba 03 04 1d 05 95 9e 54 0d e9 ad 76 f7 50 2b 6e 6e 9c 5c 0b 26 41 71 ef  ..Mz~,}~.......T...v.P+nn.\.&Aq.
10013ae0  da 25 cf e1 ce a8 d4 1b 47 c3 18 24 9d ed 68 44 3d ab 5c d6 60 6e e2 b2 3d 68 bb eb d2 ac d8 9e  .%......G..$..hD=.\.`n..=h......
10013b00  f1 e9 99 b5 1b 97 bc d1 b4 1d 91 b7 f2 5a 03 60 8d 0f ea c8 e0 00 a6 a5 fd 2a 67 a9 1e b6 56 a6  .............Z.`.........*g...V.
10013b20  d3 7b 59 c9 52 11 24 4a ee 8e 1c ea 4b f1 cd aa f6 58 ce 72 33 11 2d 8b 51 c8 6a ef e0 37 7b cb  .{Y.R.$J....K....X.r3.-.Q.j..7{.
10013b40  3d cd 5e fc 44 24 c2 22 dd f0 fa 2b 52 5b a1 87 33 59 ed 97 de 20 0b 24 6b c7 0c 15 18 36 7f 19  =.^.D$."...+R[..3Y... .$k....6..
10013b60  98 04 1f 11 28 57 52 91 e1 1f c6 39 77 b6 e4 95 d4 71 75 b0 2c 6c 44 e0 35 37 4d 79 e2 39 09 a7  ....(WR....9w....qu.,lD.57My.9..
10013b80  15 e2 a8 d2 f5 4d fa 22 ac f8 80 cb 85 51 4e b0 d6 3c b7 5f fa 89 1b e5 20 37 f3 30 74 4b a8 1c  .....M.".....QN..<._.... 7.0tK..
10013ba0  80 9a d1 70 63 93 26 20 aa 68 80 b0 19 4b 1d dc 35 8a 99 dc 56 d1 00 98 d5 4d d3 13 3e 5e 27 f9  ...pc.& .h...K..5...V....M..>^'.
10013bc0  4a 29 49 1b 10 dd 5c b3 7d 1f d9 12 c0 bc f1 0a 2d c8 10 8d fe 88 6e cd 1b 42 d2 73 63 86 b1 e3  J)I...\.}.......-.....n..B.sc...
10013be0  3e b0 cf 25 a5 54 db 41 0d 01 d9 70 be e6 c3 92 b3 6f b6 bf cb 49 44 c9 37 0e 5c 35 cf 3e 43 7d  >..%.T.A...p.....o...ID.7.\5.>C}
10013c00  50 87 36 22 ff 60 df ff a7 0e f5 6c 9f 40 59 0d ef 7f e7 91 81 93 73 3d 8d 44 7b 10 00 1c dd 48  P.6".`.....l.@Y.......s=.D{....H
10013c20  52 a5 a3 d5 74 31 24 6a 60 b9 a7 f6 c4 69 10 62 79 1a 49 c2 cd 93 04 e6 ac 1a 34 23 b4 ae 0f 87  R...t1$j`....i.by.I.......4#....
10013c40  2e df 1c 1f 46 18 ef 35 b3 33 f7 54 ef 85 b5 85 93 b0 3c ca ab 90 04 fb 35 9f de 2f 84 82 b4 f6  ....F..5.3.T......<.....5../....
10013c60  58 62 26 45 3c c3 6e cb 99 a2 7a 90 ba 22 c1 69 38 68 f3 47 b4 df 62 04 36 30 1b 8a 3a 11 94 a7  Xb&E<.n...z..".i8h.G..b.60..:...
10013c80  55 65 30 65 b8 6e 75 3c 03 ec 20 d6 0c 29 3d e0 be 49 e8 9e 39 10 90 d3 a2 b9 2c a2 df 29 be 7f  Ue0e.nu<.. ..)=..I..9.....,..)..
10013ca0  06 c5 ad 0e 9b 9a 10 f5 49 de bf ce c4 a0 b9 ac 4d bc db d6 15 30 c2 0b c6 ae 37 55 77 2f ec 96  ........I.......M....0....7Uw/..
10013cc0  5e 02 dc 78 b8 46 44 66 a6 ea 9c ec 06 bf 78 f1 ba b6 bb 85 d2 d5 4c 4e 7f e1 a6 9e dc 82 64 b6  ^..x.FDf......x.......LN......d.
10013ce0  87 f7 42 71 ff c5 dc 0a 0b 27 65 de 1e ff 15 4a 3f 3d 35 e1 a1 31 6f d6 37 16 8f 83 39 a5 bb 17  ..Bq.....'e....J?=5..1o.7...9...
10013d00  e1 71 46 25 38 7e 2b e2 72 8e 81 0e f5 a7 e1 e0 bd 75 0a 87 8f 6a 0e f7 05 ac b6 da 8b c6 09 69  .qF%8~+.r........u...j.........i
10013d20  5b 74 7e 66 47 0f e4 0f a2 d7 4d 14 12 9e 30 b1 cc 8a 49 9a 23 55 d2 94 37 7e ca 44 c0 e3 58 e3  [t~fG.....M...0...I.#U..7~.D..X.
10013d40  8c 2e 43 c1 3a bb f9 9c d0 01 7f 69 a4 4b f0 20 4a aa 1f 25 5a 66 aa 2d f8 be 12 88 01 e1 25 70  ..C.:......i.K. J..%Zf.-......%p
10013d60  c9 43 2f e8 83 0e 9a 76 ef 92 3c 8f 19 10 77 41 04 2b 79 42 70 85 06 dd c3 1c da e3 5a b0 c2 c3  .C/....v..<...wA.+yBp.......Z...
10013d80  84 ca 74 08 e7 ef 3f 56 e3 67 6e 82 2a 68 c4 fc aa 43 77 70 4b 29 b2 91 19 17 06 93 5d b8 36 37  ..t...?V.gn.*h...CwpK)......].67
10013da0  2b 16 77 44 3a ef 0b 82 ef 2b 7e af eb bd 93 9d 13 45 49 2b 4d 15 0d 81 b9 fb 34 ae 87 73 72 28  +.wD:....+~......EI+M.....4..sr(
10013dc0  25 16 99 18 f4 e5 f6 4b c7 16 b1 cc ab d4 d4 a1 91 11 a5 9b d8 10 dc 7a 4f bf 14 5d e4 db e0 0f  %......K...............zO..]....
10013de0  e6 fc 9f 75 e6 42 f6 e9 ac 0d b8 4c 90 07 5e 84 23 2f 93 bf 0d 8c 7b 31 f1 b3 82 74 2b fe 34 6e  ...u.B.....L..^.#/....{1...t+.4n
10013e00  ab 29 db bd d5 b4 58 da 72 fd 49 cf 62 2e f9 39 88 0e e7 0a 7e e3 19 20 52 72 f9 2b 54 a7 1b 16  .)....X.r.I.b..9....~.. Rr.+T...
10013e20  2b 74 a1 ff e7 ce d4 94 ef d8 6d ea b8 d1 56 67 1e 45 7f 2e 97 4c 29 03 b2 8d c6 67 d8 fe cc 64  +t........m...Vg.E...L)....g...d
10013e40  82 60 c3 53 05 14 ef 7b 94 aa b2 38 8c 20 ff a5 8d 11 77 89 3f 45 a2 94 a6 05 ec 45 fb 9f 08 ad  .`.S...{...8. ....w.?E.....E....
10013e60  0d c1 58 6b 2e 12 d4 63 98 8c eb 28 a4 f6 12 f4 71 24 e5 dc e6 97 77 9b ac 9c 63 d2 b7 90 aa 86  ..Xk...c...(....q$....w...c.....
10013e80  c7 bc 9e ab 0b 47 bf 26 9f 70 2b 7e 35 8d c8 cc db b8 c2 6f 57 bc 19 0e ac b6 80 b5 b6 35 af 8b  .....G.&.p+~5......oW........5..
10013ea0  c5 76 ab 9a d2 de bb 03 18 57 90 0d b1 59 52 b5 d8 5d 29 2b 35 ec da 21 1d 15 81 0f 81 30 43 0f  .v.......W...YR..])+5..!.....0C.
10013ec0  c7 e7 c3 0e f2 c6 0c 79 b5 27 a4 ca 0e df 3e 98 ef 33 7f 3d 27 a6 4b e8 06 96 64 98 70 96 4a 10  .......y.'....>..3.='.K...d.p.J.
10013ee0  6d c9 0e 77 6b 67 0c 90 f9 cc 45 f2 b1 70 a2 51 12 00 16 2d 0b 11 2f 44 d0 94 c4 ef 7b 8a 00 b9  m..wkg....E..p.Q...-../D....{...
10013f00  be 23 b4 e2 0c 21 55 74 2d 3d bb fe d1 bc 9c 52 eb 18 23 a0 d5 22 89 7f 08 bf e7 32 dd b7 98 92  .#...!Ut-=.....R..#..".....2....
10013f20  0e ad 34 84 7f 28 95 b3 cb f5 56 fd bd b0 48 56 72 27 28 26 dd 33 72 d0 69 90 cb a8 a1 69 13 8c  ..4..(....V...HVr'(&.3r.i....i..
10013f40  df df d7 4c 40 56 47 89 e2 8c c9 81 1d 97 75 d2 a9 64 73 90 07 95 58 4d 7e 15 20 50 48 a1 0e 28  ...L@VG.......u..ds...XM~. PH..(
10013f60  b0 d6 60 58 0c a9 41 4e 78 24 5f 88 d2 e4 8e 02 e2 6a 8b ad f6 f7 50 ff 6d ba 6c b4 f9 38 23 67  ..`X..ANx$_......j....P.m.l..8#g
10013f80  37 06 54 fa 7f 48 5e ea 18 78 5e 5d 02 02 11 e9 3e 38 60 02 b9 a2 2f db 99 90 0b 4d dc 47 50 3a  7.T..H^..x^]....>8`.../....M.GP:
10013fa0  24 4e 16 33 f0 13 1f f9 c5 fd 0b 69 21 1f 20 d2 bd 49 ef 9d c0 3b b7 5f d3 e5 a9 2c c6 4a 81 4f  $N.3.......i!. ..I...;._...,.J.O
10013fc0  6c 6a 1f 5f 61 c9 16 8f 8d 07 ea 16 ac 6d b0 91 f8 58 a6 20 d8 d7 49 6d 83 9b 68 70 27 4a ae 39  lj._a........m...X. ..Im..hp'J.9
10013fe0  c1 11 44 af e9 1f 05 ff 56 fe d8 94 77 0c 09 36 84 22 a2 27 9a 92 41 74 06 69 cc 28 a3 67 f6 dd  ..D.....V...w..6.".'..At.i.(.g..
10014000  6b bd 06 20 9c 5f ee ea e5 2c 8b 5e fc fd 7d 24 73 69 8e 29 c2 16 42 2b d9 8d 6d e1 ad 8e 44 8a  k.. ._...,.^..}$si.)..B+..m...D.
10014020  b6 2b 85 22 01 72 ce 52 80 9b da ef db e2 29 01 63 c4 e2 11 6d 71 a9 6d 5a b2 5c d9 0f 49 ba df  .+.".r.R......).c...mq.mZ.\..I..
10014040  6c e4 58 b5 fd 41 f3 1d 43 ec e5 80 de 6d 69 00 71 29 86 f8 0c ab 83 dd cd e2 97 31 eb 58 3d 38  l.X..A..C....mi.q).........1.X=8
10014060  06 0f 7c e6 7c 05 5b b3 20 ab 9e a3 8a 5a 70 8c 5e dd 2f c4 0e 91 2c e8 a6 b6 3c cb b4 bc db ff  ..|.|.[. ....Zp.^./...,...<.....
10014080  98 0a 43 fc 71 24 37 eb a1 2e b6 ad 8a de ce 1f 76 02 f8 e8 ce bf 80 d7 c0 62 f8 49 7e 61 b5 79  ..C.q$7.........v........b.I~a.y
100140a0  fd 1b 08 02 ad 2e d8 2e b7 04 aa 91 a7 97 f0 48 58 66 c7 ce e6 19 ee c4 b6 6d 8d c2 9c 60 5b a4  ...............HXf.......m...`[.
100140c0  f6 b3 b7 33 0d dd c5 41 3b be 7e 08 e5 e0 51 12 0f 30 86 19 e3 8b 4d e4 08 b7 16 a8 42 06 77 a2  ...3...A;.~...Q..0....M.....B.w.
100140e0  09 4d 92 d7 75 f9 3b 7b 2b 64 d7 77 10 d3 ee 17 2c 2c c6 f3 ee dd 12 67 4b 39 d0 8b cf 24 53 90  .M..u.;{+d.w....,,.....gK9...$S.
10014100  7e c8 bb 4b 66 f2 8b 27 ef 67 e9 3d c9 cb 91 e7 3d fd 1a 8e 7e d6 f2 dd 18 74 17 0b ea 45 02 31  ~..Kf..'.g.=....=...~....t...E.1
10014120  5e 5c b9 c8 91 74 92 81 86 23 93 74 08 b9 f1 74 0d 22 1e f3 54 68 ce 49 a4 5a 70 e4 2d 14 71 d4  ^\...t...#.t...t."..Th.I.Zp.-.q.
10014140  6b 62 fb 3f 8e 1b dc 53 8a 57 69 b5 f6 36 6f 15 3f e6 13 56 ee 7a fa b6 d5 9c 28 2d b1 3b c3 f9  kb.?...S.Wi..6o.?..V.z....(-.;..
10014160  0d f8 aa 2e e8 5e e2 2f 60 2f d4 4e 59 2e 4d 32 b6 22 82 21 83 2e 0d 34 b8 72 7c 78 c4 c1 ed 34  .....^./`/.NY.M2.".!...4.r|x...4
10014180  7b 38 c5 60 cc b3 b1 26 80 16 17 c7 08 16 f5 43 8a 19 14 b8 96 1d 1a 18 a5 9b d0 14 01 b1 fd 9f  {8.`...&.......C................
100141a0  4e 62 12 28 de 86 ad fc 06 3e 72 ed 2c b6 30 60 ba b9 47 8d 45 fa b8 91 22 1b f9 76 e1 3d e5 10  Nb.(.....>r.,.0`..G.E..."..v.=..
100141c0  19 ed 4c ae ed ff 56 7c 83 82 35 7b 75 27 53 36 d1 1e 29 39 fc 5d 42 8b 05 f6 1c 4a 36 ee a8 9e  ..L...V|..5{u'S6..)9.]B....J6...
100141e0  81 63 55 b7 24 c9 58 82 51 02 0c 20 3f e4 39 ce 5a dc 41 ab 14 b3 ac d1 66 56 fe 30 aa d8 1f c8  .cU.$.X.Q.. ?.9.Z.A.....fV.0....
10014200  79 b6 70 00 af 2a fa d8 b2 e9 bb a1 6c 6f fb 0f df ea 37 3c a5 17 33 86 f2 69 76 54 a2 1a d2 90  y.p..*......lo....7<..3..ivT....
10014220  35 aa fc 90 af df 92 6e 90 97 39 1a 28 a5 4a 2c 5b 04 c5 b5 98 62 cc 29 99 ac 26 70 47 9d 84 3f  5......n..9.(.J,[....b.)..&pG..?
10014240  96 53 ad bc df b3 42 2b 08 f7 84 c6 d9 97 ff 01 ed ae b2 c1 d1 54 34 5f 68 67 53 63 2c 86 eb a3  .S....B+.............T4_hgSc,...
10014260  c4 9f ca e0 a8 64 d6 f8 ca 05 b6 3b 97 56 6f 86 87 17 2a e4 31 80 01 bf 13 b2 b0 8c 23 dc 4c 45  .....d.....;.Vo...*.1.......#.LE
10014280  87 27 2c b4 9f 65 f9 83 b5 1e f8 21 8c b2 60 ad c3 8c 2e 63 0e 0a 72 c9 8c 42 2f a5 0d 0a d0 43  .',..e.....!..`....c..r..B/....C
100142a0  ca 9b d0 3c 49 26 b4 62 ea 52 19 44 84 a6 d5 30 19 78 f1 e9 5f d8 92 28 83 6e 45 1a 56 de 3f 1c  ...<I&.b.R.D...0.x.._..(.nE.V.?.
100142c0  b9 8d 90 5f a6 de 6b cb 74 57 5d d5 c1 b6 27 11 ef a9 0f 48 f6 d7 55 0d fb 41 4f 1f 2b 80 7f c2  ..._..k.tW]...'....H..U..AO.+...
100142e0  d9 77 c7 c9 26 9d a6 f9 d9 27 35 ec d2 af 98 96 41 f7 df 51 9e 75 b6 54 3b 78 f7 d3 1b 26 02 01  .w..&....'5.....A..Q.u.T;x...&..
10014300  a3 50 75 b1 04 ba f5 76 b4 c1 87 fa 39 35 9f 89 8f f8 84 e9 9b 60 e1 4f a1 d9 18 bf 67 77 6d 0a  .Pu....v....95.......`.O....gwm.
10014320  d0 e3 98 b7 7c 93 e7 2e 9c 78 c6 68 b0 97 99 c3 6d b0 52 1e ba 10 fd a9 74 52 d1 bb f1 08 77 f9  ....|....x.h....m.R.....tR....w.
10014340  5d ce 67 f9 fc 1d 1b 67 54 28 7b 43 5e 1d 7c 7d db 4e 29 f3 d0 9b 93 6b cb b9 0e f7 7e 87 cf cb  ].g....gT({C^.|}.N)....k....~...
10014360  63 58 b9 f0 5f 3a 68 42 1c 4a 72 dc d8 3b 89 73 a1 40 69 9f e1 fa 40 82 89 0f 78 53 1e ff 89 dd  cX.._:hB.Jr..;.s.@i...@...xS....
10014380  ba ee a4 d5 4b 68 91 0e 85 53 2d f0 6d 38 42 b2 fb 41 6e dd b9 e0 15 24 5b 41 a8 90 15 24 65 d9  ....Kh...S-.m8B..An....$[A...$e.
100143a0  20 40 57 58 5e 67 c0 d9 49 fe 43 22 ad 67 13 ee fa d6 5a 38 ff 7f 85 ba 93 5a 16 dc dd 1e 2d 93   @WX^g..I.C".g....Z8.....Z....-.
100143c0  a2 88 ae 5b 68 1b 53 e2 89 4a 49 2a f2 b3 92 fb 57 58 e8 e0 df 14 35 b6 43 ab 3e d3 3d 67 76 7e  ...[h.S..JI*....WX....5.C.>.=gv~
100143e0  fb 35 9c a9 cc d1 14 3d 75 c9 43 6b 03 56 97 b1 cf 9d 6a d9 e7 8a f2 22 b1 cc c6 5c f6 9e 1b 66  .5.....=u.Ck.V....j...."...\...f
10014400  4f cf 5f 65 14 0f ad ac 40 f0 13 92 6a 5c 21 50 76 0d e3 ea a6 06 ce c0 64 72 9c 79 2b 6a f6 08  O._e....@...j\!Pv.......dr.y+j..
10014420  d2 80 c2 95 74 e0 86 07 b4 c6 ee 49 67 8d 63 97 88 2c 18 48 1a e5 1a 6d ea 7e 68 d9 2e 17 f2 0c  ....t......Ig.c..,.H...m.~h.....
10014440  a3 a9 90 23 67 c5 d7 23 27 16 3c 51 6e 93 5b 06 a6 10 a8 45 dc 2b 70 22 16 44 ed b2 a6 ec a4 a2  ...#g..#'.<Qn.[....E.+p".D......
10014460  13 8e 12 16 46 64 3a 28 6f 1a 41 0c 34 fa f0 ab 28 78 43 0e 2a f4 0f 25 69 73 e3 2d 30 16 be 0b  ....Fd:(o.A.4...(xC.*..%is.-0...
10014480  26 c6 c9 00 02 d8 f7 7c c9 ae c2 7e 7c 2e f6 16 43 bd 0c 80 ce 28 ef 8d 14 0a 71 df 11 39 84 f8  &......|...~|...C....(....q..9..
100144a0  76 34 f3 26 9c 58 87 19 8a 69 fc c4 72 eb 5c eb fe dc cd e9 84 84 9e e1 c2 8c 08 23 a0 c4 26 42  v4.&.X...i..r.\............#..&B
100144c0  36 9d 8a 78 a1 9b 6b 0e 7e 4e 63 f3 49 e1 a3 34 4f 97 ee 6b 81 f1 4a 46 17 86 3c 59 73 5d 96 60  6..x..k.~Nc.I..4O..k..JF..<Ys].`
100144e0  88 fb f6 be f3 14 4d ea 13 d4 fb db 4a 42 50 7e 5d c0 94 f0 0b b2 82 9f 79 81 72 57 4d a6 0a 70  ......M.....JBP~].......y.rWM..p
10014500  dc f5 0d fd ba 51 12 6c b6 ea 97 70 43 9b 75 20 94 24 30 5b 9d eb 47 3a bb 61 b1 92 d8 5f 66 b8  .....Q.l...pC.u .$0[..G:.a..._f.
10014520  2b 14 e6 67 e6 ae aa 4d 5a 08 e0 ed c0 95 18 e8 89 d2 95 76 5b 37 59 ee 0b 55 72 62 88 75 a2 e4  +..g...MZ..........v[7Y..Urb.u..
10014540  72 25 f3 f2 45 05 86 24 72 dd 57 f8 e3 ac 3d 71 d9 4e 2c b5 8d ff e9 34 5c dc 1c 06 a5 c7 a0 f7  r%..E..$r.W...=q.N,....4\.......
10014560  74 b6 9a de a1 cb 97 ab 03 70 a6 93 01 02 99 74 e7 a3 e8 5e 9f 6c 3b e0 b4 50 8d 02 56 61 b6 83  t........p.....t...^.l;..P..Va..
10014580  fa e1 42 f1 a2 f0 57 ba 9d e2 b7 31 20 a8 ff cd 55 2a 88 06 6f 96 97 49 2b 89 c0 45 f8 f9 24 07  ..B...W....1 ...U*..o..I+..E..$.
100145a0  19 24 08 b9 c4 24 d9 7f e0 52 be d0 13 57 6a 22 d2 7d 17 4c 69 91 a7 8a d7 77 24 da 1c 55 1b fa  .$...$...R...Wj".}.Li....w$..U..
100145c0  87 c7 fc 26 3d 33 82 46 25 98 dc 64 b2 37 d5 21 39 6c d0 ea 7e ae b6 6a ab 6d c6 3a 28 80 cd d5  ...&=3.F%..d.7.!9l..~..j.m.:(...
100145e0  ac 0e 60 ec c6 19 81 be c2 8d 86 20 68 59 35 fa 64 4c 9b 28 f9 f2 33 88 ea 23 8e 6d 99 65 5d f1  ..`........ hY5.dL.(..3..#.m.e].
10014600  9e a4 d4 cb 8b 76 ce 98 a1 9a 2e 15 06 ae 25 da b9 89 99 d7 03 73 c1 96 1d 6d 35 e3 04 a4 d6 a3  .....v........%......s...m5.....
10014620  59 fa 26 0a 9a e5 e5 0c b2 3a ee b5 74 f2 ac ea b7 e1 28 7b 76 d1 6a a1 fa 3d 47 c4 b8 bb b3 8c  Y.&......:..t.....({v.j..=G.....
10014640  13 bb ce 47 f7 62 c9 47 07 2f 93 45 ce d4 3a 36 2e f7 8c 70 58 d8 34 60 6e e6 d9 4d c2 f4 d8 1d  ...G.b.G./.E..:6...pX.4`n..M....
10014660  ca cf 21 1a 68 c8 29 5e b9 75 d6 59 3d f2 03 97 77 9f 3b 3a 44 cc 72 8c 6b 55 ca 51 97 ae 34 b3  ..!.h.)^.u.Y=...w.;:D.r.kU.Q..4.
10014680  b4 6d d0 e5 f3 8d 2e e0 f5 2d 2b f4 b2 2f 62 38 88 83 85 a7 a8 5c 52 0e e1 75 d6 df 11 b6 ff c1  .m.......-+../b8.....\R..u......
100146a0  59 a1 f1 f3 7c 64 cb 13 b9 9d 85 12 77 3f 5e bc d2 b6 9b 10 26 68 05 28 76 aa 3e 82 15 b9 c0 0b  Y...|d......w?^.....&h.(v.>.....
100146c0  fe f6 f5 67 c2 74 8f bf 63 32 46 e6 bc bf c5 7c 6f 99 c7 75 c4 d0 1e 9f dc 04 7c a0 e0 00 d8 f3  ...g.t..c2F....|o..u......|.....
100146e0  0c e1 2b 13 c3 94 14 41 b9 69 d2 03 c2 69 1e 7e 8c c3 22 20 1e 3f 2f 5e 8a 36 16 45 b4 3b 2a f3  ..+....A.i...i.~.." .?/^.6.E.;*.
10014700  0c 4d f5 e0 83 fa a5 32 f9 97 40 4f 49 5d 7a 3d 28 06 c7 2a bd 04 f2 17 fd 21 af e7 c1 6c 20 a7  .M.....2..@OI]z=(..*.....!...l .
10014720  67 85 80 0c 30 e4 2c b6 05 59 a8 d5 a5 9d c6 9a 5c 4d 54 02 85 77 65 d1 00 b4 94 22 32 e5 5a c6  g...0.,..Y......\MT..we...."2.Z.
10014740  6c c9 96 df a1 60 14 90 33 77 bf 73 c6 13 1b bf c4 ed d8 6a bd c0 b7 d4 42 5e 78 39 53 4b 45 7c  l....`..3w.s.......j....B^x9SKE|
10014760  6c 87 5a f7 0a 27 ee 20 85 a4 1b 13 27 aa f7 ed 4e 73 1b d5 cd ce b6 f5 3e 7b bc ab c8 22 67 6c  l.Z..'. ....'...Ns......>{..."gl
10014780  e0 14 4a 1e 37 8b ae 9b 85 2f d6 7b f1 7a 13 25 94 6c e5 68 cf de 6d 85 b2 c2 e1 71 e0 44 0c 3e  ..J.7..../.{.z.%.l.h..m....q.D.>
100147a0  27 09 ea 64 14 bf 0f dd cc eb f4 b2 7f b5 34 d4 cc 19 7b e6 17 73 bb 3b 30 32 7b 13 5e 3a 08 32  '..d..........4...{..s.;02{.^:.2
100147c0  d5 d5 89 0c 86 a1 de d7 49 02 74 82 da a5 84 2f e9 07 cd 77 74 18 50 b1 0a a8 dd 6d a9 63 ec 31  ........I.t..../...wt.P....m.c.1
100147e0  09 97 44 d0 d6 d9 b1 11 ef be fb 97 4d 1a 0e 81 28 05 33 af 3a 6d c6 2b a9 e0 6d 3e 80 70 82 36  ..D.........M...(.3.:m.+..m>.p.6
10014800  d9 7a 32 47 be 72 bc 3b 4b dd d2 29 dc 80 dc 91 17 9a 0f d4 57 f3 d3 14 4f 65 06 71 26 93 4f 2a  .z2G.r.;K..)........W...Oe.q&.O*
10014820  43 3e db ce 88 d8 31 a2 34 cb f3 b8 ad 3f 81 12 ea 41 fc c1 dc 56 e9 93 ed ff 48 09 c2 fe 7b bd  C>....1.4....?...A...V....H...{.
10014840  33 58 95 06 41 c8 69 e2 b6 ae 2e a9 95 54 df e6 33 c1 d5 9c 71 d4 6c 68 2d b8 74 03 63 88 23 d3  3X..A.i......T..3...q.lh-.t.c.#.
10014860  19 05 8e 7f 77 9a 5e 85 29 bb 16 59 22 38 53 43 62 b7 34 4c 73 8f 5a 66 b1 01 e7 6b 71 99 7d 03  ....w.^.)..Y"8SCb.4Ls.Zf...kq.}.
10014880  bb 28 dd 74 60 f4 18 c9 17 32 66 d3 8f ae 59 f5 4d bc 10 31 a7 19 98 8b 96 44 8b 1d 2b 4d 49 40  .(.t`....2f...Y.M..1.....D..+MI@
100148a0  f9 37 1b c5 5a 79 c1 5f cc 81 82 53 a2 0f f3 ef 02 b3 80 cf 19 ff 6b a9 60 ae ba 17 dc dd 74 e8  .7..Zy._...S..........k.`.....t.
100148c0  86 2a cd 07 4c e0 31 a0 44 ae d7 36 7d 82 ad d2 ba e7 5f b7 1b a0 f7 c2 14 3c a9 53 b9 2e e4 17  .*..L.1.D..6}....._......<.S....
100148e0  88 4c 58 d4 4e 8f c7 c5 79 08 d2 51 16 f9 12 ef a8 1f df 8f 40 53 23 60 cb 49 d7 8b 89 d3 6e e1  .LX.N...y..Q........@S#`.I....n.
10014900  36 76 ad d3 4e ae e0 83 08 11 31 b9 1f 07 a2 e9 ae cd 78 8e eb f9 06 60 5e 98 b9 fe 06 70 2a 87  6v..N.....1.......x....`^....p*.
10014920  b0 30 68 45 8b b1 66 f4 20 00 7a 99 e2 d9 1a 41 7d ea 03 21 dd 87 a0 f8 3f 26 c2 c5 5d 1d 02 0e  .0hE..f. .z....A}..!....?&..]...
10014940  3f 5d 3d 22 50 50 a1 8c 5a be 2b 6c c5 9b f4 41 80 53 6c 6e f5 3c e8 9e e4 34 b4 97 86 82 c9 ed  ?]="PP..Z.+l...A.Sln.<...4......
10014960  d4 8a 4b 20 28 14 50 d0 0a f5 49 de ab 18 87 c4 f9 73 47 85 4c e8 b2 54 6c 7c 7a c9 5e f3 20 44  ..K (.P...I......sG.L..Tl|z.^. D
10014980  10 3b 13 09 91 9b 53 ba e0 4e 10 ae 48 3b e7 e3 77 4c dc 77 0d ce 73 76 71 07 e0 c1 b9 60 6d bd  .;....S..N..H;..wL.w..svq....`m.
100149a0  24 67 11 75 6d 31 31 d2 ef bc 79 de 11 c0 2c 22 02 20 50 a6 c0 26 f8 8e e1 36 02 d7 fb 19 59 0a  $g.um11...y...,". P..&...6....Y.
100149c0  d4 ea 34 45 55 18 77 7c 9e b6 fc 4a 2c 59 4a b0 09 7c d3 8a 01 88 c0 b9 93 16 a9 b1 26 96 cd f9  ..4EU.w|...J,YJ..|..........&...
100149e0  06 7e a1 47 4c 67 fc 9a d9 51 4d e5 54 22 f5 b2 59 b4 39 9b a2 60 a3 fa 80 a2 c4 a8 65 b0 a1 79  .~.GLg...QM.T"..Y.9..`......e..y
10014a00  70 7d 7c fa bc 4f 67 e4 59 2a 06 b3 bb ac 73 c9 00 24 81 4c 12 09 7f 3a 88 b5 68 70 7a 98 d4 8a  p}|..Og.Y*....s..$.L...:..hpz...
10014a20  d0 6d 17 60 d6 97 fb e9 0a 34 66 46 05 aa 93 3e a5 d1 81 10 fe 9c 68 64 09 41 dd 32 f0 f9 a6 8e  .m.`.....4fF...>......hd.A.2....
10014a40  7e 1d 77 ec 2e c0 c8 5e f6 c5 29 1e b4 d0 64 7a 63 5d 0f ad 42 7b a9 7d 1f c1 9f 0b d4 c5 f8 b7  ~.w....^..)...dzc]..B{.}........
10014a60  af cd f9 c9 a1 db f4 71 29 09 92 16 1f e0 d2 8e cf ab f8 17 2e b7 32 1e 7c 8b 64 dd 32 ce 7b 45  .......q).............2.|.d.2.{E
10014a80  28 9c 8f a4 8e e3 e8 09 5c 5d a8 ca db 31 f4 f1 90 1f d9 99 df 58 3f d7 60 19 b7 91 86 59 f1 39  (.......\]...1.......X?.`....Y.9
10014aa0  c3 64 68 3f c2 3c 70 c0 fc c6 0f 4c 87 3a fe 55 05 38 27 7d 4c c7 2b d4 8c 82 18 20 9a e0 29 e2  .dh?.<p....L.:.U.8'}L.+.... ..).
10014ac0  68 c8 68 4f 9a 5d 05 4c 7e 68 bd fb f6 85 74 ad 94 66 93 71 77 d9 44 13 2c a1 16 a0 42 01 6c 70  h.hO.].L~h....t..f.qw.D.,...B.lp
10014ae0  3d 93 35 9c d6 25 8f e0 8b 97 5a 9c e0 c3 88 b1 47 1e cd 46 40 68 83 5b 9f bc b2 cf 48 78 e1 32  =.5..%....Z.....G..F@h.[....Hx.2
10014b00  d0 c9 45 53 3d e6 f6 c0 9a b8 c7 71 9c e3 0d 49 ca e5 b2 fa 1e 28 87 bf d1 86 ba fe 8a a8 72 09  ..ES=......q...I.....(........r.
10014b20  d9 af 96 53 08 f3 d9 e2 9a 12 bb 3b 70 a2 8b 16 42 88 93 ef a0 44 6f 8c 92 72 e3 a5 5d a7 6e 45  ...S.......;p...B....Do..r..].nE
10014b40  73 17 e6 1b b3 87 ba 07 25 51 7f 6e 54 04 c9 da 29 9a 48 98 2d 91 10 f8 7f fc a6 2f fb 43 11 1f  s.......%Q.nT...).H.-....../.C..
10014b60  c9 4a 9a 26 b8 cf 46 fd 0d e2 af 0b 75 8b 82 17 28 93 e9 e7 ec 16 9b cb f0 03 ab 89 c2 7b bd 9f  .J.&..F.....u...(............{..
10014b80  ca b5 58 cc 5e 3e ca 9d 54 5e 17 b9 6a c6 c6 d0 20 e8 39 ef 6d 07 45 7a 5e e7 d3 f7 58 a8 f6 76  ..X.^>..T^..j... .9.m.Ez^...X..v
10014ba0  04 59 41 ce 13 f3 ad d4 12 e3 e9 6a 33 0f 46 15 f3 11 15 e4 eb d4 e3 93 00 d6 43 30 a5 a3 0f 25  .YA........j3.F...........C0...%
10014bc0  82 74 31 9a 0c 0d ff 56 9a 49 c6 64 20 94 d7 68 a1 44 9e f4 56 1f fe 96 a5 3f 33 2b 3b df ea 36  .t1....V.I.d ..h.D..V....?3+;..6
10014be0  4c df 0a 14 c7 c6 17 d5 4d 0e 95 66 ff 69 a7 da df 8c e6 f0 71 e4 bd 4b 06 8e 9d d2 fd f4 1b 51  L.......M..f.i......q..K.......Q
10014c00  75 ab df 64 43 20 19 f9 47 1b 04 66 3d 8b 8e 8b 22 d6 cc a8 e7 86 fc 01 80 e4 6b 69 98 9d 84 e3  u..dC ..G..f=...".........ki....
10014c20  5b fa 6d 6f ae cd b1 89 97 b1 b4 a1 19 9e 1d a5 c4 b0 a8 ba 59 1d fc 62 d5 9b 23 f0 57 7b 48 d6  [.mo................Y..b..#.W{H.
10014c40  de 07 a2 30 e1 63 18 af 3c 04 aa e4 ec 97 ad 08 4c 45 9f 36 f8 28 b3 11 ac fb 5e 32 7c 64 6d 4b  ...0.c..<.......LE.6.(....^2|dmK
10014c60  7e 54 05 3d be bc 58 1e 71 78 b7 03 c2 c5 f2 fa 86 88 11 2a 51 7e ca 6b 53 f8 42 3d 91 7e e3 ad  ~T.=..X.qx.........*Q~.kS.B=.~..
10014c80  77 39 49 42 2e 68 f7 e5 0f c5 b6 f8 34 50 f2 4e 2a 89 84 29 72 81 84 55 52 6e c2 19 b0 1b 44 27  w9IB.h......4P.N*..)r..URn....D'
10014ca0  f9 3d 5a 8f 00 93 80 d5 70 ca 4d ff ae 8a 32 aa 36 f5 88 22 7b 8f 5d 53 88 19 fb d5 8f 6e 0d 40  .=Z.....p.M...2.6.."{.]S.....n.@
10014cc0  0d 1f 6c be 68 b8 f0 95 ba 19 af 5c fe cd 45 70 6c c4 07 08 76 05 b5 85 dc 22 68 58 f1 c2 ed 26  ..l.h......\..Epl...v...."hX...&
10014ce0  6a 31 b2 a4 1c 26 07 c3 61 32 2b 40 19 eb f0 10 7c 57 5e 32 19 36 8d 99 19 a4 e4 2d 8b bf 33 4e  j1...&..a2+@....|W^2.6.....-..3N
10014d00  b5 20 4e ee 52 04 f2 2f 8b f6 ce 68 24 09 93 bc 09 d2 68 b0 98 5c d2 87 c9 92 1a 06 09 81 ea 6e  . N.R../...h$.....h..\.........n
10014d20  9f b4 8a 15 b0 ed be 61 06 cc 40 36 f3 b2 36 ef e1 dc 5d d0 23 00 c8 dc 5c c6 4e 3f ee 78 96 3f  .......a..@6..6...].#...\.N?.x.?
10014d40  86 86 8f f0 3d 17 6b f7 f8 6f 03 4e 72 a4 66 42 8f ad 4a 12 98 2e 45 26 7f 55 ae 64 f1 4b d9 70  ....=.k..o.Nr.fB..J...E&.U.d.K.p
10014d60  01 00 bd 67 35 5b 0c 86 47 fc c4 be 28 f7 88 61 f5 2f 3e 4c 92 5a a8 8d d2 4c 3d 1b 66 50 bf 28  ...g5[..G...(..a./>L.Z...L=.fP.(
10014d80  a1 bc 8e b5 67 cd cb b6 09 ac 6f f5 47 26 bb d2 78 bc b2 8c 04 e6 60 c7 15 b8 f1 d7 e5 70 80 1e  ....g.....o.G&..x.....`......p..
10014da0  84 7d 38 5a 85 15 ee 82 bb d6 03 84 c5 2b 0d 8d 54 a7 c0 ee 94 f4 29 f2 a1 e2 ba dc 3f 07 84 88  .}8Z.........+..T.....).....?...
10014dc0  e3 4c df 90 53 d7 97 e3 fc 9f 3a 46 55 cc 8a 20 03 6d 84 4b 0b da 03 81 80 dc e7 47 a9 53 2d f0  .L..S.....:FU.. .m.K.......G.S-.
10014de0  91 ba 96 a6 89 2b 40 14 d1 b0 91 8f eb 8b 72 b0 42 c6 67 ee e6 dd e1 fa 21 0a ae 3b 6a fa 67 bb  .....+@.......r.B.g.....!..;j.g.
10014e00  21 33 0b a1 71 89 ee cf d2 c4 d9 c6 30 5f f8 8a 3e 7d a1 2b 5f d1 4b 90 1c de ac fc 11 a2 e8 24  !3..q.......0_..>}.+_.K........$
10014e20  1b a2 c0 83 42 93 fd 51 4f 7d 1b 4d 09 f2 7c 92 36 01 d6 17 e5 2f 67 ad 8c 5c 05 6f 53 06 66 2e  ....B..QO}.M..|.6..../g..\.oS.f.
10014e40  fb ee 4c ad bd 30 a7 83 3e 40 22 cd 94 b0 58 75 94 98 3b 9f d9 08 22 41 f4 b5 3b 5b 73 fb 64 6b  ..L..0..>@"...Xu..;..."A..;[s.dk
10014e60  0e 80 0c 12 ad e1 d8 cf 50 b5 e4 da b6 08 e4 45 9f 6c e0 ac 14 2d da 00 b3 fe 7c 98 98 2d 9e f7  ........P......E.l...-....|..-..
10014e80  d3 91 3c 69 cc 37 5d 1b 11 d4 a5 1d ed f9 41 ec 1b 9d 33 24 b6 9a 98 1c 67 16 ab 2a 93 b6 39 f6  ..<i.7].......A...3$....g..*..9.
10014ea0  43 1b 07 b2 72 84 f8 fd 12 99 53 9a 81 94 20 1f 23 59 87 6f e6 3a 32 d6 5d 6c 91 4a 6b 74 43 b1  C...r.....S... .#Y.o.:2.]l.JktC.
10014ec0  c1 11 c6 1d 5d fa ef 4a f9 3c f5 65 3a 92 1d 0a 72 ff ab 8a e1 e5 38 3b d0 48 92 2d 33 fc f2 ca  ....]..J.<.e:...r.....8;.H.-3...
10014ee0  66 2b 81 5b 06 0d 7a 63 35 7c 0a e3 4d 4f 09 7b 8b 9f db 05 12 49 54 a4 ec 84 64 6d 02 8a e2 07  f+.[..zc5|..MO.{.....IT...dm....
10014f00  6b c8 f6 5e ef c5 a4 cd fc 50 0f 18 35 4e 50 1b 21 95 45 cf d7 6e 31 6c d9 7b 8f 2e bc 8d 66 d3  k..^.....P..5NP.!.E..n1l.{....f.
10014f20  d8 e7 52 60 72 ac 41 f5 76 30 6f 09 83 79 fb 92 6b cc 46 86 49 16 5d e2 41 65 3e 4d a1 ed 2f 09  ..R`r.A.v0o..y..k.F.I.].Ae>M../.
10014f40  9c dc 93 9a ca 96 bc 97 c6 16 04 54 a6 68 6e 85 6c 37 43 a0 7d a6 13 1e 01 39 b3 30 3b 6d 52 04  ...........T.hn.l7C.}....9.0;mR.
10014f60  83 c0 c9 90 13 b9 ae 7c 6b 19 63 07 d0 99 e4 98 ea 15 d2 d5 75 02 c0 a4 35 1d 9b d0 b6 e4 ef 94  .......|k.c.........u...5.......
10014f80  0d 66 0f 35 d8 ca 26 fc 4f a8 15 3a ec a2 7c 7b c9 2b 6b 4d 26 3e bc 78 5f 12 41 bf 47 ab 02 f3  .f.5..&.O..:..|{.+kM&>.x_.A.G...
10014fa0  06 34 da 35 cd 46 9d 9f 1a ae c8 62 2a 0a 9b 0d ed c0 ba f8 62 43 52 cb 9f 6a 6c 51 dc 85 f1 a4  .4.5.F.....b*.......bCR..jlQ....
10014fc0  89 d6 93 01 5b af cf a2 fd 5f 6b aa 12 6c cb a8 b1 c0 06 de 62 6b cb f6 d5 77 94 43 5c de f3 19  ....[...._k..l......bk...w.C\...
10014fe0  95 12 90 33 09 52 89 50 dd ea d8 89 ec 90 a5 c4 6d d7 2f bd 7a 94 72 fa f3 fd de 74 af a9 99 76  ...3.R.P........m./.z.r....t...v
10015000  ea 27 20 d1 95 bf be 0c 1c fc 2e ff f0 1c 5b 26 33 02 eb 49 10 68 47 f0 8d 73 09 5a 5c de a2 44  .' ...........[&3..I.hG..s.Z\..D
10015020  fb de e0 f7 f7 6a a1 89 e6 21 19 59 f7 f2 b4 ea 5e 58 dd a9 ea 36 5b a6 36 4c ef 16 2f e0 9f 06  .....j...!.Y....^X...6[.6L../...
10015040  08 61 89 77 cb e2 65 45 01 97 64 bc 50 bb 31 5a 7e 6b ff 64 b8 32 93 c1 48 f8 f3 9f f1 a5 6d d6  .a.w..eE..d.P.1Z~k.d.2..H.....m.
10015060  fe 94 62 e0 be ce 3f 72 0b 5c b2 20 7d 4e b1 82 72 98 16 15 77 e8 ab cb 54 6d d4 cc 09 5e c0 22  ..b...?r.\. }N..r...w...Tm...^."
10015080  d2 39 19 ed 48 0d 9f 0e 3b 8f e2 83 15 a6 47 e8 1f 4c a3 cb af 67 36 cb 25 01 b8 a6 41 bb 16 27  .9..H...;.....G..L...g6.%...A..'
100150a0  33 63 ba 87 5c 1d 72 e5 d4 d3 e8 b6 32 f3 e1 d6 41 7d 8f 98 8e 6b f1 75 93 2f 50 1f 51 d9 de bb  3c..\.r.....2...A}...k.u./P.Q...
100150c0  a5 4b 63 e4 82 88 07 63 dd dd b1 be 01 93 b2 d4 2c 7a 2e 7c 6d b5 ba 79 d7 5c 63 c2 55 cf 21 00  .Kc....c........,z.|m..y.\c.U.!.
100150e0  e2 ad 05 e4 56 64 4d c0 63 d9 3d 98 6a df 3d 30 4b 3f ea d9 fa 0d ed 31 91 aa c7 6c 40 19 c8 8e  ....VdM.c.=.j.=0K?.....1...l@...
10015100  fb a4 5f b8 86 02 fd 21 13 f2 fd 0c 17 8c e3 2e 80 05 06 af e5 c7 ed 7a bc 39 ba 17 86 9f 2e d8  .._....!...............z.9......
10015120  d2 ec 5d 99 53 f7 bd be 1e 11 68 bf 1b f4 bf 8a 46 16 f9 81 f7 47 9b 37 2d f7 79 3a 6b ad 25 f2  ..].S.....h.....F....G.7-.y:k.%.
10015140  32 ae c2 9f 8d 86 23 10 a5 d6 e9 96 e2 54 5c ed ba 4d da f1 56 db 67 7a ea 94 04 4c 34 3e ec d3  2.....#......T\..M..V.gz...L4>..
10015160  c0 10 84 bc b1 85 eb 3d a3 b0 7e 4e ac 98 82 c5 02 c2 43 8b ef 69 1e 80 11 12 c7 75 0e c7 5d 8d  .......=..~N......C..i.....u..].
10015180  28 23 93 c6 f8 11 41 fb 68 44 ba 07 21 47 06 29 49 d1 f6 bb 7d 2b df 83 60 09 71 99 04 2b 5e e5  (#....A.hD..!G.)I...}+..`.q..+^.
100151a0  14 a3 5c 4d 57 6b d5 54 f5 61 74 03 04 ca 71 9f 71 4e c0 bd 20 96 21 85 f3 97 84 4b 6c c3 bf 3c  ..\MWk.T.at...q.qN.. .!....Kl..<
100151c0  dd fc 6f 50 e8 3d 80 17 f0 02 82 17 5e 4d 7f 45 8d 2f f6 12 dc 1e 58 f5 f8 6f a7 ef d0 38 a7 68  ..oP.=......^M.E./....X..o...8.h
100151e0  ae b4 c7 54 e0 89 e8 6c 47 a1 39 e5 b6 b4 57 ad 13 5d 5c 1e 3b 44 7f 30 8d b4 64 90 97 af e4 f8  ...T...lG.9...W..]\.;D.0..d.....
10015200  54 06 ff 05 5a 4d 0b 01 89 a1 3b 19 c4 28 4f db 52 d9 9d 14 dd 7d dd cb 0c d7 69 f7 76 e8 0e 1f  T...ZM....;..(O.R....}....i.v...
10015220  0f 33 63 71 ad c1 e5 eb a0 ae 8d 06 6c a5 bb 59 4e ab fb b2 48 ab 8c 85 fe 0b c9 b9 ac ee 66 36  .3cq........l..YN...H.........f6
10015240  22 b8 28 dd 41 88 e0 b1 69 b9 4a 66 d1 2d 1c db 5d 83 91 34 8e c9 c5 9c d0 28 59 53 c1 47 48 c7  ".(.A...i.Jf.-..]..4.....(YS.GH.
10015260  e6 71 24 a6 e0 59 8f d5 3f 0a 9e 2d 80 29 4f 6f af 54 55 58 59 85 ea ea b2 c4 48 11 d7 66 a0 5e  .q$..Y..?..-.)Oo.TUXY.....H..f.^
10015280  aa 06 71 e4 c9 64 16 37 05 d2 ef 7b 97 0a 05 4e d0 32 17 30 a4 c2 10 c2 94 9c 3b 96 78 11 b6 9f  ..q..d.7...{...N.2.0......;.x...
100152a0  53 b1 38 36 1f e3 d9 7e e5 62 70 5d e8 85 c0 73 41 20 b3 d6 ba c3 01 5e da 89 c2 c9 90 ce 6c ad  S.86...~.bp]...sA .....^......l.
100152c0  1e fb 2c 6a ca 33 01 c1 54 78 48 09 9c 99 9c dc 8e e6 ea 16 65 42 85 d2 e1 8e 8e 69 ad 5f 60 24  ..,j.3..TxH.........eB.....i._`$
100152e0  fa ba b8 de 26 b4 0d 8f 70 93 d7 e6 7c 75 fc b4 44 b0 c5 9f 9b b0 0d 44 ad 9f 9d ec 5d 6a 6a fa  ....&...p...|u..D......D....]jj.
10015300  0b 83 54 31 bb c0 11 b7 08 d4 b4 f5 f1 59 f2 25 d7 a0 b9 25 40 6d 15 1d fc 74 da 66 b6 b4 e4 6e  ..T1.........Y.%...%@m...t.f...n
10015320  e0 17 3b 1e 5c c8 3b a2 ad 4d 02 79 57 67 cc 57 d4 a1 b0 cf 98 5d f4 11 89 29 be 6a 34 64 65 c6  ..;.\.;..M.yWg.W.....]...).j4de.
10015340  f2 a0 ea fd 6a 64 7a 04 da 22 ad d0 40 99 3a cc 33 64 34 9c c0 ce 58 f6 4f 94 9c 1d a3 20 1f bf  ....jdz.."..@.:.3d4...X.O.... ..
10015360  e7 da 3d ab 70 2a 24 cd a5 0a 59 fa d2 3e c3 29 9e 2e 0a e1 f8 97 82 96 1c 56 cf 87 e1 6e 09 76  ..=.p*$...Y..>.).........V...n.v
10015380  f6 0c 5b c9 8d c1 16 7d df a0 7c 0c 18 5e 31 49 b9 d7 f4 78 d1 f7 cf 6d 4f 10 e6 21 70 db 4d 9c  ..[....}..|..^1I...x...mO..!p.M.
100153a0  95 88 cc db 37 e4 e8 b8 16 20 52 94 12 31 3e 47 07 05 12 9a 0e 2e 66 d4 36 b6 f8 59 af 63 66 5e  ....7.... R..1>G......f.6..Y.cf^
100153c0  e4 7e 88 ad c7 96 c4 5b 31 bf 2c aa f0 76 52 26 72 98 da 74 1e af 7e 62 b0 d9 d4 92 ef d2 76 38  .~.....[1.,..vR&r..t..~b......v8
100153e0  8f cf 23 a0 f9 8e dd 54 9f e3 09 64 f2 25 8d 3a ee 4b d5 68 23 31 82 96 04 1e af aa 8c 83 8f 86  ..#....T...d.%.:.K.h#1..........
10015400  71 8d 4b 85 b2 cf d4 e3 8a b7 77 af 84 de c2 10 25 51 5d 66 77 92 f1 8c 63 a6 e6 58 34 11 f7 f0  q.K.......w.....%Q]fw...c..X4...
10015420  0d 0b 83 01 bf 48 a4 b0 47 24 a3 1f 42 b9 53 f1 40 af 3a f0 c4 af 71 80 38 ec a4 87 2f a3 8c be  .....H..G$..B.S.@.:...q.8.../...
10015440  1a e5 77 29 d1 81 a5 a8 eb f2 ca 76 b5 86 cf 35 ae 38 cc 6f e1 54 d0 13 80 44 a0 2b a1 76 2f 26  ..w).......v...5.8.o.T...D.+.v/&
10015460  86 5d 2a 3f ed 9e 25 11 85 08 62 8c f9 34 a8 5f 63 48 91 94 71 d0 fe 2b bd 82 ab cc 85 80 1c c7  .]*?..%...b..4._cH..q..+........
10015480  57 84 e0 47 67 0a 47 02 73 9b f5 be 96 7b 57 0f 24 4b f1 4a aa f1 45 42 5c ca 35 bc 58 82 fc 91  W..Gg.G.s....{W.$K.J..EB\.5.X...
100154a0  44 be d7 f5 92 5b bd 64 38 d9 15 38 94 f7 df 8e 42 79 c3 1e 0a f4 b3 8c 20 2c 3f dd 8e 40 76 4c  D....[.d8..8....By...... ,?..@vL
100154c0  75 c8 bd 8c a3 93 32 59 67 c9 39 c1 27 88 89 6f 2d 7a 57 6b 9f 98 a8 18 ba cc e4 3b 4f 08 71 6a  u.....2Yg.9.'..o-zWk.......;O.qj
100154e0  58 45 59 99 c9 a8 18 99 81 dd 4f 67 2e 27 e9 63 e5 3b 2d 89 13 df ae 6b b0 74 b4 60 a1 92 29 d2  XEY.......Og.'.c.;-....k.t.`..).
10015500  27 4e a8 0f 9a 30 c2 b4 e2 4d c9 74 84 59 35 8e 32 14 77 4e ae da 52 be 04 0f 59 d9 b6 8c 2a 1b  'N...0...M.t.Y5.2.wN..R...Y...*.
10015520  da 10 8d ac b5 02 d9 4b 60 64 60 ec dd bf 83 dd d1 b4 34 c3 1e fb f6 6c e9 5b cf 58 6a 39 f3 5e  .......K`d`.......4....l.[.Xj9.^
10015540  04 01 31 d3 b3 ad 88 23 b5 ba fd 37 19 59 d5 fb 42 83 49 69 71 0a ba 48 89 29 61 d4 ce 51 fc 24  ..1....#...7.Y..B.Iiq..H.)a..Q.$
10015560  18 04 50 65 7e 76 0d 2c 0b 33 44 be 21 14 0d 9e 32 e7 b2 9b 99 26 e3 b2 6b 28 89 c9 e6 a3 bc 18  ..Pe~v.,.3D.!...2....&..k(......
10015580  b8 30 43 ec fd 56 86 33 bb 30 0a 3d 54 ab 72 bb cc 21 9e 1f 72 c3 6e 04 44 61 f1 96 f7 cd 80 db  .0C..V.3.0.=T.r..!..r.n.Da......
100155a0  be 80 8d 38 09 a2 03 76 28 cc 30 e9 15 54 7c ce 06 56 66 77 e6 72 b3 e8 66 60 47 55 ed b3 80 54  ...8...v(.0..T|..Vfw.r..f`GU...T
100155c0  da b5 91 01 6b 4b 10 03 d3 80 8e fa c3 55 f4 7e d7 31 67 c0 60 3b 05 48 b9 27 df 23 73 49 fd 20  ....kK.......U.~.1g.`;.H.'.#sI. 
100155e0  d8 2e 84 98 1b 32 5b cc d5 5e 82 ee 24 ff c5 46 d0 ba 7e bd 40 c4 2b 9a 82 03 02 c3 6d 7d c4 1c  .....2[..^..$..F..~.@.+.....m}..
10015600  5c c2 f0 f3 cb 65 43 89 76 63 5b 01 a1 1e c7 23 c0 d3 9b 39 14 de f1 65 b7 72 30 f7 71 5d b7 09  \....eC.vc[....#...9...e.r0.q]..
10015620  cd 7d 2d 70 77 63 04 70 53 a3 2c ed 2c e1 66 a2 cb d1 69 1b bb d8 cd a5 5a 2d 6b b3 a1 4b 2b 51  .}-pwc.pS.,.,.f...i.....Z-k..K+Q
10015640  62 ff 7f 12 f3 7e 70 17 38 37 42 2a 91 c9 57 7e 99 0c c5 dc 2c 4e 97 ec 43 e8 a6 1e 38 8c 11 98  b....~p.87B*..W~....,N..C...8...
10015660  c0 00 76 b8 fa 34 87 5d a3 f4 9f d3 93 ad ce 0b 3a 58 7a 69 45 de b3 28 45 6d 9d 42 7f e9 9c 29  ..v..4.]........:XziE..(Em.B...)
10015680  d0 22 d7 67 16 b9 18 cb 86 2d 15 ac ca 62 b8 16 ce de d8 bd 8c 9b 3e 82 67 82 cd 8a 21 9e 36 33  .".g.....-...b........>.g...!.63
100156a0  31 ed 45 ee f3 7b 10 47 95 bd 1f 2a 0e 64 15 f1 4c 07 b2 c4 d4 49 2a ef 09 d5 77 a4 49 6d 57 db  1.E..{.G...*.d..L....I*...w.ImW.
100156c0  12 c0 26 c1 50 0a 61 4e 1c 5f d4 bf d0 ba 6e c8 be 51 dd 19 8b 15 f2 9f 91 37 1e a1 03 29 87 1d  ..&.P.aN._....n..Q.......7...)..
100156e0  78 00 ec 65 13 44 76 e6 93 8f ca 55 67 21 11 f7 0f 2b cd fc 77 3f fe 7b e9 c2 1c a3 d6 ee 3d 6c  x..e.Dv....Ug!...+..w?.{......=l
10015700  66 95 a5 97 f5 54 b2 3f 1d 89 a8 ea d8 b4 55 9f 4c 0b 54 5f 63 9a 77 19 ff f2 b4 1a cc a2 58 e1  f....T.?......U.L.T_c.w.......X.
10015720  f4 93 25 e6 c9 b4 b3 5b 42 63 9a 55 a7 b8 52 6d de 31 89 f1 a9 77 d5 4c 44 4c 57 33 49 45 34 39  ..%....[Bc.U..Rm.1...w.LDLW3IE49
10015740  10 1f 35 cb ef 01 61 27 e4 95 49 db 7a 3e 0d 8c 6a 55 fc 25 85 db da 09 7e 0d 90 8d 9b 41 74 be  ..5...a'..I.z>..jU.%....~....At.
10015760  9a 72 98 ba 81 1b 28 ac ac 89 bc d6 33 6f 3a 68 13 3e 6b 8d c3 db 76 84 32 06 ed 3e db cf 5a f7  .r....(.....3o:h.>k...v.2..>..Z.
10015780  75 7b 4b ca ae 21 22 56 0d e1 ce b1 34 3e 98 50 e6 d2 53 c2 a0 f2 2d d2 6f 43 a0 e2 48 75 40 07  u{K..!"V....4>.P..S...-.oC..Hu@.
100157a0  1d d0 ef fb ee fa 7e 76 ff 16 bb 63 6f 5d dc 7c eb a1 79 a9 ba 5c ec 14 40 b1 99 9d e2 2e a7 b9  ......~v...co].|..y..\..@.......
100157c0  96 19 18 b7 11 94 33 ec 0f a6 a6 27 c3 6c 7a 43 d8 d6 5b 9c 3e f7 5c e5 62 6a b3 e0 95 ea 6f 64  ......3....'.lzC..[.>.\.bj....od
100157e0  dd 31 c1 bf 29 0f 4c f6 07 80 c9 9a 92 39 25 8d fb 4d 3e 31 9a 81 50 b3 09 31 c3 c2 38 bd f9 0f  .1..).L......9%..M>1..P..1..8...
10015800  3c 63 ac e3 f5 c6 5b ee ea 7c 6d ea 90 09 ee 34 1d 9e 1e a3 c2 41 1e cb 4d 5a c8 b1 0e 9c 9e 2b  <c....[..|m....4.....A..MZ.....+
10015820  c4 3f d1 2b 6d 80 4c 15 62 cb 73 54 f0 a0 b7 8f 66 87 78 7e e1 ee 68 f1 55 04 11 3e 1f 14 29 d2  .?.+m.L.b.sT....f.x~..h.U..>..).
10015840  09 ed 72 1e 0b 40 93 1c 19 69 d2 a4 18 93 f1 61 26 ee fb 26 ee e0 20 d1 05 93 95 70 4f 03 e5 e1  ..r..@...i.....a&..&.. ....pO...
10015860  dd 55 41 c1 91 53 3c e7 21 5c 4c e1 05 4d eb 96 36 3b 47 a4 00 0c 64 2e d9 6a 4c 33 d1 21 94 cb  .UA..S<.!\L..M..6;G...d..jL3.!..
10015880  13 e1 ae 90 df 69 17 06 c2 82 6a ff 17 1d be 7d fc bc 99 e6 70 63 b0 44 eb 3f c4 34 38 4c a0 a4  .....i....j....}....pc.D.?.48L..
100158a0  9e aa 07 22 29 e7 40 3f 2b 55 5c 62 49 9f 9a 4a 74 5e ec 6f 57 bc 65 49 de a2 12 d5 c5 a2 6f 1f  ...").@?+U\bI..Jt^.oW.eI......o.
100158c0  97 df 09 a3 d9 60 91 ab d7 29 38 3f 81 26 66 d1 e5 54 a6 27 94 33 eb de 42 bd 90 8a 9e d3 b6 9c  .....`...)8?.&f..T.'.3..B.......
100158e0  5f 0c 1c 9e 0b 9c 42 54 83 fe 78 c5 ef 0c 37 02 22 24 71 74 51 38 1f a6 5c 02 3c 89 f9 5e 83 d3  _.....BT..x...7."$qtQ8..\.<..^..
10015900  64 07 2f b7 ae b8 a6 4f 80 dc 29 dc 54 d3 24 7e 34 ad 2b d1 2d 36 e0 ae 2f 09 1f 63 d6 e7 eb eb  d./....O..).T.$~4.+.-6../..c....
10015920  c5 77 86 29 e0 aa c2 d7 a6 3b a1 0e 89 01 3c 3d 44 51 77 94 42 8d 27 fe ef d3 de 46 c1 aa 42 b4  .w.).....;....<=DQw.B.'....F..B.
10015940  68 0c d4 ea 5d e9 60 9c d6 ae 3e 3a 5b 58 25 87 a9 f5 ee 12 a4 9f 45 b4 0d c0 73 3d 8e 13 ad 66  h...].`...>:[X%.......E...s=...f
10015960  55 2d cf 35 e3 4c c8 e0 a1 55 0a f5 8d 82 76 de 05 33 53 ac 8b 6a bf 7a d2 87 80 c0 18 19 97 5c  U-.5.L...U....v..3S..j.z.......\
10015980  5f 3e 05 c3 8e 15 f8 41 60 7e e1 67 35 d8 a4 1b e4 40 d0 ba e4 ee e9 d5 48 50 21 9d 0f 50 bc 73  _>.....A`~.g5....@......HP!..P.s
100159a0  48 7e 5b 37 1a e3 5f 31 be f0 90 98 80 89 6c 76 23 96 2a 7c 9d 76 9d 85 63 0c dc de 3a 2a 6c 21  H~[7.._1......lv#.*|.v..c...:*l!
100159c0  1c df d2 d8 ee 1f d5 18 7f 44 5a 08 c8 82 00 46 c6 8c a1 ba 21 22 b1 c2 aa 04 08 0c 58 ad c1 a9  .........DZ....F....!"......X...
100159e0  6e b6 1b 11 6b 19 61 c0 37 14 fd c9 ab 1b c3 a1 41 25 49 b9 d6 61 d4 48 7e 28 94 d4 9d d6 da b5  n...k.a.7.......A%I..a.H~(......
10015a00  be 05 2f 53 7a ce 0c c6 9d 86 42 1a 31 f4 bd b9 14 cb ff 62 16 50 98 10 2f 23 0a d6 a1 d2 f9 18  ../Sz.....B.1......b.P../#......
10015a20  21 cc 58 89 3c 6d ce 79 45 a3 79 dc 7a a1 1c 8b 2e 64 13 db 26 a9 95 05 ee 31 98 41 eb 1e 25 cc  !.X.<m.yE.y.z....d..&....1.A..%.
10015a40  aa 96 5e ab b6 62 23 c1 7d f9 e5 cb 4b e3 17 1f 4b 83 c5 e9 53 55 b4 3a 23 cb 1c 62 75 64 8a be  ..^..b#.}...K...K...SU.:#..bud..
10015a60  fe a6 f3 fc 52 c6 ff ea 26 f0 4f 35 bc ad 54 ff 0a 79 77 b2 06 cb 22 e9 45 a2 99 76 91 ad 2c 58  ....R...&.O5..T..yw...".E..v..,X
10015a80  84 d3 93 ab 9f 91 8a 6b a8 67 c7 dc 17 e7 6b 6f 44 4a e1 ec 4c 1e b2 38 4f 8f d7 ed 57 cb bd 3d  .......k.g....koDJ..L..8O...W..=
10015aa0  77 6b f0 ef 86 ef 60 27 8a e0 82 2c cd d2 95 14 41 b7 47 ef 5b 72 9d 27 c7 14 3e 94 d7 5d 5b 15  wk....`'...,....A.G.[r.'..>..][.
10015ac0  26 2a 14 46 a6 6d 51 2e 65 5e bc 0b d4 5e 08 68 6f 07 7a 2e ad 62 9d 24 80 2b bb 37 1d 05 ad 5c  &*.F.mQ.e^...^.ho.z..b.$.+.7...\
10015ae0  06 46 62 61 08 13 22 eb 11 0f 7b 9b 16 af 69 74 84 d3 86 37 eb 18 2c ca 14 53 0f 95 ac 2e 3c 5b  .Fba.."...{...it...7..,..S....<[
10015b00  56 51 21 9f af 30 fa 72 4f f7 99 dc a5 fc a4 a4 a2 1a 93 07 44 89 56 79 d3 03 24 bd ce 3c 3f 49  VQ!..0.rO...........D.Vy..$..<?I
10015b20  94 6f 0d 6c c3 0d 91 fd 04 27 7a bc da 21 0f cc a1 a9 92 5f 71 0b 39 6b 2c 45 3a f4 52 40 ea 10  .o.l.....'z..!....._q.9k,E:.R@..
10015b40  29 6f 3b a8 bb b6 9c db a3 5a 02 95 af c7 4c 79 25 e3 02 da 23 bb 1e 70 3e c7 d9 49 bb 98 60 c1  )o;......Z....Ly%...#..p>..I..`.
10015b60  d1 db 18 f3 e6 e2 0a 3d 78 39 8f 9b 9d e3 c3 70 ad c5 b4 28 1c 6d 4e 8a 1e 71 41 92 4d 7c 75 18  .......=x9.....p...(.mN..qA.M|u.
10015b80  55 7c ca b7 87 37 38 65 0a 92 84 78 20 30 78 b2 81 70 0f f0 bf ef bf 34 c7 8b 9c bd 6a ad ac af  U|...78e...x 0x..p.....4....j...
10015ba0  2c 89 fa ca 7f 12 ad fe 56 03 f2 d7 21 e6 d7 cd 89 44 11 c1 44 36 a6 5c cf e0 6b 86 b6 c7 38 53  ,.......V...!....D..D6.\..k...8S
10015bc0  89 a8 48 86 63 0a 83 e5 2e 35 d1 fe a1 ea 04 e9 03 36 eb 64 9f 6e 39 cd e1 d4 e7 19 81 4f 40 48  ..H.c....5.......6.d.n9......O@H
10015be0  78 52 a6 65 2a ad 6a 8f f2 14 03 5a dc 8a 18 6a 28 52 03 a4 cc 90 30 3e 37 ac 3c 38 18 53 ea 8d  xR.e*.j....Z...j(R....0>7.<8.S..
10015c00  f2 e3 b4 5b d8 2a f3 e3 53 21 97 28 5a 01 12 0a a8 39 56 5e d9 e0 41 91 1e 93 ce 31 67 9b cc 98  ...[.*..S!.(Z....9V^..A....1g...
10015c20  ba 25 33 7a e6 9b 3f 2f e2 63 5a b0 16 7c 4c 77 4e 51 3c 0b 52 e9 a9 82 6d a3 dc 87 2c d4 2e 1a  .%3z..?/.cZ..|LwNQ<.R...m...,...
10015c40  0b 69 2a 5f d3 99 23 5a 47 84 5b 57 27 e9 27 25 ed 83 ac 2b 83 70 8a 44 b3 12 5c 49 89 39 35 e2  .i*_..#ZG.[W'.'%...+.p.D..\I.95.
10015c60  c8 2c b2 13 4e 96 da 91 91 1a 86 2e d0 44 0f d7 4b da 74 53 34 04 7e 57 9a bc b5 70 19 b7 bd 9c  .,..N........D..K.tS4.~W...p....
10015c80  c3 b1 83 63 99 e3 b0 72 5b 9d 4e 91 40 f3 ef 4e be 4a 18 c7 df 6a 4b 29 2e 78 64 77 7e 96 ad c5  ...c...r[.N.@..N.J...jK).xdw~...
10015ca0  c8 82 70 83 29 0a bd 42 1f ad 05 b2 cc 14 7b eb f2 2f 77 40 02 9c 38 3d ea b7 9b 20 e0 7c e5 6a  ..p.)..B......{../w@..8=... .|.j
10015cc0  4f a7 4d cc 52 2c de 47 3e cd 91 cf 6e e7 60 32 7e 54 4b 7f 53 f9 8a 32 7f ce 4c e2 a8 79 67 05  O.M.R,.G>...n.`2~TK.S..2..L..yg.
10015ce0  81 3f 32 eb 65 7e 1e e6 30 49 c7 af 99 49 a1 2b 72 51 2f ce 0d 49 98 c2 5c a1 47 5a 4a db ee 45  .?2.e~..0I...I.+rQ/..I..\.GZJ..E
10015d00  d8 68 28 1e 57 0e 85 6d 56 4d ab fa 55 a8 bd 8a 6d 39 03 87 cf 17 f0 dd a7 f9 a8 ab ef 18 73 12  .h(.W..mVM..U...m9............s.
10015d20  eb 03 5d 35 ff 75 30 08 a9 4b d1 d6 a0 c3 0f a7 7c 88 84 f6 62 4d 5d ed ec 69 f0 7c 56 a3 37 5b  ..]5.u0..K......|...bM]..i.|V.7[
10015d40  8d 54 b1 16 3b 7a f5 c3 53 71 8e 77 6b 4c be 81 45 7a 51 29 4a a2 82 84 26 4a 0a ba c1 eb eb db  .T..;z..Sq.wkL..EzQ)J...&J......
10015d60  e7 58 b0 a8 ae ac e7 99 d0 50 96 5d d3 96 8a 51 55 68 8a 04 c5 cc 1e ea 96 61 52 5a d7 92 a8 c5  .X.......P.]...QUh.......aRZ....
10015d80  16 4a 66 1a 01 18 1e fa ed 0c 37 da ab 77 e6 9b af 9e fb 03 0c 58 1d a1 a8 ea 40 69 09 bb 49 a2  .Jf.......7..w.......X....@i..I.
10015da0  d2 7b c4 25 fa 40 66 af 2f 6d 47 cb 3c 5c 16 51 fd 83 1a 07 15 34 3c 9e 46 b2 8d ce 4d ee 90 47  .{.%.@f./mG.<\.Q.....4<.F...M..G
10015dc0  e6 94 2d 74 37 b4 cc c7 50 e2 b4 17 a6 71 15 4b d1 ab 99 b4 93 5d 00 b0 17 a7 c8 ae c4 a4 65 54  ..-t7...P....q.K.....]........eT
10015de0  58 81 0a 6c 30 05 c0 ae dd 9b 09 3c a2 4a b3 29 3e 3f 72 2f 83 a9 c0 fb 6b 1f 57 cf cb eb 9a 7c  X..l0......<.J.)>?r/....k.W....|
10015e00  a9 2a 54 28 64 ba c1 a7 d0 aa a3 05 6f 14 1e d3 0a b1 4b db aa 02 8f 4c ad 68 0a 85 7e c3 47 3e  .*T(d.......o.....K....L.h..~.G>
10015e20  30 b1 f7 65 1b 87 48 b0 51 25 85 3a 08 53 6b 6f 52 66 53 75 14 ca 44 45 68 7b 23 f2 61 e9 01 7b  0..e..H.Q%.:.SkoRfSu..DEh{#.a..{
10015e40  fd 72 92 a7 dc 1b 76 0c bb a2 a9 97 1e 93 5e c3 d7 f4 46 0a 4a 0a ad 46 e7 74 bf 43 0e ad 9c 1d  .r....v.......^...F.J..F.t.C....
10015e60  85 22 b4 e5 d5 67 8f e3 23 bd 8e 26 3c 62 98 d2 ec eb cd 0d b1 cd 0f db 39 e0 66 a1 00 b2 56 42  ."...g..#..&<b..........9.f...VB
10015e80  ad 0a e1 40 8b 52 5a 86 84 22 90 c9 09 4a 36 38 f6 95 ed 46 4f c6 69 ce 3b b8 ca 15 75 6c d9 bf  ...@.RZ.."...J68...FO.i.;...ul..
10015ea0  be af dc 54 fd c2 52 98 0d ad f9 3e 7c 4f 53 f2 f8 94 44 cf 0b b0 60 69 19 fd 01 d1 97 77 b1 70  ...T..R....>|OS...D...`i.....w.p
10015ec0  b4 57 2a 58 db 1e 9e 6a 49 39 0b 33 4f 6d 79 70 65 59 03 3f 47 36 79 7a 8b 90 cb 08 a6 f0 37 1c  .W*X...jI9.3OmypeY.?G6yz......7.
10015ee0  83 e7 e5 6e 63 b8 7b b8 fc 26 ef cd da 9c c3 2e 25 97 ed 64 84 67 0f 1d 76 7a f1 a3 75 28 5a fa  ...nc.{..&......%..d.g..vz..u(Z.
10015f00  a3 94 1b f1 7d 42 a3 97 aa e0 77 a9 9c d2 88 91 3d 75 c7 50 ae 2c fc fe d8 b2 83 cb c9 cd 35 e5  ....}B....w.....=u.P.,........5.
10015f20  55 a8 01 10 60 40 d9 b9 0e 65 86 fc c1 40 39 b4 37 9a d7 45 cc 60 c2 cd 9e 20 be d4 ee 21 ec 47  U...`@...e...@9.7..E.`... ...!.G
10015f40  10 f5 4a 1b a2 5f ef b2 01 ff 8e 73 0d 72 0a 9a b2 98 65 b0 3f fc a7 6f 89 7f cb 8f 02 19 a9 2a  ..J.._.....s.r....e.?..o.......*
10015f60  45 68 fc a7 26 64 d2 01 82 00 84 b8 1c 12 39 b1 5b 79 23 02 eb 4a 2e fa ea 23 6a d7 ad c7 4b e5  Eh..&d........9.[y#..J...#j...K.
10015f80  24 37 70 af cc 8e 0c 3d ca 1b f4 7b 4c d8 95 ec 9e 06 e1 e5 1c 5e 5c 31 41 ff ff ef 80 1e 6c 01  $7p....=...{L........^\1A.....l.
10015fa0  4e f3 d1 fe cd 31 cb 0d 46 6f 72 ec fe 01 50 7e ed a9 5f 57 ec f6 5d 7a 5a 0a 26 5a ae 4c af 48  N....1..For...P~.._W..]zZ.&Z.L.H
10015fc0  b1 88 7d 35 6f c6 59 d4 cd 40 84 83 3a 71 4f 3d 17 20 73 ec 7c 01 16 e9 f8 b0 7a ed 0e 4d ed 2d  ..}5o.Y..@..:qO=. s.|.....z..M.-
10015fe0  05 02 c9 8b e4 90 7a 51 a8 91 4c c4 a8 5c 15 2b f2 59 62 9e a5 8d 45 81 ae ae 7b 1b a6 26 93 a2  ......zQ..L..\.+.Yb...E...{..&..
10016000  ee c1 0f 89 c4 21 ff ba 06 1c ed a7 90 ae b3 c9 69 74 18 03 9d 03 d1 80 3d 2f fc 9e 5e 88 81 6e  .....!..........it......=/..^..n
10016020  a2 2d ab 1b 91 dd 10 18 f0 d6 4c 20 7f d2 bf eb c6 63 27 c2 b4 35 71 56 19 e9 2a ee 48 d7 66 5a  .-........L .....c'..5qV..*.H.fZ
10016040  a4 03 85 2f f0 a9 eb e2 28 bf 7c d0 7c b7 fc 9d 64 35 1c 27 9b 3b 83 43 cb 7b 22 97 15 be b1 bb  .../....(.|.|...d5.'.;.C.{".....
10016060  f7 db c7 3c 3e a8 5f ec 90 2b a2 90 f6 34 79 5a de 34 43 be 86 7c 82 36 4f 3b d8 39 46 51 95 c3  ...<>._..+...4yZ.4C..|.6O;.9FQ..
10016080  f7 a3 04 e1 5b 95 d3 ac 2c f7 03 d0 56 ba 5e 94 9e e4 e0 a9 f4 65 fc 32 68 d8 a5 4e c6 af 6c 6a  ....[...,...V.^......e.2h..N..lj
100160a0  54 f6 09 78 cf 0d 3d b6 62 63 a3 f4 a1 4f e9 70 1d e2 ff db 4b 21 45 35 ee 06 fe 94 92 2c 6f cb  T..x..=.bc...O.p....K!E5.....,o.
100160c0  8f 09 14 be 73 81 64 db 76 a0 f9 d2 da f6 9a 1f ed ce 37 e7 f0 65 ee 88 f3 5c 67 8d 88 66 ef 1c  ....s.d.v.........7..e...\g..f..
100160e0  2e 36 9c 8b b2 1b 81 d2 78 18 6f eb b1 3e b0 7c 28 e5 dc 22 82 5e 9e f7 fe 44 c3 d5 ed 66 59 d0  .6......x.o..>.|(..".^...D...fY.
10016100  0c f3 76 86 9f fb 19 51 a4 35 6a f0 c0 77 b2 43 22 68 ae 84 0d 92 c4 b1 eb f7 d8 3b dc e0 71 6b  ..v....Q.5j..w.C"h.........;..qk
10016120  01 cf 80 01 f7 4b 3e d8 17 b0 98 67 67 68 2c 35 3f 9a 29 a7 11 27 84 b1 ba 5f f9 3f 9d 19 fd 52  .....K>....ggh,5?.)..'..._.?...R
10016140  eb 96 2f ba 1a 33 03 31 5a 8d 59 0c 1a 29 c4 29 bc 1d 96 f1 72 0e ce 2c 87 b5 df 11 f3 70 d0 c5  ../..3.1Z.Y..).)....r..,.....p..
10016160  e2 3a 81 0a b7 a4 9a 5f f2 cd a7 b2 16 30 df c6 ec 47 a4 4d 62 42 0b 01 db 42 d8 d0 fc 77 48 05  .:....._.....0...G.MbB...B...wH.
10016180  3e 11 a1 b4 c4 65 58 18 be b0 2a e3 e5 cc 31 0a 0c dd b6 cb 16 ca 09 7b e9 84 24 3a 94 ab bc b4  >....eX...*...1........{..$:....
100161a0  b9 23 2e 1a 52 83 5b c2 35 22 21 fe e1 c3 38 ee 8c a6 bf c6 3c 15 c1 33 61 85 e4 ad cd 9e a2 ca  .#..R.[.5"!...8.....<..3a.......
100161c0  eb f8 d7 d7 ce b0 73 20 d7 52 a7 01 13 7d 7d 3f cb 39 99 02 1e 4b c8 92 b4 6a cf 1d 42 f9 f7 71  ......s .R...}}?.9...K...j..B..q
100161e0  48 b0 89 5f cf 76 79 b1 33 c7 96 70 29 02 d9 f0 19 75 5e f6 b0 9a c6 98 e6 6f c7 8c bb 8b 70 3f  H.._.vy.3..p)....u^......o....p?
10016200  ae 68 70 a5 69 df 2f 51 48 8b af ef f0 08 c6 70 01 d2 b2 23 85 ff 21 52 d1 f6 11 e7 45 0a d7 9c  .hp.i./QH......p...#..!R....E...
10016220  a0 a4 6a 48 be c2 93 0d 01 c1 05 ac f0 b6 2c 9d 01 c9 3c 33 7d c8 cd c3 80 27 ac 2d 3b ce 5d a3  ..jH..........,...<3}....'.-;.].
10016240  ee 88 b2 c0 47 07 f6 65 ea 25 7d fb c0 a8 f3 91 b9 e2 a7 84 11 2f 42 6c 7d 23 d3 be b2 ac a5 4b  ....G..e.%}........../Bl}#.....K
10016260  1d 6e be 16 9d 64 20 c9 9b cf 6d ed e2 ba 5b 01 e8 4f b0 1a bb 93 84 e5 58 77 37 f3 11 6f 4f 53  .n...d ...m...[..O......Xw7..oOS
10016280  54 db 39 ac d2 e9 d9 fe d2 fe e9 7b 15 0c 07 3f 52 b5 fc 39 05 33 1a db 4d 46 b0 4d 03 c8 8f 37  T.9........{...?R..9.3..MF.M...7
100162a0  c2 76 b1 ab b9 fe c4 05 b8 27 c4 76 26 de 08 a5 e8 7e 98 aa a8 f3 cf d6 94 f1 6f 38 59 91 29 c1  .v.......'.v&....~........o8Y.).
100162c0  f6 c2 51 2a 46 01 9b dd fd e9 fb ef 86 61 8b 0e 8d e6 fc c7 13 a0 7d 76 97 22 b4 3e d0 8b e0 8b  ..Q*F........a........}v.".>....
100162e0  e2 05 64 60 82 f0 0b fb e2 f5 27 31 56 dc b6 5e 14 f4 75 b5 11 77 20 b2 7b fd 14 14 bf 9c ba 59  ..d`......'1V..^..u..w .{......Y
10016300  dd 17 1b a1 c8 43 76 f3 21 4d e1 9e 50 a6 ff 6a 3c 82 9d ac 56 44 b1 f4 4d 24 ba e0 f5 5a e0 8c  .....Cv.!M..P..j<...VD..M$...Z..
10016320  79 f7 e1 91 e7 f3 0d a3 5f 38 46 ad 77 6d 37 09 22 21 48 d1 e2 93 be 86 a6 cc 85 13 1f 08 f4 26  y......._8F.wm7."!H............&
10016340  e2 ef bb e4 31 15 28 39 23 7d 1a 92 a7 75 d3 00 73 52 78 00 3e b4 43 04 eb 14 45 b7 ef eb 2b bd  ....1.(9#}...u..sRx.>.C...E...+.
10016360  48 45 22 17 bd 4a c5 d4 0a 25 81 2c ca bc 46 84 79 8d a0 a2 56 26 11 66 23 77 e7 08 89 eb ba 78  HE"..J...%.,..F.y...V&.f#w.....x
10016380  bc ca e2 11 1e 38 f7 01 f8 dc bd b8 b7 1b f6 10 13 b9 a6 98 00 c8 a1 4f 6f ac 95 a7 5d d2 4d 04  .....8.................Oo...].M.
100163a0  79 c5 9a 4b 0d 74 24 34 cb 6b 40 3e 17 34 33 b5 95 fb 08 01 5e f5 41 eb 8a fc b5 4f 90 fd ff 61  y..K.t$4.k@>.43.....^.A....O...a
100163c0  6d c7 e7 ef 4e a6 13 86 03 d1 67 a3 85 0f 10 55 c0 2e 9d 8c d9 4c c2 36 39 82 34 8d cd f6 1f 6d  m...N.....g....U.....L.69.4....m
100163e0  36 61 62 78 65 3b a2 27 f6 f5 e4 94 e8 1e 60 d3 13 29 ca e9 be e2 0d fe 9f 61 72 57 95 a8 bb 19  6abxe;.'......`..).......arW....
10016400  a4 14 dd c4 3f ee 50 50 5b b3 2f 35 60 97 5c 9b 7c b2 00 23 ed 41 42 b0 00 59 f7 f4 c1 df 85 32  ....?.PP[./5`.\.|..#.AB..Y.....2
10016420  25 d0 45 04 30 12 18 a9 3f 3f b8 bb 83 5c 36 ae 51 e4 40 5f 7a 7c 8b d2 7e ba 07 b8 3f 67 3c 29  %.E.0...??...\6.Q.@_z|..~...?g<)
10016440  c0 02 f8 45 e5 3c 37 54 72 77 5b 6c 20 23 62 4d c7 b7 39 ac ea ca 45 0d 04 88 e4 b0 59 0d b1 68  ...E.<7Trw[l #bM..9...E.....Y..h
10016460  e6 d7 1e 3f 36 01 c8 75 be 68 da 47 70 35 ba a1 93 4d 37 3c e6 d8 b3 4c 52 04 ea 67 05 28 a9 74  ...?6..u.h.Gp5...M7<...LR..g.(.t
10016480  b6 d4 df dc a2 f8 cf e1 c0 df 6a fa 08 06 29 37 12 38 a7 fa e9 80 3f f7 d4 d4 3c 7f 78 8e 7d c3  ..........j...)7.8....?...<.x.}.
100164a0  e1 df bb ef a3 28 3f 48 62 90 8e 14 fe 83 9e 4b 05 11 46 b9 51 67 86 40 2a c3 0a 64 14 17 e5 d8  .....(?Hb......K..F.Qg.@*..d....
100164c0  9d 14 64 6b 2d 5d 6a 0f e7 dd 01 5e b2 0c 19 26 06 92 e2 a5 97 4f 90 4a 71 c5 5a 23 20 70 0d 53  ..dk-]j....^...&.....O.Jq.Z# p.S
100164e0  8c be 56 a7 24 19 08 b5 9d 79 58 6c 56 45 fb 32 0b 28 51 d9 24 0b a7 28 f9 2f f5 01 e5 85 04 36  ..V.$....yXlVE.2.(Q.$..(./.....6
10016500  7e 92 7a 71 3d f8 75 fc 6d 05 30 76 79 42 10 25 8f e9 9e e7 fb f8 7d 2a 41 0a f6 ee a7 31 a7 cf  ~.zq=.u.m.0vyB.%......}*A....1..
10016520  58 86 5f d5 45 39 13 47 c1 0b d5 75 13 48 bd 0d 65 6e 6c 56 d9 17 83 3a 24 85 48 18 b5 00 81 fc  X._.E9.G...u.H..enlV...:$.H.....
10016540  c9 40 83 c5 f7 62 3c 2d 1f a5 9b 43 38 f0 05 f1 be 48 40 c5 fb 6d 23 b9 43 a5 ca 50 65 ef 12 d1  .@...b<-...C8....H@..m#.C..Pe...
10016560  69 67 55 84 af 51 a7 69 5b f5 ae 07 fe 49 1d 0a 83 b9 dc 16 12 0d 95 6a 5a 22 03 3b b7 30 fb 68  igU..Q.i[....I.........jZ".;.0.h
10016580  c8 3c 52 c0 c2 5e f8 c8 9a 4c 65 e9 3d 89 2a da 2c ac db b0 20 3a 07 f3 c4 3f f5 a2 66 12 7f 0d  .<R..^...Le.=.*.,... :...?..f...
100165a0  30 cb f0 59 44 c7 aa f5 9a 12 27 31 34 91 d6 bf a3 df 46 a1 6c 12 3c a1 32 aa a4 f2 5a b1 57 a1  0..YD.....'14.....F.l.<.2...Z.W.
100165c0  45 81 75 de 61 e3 c9 e1 54 59 58 d6 eb b6 5d be 38 6c 50 79 1b d5 8a bb 4c 85 66 39 98 ba ae 35  E.u.a...TYX...].8lPy....L.f9...5
100165e0  b7 df 86 98 c1 c1 7a 62 e2 14 02 08 ed bf 55 a6 33 5c 7d b4 2c 18 0f 71 76 c5 ce d9 2f 99 0f ce  ......zb......U.3\}.,..qv.../...
10016600  07 43 49 8c 09 0a 08 97 70 5f 90 5e 6f a0 4d bb 24 8d 34 59 73 d1 03 66 e8 73 8e 10 fb a5 db fc  .CI.....p_.^o.M.$.4Ys..f.s......
10016620  d2 0d 6d 4c c5 05 0e 70 ba b4 ce 9f 4e 53 cb 58 cf c5 35 6f 0d a2 95 33 f2 42 66 52 7c 20 ac 2e  ..mL...p....NS.X..5o...3.BfR| ..
10016640  a6 eb b5 93 b6 33 45 b0 c5 bb cf 06 27 ec 9a 34 59 17 a5 ec 28 db 2b 02 c7 f0 ae f7 43 f4 b8 20  .....3E.....'..4Y...(.+.....C.. 
10016660  34 a0 04 50 c6 d9 b0 22 41 73 08 33 d4 e0 1b 7f b7 8c f0 cb 90 da 5b 7b 8a e8 5e 2d 68 e2 f4 1d  4..P..."As.3..........[{..^-h...
10016680  85 41 73 d1 8b 66 51 13 31 f2 54 66 e7 91 97 fc c7 50 7b 0d 81 c6 4a 7d 2a 2c 1e 0d 8a 91 72 22  .As..fQ.1.Tf.....P{...J}*,....r"
100166a0  c1 70 9c ca 23 ae 52 99 be 23 b9 c5 49 9e 71 fd e8 f1 31 a8 74 43 9f 40 58 84 4f 2a ae 2f 42 46  .p..#.R..#..I.q...1.tC.@X.O*./BF
100166c0  6b 3a 19 3b fa 9b 79 8c bf 16 5a 33 49 56 ed 94 b6 ad 70 b8 7d d9 75 77 85 a9 3e be e0 bb 04 bf  k:.;..y...Z3IV....p.}.uw..>.....
100166e0  05 00 7b da 7e b9 38 d0 4d 5b dd 0a 28 3b 83 1b 89 c7 eb f2 86 7c b1 2c 8d 19 e6 b5 d5 48 3e 1f  ..{.~.8.M[..(;.......|.,.....H>.
10016700  eb f3 17 08 6f 2c 1e c8 65 f0 27 f8 e9 4a 5c db bd da eb 02 39 52 ad 64 19 91 69 e7 79 ce 88 9f  ....o,..e.'..J\.....9R.d..i.y...
10016720  49 75 68 48 d6 2e ef 96 d4 32 5c 98 bb 41 87 56 09 36 02 f8 19 11 9e 6b 6c a8 e1 7e 2c 88 85 9c  IuhH.....2\..A.V.6.....kl..~,...
10016740  f4 c6 ff 4b dd a4 bc 89 f0 fc 34 03 db 49 2c 77 31 c1 35 99 48 9c e2 d2 fe 1c 97 16 2c ca 6a a8  ...K......4..I,w1.5.H.......,.j.
10016760  74 58 d4 54 1f b2 4a 39 5d f1 d3 81 f2 c6 ec 3b 8e 0b 62 30 6f 88 46 41 9e 11 f5 0b 00 60 0e c1  tX.T..J9]......;..b0o.FA.....`..
10016780  9d 60 89 b3 6b 98 ae 3b 5b af 58 79 6f 1a ee 33 b2 5c f2 20 af 9f 62 47 3a 0e 6b 98 57 ca fc f9  .`..k..;[.Xyo..3.\. ..bG:.k.W...
100167a0  eb 26 f7 df 25 2d f6 87 49 06 dc 06 3b 16 5c d4 e4 0b 10 44 7b ca d2 8a 4a 83 eb e8 6a bd 2e e6  .&..%-..I...;.\....D{...J...j...
100167c0  c2 0a 2a d8 f0 59 c5 14 bc e9 d1 c6 48 73 d5 90 89 30 aa 44 2d cb ba 04 4e 38 f1 b5 34 b8 3e 61  ..*..Y......Hs...0.D-...N8..4.>a
100167e0  7d 39 6e f4 05 d4 56 37 ce 21 45 fd 91 c1 1b de 9d c0 44 24 cc 68 ca 23 da ad db 32 6e 05 c4 71  }9n...V7.!E.......D$.h.#...2n..q
10016800  97 63 4a 63 3d ab 9c 6d a3 a9 ad c6 63 1a 46 20 2f 72 d0 ee 22 08 cc 29 c7 f7 3c b2 0f 86 dd ee  .cJc=..m....c.F /r.."..)..<.....
10016820  1b fc ec ad 6c a4 cb 43 d6 66 23 43 7b 7a e6 b9 56 d7 81 60 65 4d 27 c7 5e a1 a0 c9 ce f0 a0 96  ....l..C.f#C{z..V..`eM'.^.......
10016840  fc 55 95 93 11 c8 00 72 0d d0 54 4e bc f2 b1 d7 6b b4 72 5f 01 5f 13 9f 75 f3 e1 e7 b0 24 0e ff  .U.....r..TN....k.r_._..u....$..
10016860  c9 b4 67 21 74 4f 05 45 4d 6a f5 69 c0 ad d1 8f a4 aa 87 56 84 54 6b 36 f8 bd 49 dc d5 3f 74 2a  ..g!tO.EMj.i.......V.Tk6..I..?t*
10016880  26 b6 c9 b1 ab e2 07 66 f0 55 0c 7d 8e 72 22 d9 fd 5b e2 91 d0 ac bd 06 36 34 de 81 41 7a 45 72  &......f.U.}.r"..[......64..AzEr
100168a0  f5 b2 fe 05 b4 66 86 59 d7 d4 1a f9 d4 e2 3d d4 e1 71 4c 8e fe dd 35 3c 54 de a1 52 f4 fe 13 fc  .....f.Y......=..qL...5<T..R....
100168c0  ad 10 8f 6b a4 dc 45 b8 36 38 f3 8a f5 3d 09 8e b2 19 48 05 6b 5a d1 07 3e 02 08 84 eb 4e 76 3c  ...k..E.68...=....H.kZ..>....Nv<
100168e0  b4 19 78 dc 33 c5 32 41 6b b8 1f 2a c4 b8 a0 d3 bd c4 1c ca 12 14 d7 5a 3e 2d 7b 4c 51 1c cb a4  ..x.3.2Ak..*...........Z>-{LQ...
10016900  05 f2 93 23 5e 4f 90 0b 58 7d 7b f1 e9 86 39 c1 96 01 56 ec 59 ff ea 03 01 93 fd ae cd e2 ef ff  ...#^O..X}{...9...V.Y...........
10016920  53 eb a8 d3 c3 2c f7 0b ce 34 13 b5 1b 9f 27 ca fc 0f 4b 47 81 52 29 e7 0d 68 97 b4 27 bb 8d 61  S....,...4....'...KG.R)..h..'..a
10016940  17 1f bd 5b 4a 81 2a 36 29 47 b6 21 a4 86 06 8a ba a2 dd 75 50 54 72 88 b7 d3 b2 ba 51 fe e7 22  ...[J.*6)G.!.......uPTr.....Q.."
10016960  f2 90 64 2d 9a 6f 35 5d c2 76 f6 3d 7a f0 d2 93 dc 2b 06 fb 0e ed fb 6f 1c 29 c1 d4 a0 02 d7 00  ..d-.o5].v.=z....+.....o.)......
10016980  07 df 0e da 2d 9e d6 8c d0 92 6e a8 14 b2 4d ee 79 56 a3 54 a7 cf dc d5 4f e6 29 cc 60 f3 4b 43  ....-.....n...M.yV.T....O.).`.KC
100169a0  80 c4 30 7b d7 bf 4a df 5c b4 cf c5 72 d0 09 d5 d1 98 33 9f 02 67 a0 62 2e 56 4e 09 49 12 2d 89  ..0{..J.\...r.....3..g.b.VN.I.-.
100169c0  38 c7 39 d7 42 fe 67 4c 6e 24 a8 a3 e0 ff d3 7e bc 4a 44 1d 64 70 1f 55 03 6e 25 69 7f 75 bd ce  8.9.B.gLn$.....~.JD.dp.U.n%i.u..
100169e0  66 d4 50 ee a9 90 95 3a 4a f3 1a 2d 69 5f 07 a6 be 89 59 73 65 cb 22 39 94 86 83 2d 82 e0 df 3f  f.P....:J..-i_....Yse."9...-...?
10016a00  1f 54 34 a7 f8 c3 87 17 78 33 94 53 66 78 53 a1 03 88 a5 16 b2 ab 9c 9c 49 51 b5 90 40 25 54 36  .T4.....x3.SfxS.........IQ..@%T6
10016a20  1d 3d 3a d6 79 7b 77 61 2a 1a 74 7f c0 24 42 55 72 64 5a 6c 9d 6c f1 16 a9 de 30 62 84 fa df d9  .=:.y{wa*.t..$BUrdZl.l....0b....
10016a40  fd 97 bc 1c 09 2e 51 94 d0 c5 3e 1e d4 8e 70 cd df 0f ee 54 e9 74 9d 97 63 24 1a 86 87 40 a9 75  ......Q...>...p....T.t..c$...@.u
10016a60  69 70 68 d1 8c 88 6e 76 64 2e 24 bf fe d0 51 0b b0 64 9e 95 d0 03 84 69 6f f9 1e fb d6 56 bf be  iph...nvd.$...Q..d.....io....V..
10016a80  b6 c5 7a e4 7d bc f8 95 11 a4 76 4f be 08 f0 6c 18 25 1b 09 23 e6 aa fd 71 7e 8c 73 e9 87 5f 5c  ..z.}.....vO...l.%..#...q~.s.._\
10016aa0  ad 71 77 0f ea a8 da 79 05 56 7a c3 d9 d8 47 47 29 b0 96 d0 41 5b d2 75 93 a1 c9 5e c0 0e 08 af  .qw....y.Vz...GG)...A[.u...^....
10016ac0  b2 1b a5 2c c4 be b8 7d e3 46 89 25 23 f0 d1 cf 8d 66 80 75 26 1f fd ca c4 22 9f 48 ce dc 21 02  ...,...}.F.%#....f.u&....".H..!.
10016ae0  fb b5 ed 01 b4 0a d1 cc 7c 26 b5 65 06 77 ae ea 28 1d 4a d0 31 c3 ca e5 a6 28 fc 12 60 90 a1 8f  ........|&.e.w..(.J.1....(..`...
10016b00  45 af 59 1a 36 43 b5 38 66 4f f6 66 2a 80 e4 b1 2e a4 50 4e 0f 11 f2 e3 29 6a e9 62 07 6c ae 2c  E.Y.6C.8fO.f*.....PN....)j.b.l.,
10016b20  ce b3 13 87 5b 15 f6 55 d2 b0 8a e6 5d 0c 1d 4a 65 de 33 2c e1 b0 7a ce bc f0 ba fd 73 7a 2c 48  ....[..U....]..Je.3,..z.....sz,H
10016b40  7b 14 ff 58 e0 eb 74 65 a0 8a 99 cb 32 62 4e 52 54 a9 64 7e 6a c3 1d 7a be 69 e6 07 04 ab 7b fe  {..X..te....2bNRT.d~j..z.i....{.
10016b60  c5 b3 e3 1a 82 24 96 20 be 7d 2e 1c a2 f9 4f 08 da 85 90 24 02 f1 2d cd 14 5e fb a5 45 4d 57 14  .....$. .}....O....$..-..^..EMW.
10016b80  3f 8d 09 8f 6a 54 7f 23 94 66 1f fa bd b5 be 19 f7 e7 73 70 4d 6b 08 23 60 67 24 74 c7 3e 21 1a  ?...jT.#.f........spMk.#`g$t.>!.
10016ba0  93 02 84 48 cb de f8 eb 9a c0 f6 89 33 24 81 a2 10 eb 4d a7 c9 97 7b eb 6a 6b c4 06 d4 e0 1c 56  ...H........3$....M...{.jk.....V
10016bc0  6d b5 99 5c 8e cb 1f 8f a2 1e 22 b5 b9 fb 82 a5 fd e7 89 91 ce a8 03 f8 f3 55 dc 1a 70 63 71 d4  m..\......"..............U..pcq.
10016be0  77 90 d5 0d f6 17 bb 4e a2 64 76 63 a7 4a 44 c6 d3 b6 71 a4 bc dd c9 38 e1 d0 5b 23 b3 3e cd ad  w......N.dvc.JD...q....8..[#.>..
10016c00  53 49 60 8b ed 47 47 0b 38 8e 94 b0 3c 75 a3 a2 5c b9 23 9b de 28 28 6f d2 93 c6 7a 1a 28 57 95  SI`..GG.8...<u..\.#..((o...z.(W.
10016c20  9b 74 26 aa 5c 16 b4 d3 fd 44 77 4f 9b bb 4e f3 dd bb d0 50 6a 2e 06 91 71 f3 8c 06 63 7f 7e 94  .t&.\....DwO..N....Pj...q...c.~.
10016c40  84 ac 96 bf f8 4d 61 15 44 d3 d7 cb ea 75 c4 05 70 c8 30 71 ad ec 8e 6d 5b 41 98 5f 97 85 73 db  .....Ma.D....u..p.0q...m[A._..s.
10016c60  ff 75 47 bb 22 9a 8e 16 db fe bf b3 4c b3 30 38 ce 74 50 12 11 75 06 86 da ea 06 ae 2d b3 21 12  .uG.".......L.08.tP..u......-.!.
10016c80  ee 47 25 49 1d fe 62 23 b8 5e 71 3d 2c 4f 81 fd f0 7a c6 d7 e5 a1 e9 73 87 d5 d7 77 43 82 8a 3e  .G%I..b#.^q=,O...z.....s...wC..>
10016ca0  11 56 89 93 9f c2 2c 55 3b 8c 83 77 fc 8c 6b d6 2a 9a 16 1b 91 63 20 20 7f af 10 0b 42 af b3 1b  .V....,U;..w..k.*....c  ....B...
10016cc0  aa b7 d8 93 bd f7 95 1a ce 56 4f 69 38 e1 cd 60 da a0 b2 02 b4 c7 bb 12 61 da cb 0d a3 a5 53 2c  .........VOi8..`........a.....S,
10016ce0  f7 13 17 8a 79 38 6e d2 27 42 c8 af e5 97 06 8e 4b ee 1b be ec ad ed 6c 10 1b 25 1a 93 21 24 2d  ....y8n.'B......K......l..%..!$-
10016d00  35 75 38 28 16 dc 55 c8 a0 22 78 cd 3c 3c 2d ed 6c b2 38 5a 4f 85 2b 6d ed 70 6d 5c ae dc 06 a4  5u8(..U.."x.<<-.l.8ZO.+m.pm\....
10016d20  47 8c 82 97 49 55 7f a2 3a 37 2a cd 00 ca 6c 0b 9b 47 7c 9e ef 88 a3 9d 88 6a 41 2e c5 51 80 54  G...IU..:7*...l..G|......jA..Q.T
10016d40  7d 41 ce 88 54 7f ae 91 c6 f2 24 66 83 ae 76 11 77 ef 66 6d ac 43 a3 a8 02 b1 c1 23 b3 70 13 10  }A..T.....$f..v.w.fm.C.....#.p..
10016d60  a6 a5 fc b8 4f 47 12 0a a3 6f 6f 08 1d cf 51 02 66 ac 03 bd 31 a4 bf 9e 45 fc ea f8 c5 b7 03 1b  ....OG...oo...Q.f...1...E.......
10016d80  e8 0d 6d a3 36 76 a7 8c d8 ae 93 15 3c be b0 e6 63 9d 68 fa 29 84 b8 29 fd 20 87 22 f6 2b 1d e0  ..m.6v......<...c.h.)..). .".+..
10016da0  10 85 62 7d c5 b7 77 1d 5b c0 9e 0b 94 91 27 71 b8 93 5d 9d cb fc 9b 96 e8 0a d5 3c fe 74 23 65  ..b}..w.[.....'q..]........<.t#e
10016dc0  22 3c 00 aa ba 0a 54 d5 59 fb 4f 09 7f 11 55 ea 7e 4c 73 27 7d 53 7e fb ff ed ca 47 cf 59 bf c7  "<....T.Y.O...U.~Ls'}S~....G.Y..
10016de0  a0 1e 7f d3 f5 9c a3 24 de 73 0b 58 4e 2e 03 58 eb be 8a 85 81 c1 a6 49 5b fa 61 67 dd 70 47 a6  .......$.s.XN..X.......I[.ag.pG.
10016e00  ca a4 d6 ff ba 73 00 65 f7 e7 ee ee 0b d9 a4 e1 bb 25 f4 85 45 88 6e 40 47 7f dd 8d c0 8c fa 17  .....s.e.........%..E.n@G.......
10016e20  98 89 90 90 64 69 04 9f ee 4a 67 1a 4c bf 10 a1 61 48 55 30 3a 7f cb 33 7d 41 a3 11 95 12 91 8c  ....di...Jg.L...aHU0:..3}A......
10016e40  59 f5 1d bd 72 b3 ad 61 2a a1 5a 0a 85 7c b5 02 08 9b a9 ad 35 c0 a9 13 bb 72 21 79 be 43 9a 49  Y...r..a*.Z..|......5....r!y.C.I
10016e60  a3 15 75 5a 1b e4 fe 0a a2 c8 07 ab 82 2d 63 a3 c4 c9 fc 76 b8 d7 93 f6 6e 29 36 05 b6 12 ae cd  ..uZ.........-c....v....n)6.....
10016e80  4f 6b 47 b1 c3 8f 5c 1d 64 df 36 f1 e2 d6 8e c5 63 0e da c7 78 77 90 d8 be 18 40 9d f8 91 66 9f  OkG...\.d.6.....c...xw....@...f.
10016ea0  dc 39 8a e7 7e 7d 7d 2b b5 70 cf 1d ee a6 83 05 f1 de ce ef 4d fd e0 8a 6d f2 f3 f8 e1 f4 59 bf  .9..~}}+.p..........M...m.....Y.
10016ec0  a9 7c 22 01 a9 43 31 78 7e 13 64 74 e2 a0 71 0e ad a2 12 81 9c 4e f5 0d 74 1e 2c 62 6b ad f6 3b  .|"..C1x~.dt..q......N..t.,bk..;
10016ee0  d2 26 5b 15 c0 c5 24 2f 04 5c 84 43 45 ea ac 83 f5 ec 39 b7 30 25 87 be cf 7a cf 9b 24 2a c2 e4  .&[...$/.\.CE.....9.0%...z..$*..
10016f00  8e a7 d2 d1 56 f6 d0 86 d8 1b d8 39 00 e2 9b d5 76 40 25 16 93 d8 d7 9c bf 21 0a 9a 88 66 c8 dd  ....V......9....v@%......!...f..
10016f20  e7 ea 6a cc 08 31 14 c4 ee 33 41 54 52 d5 7d 7b a4 6d db e6 36 4d 12 8a aa d4 2e b3 75 68 9b 82  ..j..1...3ATR.}{.m..6M......uh..
10016f40  a1 05 0f 8c 57 f9 ff 1d 3e bb f1 cc 50 d8 6e 83 02 b4 2f 9d 57 da 65 4d 58 4c 5d 65 b6 8e 25 cd  ....W...>...P.n.../.W.eMXL]e..%.
10016f60  4b 06 a2 4e ab 90 85 9e 76 4f 29 39 10 76 71 2f eb 54 bb fe cc ec b4 22 c5 74 46 b7 e4 70 c5 bb  K..N....vO)9.vq/.T.....".tF..p..
10016f80  46 49 56 c0 0c 2f 4f 6f fb 76 c3 67 32 a8 04 44 a0 07 5f 57 2a d4 7c 7d df 7b 3e 0b 40 e5 1b dd  FIV../Oo.v.g2..D.._W*.|}.{>.@...
10016fa0  89 2e bd c7 36 1c e7 56 71 f0 d1 a8 cd 5b b0 f9 8c 1d 3a d6 37 14 c5 83 84 bd b5 2a 82 54 7e be  ....6..Vq....[....:.7......*.T~.
10016fc0  cb ee a7 c4 2f 60 53 65 9b a9 13 14 4f f7 76 a8 9d c0 22 6c a2 7b 99 bc 2f c4 b2 77 33 bb fb 2a  ..../`Se....O.v..."l.{../..w3..*
10016fe0  a8 b9 be fb 77 31 49 4a df 87 cc 00 6b 9a 37 68 cc d0 b0 ae 37 31 26 14 36 13 1e cb 4d b1 73 ca  ....w1IJ....k.7h....71&.6...M.s.
10017000  df 26 c0 f4 bc 01 c2 51 52 84 67 67 26 df 88 09 8b f9 0a b2 4b be 8e 7b ea bc 69 f0 c1 67 06 f2  .&.....QR.gg&.......K..{..i..g..
10017020  eb 4f 61 90 87 d3 5b 7a fa b3 83 b5 4e c4 eb 63 e6 75 22 06 20 0f 09 7f 44 0e 6c d9 3d 23 e0 92  .Oa...[z....N..c.u". ...D.l.=#..
10017040  6c b3 6e 4d 4e b6 a7 aa 86 3b 7f 7a 32 46 f5 0b 7c 4c 86 47 a0 08 c7 13 f4 2c a6 17 19 4a 89 9f  l.nMN....;.z2F..|L.G.....,...J..
10017060  12 68 cd 5c eb 9e 84 4d 23 2e 65 e5 6b 4b 56 86 21 52 ec b3 99 c2 f3 75 9c 1f 94 0f c4 d1 04 73  .h.\...M#.e.kKV.!R.....u.......s
10017080  d8 74 22 af 00 15 c3 d9 03 ce 36 b4 99 60 e3 08 22 e2 82 a3 d8 2e 1a f7 d8 8f cd 9d 36 0c d4 98  .t".......6..`.."...........6...
100170a0  a6 ed 50 a3 ab ee b3 5d d6 d4 29 8a 31 94 3f 8d d2 c5 d6 16 66 d7 a3 68 65 98 d4 5e cf 49 12 5c  ..P....]..).1.?.....f..he..^.I.\
100170c0  f4 ec 6f fa 85 e1 45 fe ab 9a 86 d9 b3 31 4e eb 56 28 e6 a3 92 50 03 68 43 c8 ac a7 eb 7b 6b 02  ..o...E......1N.V(...P.hC....{k.
100170e0  cf be 62 cd 9c 5f 53 83 91 25 25 bd 4f 6c 29 9e e9 51 06 2d 98 d3 ad ef 72 d2 e1 a6 2a ac 08 0c  ..b.._S..%%.Ol)..Q.-....r...*...
10017100  90 59 38 dd 01 8f 5e 01 23 62 e6 c8 af 28 42 61 35 e3 d8 ae cf 73 9d 7b 9f f7 37 a8 b1 32 ad 2a  .Y8...^.#b...(Ba5....s.{..7..2.*
10017120  58 76 bf b9 60 0a 90 6d ed d3 e5 fc e0 ee 71 da a4 aa 37 65 83 9a 24 8b 0a 99 fc e8 1b 6f 49 74  Xv..`..m......q...7e..$......oIt
10017140  76 86 a3 8e 8e 84 2a ea 6d c7 b4 a1 b8 a7 89 84 25 ee 46 36 6c 5d c5 a6 4d f8 14 38 a6 b0 1a 2f  v.....*.m.......%.F6l]..M..8.../
10017160  40 85 02 60 a4 08 22 29 96 02 25 9c 87 5a e3 12 94 30 69 2f 39 e3 69 09 e4 62 1b d5 db 00 18 08  @..`..")..%..Z...0i/9.i..b......
10017180  c5 b5 fd 4d 42 25 93 39 f1 ad 8e ca 1a 45 4a fe 9f d7 ff 4c d3 3f d4 02 86 2b d8 58 55 9e e4 84  ...MB%.9.....EJ....L.?...+.XU...
100171a0  33 d2 d2 4d e4 d8 51 f3 a1 96 a8 4a 0d c2 1a 4c 67 d2 e6 22 22 07 ef 8c 89 ff 39 3c df 42 72 bd  3..M..Q....J...Lg.."".....9<.Br.
100171c0  1f 9d 28 9e c9 76 1b 3e 4c 40 2d d5 45 c7 56 db bd f3 3d bf 89 6a 30 90 13 81 a8 2d 9c 6e 91 e2  ..(..v.>L@-.E.V...=..j0....-.n..
100171e0  fd 90 f2 fe 94 e0 38 ae fb ad 76 aa 77 cc ae b7 56 a4 d4 cf b3 21 f1 21 32 19 c7 96 da 72 e7 c9  ......8...v.w...V....!.!2....r..
10017200  92 9e ea 68 ea ee 3e ef a4 99 4b 19 d2 b5 37 6e 8f b6 44 58 05 4b c6 9c 5e 9d fb 9d 90 32 1f b9  ...h..>...K...7n..DX.K..^....2..
10017220  ce e8 95 fe b0 85 5a 07 d1 1a c8 db ab aa 8c 22 05 7a 34 df ce ec d0 b6 f4 02 62 f3 d0 fa 8b b9  ......Z........".z4.......b.....
10017240  76 a0 1a 66 42 65 02 df fb 44 58 a7 f9 4f b3 2b fb 78 04 e6 68 12 44 e2 3c c9 bd 60 3a bb ba ea  v..fBe...DX..O.+.x..h.D.<..`:...
10017260  89 ac 3f 11 3f 4c 8c a8 bd 2a 51 23 74 7a 17 4e 8b 16 94 4a a1 93 0a 0e 3c b5 d5 a9 a7 5a be 13  ..?.?L...*Q#tz.N...J....<....Z..
10017280  85 c4 5f 8c 60 61 bc ef 2b 1c 4c e1 8f 3c c5 1d 1c 73 b8 62 f8 16 be c8 4c c1 b3 d6 c7 8d 27 c8  .._.`a..+.L..<...s.b....L.....'.
100172a0  2c ff 4a fc 00 e5 e7 3b 76 0f 65 df 5b f6 1b 91 62 30 15 99 e7 23 03 e1 71 2d f1 03 e6 8e 63 de  ,.J....;v.e.[...b0...#..q-....c.
100172c0  92 49 50 cc 14 ee bc 88 60 e4 0d a4 32 43 84 2a be 49 51 9b bb 43 85 fb 88 7c 72 1a 07 c3 a9 e5  .IP.....`...2C.*.IQ..C...|r.....
100172e0  05 33 ff 6a 4f fb 7d eb 77 26 49 c9 df 52 d2 1c f8 1c 0e b0 9d 4c 84 3c 54 b9 91 fa 46 80 1d 4e  .3.jO.}.w&I..R.......L.<T...F..N
10017300  c7 1f b2 1b 0f 7a 23 c7 8e 4d 58 56 1d 19 a6 2e d1 ff 71 14 8a ae 4e 6a 15 cc 58 6d 4d 82 7e c6  .....z#..MXV......q...Nj..XmM.~.
10017320  e0 47 77 72 b6 63 1d 82 d8 3e 31 a6 0d 6b c3 7d 1d 3b 3e e8 51 e7 f8 71 c1 0b ab 3a cf fb 77 0a  .Gwr.c...>1..k.}.;>.Q..q...:..w.
10017340  8d b3 a4 d6 7c a0 a3 4c fa 9c 95 7d bc a8 58 ae 42 ad 10 c6 73 ff e1 f4 47 59 9e 19 03 2a 2a fa  ....|..L...}..X.B...s...GY...**.
10017360  a0 63 e9 39 69 84 04 ce 13 06 70 a8 62 6e 59 00 b8 26 5b 4b 0e 63 b7 f8 30 d5 ce 97 23 3e 6b c9  .c.9i.....p.bnY..&[K.c..0...#>k.
10017380  bd 7d 1d 95 5e cc 6f 3a cd f2 e4 c8 49 2f fd 82 05 57 6d ee 91 8b e5 87 58 bf df c9 65 90 dc c8  .}..^.o:....I/...Wm.....X...e...
100173a0  24 a1 3e 8c b5 e6 28 0d 5b d9 2c 6e d3 84 28 17 62 4f 82 b3 21 0b 22 55 51 f6 fa 95 97 bb fb 4f  $.>...(.[.,n..(.bO..!."UQ......O
100173c0  75 bd 72 16 11 bc 88 88 d4 9d 47 cf 35 a4 a2 51 db 85 67 1f b5 c4 3e 41 b3 c8 2f 89 bb 49 5e 36  u.r.......G.5..Q..g...>A../..I^6
100173e0  85 60 0f 00 3e 8f 8a 13 73 a8 79 61 65 26 f7 42 b5 59 1f ff 26 8d 75 0c a0 f5 65 1c d7 01 88 19  .`..>...s.yae&.B.Y..&.u...e.....
10017400  d6 d7 89 73 74 28 d3 60 f0 f7 31 06 31 04 e4 5d 16 45 36 d5 d2 e9 7c 15 40 46 29 bb bc 0c 4f 79  ...st(.`..1.1..].E6...|.@F)...Oy
10017420  60 db d1 29 3f 8a a6 d0 2f 72 73 26 90 f0 47 a1 00 c1 97 89 af e1 4d bc db 0c a0 fe 2c 42 7a 2e  `..)?.../rs&..G.......M.....,Bz.
10017440  f4 da f2 dd 0e c7 65 23 82 37 12 11 ae 71 89 a6 88 4a 78 f2 a6 39 9f 9e 82 d7 8f 66 4b d5 5f d8  ......e#.7...q...Jx..9.....fK._.
10017460  e3 40 f0 45 a4 34 ca c8 19 42 da 7f f0 0d 12 b0 71 d1 73 0b 82 a0 f7 9a c4 51 8f 16 95 d4 d4 2c  .@.E.4...B......q.s......Q.....,
10017480  21 9f c3 a1 6e 61 a9 26 f6 5d 4e f3 36 47 04 5a 0a 85 4d 78 0d 13 5f 5d 80 74 40 ac b2 79 77 87  !...na.&.]N.6G.Z..Mx.._].t@..yw.
100174a0  08 56 87 5c f5 47 06 cd 55 1e 94 59 5e a2 6c b0 14 f1 0e 33 f7 59 d2 79 a0 a1 5b 5e e3 97 72 0e  .V.\.G..U..Y^.l....3.Y.y..[^..r.
100174c0  ad 31 87 2d 46 67 65 22 43 f3 90 6f c9 d4 6b 07 cc b0 9d 30 71 99 71 ab 42 46 5f 5f 34 ee 9d 35  .1.-Fge"C..o..k....0q.q.BF__4..5
100174e0  0c 33 5c 56 5b be a4 70 74 c6 63 84 08 8a 19 53 21 c4 ea b8 e6 f1 8c 90 aa 36 cb 64 9e d3 5e 77  .3\V[..pt.c....S!........6.d..^w
10017500  42 ab 11 8a 93 fc f4 fe 3a b0 0a b8 ce 03 04 c8 f8 72 d9 76 6f 46 89 48 cf 25 99 7a 40 e9 68 0b  B.......:........r.voF.H.%.z@.h.
10017520  83 60 3f 19 08 0e ca 3c 59 e8 a2 d6 c8 25 ee 50 cd da 9a 9f ea e0 be 35 50 05 b1 09 36 8c aa 99  .`?....<Y....%.P.......5P...6...
10017540  c0 d7 bd 32 79 c6 7a 6a b4 99 a6 14 f1 94 b7 76 61 ad 5f 55 cc 4a 9f 51 c4 dc 1b 65 8e b1 72 e7  ...2y.zj.......va._U.J.Q...e..r.
10017560  5f d7 15 b3 5c 20 8a c2 ee 25 dc 4d 19 57 69 80 4f ce 63 72 3b c0 93 ea a9 10 55 c5 a8 6e 9b 18  _...\ ...%.M.Wi.O.cr;.....U..n..
10017580  8d 64 4f eb 5c 84 50 58 2a 03 ab 40 8d f9 b6 25 e7 cc b0 36 4d 8c ec 90 3d 18 7c 55 54 b7 ad 8e  .dO.\.PX*..@...%...6M...=.|UT...
100175a0  15 db 69 43 e2 da ce 3e cc 16 a6 62 d7 3a 5c 38 6c 4e 9a 85 84 4a 06 3c 18 09 cb 27 2c ad 2a 9d  ..iC...>...b.:\8lN...J.<...',.*.
100175c0  fb 02 b9 5e 64 17 1c 9d 4c 87 ed fe d9 6f 16 cd 61 aa fe 38 ce 41 b5 8c d7 f8 7e e3 6c e7 d5 32  ...^d...L....o..a..8.A....~.l..2
100175e0  51 f9 6a d5 c4 91 5b 25 42 06 0c c4 b7 fc d1 a9 d2 9e e4 16 b3 d4 7e 03 69 4d 39 18 54 68 19 c4  Q.j...[%B.............~.iM9.Th..
10017600  34 fe 9c bc 96 e1 b2 87 28 b6 0d b1 e1 5f c9 2b 9d b2 c6 62 e7 a8 68 3c c1 20 6a f3 18 7c 42 47  4.......(...._.+...b..h<. j..|BG
10017620  5b 59 c3 eb 32 f1 e4 13 ef 80 99 d8 b7 2d 8c 66 ac ea f5 c9 ce 45 b5 c5 f2 68 c0 92 bc dd 60 5d  [Y..2........-.f.....E...h....`]
10017640  af 56 06 8d 30 db ad 82 f8 0e 76 44 72 70 5b 20 3d b1 1c 6f c2 76 2c 82 4b 87 c1 11 30 f2 bd b1  .V..0.....vDrp[ =..o.v,.K...0...
10017660  11 29 cd e9 6c 43 b2 a3 1d b7 1c 6c 84 8d 1d 47 2b 6b 53 95 17 e5 bb 07 e8 fe 01 f4 b0 33 c3 4a  .)..lC.....l...G+kS..........3.J
10017680  31 f0 ad ce 9d 6e f6 e1 d8 16 0c 91 2c 82 08 01 ae 8f 48 28 1b 90 47 9d 14 12 e3 0b 50 b6 2f a4  1....n......,.....H(..G.....P./.
100176a0  0b cf 17 89 57 49 ce b2 00 bb f6 7a 15 c2 b4 6e da 52 7b 63 fe a1 a4 32 33 f5 d0 b0 12 a3 f2 e3  ....WI.....z...n.R{c...23.......
100176c0  b3 c2 2c e2 aa bf ee 3f 37 e6 a1 64 10 8f 74 f0 7a 5c 09 7a 63 df bd 53 a4 fc 4e 6d be 71 a9 05  ..,....?7..d..t.z\.zc..S..Nm.q..
100176e0  67 2a f8 c4 5f 86 52 88 62 3e 41 3d 83 8a ce a6 f5 cb 36 83 d2 67 92 79 47 ca 2a 3e 29 69 cf 63  g*.._.R.b>A=......6..g.yG.*>)i.c
10017700  30 20 e3 2b d6 fc 2e 22 95 4a f6 6a 48 46 74 68 b1 66 92 f7 da ec e5 20 32 df a6 2d 23 d7 86 42  0 .+...".J.jHFth.f..... 2..-#..B
10017720  10 2f 38 86 13 fc b0 2b 4a 40 3c 9e b2 32 bc e9 49 e2 3d 90 3b 31 99 3a 6c 12 e5 e9 9a b6 47 35  ./8....+J@<..2..I.=.;1.:l.....G5
10017740  04 5a cd e1 0f c4 1b 21 8c 6e ef 77 d2 45 0a 24 dd e8 60 2b 6a 0d 86 95 7e cc e6 81 76 be a0 c5  .Z.....!.n.w.E.$..`+j...~...v...
10017760  07 7a 94 3c a2 04 98 10 a6 5d ec ff 5b 04 1c 08 ae a9 e4 98 8c 6c 2f 33 2c 91 d7 ed cc cf 56 21  .z.<.....]..[........l/3,.....V!
10017780  ef 90 bf da 94 ce fd 9a db f8 a2 c8 91 a5 64 60 ca 2d e3 d6 30 61 65 5f 2d 3a d6 79 bb b9 ed b4  ..............d`.-..0ae_-:.y....
100177a0  10 c6 b0 f2 93 f0 8c d1 7b 7b 60 51 13 5a 41 9a e2 86 e1 80 43 2c b1 09 db 49 fe ff 59 3a ef 74  ........{{`Q.ZA.....C,...I..Y:.t
100177c0  dc 2a 1c b0 a0 1a e7 6e 00 10 e7 c8 3e 1f fe 14 83 c9 e0 f3 ee 58 fb 76 83 e6 8e b9 a4 66 29 38  .*.....n....>........X.v.....f)8
100177e0  05 a1 9e d4 7e 2e 24 36 d1 a1 63 e8 52 38 3e 12 5a 60 14 b8 c5 a1 c0 c5 92 c8 21 96 1f dc 9b d7  ....~.$6..c.R8>.Z`........!.....
10017800  ce ff 3a 66 9e ac 98 f0 d8 3a 0e 1f 02 cf 77 25 33 89 f3 c6 80 e2 4d ce 7c d9 a2 a8 5b 86 65 ae  ..:f.....:....w%3.....M.|...[.e.
10017820  db c0 99 67 22 9e 99 64 b2 4f 49 4c a9 e9 f8 30 21 48 0a 3b 84 cf ae d0 b4 13 88 f7 16 49 0d 40  ...g"..d.OIL...0!H.;.........I.@
10017840  66 96 6a b1 73 8c 1f ab 15 ae 98 26 b2 a5 5b 4f ba f0 a0 f8 f2 b2 2a fe ba 53 4e 98 ec 6f f7 22  f.j.s......&..[O......*..SN..o."
10017860  42 9a 74 8f 4e a8 d4 ac 9b 46 7c fa 36 8b 78 27 15 4b 5a c5 2a 18 81 a6 29 8c d3 33 85 69 63 2c  B.t.N....F|.6.x'.KZ.*...)..3.ic,
10017880  8a 44 c0 6f c9 c0 d7 d0 cf 50 30 f7 8e 5f 88 ed 8a 44 aa 1a f1 f4 c9 8e c7 47 3b be 97 00 8c 2b  .D.o.....P0.._...D.......G;....+
100178a0  14 cf da 37 3f c2 c6 f8 bb 7e 03 a4 33 3d 88 3e 00 39 48 cf 31 8f 23 03 cf 00 d6 be 03 ab a6 d5  ...7?....~..3=.>.9H.1.#.........
100178c0  0d 2e cf df e0 8c 35 01 93 b6 4c 13 de c2 0b ce dc b7 6b 8e c6 d1 e9 89 38 30 6f af e8 40 b0 50  ......5...L.......k.....80o..@.P
100178e0  4d 34 42 45 41 02 ce 46 0a 89 d7 c8 30 e7 08 77 20 46 53 37 44 84 d8 07 26 0e e4 dd b6 a7 87 d3  M4BEA..F....0..w FS7D...&.......
10017900  01 ce 51 8e 0c a8 88 c5 d4 63 eb 7c 2d bd 82 67 a8 ed 1f 1b fa 0e 5b 13 fc 80 13 16 b7 46 44 52  ..Q......c.|-..g......[......FDR
10017920  38 9e 6e 97 0b 21 68 9b ab aa a8 d5 c3 bb 67 d0 30 85 49 fe 11 c9 fa 83 22 47 a3 8e 06 d3 f3 f3  8.n..!h.......g.0.I....."G......
10017940  70 5b 96 67 37 42 94 73 72 b2 e9 73 38 55 f8 da 90 a3 4b 3e 1a 55 0f 7e 1d 43 93 02 3e d3 5d 0e  p[.g7B.sr..s8U....K>.U.~.C..>.].
10017960  4b 31 20 ad d9 fb bd 0a c4 eb 55 93 e2 fd 50 28 b9 48 af 73 0d 58 56 da dc 1c 76 cb 91 48 aa 65  K1 .......U...P(.H.s.XV...v..H.e
10017980  e5 ad 3d d4 49 48 57 54 c7 c3 58 4b d5 85 da a7 fb 20 25 97 5c db 14 43 42 57 e9 1d 4c 85 9c c6  ..=.IHWT..XK..... %.\..CBW..L...
100179a0  6b 48 7f f0 50 3d 5e 6c b2 78 c4 2c 0a 2d 6c c5 97 69 14 c2 53 5f c5 5f 1d c6 3d 32 85 94 5b e6  kH..P=^l.x.,.-l..i..S_._..=2..[.
100179c0  92 b6 6c f1 31 f1 16 84 7e fe 52 37 9c d4 8f 73 af 2d 95 bd 0c a7 f4 ef 57 a9 db 9c 1c 41 d6 f2  ..l.1...~.R7...s.-......W....A..
100179e0  07 26 79 9e aa 21 75 65 e2 e5 05 39 a9 31 e0 bf 8a dc 55 8e 3a a6 2c b7 ca c1 62 b6 82 72 13 d5  .&y..!ue...9.1....U.:.,...b..r..
10017a00  16 b9 31 d6 89 84 98 4a d7 bd 48 9a 00 c9 f8 a4 05 df e0 28 d6 64 fc ce 00 a9 e9 37 96 e2 51 79  ..1....J..H........(.d.....7..Qy
10017a20  90 b9 e3 58 75 36 a4 e6 5e 32 7f 94 19 8d 8a 5f 84 69 c0 0b 53 32 e4 86 34 12 24 43 ec cc 2f dd  ...Xu6..^2....._.i..S2..4.$C../.
10017a40  5a cc d8 a2 f5 54 f8 be b4 9c d7 7e ec f0 18 41 e0 8d 3e 5a 62 23 93 5f 86 2e ca 1f d1 62 9b 8a  Z....T.....~...A..>Zb#._.....b..
10017a60  6e e2 04 29 7e db a8 f8 4e 40 43 e2 e8 93 aa d3 07 f6 97 f1 9b a9 0b 62 fe a8 13 41 78 6a ae f8  n..)~...N@C............b...Axj..
10017a80  f4 cb 9c 73 6d 83 97 72 7e 30 e6 e1 4d a9 c7 5d fc d2 53 6b 2d e7 78 ac df eb 70 6b 4b 0b fb 3c  ...sm..r~0..M..]..Sk-.x...pkK..<
10017aa0  6b cf 35 a3 a7 8f 0f 79 87 2e 8e 59 0f f4 51 56 49 0e 1e 0a ac 76 c5 d5 e0 62 0d 9c 17 ba 4a 90  k.5....y...Y..QVI....v...b....J.
10017ac0  04 b9 57 c0 e3 f3 35 1e db bd 5b e5 60 2b 71 72 ec f1 e0 e3 1c 1a 74 60 1f 2e d2 21 95 51 34 e5  ..W...5...[.`+qr......t`...!.Q4.
10017ae0  83 1f 92 fd 82 54 bb b5 dd e0 e5 bd 07 03 e7 7c cd ae 74 ea 2c 26 b5 22 1c 7e 9c d6 16 20 f7 e5  .....T.........|..t.,&.".~... ..
10017b00  ce 11 6a 1b 32 55 8c 16 50 36 96 5d cf 8f bd c3 6c e8 9e 46 39 49 87 ed 4d f4 47 e3 29 f3 d5 73  ..j.2U..P6.]....l..F9I..M.G.)..s
10017b20  7e a9 42 47 53 fe d5 66 aa 94 c3 04 de 8f f5 fb 67 f5 32 5c 70 84 d8 80 5c 4c f6 df b5 a0 91 6f  ~.BGS..f........g.2\p...\L.....o
10017b40  7d e1 cb 3b 89 36 b9 98 7f 21 a4 90 f3 83 38 1b fa 20 b5 fb 57 3e 99 64 46 96 47 10 6f 40 12 0e  }..;.6...!....8.. ..W>.dF.G.o@..
10017b60  61 82 b6 2a 9c 5b 5e 78 21 9b a6 df b0 55 2a b4 7e 39 a7 b7 96 eb c5 41 93 21 39 3e 24 18 37 ec  a..*.[^x!....U*.~9.....A.!9>$.7.
10017b80  82 ac 43 3e 75 5d 82 e3 0f bf b5 21 f6 cb be 83 62 54 20 8a ae 47 64 38 05 99 e0 4b 4e 7c 56 38  ..C>u].....!....bT ..Gd8...KN|V8
10017ba0  1a a4 71 6f 37 fe d5 e2 a9 be e4 76 b2 75 91 23 b0 ae d9 66 13 22 2e 1e 97 67 a3 1a 27 3d c4 82  ..qo7......v.u.#...f."...g..'=..
10017bc0  68 70 ba dd db e0 7f 9a 0a 55 37 8b f3 e6 91 9b 7c ad 7f 7d 63 d3 0e ff a5 46 c2 bc b0 c3 49 66  hp.......U7.....|..}c....F....If
10017be0  f5 0b 47 44 98 84 48 3a 3f cf 52 9b 98 5a 83 8b fa 66 2d 6a e0 fa 9b 67 29 25 db 22 bc a5 ba 97  ..GD..H:?.R..Z...f-j...g)%."....
10017c00  08 a2 3a 1b 87 b8 13 12 d4 e8 b4 e3 37 38 9e 21 d7 20 87 65 ae c3 1b 32 c2 64 b0 49 80 61 00 98  ..:.........78.!. .e...2.d.I.a..
10017c20  0f 5c cd fe 63 4d 0b 20 ad 28 ea 40 32 be 24 a8 d6 8f cc 43 8a db b0 6b e9 20 70 ab 05 56 cb b5  .\..cM. .(.@2.$....C...k. p..V..
10017c40  c9 13 9e ae 5e 69 98 c9 3a 15 9a 39 e7 6e 3c 3f c3 d8 42 9d 5a b8 b6 70 aa f5 8d b5 16 12 11 aa  ....^i..:..9.n<?..B.Z..p........
10017c60  01 b8 8c 7f 9c 24 0c 54 a3 f1 6f 83 bf 95 be d5 dd b5 f3 c0 25 85 a0 3d 5b e8 da 59 fa 1d f8 74  .....$.T..o.........%..=[..Y...t
10017c80  bf 09 66 99 09 14 2a 0e 9e 02 eb 91 08 fa fd 52 eb 12 e3 e4 fd 3b e4 c3 6b 80 49 a1 05 dd fb 2a  ..f...*........R.....;..k.I....*
10017ca0  14 4d e2 9b fc cf 9d f4 6f 7b 57 cf 5b b9 f2 3a 20 ef 8e 21 49 bd f6 2d eb 4b 10 df d8 46 dc 55  .M......o{W.[..: ..!I..-.K...F.U
10017cc0  2b 11 0a 2b 7b 6d 11 94 16 21 ce 43 82 23 c4 5d ef 8f 46 9a f1 c8 dc 3e 6c d3 b1 56 5b eb 80 61  +..+{m...!.C.#.]..F....>l..V[..a
10017ce0  fd 94 46 45 c0 9c 7b 49 9f b9 ef ea e2 36 a8 e4 7e d1 f3 8d 05 e9 d9 bf b8 8d 1e fa 28 ac 65 8c  ..FE..{I.....6..~...........(.e.
10017d00  05 99 b8 7c 3b 3a 41 27 29 1d e5 b8 b8 b2 c0 9a d2 d4 f1 c3 98 1b 61 1e 24 d1 dc a2 29 3f e6 2d  ...|;:A').............a.$...)?.-
10017d20  d6 fe 8d 03 4b 77 ef 72 e7 f3 6f 44 1b ed 0c b2 bc 3c a3 b6 84 f3 ce 71 60 58 0a 86 d2 7d 55 63  ....Kw.r..oD.....<.....q`X...}Uc
10017d40  95 0d df 2a 89 12 51 30 96 57 bd 3f 3c 1a e5 4b 49 6e 99 4a 97 7f 1d 7d a4 f8 f4 6a 30 39 df d3  ...*..Q0.W.?<..KIn.J...}...j09..
10017d60  9c b5 c1 14 d8 8c a1 2b 9d ca df 7b b6 41 61 85 1a 90 d5 d5 1a e8 cf c5 bd 11 97 9d 8a d9 ef 64  .......+...{.Aa................d
10017d80  f5 48 69 11 04 93 e0 f3 ea 53 c8 d3 10 9c 8b e7 e4 ab 99 08 58 c9 29 c2 e6 3a 15 76 41 d2 ef 9b  .Hi......S..........X.)..:.vA...
10017da0  64 d9 51 d9 29 ce 4a 9d 85 69 1c 24 cd 61 3c b3 09 19 c6 b9 bd 3b 72 c5 c8 a8 8f fc f5 f8 a3 16  d.Q.).J..i.$.a<......;r.........
10017dc0  82 7f 90 f2 40 0a 54 fa 22 6d d5 e9 ee 4f 78 d1 d8 0e d0 85 ef cf 0f 6c 30 7b 62 d9 b7 18 00 4c  ....@.T."m...Ox........l0{b....L
10017de0  94 1d 97 66 21 e9 46 46 0d 70 37 0d 1a f6 5e 31 07 47 7c 62 3e 4c 44 d4 c2 56 05 e0 6e ac c5 7c  ...f!.FF.p7...^1.G|b>LD..V..n..|
10017e00  10 ea 77 c5 f5 de 18 71 f1 69 62 8a 2e 12 96 2d a7 d6 f7 bf b5 a0 50 54 20 8f 51 66 78 e8 15 51  ..w....q.ib....-......PT .Qfx..Q
10017e20  cd c9 ce 87 68 dc 1c 3b db 6c 66 37 ff 0c b5 1e 99 ea b9 26 09 86 66 87 8d 84 55 3f 98 58 08 46  ....h..;.lf7.......&..f...U?.X.F
10017e40  6b 5a 56 58 07 bd d0 e1 82 7b 9a cc c4 80 6b 49 b0 e5 9d 09 fa f1 4c 1e 87 38 f7 0f b6 06 f0 8a  kZVX.....{....kI......L..8......
10017e60  cf 6c d4 97 12 3c 6b 18 ec 8b 4f 2f 97 f9 c0 05 cb 0d 90 32 f6 e2 84 bf 7b 8b 8e 37 a8 1b e1 34  .l...<k...O/.......2....{..7...4
10017e80  1c 1e 60 ef ea 60 0d 39 6b 2a 05 42 b9 7c 43 b0 5b a4 18 ed 32 72 e1 b6 ad 04 ba 7d ed 6e 44 ea  ..`..`.9k*.B.|C.[...2r.....}.nD.
10017ea0  21 f1 e7 55 b9 86 c0 29 49 23 30 1b 97 17 f7 0d 45 b6 83 72 85 10 79 42 9f 8b 77 1a 77 62 41 45  !..U...)I#0.....E..r..yB..w.wbAE
10017ec0  21 f6 e9 d5 d2 a5 0d 30 df 99 f0 fa 0e 2a 84 cf 1a d6 20 4c 6d ed 92 a1 f9 3d 3a 3f 5f 6c 13 88  !......0.....*.... Lm....=:?_l..
10017ee0  59 21 df 92 94 a5 cc 18 77 3e 28 72 6b 19 71 3c c1 35 fb 39 cf 8e 4c 27 cc f3 31 67 26 a3 e0 c2  Y!......w>(rk.q<.5.9..L'..1g&...
10017f00  3a 54 64 a8 4c 4f 42 53 f6 fc ec e3 e6 50 2c d1 a5 cd f9 b5 53 73 7b ec c7 47 de 37 52 37 c3 6d  :Td.LOBS.....P,.....Ss{..G.7R7.m
10017f20  3b 75 84 fa 8f a8 16 6b 9b c0 d4 c6 89 09 65 8d 51 8c ea 39 25 bb 6f 62 4b 4e 36 fd bf 72 a0 27  ;u.....k......e.Q..9%.obKN6..r.'
10017f40  c1 0b 06 69 73 3b 30 e7 fa e3 9d 32 5c 40 50 9f 61 07 66 e7 72 c2 d3 3d 60 65 30 a5 bc 5f 35 13  ...is;0....2\@P.a.f.r..=`e0.._5.
10017f60  b9 a0 d5 66 36 1d d9 92 2b 39 35 7e e6 be 9e 37 c4 98 9c c4 a3 ce de ef 83 a1 0f dc 4b 8b 4a c8  ...f6...+95~...7............K.J.
10017f80  e8 5f c6 e4 77 21 ce 1a 04 51 36 74 4d 40 4d d1 fc d1 dd cf 36 32 59 7c 4c aa ee 49 a1 65 bb 30  ._..w!...Q6tM@M.....62Y|L..I.e.0
10017fa0  7c c2 a0 66 15 28 7d 6f 7f 6e 5d e7 6c 39 53 bd 8a e8 cd 26 d7 4e e4 da 6b 84 98 a6 f2 7c 83 e0  |..f.(}o.n].l9S....&.N..k....|..
10017fc0  b1 49 5d 91 3c c4 40 60 e1 59 c7 8d 5b 90 be cb 72 43 b9 81 f5 13 2a b8 10 7b 8c 80 73 a1 ab ae  .I].<.@`.Y..[...rC....*..{..s...
10017fe0  ac ef d7 34 b3 1f 86 f1 0c 8e ff 20 45 ff f8 ec 52 3c 90 65 e5 50 fa 80 35 14 93 21 ce 5f 99 d1  ...4....... E...R<.e.P..5..!._..
10018000  41 1b 5f 2b a4 d2 6c 75 f1 96 d6 65 c3 4c 5d e0 03 f7 aa bc 46 a6 0a 33 48 db 1a 36 6d 04 42 8f  A._+..lu...e.L].....F..3H..6m.B.
10018020  0b 61 ef 42 3c 27 a0 a9 69 28 de 84 69 35 c1 2a e0 c8 72 ba 64 0f be 9e 63 40 fe 62 6c 69 61 b0  .a.B<'..i(..i5.*..r.d...c@.blia.
10018040  27 3c 39 f1 43 a5 8f 85 b9 d0 35 2e b2 ea ad 6c 42 f8 7c 09 cc 56 bf 32 2f ca 69 ef 70 89 f7 e7  '<9.C.....5....lB.|..V.2/.i.p...
10018060  d2 ac ae 3c 98 91 5a 3c fc bb 77 2c 9c 17 ef a0 4d 25 e7 ad 07 92 c0 2d fa 6f 21 9e 3f ee 09 79  ...<..Z<..w,....M%.....-.o!.?..y
10018080  3b 66 b4 ba 2a 24 b9 49 8e a2 c2 9e 1b d0 00 d8 6f 3e f8 73 23 eb 1a 53 ca 1e 65 b1 ab 3d 71 fe  ;f..*$.I........o>.s#..S..e..=q.
100180a0  ed a2 4e ca ba ce 0f f5 d9 b1 97 09 07 82 75 37 c1 15 8d 46 73 06 9e 61 7b 2e da 0f ab 97 1f d4  ..N...........u7...Fs..a{.......
100180c0  77 02 31 9a 1e 39 50 91 6a 41 ef 34 76 b3 f2 a7 5f 38 a5 3f c5 b4 0b 5d 36 82 23 af f2 e2 0f 15  w.1..9P.jA.4v..._8.?...]6.#.....
100180e0  83 f2 7d b7 6c e8 d1 20 bd 26 f0 fa ea 33 1a 55 64 71 b3 3d 89 7a 27 91 4f 68 28 5d 5f 37 af f2  ..}.l.. .&...3.Udq.=.z'.Oh(]_7..
10018100  47 27 ca 1d 82 aa 4c 2e 81 f1 92 b4 50 31 a7 0c e1 9b f8 7d 0d 47 61 97 d3 0f f7 3c 67 43 52 f7  G'....L.....P1.....}.Ga....<gCR.
10018120  a0 c9 15 75 68 27 7c 57 0f bb 39 2e 6b 9f ad e3 38 f8 6b 7b 70 f4 74 bf 11 3d 7e 5a 4e 6f c1 37  ...uh'|W..9.k...8.k{p.t..=~ZNo.7
10018140  94 32 fe 9d 80 36 30 8a c8 e6 dd 72 ea d3 f7 ff 30 9e d1 67 8c 7a c1 0d af ba 1c e0 3e 6f b2 75  .2...60....r....0..g.z......>o.u
10018160  e4 2b d7 5b ca db 78 a8 b9 98 9b a2 db e1 74 e4 21 97 cb 4f ef 25 f8 a1 b8 ac a9 c3 93 19 b6 25  .+.[..x.......t.!..O.%.........%
10018180  f2 57 fb fa f5 b0 dd d0 25 b4 73 08 c2 a2 5d 36 3b 27 bb 49 78 de 80 7e 08 5a 6f 89 ed 19 d9 25  .W......%.s...]6;'.Ix..~.Zo....%
100181a0  fc 66 ce 2c 55 61 c5 91 e9 4f cd 8e 7f 9c 2a 97 0b d1 29 8b 45 d6 25 b7 90 1e 4e 14 b9 dc af 91  .f.,Ua...O....*...).E.%...N.....
100181c0  af 25 6a 25 4d e9 41 06 fe 02 9e 2c 17 a7 76 aa 65 9a 58 a2 ba cb 92 9a 09 a2 f7 42 b2 6a b3 4d  .%j%M.A....,..v.e.X........B.j.M
100181e0  60 1b 52 86 1a 54 ea 61 26 80 4b 41 df 8e fe a4 69 ae 64 a3 a9 bd 3d 8f 40 8f 47 c3 7c 7a e2 32  `.R..T.a&.KA....i.d...=.@.G.|z.2
10018200  89 7f 49 7f 54 6f b9 15 e8 00 5e cc 94 e5 b2 22 83 48 35 99 47 d6 cb 66 00 b8 fe e1 46 fe 4c 44  ..I.To....^....".H5.G..f....F.LD
10018220  5c 53 a8 fb b2 b5 fc 1f d7 1a 01 df aa 1f e0 56 a5 aa c0 0f 99 8d 12 6c 01 00 14 2f 4c 54 5a 62  \S.............V.......l.../LTZb
10018240  41 16 06 a8 61 79 bc a2 ed 5a 58 ea 38 8a f8 86 aa cc 0a c1 cc 10 ba 45 47 8f 4b 18 36 e1 61 ae  A...ay...ZX.8..........EG.K.6.a.
10018260  e1 9a 95 54 1d 78 63 bb 9c 78 34 66 4b 06 9a 1b d1 68 19 38 d9 1b 75 4f da d7 a0 8e 86 88 df 21  ...T.xc..x4fK....h.8..uO.......!
10018280  89 dd 0e c4 b3 24 21 d1 ba 01 fe 73 d7 e7 07 97 93 e3 09 e0 6a d0 05 c3 92 3a a8 26 04 0d 95 48  .....$!....s........j....:.&...H
100182a0  db 31 ab e8 9f 83 3b 2c 5b ce ff db 2c 7d f6 1c b0 a5 33 19 e3 b5 e5 a7 45 dd 17 10 eb fc 85 51  .1....;,[...,}....3.....E......Q
100182c0  90 4f 69 3c 9b 79 fa d6 e6 49 1a 4f a4 ea 67 b8 b6 37 77 3b ef d7 de 16 fb 02 6c 60 bb aa 76 33  .Oi<.y...I.O..g..7w;......l`..v3
100182e0  52 5c bb 8d 53 22 e2 6b ec ff 5b 51 fa 69 cb 06 b9 b2 de 20 09 57 47 aa 74 70 ef e7 8c 79 9e 00  R\..S".k..[Q.i..... .WG.tp...y..
10018300  8c 53 51 61 2e 25 30 dc 0a e7 26 de e9 3b 79 9b 7b bd 1a 37 c6 23 51 b2 bb 55 23 38 8b e4 7a b6  .SQa.%0...&..;y.{..7.#Q..U#8..z.
10018320  cf b7 9b 85 d0 d8 16 5f 9d 51 1d 18 28 4b a5 a2 53 30 9f 46 21 a1 1e 9c fc 07 75 e4 5b 39 f5 95  ......._.Q..(K..S0.F!.....u.[9..
10018340  52 fc bd fa 4b 8a 30 bf 51 06 75 c8 d4 db db f1 4c e3 e7 88 61 86 d7 a4 67 6a 84 77 18 43 a4 ea  R...K.0.Q.u.....L...a...gj.w.C..
10018360  23 2c 54 8f 71 24 b1 4a 6f cd d3 94 0b 14 16 5a ee 17 25 6e 53 91 02 a1 bf ee 35 8d 57 0e 4a eb  #,T.q$.Jo......Z..%nS.....5.W.J.
10018380  07 6a 1a d7 63 90 ad 4a df 1f 1b da 72 49 28 9b b2 71 26 d2 8e 7e a7 a4 61 b2 3c b6 fe a2 1c 12  .j..c..J....rI(..q&..~..a.<.....
100183a0  00 86 12 92 7f 26 d2 db d6 87 28 fd 80 a7 2e 04 d5 18 5c ff 38 54 0d b8 84 c1 c1 a5 c0 99 e3 e9  .....&....(.......\.8T..........
100183c0  ad c2 2a b1 15 86 5a dc 5a 44 c4 5a 9f 4f f9 14 c2 05 9f 34 ae 06 7b c2 23 5b 6f 5f 93 de b9 f9  ..*...Z.ZD.Z.O.....4..{.#[o_....
100183e0  48 0e 1d 4b 99 f5 89 48 39 25 23 84 d9 51 9a 10 e1 b5 06 1c b3 87 10 b1 2f 68 9a a8 ac 9b 4a 0a  H..K...H9%#..Q........../h....J.
10018400  25 f8 c6 9d 10 21 60 65 b7 1a fb 23 d9 99 2b 2c 27 77 ea 9b 34 ce 43 fd 8b cb 19 96 d0 8c 5a 87  %....!`e...#..+,'w..4.C.......Z.
10018420  7b 09 aa df b3 50 3f 29 c4 92 70 10 1b a3 f4 f1 b3 42 f4 86 27 7c 2d 83 98 b6 87 c3 72 ff c2 48  {....P?)..p......B..'|-.....r..H
10018440  e1 c0 b8 92 c4 7f bf 0b 3c 3b 4d 1f a3 f9 0e 49 f7 ff f8 35 59 4c 6d 6b c2 95 2f dd 1a 5c 42 db  ........<;M....I...5YLmk../..\B.
10018460  1a e5 00 05 b0 ac 65 4f 36 fd e6 5e c1 16 2e d3 14 8f 55 49 ff 02 24 53 16 4b 0a 29 8c ca fb 95  ......eO6..^......UI..$S.K.)....
10018480  99 41 8a 85 29 27 a7 f3 61 5b 2c 89 e7 ff 3f f5 7e 45 50 79 43 19 4f 38 c2 21 4c cd ab 9a 43 fc  .A..)'..a[,...?.~EPyC.O8.!L...C.
100184a0  72 d1 ac 88 1e 45 bd 2c 00 ce da 0c 1a b8 e2 4e dc 85 be d7 59 ca 04 60 67 ec 24 24 13 c9 fc e0  r....E.,.......N....Y..`g.$$....
100184c0  d3 14 90 d6 30 a0 91 91 f6 6c b1 f1 e3 87 f5 cc 26 bb af 46 e5 c6 7d 4f aa 3f 11 28 e5 25 58 46  ....0....l......&..F..}O.?.(.%XF
100184e0  96 1d 01 40 11 28 0d 95 af b9 d5 34 1a bd 1b d3 02 93 1e 78 eb 70 fc 2a 86 73 c2 bc 3f 1b 02 a4  ...@.(.....4.......x.p.*.s..?...
10018500  e9 ed 01 32 4f 97 31 83 02 fb 98 6a 1c 5f fa b3 70 70 e3 c4 8b 2d fe 76 60 41 60 99 47 c0 56 18  ...2O.1....j._..pp...-.v`A`.G.V.
10018520  14 53 01 42 cf d1 0c 19 31 39 94 74 a0 2b 2c 8b 1b a4 d5 f9 4b b5 66 28 81 4d 97 de 4b 97 96 9d  .S.B....19.t.+,.....K.f(.M..K...
10018540  18 ab 9a 61 4f ba ca ef 85 94 8a cd d9 8c 1c 04 78 35 0d 99 cf 1d fa 5d 08 fb 12 48 8f ff 60 58  ...aO...........x5.....]...H..`X
10018560  77 95 d2 ab 5b c3 6b bc dc 18 bd ad ff 38 34 90 72 87 39 a6 9a 87 8a 2e 55 54 91 9b 92 ba 63 d7  w...[.k......84.r.9.....UT....c.
10018580  2e e4 66 76 a2 97 d1 7b e4 63 88 14 95 52 1e 82 0b 75 c8 64 2a 6f d7 24 50 95 8b ed 51 81 bc c9  ..fv...{.c...R...u.d*o.$P...Q...
100185a0  10 1f 3d c7 a4 b3 c2 5b 91 61 4a 87 37 18 01 10 3b de 8f a5 26 9c 10 a2 76 6d a5 60 84 f1 2a 76  ..=....[.aJ.7...;...&...vm.`..*v
100185c0  31 d2 65 ff 95 71 d3 d1 94 ce 82 07 c8 ff 9b 96 3d 47 c6 02 47 2c 4e d4 23 0b f3 d1 ae 16 18 2e  1.e..q..........=G..G,N.#.......
100185e0  79 a3 22 ef 6b 08 61 e7 51 e6 50 c9 e5 61 22 81 36 c3 ed e0 4f a5 57 d4 0f 77 2a 48 04 ca fc e0  y.".k.a.Q.P..a".6...O.W..w*H....
10018600  3c 7a b0 0a 49 f9 29 b7 33 e9 61 74 8a b4 48 73 03 12 92 aa 91 1c d2 9c 6a 95 4b bd bb cc c7 f5  <z..I.).3.at..Hs........j.K.....
10018620  dd d6 2d b6 e2 f2 8e 01 0e a3 5d be 27 5a 4d f2 1f 52 ba ec aa d7 fc 2b b0 30 8f b2 f6 10 a2 dd  ..-.......].'ZM..R.....+.0......
10018640  77 02 ed 34 0c 28 f2 59 06 08 c1 9e 1e d6 14 e1 b4 4b 5f 95 80 c6 b4 5b 74 92 1a a9 b9 0e 74 ad  w..4.(.Y.........K_....[t.....t.
10018660  af 4c 93 66 d5 9b 91 67 c8 c7 64 d0 7a 94 c8 d2 00 0a 6c af 92 d8 2d a4 db b3 41 97 90 9a f4 eb  .L.f...g..d.z.....l...-...A.....
10018680  3f 1f 12 71 ba c9 bf 1d e4 b3 85 bc ee b7 29 e8 e9 eb d5 9f a1 72 c0 30 c7 06 e9 17 30 e7 98 70  ?..q..........)......r.0....0..p
100186a0  a4 de 49 60 74 b1 a6 09 8f d2 9d 2f 93 21 a1 f5 5c c3 b7 bd 53 31 97 39 fe f7 ad 69 11 8f b5 09  ..I`t....../.!..\...S1.9...i....
100186c0  e1 8b a5 e2 4b 15 6b c5 ad 73 f3 bb 4e df d3 02 23 10 e1 58 68 b4 5e f1 f6 e9 f2 ea 3c 88 44 49  ....K.k..s..N...#..Xh.^.....<.DI
100186e0  8a b4 ce 1b 72 ee e1 8b 2e 9a 0f 4b 4f bd 7e eb 9f 36 da 0a e0 1c 49 c8 1e 25 3e 52 f6 f3 5a d3  ....r......KO.~..6....I..%>R..Z.
10018700  a1 ac fc b9 51 ac b0 49 04 74 0c fa 5e c1 0d a9 44 2a 6a 33 fb 68 84 af 67 ff 94 7c 78 06 d6 21  ....Q..I.t..^...D*j3.h..g..|x..!
10018720  2f 3e 91 32 4a f3 29 f4 74 d5 3e 4b 46 87 a4 00 d0 fc c8 c9 50 de ff 1c 56 db 17 20 c8 46 1a 83  />.2J.).t.>KF.......P...V.. .F..
10018740  9d a8 55 a9 f9 6c e9 12 c2 89 9c 52 ec 3e 16 3b b0 2b c3 41 b3 d1 83 fb 92 2c dc ff b3 70 c0 37  ..U..l.....R.>.;.+.A.....,...p.7
10018760  e7 0f d9 49 e7 ab 93 57 1b d3 aa 63 d4 85 ea 64 77 7f eb c3 d3 49 ba 0d 09 8c 80 50 ec 2b 88 cb  ...I...W...c...dw....I.....P.+..
10018780  fd c2 b8 26 30 8f 89 28 ec 06 1b 64 d6 78 3d 1d 46 14 02 6e cd ff ad 02 8d ac ed 97 06 04 27 69  ...&0..(...d.x=.F..n..........'i
100187a0  67 28 84 b5 f8 da e2 76 d9 6c e4 a9 74 de 48 69 06 e0 d0 95 18 40 ce 07 fb 2a ca 84 59 36 59 ee  g(.....v.l..t.Hi.....@...*..Y6Y.
100187c0  e3 16 95 24 64 04 24 ff c3 64 54 cd 70 37 ad e5 ab be 52 0a 49 22 db 6c 61 42 2d 1c fc d5 c8 3a  ...$d.$..dT.p7....R.I".laB-....:
100187e0  52 83 d0 a5 14 a5 e9 72 1b 61 34 47 d1 d9 12 83 3e 95 ef f4 41 44 30 6b f9 3a 6a 12 6f a1 c9 50  R......r.a4G....>...AD0k.:j.o..P
10018800  73 bd ff af 63 b6 c5 f0 71 07 a3 f3 ef 75 2a 24 b6 d5 76 b6 f2 e0 1a 3e ce 1e f8 98 77 15 73 14  s...c...q....u*$..v....>....w.s.
10018820  a7 2c 5d 78 8c 15 d8 22 9c 39 59 83 e4 83 5f 1b d9 10 51 8b 91 58 62 95 78 5a ba ad 77 5b 0e 84  .,]x...".9Y..._...Q..Xb.xZ..w[..
10018840  7a 91 4c bb 0b f3 a4 4c 1a 4e 0c a9 0c c2 70 33 d1 0f 0a 4d da 45 f8 c2 df 12 4b 6e 58 de 5a 6d  z.L....L.N....p3...M.E....KnX.Zm
10018860  ef f9 13 e9 41 af 09 e3 c9 04 bf 20 ca d7 dd f4 13 04 d2 ce d0 f8 f9 07 ae e3 82 0f 91 0a 48 df  ....A...... ..................H.
10018880  47 f2 7e ff 29 29 ec b0 e8 a3 f7 ad ff 00 74 7f e5 8a 54 3f b3 f8 fb a3 f5 f4 f0 1e c8 2f cb 52  G.~.))........t...T?........./.R
100188a0  db 65 5e b7 ff 85 f0 43 d8 f8 75 69 ee bf 16 92 88 cf af 8d 2a a5 09 8d da 12 62 f0 92 74 7d ab  .e^....C..ui........*.....b..t}.
100188c0  51 80 27 55 d9 c1 8b ad 49 0e fc 22 03 f6 c1 59 33 15 16 a0 7c 61 9e 59 b1 b9 a3 2f b5 4c 7c 9a  Q.'U....I.."...Y3...|a.Y.../.L|.
100188e0  74 70 c1 73 9a 06 ce ba ec ed 4c 22 1b e7 7e c5 31 15 24 07 3e c3 5f 5b b8 b0 03 c6 af 42 1a 60  tp.s......L"..~.1.$.>._[.....B.`
10018900  95 ee 5a 34 36 2d b5 0e 57 46 3b d6 aa ba 6e 99 e3 cc 40 82 0f 9c cf c8 c5 c7 c7 76 90 5f 82 46  ..Z46-..WF;...n...@........v._.F
10018920  62 30 5e f8 25 4d c2 3c 5d 8e e0 75 46 3f 48 be 93 e9 fd 01 e6 0a 7f 56 0a 09 ee 9d 05 87 a5 c0  b0^.%M.<]..uF?H........V........
10018940  60 3d a2 cb 6e ea 98 15 35 dc 5a 44 24 42 8b ce 79 f5 ce c1 39 9c e0 9d 4a ec c4 cd 4e 4d 53 ce  `=..n...5.ZD$B..y...9...J...NMS.
10018960  c4 93 4c e5 72 bc cd 20 92 37 d5 5f 0a c1 a4 8f 66 72 ac 98 3b b2 00 13 27 ef a9 c5 ab 92 ca e7  ..L.r.. .7._....fr..;...'.......
10018980  a5 1f 03 40 b4 1c 4d e1 5d 8f ab 08 ea ac 03 9c a4 c0 16 34 1a c5 d4 63 cb b8 f2 bf f9 db 8b 32  ...@..M.]..........4...c.......2
100189a0  59 6d 69 92 b2 85 73 bd a6 93 6c a7 95 9d 1d 8a 55 31 9c b4 55 61 b9 96 d7 71 b4 14 81 a1 b7 69  Ymi...s...l.....U1..Ua...q.....i
100189c0  b0 c3 23 72 8e 94 e5 f0 5e 99 eb 1f 7b a3 62 d0 60 b6 a8 75 b0 f3 c1 d3 6d 80 a9 04 aa f6 28 e5  ..#r....^...{.b.`..u....m.....(.
100189e0  11 fe d8 b1 dc 27 98 a0 6c 46 36 a0 6a 4a bf bb 2d ae 81 35 cd ba 21 7a f3 b2 33 94 4d 45 b8 e4  .....'..lF6.jJ..-..5..!z..3.ME..
10018a00  50 ae b0 d9 88 ed 51 d2 95 92 aa 9a 92 47 ba 2f 5d 5e 16 8e 38 57 b8 e8 77 df e9 a8 25 d3 e2 05  P.....Q......G./]^..8W..w...%...
10018a20  5a fb b3 88 bf bb 19 03 8d be ed c1 f5 64 c0 1d e2 8d 14 a8 58 d4 e8 4a 8f f7 27 4e 67 8c 02 6a  Z............d......X..J..'Ng..j
10018a40  60 b4 c0 71 c1 26 b7 22 80 30 9d 69 cf 14 0c c0 47 0a b5 a4 09 fb 1f 54 9b 9b 6f 41 33 79 6c bb  `..q.&.".0.i....G......T..oA3yl.
10018a60  f4 53 17 68 4d 62 1f ca da 0f cc 71 ff 77 98 c9 da 42 f6 d2 f1 43 25 cc c8 9b ec af bc 63 84 67  .S.hMb.....q.w...B...C%......c.g
10018a80  22 9d a4 f4 66 e2 35 57 ce 7f dd 17 0b 77 31 88 d3 32 65 84 a5 15 d8 ee d2 df fd 3b b4 36 4f e6  "...f.5W.....w1..2e........;.6O.
10018aa0  59 5a 9b e7 c5 9e 9f d8 2f 77 68 e2 62 3d e0 5e 7f ac 26 b2 f9 42 c4 0d c1 30 c0 dc 22 0c 1c c4  YZ....../wh.b=.^..&..B...0.."...
10018ac0  5f 09 04 e2 aa 31 bc 26 4d 4a cf 28 d6 8b e7 f5 d5 59 00 3b bc f5 87 6e bd 40 22 6d d7 15 c3 7a  _....1.&MJ.(.....Y.;...n.@"m...z
10018ae0  f0 3b 29 77 57 0f 4b 0f ee fc c7 08 5f 98 16 83 fb 2f ce 9f 3f c2 99 73 0b f4 c3 94 ab 5b f2 3d  .;)wW.K....._..../..?..s.....[.=
10018b00  30 ce b1 62 b3 04 7e 4c 8a 06 58 a6 a6 d3 ec ef b0 05 7d 6d 90 bf b9 bc 7d ea 1d 32 5a 56 18 d5  0..b..~L..X.......}m....}..2ZV..
10018b20  48 d3 ad 07 84 4a 0d 82 8e 9e 26 4b 73 a5 cd 89 2d 88 96 72 75 1e db 01 db a5 9c e1 db 46 8f ae  H....J....&Ks...-..ru........F..
10018b40  7a 01 7e fb 57 e9 06 d9 8b c3 3b b8 b1 d2 74 2c d3 52 bf 52 e9 24 51 dc 33 d2 5b 6e 23 b2 35 b9  z.~.W.....;...t,.R.R.$Q.3.[n#.5.
10018b60  c1 05 89 a6 89 40 dc b1 be c2 4e e7 8f c6 59 8f 11 b9 86 8c b4 64 87 b2 a3 ec e6 af fc f7 85 84  .....@....N...Y......d..........
10018b80  98 4a 89 44 bb d5 b0 ce 03 52 7f 88 7b 1a cd 3b cc 85 9d dc 41 a7 59 16 fb 8e 9b 49 03 79 e6 1a  .J.D.....R..{..;....A.Y....I.y..
10018ba0  23 0b d3 de 3b c9 54 fb 92 7c b1 6c 77 1e 91 37 46 be 8e 0e 61 7d d7 17 15 96 c0 b6 9d ff 07 e5  #...;.T..|.lw..7F...a}..........
10018bc0  6f 77 30 9f 56 f3 20 2e 01 f6 fb 08 93 9f 67 67 7b 90 3a 2f 1d 68 12 05 b5 28 7c 76 1d e8 3a ef  ow0.V. .......gg{.:/.h...(|v..:.
10018be0  bf 6b 0d da 52 cc 83 84 f8 cc 48 57 a3 fd f4 6a ff 49 a3 cf 2a b6 94 82 17 16 0c 75 ac 46 41 83  .k..R.....HW...j.I..*......u.FA.
10018c00  73 24 b0 55 e5 23 5c 0a 56 75 5c 36 4f db fa ff 33 a4 1b f9 0b e7 75 95 41 fb c2 81 e3 f8 2e d9  s$.U.#\.Vu\6O...3.....u.A.......
10018c20  d5 b6 c7 51 9a 03 e0 ac 89 b3 6d 75 c5 04 3a 33 df c5 76 51 76 a3 b5 7b 85 a1 dd f8 b9 e2 84 1c  ...Q......mu..:3..vQv..{........
10018c40  a5 6b 6b c8 ab 2b 82 da a7 ae 55 d2 97 26 ee 95 7c a1 bf bb a2 a1 9a ea cd 35 08 dc 81 51 a4 e1  .kk..+....U..&..|........5...Q..
10018c60  ba de 95 6b 03 6a c4 ce 4e e8 6c 76 50 d5 27 68 80 67 44 18 fb 6b 4f 87 6c e8 c9 df d5 02 59 e0  ...k.j..N.lvP.'h.gD..kO.l.....Y.
10018c80  5f a6 56 6e c4 1e 6a 6f 47 70 b7 72 c5 80 ad 6a b7 9c 19 5e ff e5 d9 88 e4 be 45 e8 84 1a 9e 1c  _.Vn..joGp.r...j...^......E.....
10018ca0  17 ab 85 c2 92 f6 f6 4e d5 65 ea 32 d3 6e 87 70 39 4d 47 19 45 da f9 3f aa 61 51 92 da 66 8f be  .......N.e.2.n.p9MG.E..?.aQ..f..
10018cc0  2d 04 6d d8 9f 46 c1 13 ab 15 dd bc 6a 6e d7 83 61 32 1e c7 c6 2f a6 25 e8 10 4b 31 39 07 a1 0f  -.m..F......jn..a2.../.%..K19...
10018ce0  81 7b e2 ec 2f 0e 27 75 be f8 c8 65 31 71 84 92 28 16 05 79 b5 27 15 ab c9 56 ce ea 9c 3c 30 d2  .{../.'u...e1q..(..y.'...V...<0.
10018d00  d1 b9 40 b7 c4 bd b8 b9 d0 bd f4 7e 63 96 fe e2 01 7c b6 34 d7 5f ce 52 a7 d6 47 56 b9 fc f9 58  ..@........~c....|.4._.R..GV...X
10018d20  87 bc d4 5f 76 72 1a e9 47 8b 5a 97 51 68 44 e3 93 6c 84 ae 8d d5 c3 4a 91 2c c9 f3 77 f3 2a c9  ..._vr..G.Z.QhD..l.....J.,..w.*.
10018d40  5a d7 ec b5 22 1f d2 ff c3 06 25 38 05 8f 12 b3 f9 f6 15 cb 28 91 9a 7d 97 a9 cc b5 cd 07 d3 83  Z...".....%8........(..}........
10018d60  18 f7 19 05 56 49 eb 5d f7 d9 8e 59 ae a5 83 27 fb 43 61 b9 0b d0 f3 09 2a 65 38 48 93 ed c0 60  ....VI.]...Y...'.Ca.....*e8H...`
10018d80  e1 76 70 d2 92 00 fe 7f ec 13 e4 97 7b 85 86 61 29 81 fd ba 77 3f c6 4f c3 4f df ec 72 c3 e3 b2  .vp.........{..a)...w?.O.O..r...
10018da0  74 37 60 41 11 25 4b e2 54 29 fa 0a 99 7a a2 b6 8a c0 56 ef 6e fc 8d a5 b9 5f d8 8a 75 7b 6a 3f  t7`A.%K.T)...z....V.n...._..u{j?
10018dc0  91 9b 90 99 0b 5d f9 be 37 e0 5f a3 63 a0 73 ce 7d 10 54 a5 06 35 e4 3d cb 3b f2 c7 6f b6 6e 23  .....]..7._.c.s.}.T..5.=.;..o.n#
10018de0  1c 5b 99 b9 fc 9e a6 22 64 39 6f 41 e9 7a c1 a7 13 3c bf 56 db ef d9 11 1c 77 14 ea 47 7e 2e ea  .[....."d9oA.z...<.V.....w..G~..
10018e00  e7 94 de f7 b2 31 47 1e 3c 07 7a db 1e cb e3 9a 53 75 62 60 c1 1e 2c 15 98 aa b3 e4 1d 83 06 b1  .....1G.<.z.....Sub`..,.........
10018e20  dc ae 6c f2 a3 87 2d 05 ae d5 4c a1 db d6 08 e0 f9 23 4b 21 d3 5b 58 52 01 12 80 73 fb fd 38 7a  ..l...-...L......#K!.[XR...s..8z
10018e40  a1 7d d3 bf a2 e7 f1 1c 6e ed 7c af 68 81 da f6 02 bb c7 6b bc 6f eb bb c8 c9 2c f1 72 7a 1b cf  .}......n.|.h......k.o....,.rz..
10018e60  a8 db 4b c5 0a 39 04 e7 04 48 f0 04 a0 a2 3b 43 fe d2 9b c4 b3 22 8d 9e f4 29 35 dc 8e 8f 9f 81  ..K..9...H....;C....."...)5.....
10018e80  95 69 07 1b 6a e0 bf 9a e8 e8 2c a6 c5 15 8a c6 26 37 da d5 d6 53 74 f0 30 74 d4 bf 18 f3 fa b5  .i..j.....,.....&7...St.0t......
10018ea0  f1 2a cd 9c 3a c9 65 09 5e 45 69 51 87 10 16 4a 68 c9 d6 be 4b f1 03 85 35 45 11 29 d5 1b 61 69  .*..:.e.^EiQ...Jh...K...5E.)..ai
10018ec0  73 1a b3 81 8d 95 9f 76 f6 6f cb fd a5 7b b6 4a 8c f7 f3 78 ba bc ee cb a9 ad 9d 2a 32 46 3a 08  s......v.o...{.J...x.......*2F:.
10018ee0  8f 1e d4 71 e7 31 51 97 99 a0 aa d3 b5 3e 31 4b cc 39 87 0e 88 1d 60 51 84 e2 c8 97 c7 8e 9d 42  ...q.1Q......>1K.9....`Q.......B
10018f00  a5 50 4b 5d 12 3f e9 94 17 3c fb 03 18 b7 0e 94 37 e7 9d 19 d5 c2 db b6 72 03 d2 c9 82 43 6e 93  .PK].?...<......7.......r....Cn.
10018f20  27 4e 07 7f 44 07 93 88 b4 7b d1 7e df d2 d2 17 4d 21 1b 9b 7a 9c 33 47 60 ae 82 87 1e 9f d6 eb  'N..D....{.~....M!..z.3G`.......
10018f40  e3 21 0e e7 19 f4 7a 95 d9 03 b2 e0 3e c7 31 7d 80 bc 04 0a 8b e2 53 7d 20 0b 7c 87 ec 07 ee b4  .!....z.....>.1}......S} .|.....
10018f60  f7 18 c6 18 0e ce 53 08 90 28 ad 37 5e f9 cb 36 e0 89 46 44 63 aa 16 ad 85 c5 04 48 ac 9b 51 ab  ......S..(.7^..6..FDc......H..Q.
10018f80  c3 01 7a 79 75 2e 34 ce 37 d8 80 1e 06 6c ca c3 65 ac 2c 6c 37 d0 8e 25 fd 77 1c 6a 43 2f cc 12  ..zyu.4.7....l..e.,l7..%.w.jC/..
10018fa0  fb 9a 6d 3d 14 8a b0 51 e8 c3 19 8a b6 84 67 aa 8c 83 9b 54 cf b2 66 c5 72 86 4f 62 fe 50 ab 71  ..m=...Q......g....T..f.r.Ob.P.q
10018fc0  e5 b6 6b 10 d4 6d 38 cf ff 52 b9 6c 12 d5 df 90 1f b8 1f e0 32 58 7e 35 77 c1 85 6f 2e 64 ba 49  ..k..m8..R.l........2X~5w..o.d.I
10018fe0  5f 6d 52 f0 29 18 05 8c 1c db b2 25 d4 90 10 af b0 7c 0f e4 ea a9 b0 da 30 8c f7 3b a2 ee bb e6  _mR.)......%.....|......0..;....
10019000  e8 b0 a5 6d ad c6 c2 14 14 60 e3 ca 12 4a db 96 a2 40 63 3a 85 16 05 60 7c e2 26 e1 ef c8 f1 77  ...m.....`...J...@c:...`|.&....w
10019020  39 3e 67 b7 60 df db 87 a2 09 22 b4 ba a9 b0 e5 e6 15 1b 9b e0 85 ea 7f 2b c0 e8 69 29 92 08 22  9>g.`.....".............+..i).."
10019040  17 16 0b 45 10 96 8e 2f 53 f0 67 2e 32 bb 59 1b ed 56 b0 a9 c6 79 8b f6 dc 5f 8c 1e 45 19 90 f6  ...E.../S.g.2.Y..V...y..._..E...
10019060  1a f9 b8 8c 04 45 80 fd 29 1b 98 24 2e 57 ab 4d fc fc 44 38 f7 fa 20 4e 74 c3 51 3e d5 e5 03 26  .....E..)..$.W.M..D8.. Nt.Q>...&
10019080  9e 51 65 0c 0d 36 ec b7 0c 6f e2 4b af 13 87 6d 8b a6 7f 6a 1d d3 2c 3a f7 69 58 e6 6e 17 da db  .Qe..6...o.K...m...j..,:.iX.n...
100190a0  77 3f ed 06 45 ff d3 00 4b be 4e 66 81 78 1f d9 45 e3 96 59 1f 6d 8b 41 2a d4 3c fc 94 eb 75 a1  w?..E...K.Nf.x..E..Y.m.A*.<...u.
100190c0  93 34 48 2b fe 04 6e 78 e1 7b b0 77 e1 af 61 69 87 d1 3a 2a ff 7e eb fb a9 1b 00 5a ff 1b b1 26  .4H+..nx.{.w..ai..:*.~.....Z...&
100190e0  79 7a b1 6b f1 47 db 3a 91 f6 71 fe 06 4e 4d 0f 00 4e 47 80 3b 2d 77 cb 56 34 47 fb 0d 86 0e 12  yz.k.G.:..q..NM..NG.;-w.V4G.....
10019100  35 51 6d 64 1d 7e 05 9d 53 59 2c d5 7d e3 ff 1a db 04 8a ac f7 6e 4d 89 71 12 d6 16 f5 6b 32 97  5Qmd.~..SY,.}........nM.q....k2.
10019120  69 cd d5 f0 8b 6e 29 09 29 d9 94 9f 37 c8 83 ed f8 ce 67 43 5a 95 27 94 c9 d6 bf 23 02 a6 5b 1c  i....n).)...7.....gCZ.'....#..[.
10019140  c4 25 ca 12 53 73 52 1d 7d 76 22 cb d9 ee ef 46 e1 25 89 d8 f7 6f 87 8d c7 fd 4f 7b 41 a6 77 2f  .%..SsR.}v"....F.%...o....O{A.w/
10019160  10 3e 8e 2b b4 37 19 1b be a8 b8 2b 3e f4 44 73 8c 46 e6 4a 81 a7 02 e4 4b 0b bd 95 cd 3d 04 a2  .>.+.7.....+>.Ds.F.J....K....=..
10019180  ac ef 0f 75 33 a6 c3 49 0c 42 fe b2 c8 26 21 84 49 7c 03 58 54 4d 7d 97 6c 52 f5 f3 04 f6 90 4d  ...u3..I.B...&!.I|.XTM}.lR.....M
100191a0  33 28 ff 40 f2 4c a3 96 db                                                                       3(.@.L...

100191a9  void* __stdcall sub_100191a9(void arg1 @ invalid, uint16_t arg2 @ x87control, uint16_t arg3 @ x87status, uint16_t arg4 @ x87tag, void arg5 @ x87pop, uint32_t arg6[0x2] @ st0, int64_t arg7 @ st4, int64_t arg8 @ st6, void* arg9, void* arg10, int32_t arg11, int16_t* arg12, int32_t arg13, int32_t arg14)

   0 @ 100191a9  edi = pop
   1 @ 100191a9  esi = pop
   2 @ 100191a9  ebp = pop
   3 @ 100191a9  esp = esp + 4
   4 @ 100191a9  ebx = pop
   5 @ 100191a9  edx = pop
   6 @ 100191a9  ecx = pop
   7 @ 100191a9  eax = pop
   8 @ 100191aa  temp3.b = [eax].b
   9 @ 100191aa  cond:20 = flag:c
  10 @ 100191aa  [eax].b = sbb.b(temp3.b, -0x5b, cond:20)
  11 @ 100191aa  flag:c = unimplemented
  12 @ 100191ad  [edx + 0x69289e43].d = rlc.d([edx + 0x69289e43].d, 1, flag:c)
  13 @ 100191b3  flag:c = al u< -0x71
  14 @ 100191b5  x87.push{x87c1z}(float.t([ebx + (ebx << 3)].q))
  15 @ 100191b8  ecx = ecx - 1
  16 @ 100191b9  ecx = adc.d(ecx, [edx].d, flag:c)
  17 @ 100191bb  temp4.b = al
  18 @ 100191bb  al = al | 0xde
  19 @ 100191bb  flag:c = 0
  20 @ 100191bb  flag:z = (temp4.b | 0xde) == 0
  21 @ 100191bd  if (not(flag:z)) then 22 @ 0x10019209 else 28 @ 0x100191bf

  22 @ 10019209  [edx + 0x84185a1].d - ebp
  23 @ 1001920f  [edi + 0xb70b483].d = [edi + 0xb70b483].d | 0xd7b30537
  24 @ 10019219  temp0.d = esp {arg_20}
  25 @ 10019219  esp = eax
  26 @ 10019219  eax = temp0.d {arg_20}
  27 @ 1001921a  if (ecx == 0) then 57 @ 0x1001927b else 64 @ 0x1001921c  {"55555555555555555555555555555555…"}

  28 @ 100191bf  temp5.b = bl
  29 @ 100191bf  cond:21 = flag:c
  30 @ 100191bf  bl = rrc.b(temp5.b, 1, cond:21)
  31 @ 100191bf  flag:c = (temp5.b & 1) != 0
  32 @ 100191bf  flag:p = unimplemented
  33 @ 100191bf  flag:a = unimplemented
  34 @ 100191bf  flag:z = rrc.b(temp5.b, 1, cond:21) == 0
  35 @ 100191bf  flag:s = rrc.b(temp5.b, 1, cond:21) s< 0
  36 @ 100191bf  flag:o = unimplemented
  37 @ 100191c2  [edi + 0x25].b = cl
  38 @ 100191c5  cl = 0x87
  39 @ 100191c7  push(flagbit.d(flag:o, 0xb) | flagbit.d(flag:d, 0xa) | flagbit.d(flag:s, 7) | flagbit.d(flag:z, 6) | flagbit.d(flag:a, 4) | flagbit.d(flag:p, 2) | flagbit.d(flag:c, 0))
  40 @ 100191c8  flag:c = 1
  41 @ 100191c9  temp0.d = ebx
  42 @ 100191c9  ebx = eax
  43 @ 100191c9  eax = temp0.d
  44 @ 100191cb  ecx = ecx + 1
  45 @ 100191cc  ss = pop.w
  46 @ 100191ce  temp6.d = eax
  47 @ 100191ce  eax = eax - -0x2ff35859
  48 @ 100191ce  flag:c = temp6.d u< -0x2ff35859
  49 @ 100191d3  al = [ebx + al.d].b
  50 @ 100191d4  temp0.d = [cs.d + edx + 0x3b].d
  51 @ 100191d4  [cs.d + edx + 0x3b].d = edx
  52 @ 100191d4  edx = temp0.d
  53 @ 100191d8  call(0x10303ab5)
  54 @ 100191df  esi = esi + 1
  55 @ 100191e0  [ebp - 0xa81b4c3].b = rrc.b([ebp - 0xa81b4c3].b, 0xfb, flag:c)
  56 @ 100191e0  goto 68 @ 0x100191e8

  57 @ 1001927b  eax = eax ^ 0x35353535
  58 @ 10019280  eax = eax ^ 0x35353535
  59 @ 10019285  eax = eax ^ 0x35353535
  60 @ 1001928a  eax = eax ^ 0x35353535
  61 @ 1001928f  eax = eax ^ 0x35353535
  62 @ 10019294  eax = eax ^ 0x35353535
  63 @ 10019294  goto 69 @ 0x10019299  {"555555555555555y{yyyyyyyyyyyyyyy…"}

  64 @ 1001921c  ax = muls.dp.b(al, [esi - 0xa].b)
  65 @ 1001921f  al = al | 0x29
  66 @ 10019221  edx:eax = mulu.dp.d(eax, [ecx].d)
  67 @ 10019223  goto 80 @ 0x100191db

  68 @ 100191e8  undefined

  69 @ 10019299  eax = eax ^ 0x35353535
  70 @ 1001929e  eax = eax ^ 0x35353535
  71 @ 100192a3  temp7.d = eax
  72 @ 100192a3  eax = eax ^ 0x35353535
  73 @ 100192a3  flag:c = 0
  74 @ 100192a3  flag:p = unimplemented
  75 @ 100192a3  flag:a = undefined
  76 @ 100192a3  flag:z = (temp7.d ^ 0x35353535) == 0
  77 @ 100192a3  flag:s = (temp7.d ^ 0x35353535) s< 0
  78 @ 100192a3  flag:o = 0
  79 @ 100192a8  if (not(flag:s)) then 91 @ 0x10019325 else 92 @ 0x100192aa

  80 @ 100191db  [cs.d + ebp - 0x3fc9b986].b = [cs.d + ebp - 0x3fc9b986].b + bl
  81 @ 100191e2  temp0.d = pop
  82 @ 100191e2  flag:c = test_bit(temp0.d, 0)
  83 @ 100191e2  flag:p = test_bit(temp0.d, 2)
  84 @ 100191e2  flag:a = test_bit(temp0.d, 4)
  85 @ 100191e2  flag:z = test_bit(temp0.d, 6)
  86 @ 100191e2  flag:s = test_bit(temp0.d, 7)
  87 @ 100191e2  flag:d = test_bit(temp0.d, 0xa)
  88 @ 100191e2  flag:o = test_bit(temp0.d, 0xb)
  89 @ 100191e3  eax - -0x40a81b5
  90 @ 100191e3  goto 68 @ 0x100191e8

  91 @ 10019325  if (not(flag:s)) then 93 @ 0x10019320 else 95 @ 0x10019327

  92 @ 100192aa  if (not(flag:s)) then 91 @ 0x10019325 else 96 @ 0x100192ac

  93 @ 10019320  eip = __int1()
  94 @ 10019320  goto 97 @ 0x10019321

  95 @ 10019327  if (not(flag:s)) then 98 @ 0x100193a2 else 100 @ 0x10019329

  96 @ 100192ac  if (not(flag:s)) then 95 @ 0x10019327 else 101 @ 0x100192ae

  97 @ 10019321  if (not(flag:s)) then 102 @ 0x10019390 else 104 @ 0x10019323

  98 @ 100193a2  ch = 0xac
  99 @ 100193a2  goto 105 @ 0x100193a4

 100 @ 10019329  if (not(flag:s)) then 105 @ 0x100193a4 else 107 @ 0x1001932b

 101 @ 100192ae  if (not(flag:s)) then 100 @ 0x10019329 else 108 @ 0x100192b0

 102 @ 10019390  call(0x7ba727f2)
 103 @ 10019390  goto 109 @ 0x10019397

 104 @ 10019323  if (not(flag:s)) then 113 @ 0x1001939e else 91 @ 0x10019325

 105 @ 100193a4  [ebx].d - ebx
 106 @ 100193a4  goto 117 @ 0x100193a6

 107 @ 1001932b  if (not(flag:s)) then 117 @ 0x100193a6 else 126 @ 0x1001932d

 108 @ 100192b0  if (not(flag:s)) then 107 @ 0x1001932b else 127 @ 0x100192b2

 109 @ 10019397  temp0.d = esp
 110 @ 10019397  esp = eax
 111 @ 10019397  eax = temp0.d
 112 @ 10019397  goto 128 @ 0x10019398

 113 @ 1001939e  temp0.d = esp
 114 @ 1001939e  esp = eax
 115 @ 1001939e  eax = temp0.d
 116 @ 1001939e  goto 132 @ 0x1001939f

 117 @ 100193a6  temp8.b = al
 118 @ 100193a6  al = al - -0x6d
 119 @ 100193a6  flag:c = temp8.b u< -0x6d
 120 @ 100193a6  flag:p = unimplemented
 121 @ 100193a6  flag:a = unimplemented
 122 @ 100193a6  flag:z = temp8.b == -0x6d
 123 @ 100193a6  flag:s = temp8.b - -0x6d s< 0
 124 @ 100193a6  flag:o = add_overflow(temp8.b, 0x6d)
 125 @ 100193a6  goto 133 @ 0x100193a8

 126 @ 1001932d  if (flag:p) then 133 @ 0x100193a8 else 134 @ 0x1001932f

 127 @ 100192b2  if (not(flag:s)) then 126 @ 0x1001932d else 143 @ 0x100192b4

 128 @ 10019398  temp0.b = [esi - 0x77746a65].b
 129 @ 10019398  [esi - 0x77746a65].b = al
 130 @ 10019398  al = temp0.b
 131 @ 10019398  goto 113 @ 0x1001939e

 132 @ 1001939f  if (flag:d) then 144 else 147

 133 @ 100193a8  if (not(flag:s)) then 150 @ 0x10019337 else 151 @ 0x100193aa

 134 @ 1001932f  temp9.d = [ecx + 0x79].d
 135 @ 1001932f  [ecx + 0x79].d = [ecx + 0x79].d | edi
 136 @ 1001932f  flag:c = 0
 137 @ 1001932f  flag:p = unimplemented
 138 @ 1001932f  flag:a = undefined
 139 @ 1001932f  flag:z = (temp9.d | edi) == 0
 140 @ 1001932f  flag:s = (temp9.d | edi) s< 0
 141 @ 1001932f  flag:o = 0
 142 @ 1001932f  goto 155 @ 0x10019332

 143 @ 100192b4  if (not(flag:s)) then 134 @ 0x1001932f else 156 @ 0x100192b6

 144 @ 1001939f  [edi].d = eax
 145 @ 1001939f  edi = edi - 4
 146 @ 1001939f  goto 157 @ 0x100193a0

 147 @ 1001939f  [edi].d = eax
 148 @ 1001939f  edi = edi + 4
 149 @ 1001939f  goto 157 @ 0x100193a0

 150 @ 10019337  if (flag:s == flag:o) then 159 @ 0x100193b2 else 161 @ 0x10019339

 151 @ 100193aa  temp0.d = ebx
 152 @ 100193aa  ebx = eax
 153 @ 100193aa  eax = temp0.d
 154 @ 100193aa  goto 162 @ 0x100193ab

 155 @ 10019332  if (not(flag:s)) then 156 @ 0x100192b6 else 166 @ 0x10019334

 156 @ 100192b6  if (not(flag:s)) then 167 @ 0x10019331 else 168 @ 0x100192b8

 157 @ 100193a0  al - [edi].b
 158 @ 100193a0  if (flag:d) then 169 else 171

 159 @ 100193b2  al = [esi].b
 160 @ 100193b2  if (flag:d) then 173 else 175

 161 @ 10019339  if (not(flag:s)) then 177 @ 0x100193b9 else 179 @ 0x1001933b

 162 @ 100193ab  temp0.d = ebp
 163 @ 100193ab  ebp = eax
 164 @ 100193ab  eax = temp0.d
 165 @ 100193ab  goto 180 @ 0x100193ac

 166 @ 10019334  if (not(flag:s)) then 184 @ 0x100193af else 188 @ 0x10019336

 167 @ 10019331  if (not(flag:s)) then 180 @ 0x100193ac else 189 @ 0x10019333

 168 @ 100192b8  if (not(flag:s)) then 189 @ 0x10019333 else 197 @ 0x100192ba

 169 @ 100193a0  edi = edi - 1
 170 @ 100193a0  goto 198 @ 0x100193a1

 171 @ 100193a0  edi = edi + 1
 172 @ 100193a0  goto 198 @ 0x100193a1

 173 @ 100193b2  esi = esi - 1
 174 @ 100193b2  goto 200

 175 @ 100193b2  esi = esi + 1
 176 @ 100193b2  goto 200

 177 @ 100193b9  dl = 0xc2
 178 @ 100193bb  undefined

 179 @ 1001933b  if (not(flag:s)) then 177 @ 0x100193b9 else 201 @ 0x1001933d

 180 @ 100193ac  temp0.b = [edi + 0x79ac9792].b
 181 @ 100193ac  [edi + 0x79ac9792].b = al
 182 @ 100193ac  al = temp0.b
 183 @ 100193ac  goto 159 @ 0x100193b2

 184 @ 100193af  temp0.d = edi
 185 @ 100193af  edi = eax
 186 @ 100193af  eax = temp0.d
 187 @ 100193af  goto 202 @ 0x100193b0

 188 @ 10019336  if (not(flag:s)) then 204 @ 0x100193b5 else 207 @ 0x10019338

 189 @ 10019333  temp10.b = [ecx + 0x79].b
 190 @ 10019333  flag:c = temp10.b u< 0x79
 191 @ 10019333  flag:p = unimplemented
 192 @ 10019333  flag:a = unimplemented
 193 @ 10019333  flag:z = temp10.b == 0x79
 194 @ 10019333  flag:s = temp10.b - 0x79 s< 0
 195 @ 10019333  flag:o = add_overflow(temp10.b, -0x79)
 196 @ 10019333  goto 150 @ 0x10019337

 197 @ 100192ba  if (not(flag:s)) then 208 @ 0x10019335 else 209 @ 0x100192bc

 198 @ 100193a1  al, eflags = __daa(al, eflags)
 199 @ 100193a1  goto 98 @ 0x100193a2

 200 @ 100193b2  goto 210 @ 0x100193b3

 201 @ 1001933d  if (not(flag:s)) then 211 @ 0x100193b8 else 213 @ 0x1001933f

 202 @ 100193b0  al = [esi].b
 203 @ 100193b0  if (flag:d) then 214 else 216

 204 @ 100193b5  call(-0xffffffffc2af0d6c)
 205 @ 100193bc  bh = 0xb8
 206 @ 100193bc  goto 218 @ 0x100193be

 207 @ 10019338  if (not(flag:s)) then 210 @ 0x100193b3 else 220 @ 0x1001933a

 208 @ 10019335  if (not(flag:s)) then 202 @ 0x100193b0 else 150 @ 0x10019337

 209 @ 100192bc  if (not(flag:s)) then 150 @ 0x10019337 else 221 @ 0x100192be

 210 @ 100193b3  if (not(flag:s)) then 117 @ 0x100193a6 else 204 @ 0x100193b5

 211 @ 100193b8  eax = [esi].d
 212 @ 100193b8  if (flag:d) then 222 else 224

 213 @ 1001933f  if (not(flag:s)) then 226 @ 0x100192ce else 227 @ 0x10019341

 214 @ 100193b0  esi = esi - 1
 215 @ 100193b0  goto 228 @ 0x100193b1

 216 @ 100193b0  esi = esi + 1
 217 @ 100193b0  goto 228 @ 0x100193b1

 218 @ 100193be  eax = __in_oeax_immb(0x6c, eflags)
 219 @ 100193be  goto 229 @ 0x100193c0

 220 @ 1001933a  if (flag:z || flag:s != flag:o) then 204 @ 0x100193b5 else 231 @ 0x1001933c

 221 @ 100192be  if (not(flag:s)) then 69 @ 0x10019299 else 232 @ 0x100192c0  {"555555555555555y{yyyyyyyyyyyyyyy…"}

 222 @ 100193b8  esi = esi - 4
 223 @ 100193b8  goto 234

 224 @ 100193b8  esi = esi + 4
 225 @ 100193b8  goto 234

 226 @ 100192ce  if (not(flag:s)) then 235 @ 0x10019349 else 237 @ 0x100192d0

 227 @ 10019341  if (not(flag:s)) then 238 @ 0x100192c4 else 239 @ 0x10019343

 228 @ 100193b1  if (not(flag:s)) then 240 @ 0x1001935f else 210 @ 0x100193b3

 229 @ 100193c0  ds = pop.w
 230 @ 100193c0  goto 241 @ 0x100193c1

 231 @ 1001933c  if (flag:s != flag:o) then 242 @ 0x100193b7 else 243 @ 0x1001933e

 232 @ 100192c0  edx:eax = sx.q(eax)
 233 @ 100192c1  if (not(flag:s)) then 213 @ 0x1001933f else 244 @ 0x100192c3

 234 @ 100193b8  goto 177 @ 0x100193b9

 235 @ 10019349  edx:eax = sx.q(eax)
 236 @ 10019349  goto 248 @ 0x1001934a

 237 @ 100192d0  if (not(flag:s)) then 249 @ 0x1001934b else 250 @ 0x100192d2

 238 @ 100192c4  if (not(flag:s)) then 251 @ 0x100192bf else 254 @ 0x100192c6

 239 @ 10019343  if (not(flag:s)) then 218 @ 0x100193be else 256 @ 0x10019345

 240 @ 1001935f  if (not(flag:s)) then 257 @ 0x1001931a else 258 @ 0x10019361

 241 @ 100193c1  if (flag:s) then 98 @ 0x100193a2 else 259 @ 0x100193c3

 242 @ 100193b7  if (not(flag:s)) then 261 @ 0x10019366 else 177 @ 0x100193b9

 243 @ 1001933e  if (not(flag:s)) then 177 @ 0x100193b9 else 262 @ 0x10019340

 244 @ 100192c3  temp0.d = [ecx - 7].d
 245 @ 100192c3  [ecx - 7].d = edi
 246 @ 100192c3  edi = temp0.d
 247 @ 100192c3  goto 254 @ 0x100192c6

 248 @ 1001934a  if (not(flag:s)) then 264 @ 0x100193c5 else 265 @ 0x1001934c

 249 @ 1001934b  if (not(flag:s)) then 266 @ 0x100193c6 else 267 @ 0x1001934d

 250 @ 100192d2  if (not(flag:s)) then 267 @ 0x1001934d else 268 @ 0x100192d4

 251 @ 100192bf  [ecx + 0x79877c79].d = fconvert.s(x87.pop)
 252 @ 100192c5  flag:c = 1
 253 @ 100192c5  goto 254 @ 0x100192c6

 254 @ 100192c6  flag:c = 1
 255 @ 100192c7  if (not(flag:s)) then 269 @ 0x10019342 else 277 @ 0x100192c9

 256 @ 10019345  if (not(flag:s)) then 229 @ 0x100193c0 else 278 @ 0x10019347

 257 @ 1001931a  if (flag:p) then 279 @ 0x10019395 else 281 @ 0x1001931c

 258 @ 10019361  if (not(flag:s)) then 282 @ 0x100193dc else 284 @ 0x10019363

 259 @ 100193c3  edi = pop
 260 @ 100193c4  if (flag:s) then 285 @ 0x1001943e else 266 @ 0x100193c6

 261 @ 10019366  if (not(flag:s)) then 286 @ 0x100193e1 else 287 @ 0x10019368

 262 @ 10019340  edi = ecx - 0x7f
 263 @ 10019340  goto 239 @ 0x10019343

 264 @ 100193c5  if (flag:s) then 288 @ 0x1001943f else 289 @ 0x100193c7

 265 @ 1001934c  if (not(flag:s)) then 289 @ 0x100193c7 else 293 @ 0x1001934e

 266 @ 100193c6  if (flag:s) then 294 @ 0x100193a7 else 298 @ 0x100193c8

 267 @ 1001934d  if (not(flag:s)) then 298 @ 0x100193c8 else 300 @ 0x1001934f

 268 @ 100192d4  if (not(flag:s)) then 300 @ 0x1001934f else 301 @ 0x100192d6

 269 @ 10019342  temp11.d = [ecx + 0x79].d
 270 @ 10019342  flag:c = temp11.d u< 0x79797979
 271 @ 10019342  flag:p = unimplemented
 272 @ 10019342  flag:a = unimplemented
 273 @ 10019342  flag:z = temp11.d == 0x79797979
 274 @ 10019342  flag:s = temp11.d - 0x79797979 s< 0
 275 @ 10019342  flag:o = add_overflow(temp11.d, -0x79797979)
 276 @ 10019342  goto 235 @ 0x10019349

 277 @ 100192c9  if (flag:p) then 302 @ 0x10019344 else 303 @ 0x100192cb

 278 @ 10019347  if (not(flag:s)) then 304 @ 0x100193c2 else 235 @ 0x10019349

 279 @ 10019395  edx = edx - 1
 280 @ 10019395  goto 306 @ 0x10019396

 281 @ 1001931c  if (not(flag:s)) then 109 @ 0x10019397 else 310 @ 0x1001931e

 282 @ 100193dc  bh = bh << 1
 283 @ 100193dc  goto 311 @ 0x100193de

 284 @ 10019363  if (not(flag:s)) then 311 @ 0x100193de else 313 @ 0x10019365

 285 @ 1001943e  if (flag:s) then 314 @ 0x100194b8 else 316 @ 0x10019440

 286 @ 100193e1  if (flag:s) then 317 @ 0x100193e9 else 318 @ 0x100193e3

 287 @ 10019368  if (not(flag:s)) then 318 @ 0x100193e3 else 319 @ 0x1001936a

 288 @ 1001943f  if (flag:s) then 320 @ 0x100194b1 else 324 @ 0x10019441

 289 @ 100193c7  st0 f- st1
 290 @ 100193c7  __free_slot(st0)
 291 @ 100193c7  top = top + 1
 292 @ 100193c7  goto 325 @ 0x100193c9

 293 @ 1001934e  if (not(flag:s)) then 327 @ 0x100193ca else 332 @ 0x10019350

 294 @ 100193a7  temp0.d = ebx
 295 @ 100193a7  ebx = eax
 296 @ 100193a7  eax = temp0.d
 297 @ 100193a7  goto 133 @ 0x100193a8

 298 @ 100193c8  eip = __int1()
 299 @ 100193c8  goto 325 @ 0x100193c9

 300 @ 1001934f  if (flag:p) then 334 @ 0x100192da else 335 @ 0x10019351

 301 @ 100192d6  if (not(flag:s)) then 335 @ 0x10019351 else 336 @ 0x100192d8

 302 @ 10019344  if (not(flag:s)) then 337 @ 0x100193bf else 340 @ 0x10019346

 303 @ 100192cb  if (not(flag:s)) then 340 @ 0x10019346 else 341 @ 0x100192cd

 304 @ 100193c2  [edi + 0x78].w = int.w(x87.pop)
 305 @ 100193c2  goto 264 @ 0x100193c5

 306 @ 10019396  temp0.d = esp
 307 @ 10019396  esp = eax
 308 @ 10019396  eax = temp0.d
 309 @ 10019396  goto 128 @ 0x10019398

 310 @ 1001931e  if (not(flag:s)) then 342 @ 0x10019399 else 93 @ 0x10019320

 311 @ 100193de  es = pop.w
 312 @ 100193de  goto 346 @ 0x100193df

 313 @ 10019365  if (not(flag:s)) then 350 @ 0x100193e0 else 354 @ 0x10019367

 314 @ 100194b8  eax = [0x2a543f94].d
 315 @ 100194b8  goto 355 @ 0x100194bd

 316 @ 10019440  if (flag:o) then 363 @ 0x100194ba else 365 @ 0x10019442

 317 @ 100193e9  if (flag:d) then 366 else 370

 318 @ 100193e3  if (flag:s) then 374 @ 0x1001945e else 378 @ 0x100193e6

 319 @ 1001936a  if (not(flag:s)) then 379 @ 0x100193e5 else 380 @ 0x1001936c

 320 @ 100194b1  push(0x7828dbac)
 321 @ 100194b6  esp = ebp
 322 @ 100194b6  ebp = pop
 323 @ 100194b6  goto 381 @ 0x100194b7

 324 @ 10019441  if (flag:s) then 383 @ 0x100194bb else 391 @ 0x10019443

 325 @ 100193c9  [esi].b - [edi].b
 326 @ 100193c9  if (flag:d) then 392 else 395

 327 @ 100193ca  [edi].d - esp
 328 @ 100193cc  ebp = ebp + 1
 329 @ 100193ce  temp12.b = [edi].b
 330 @ 100193ce  flag:s = al - temp12.b s< 0
 331 @ 100193ce  if (flag:d) then 398 else 400

 332 @ 10019350  [ecx - 0x5f].d = edi
 333 @ 10019350  goto 402 @ 0x10019353

 334 @ 100192da  if (not(flag:s)) then 404 @ 0x10019355 else 405 @ 0x100192dc

 335 @ 10019351  if (not(flag:s)) then 406 @ 0x100192f4 else 402 @ 0x10019353

 336 @ 100192d8  if (not(flag:s)) then 402 @ 0x10019353 else 334 @ 0x100192da

 337 @ 100193bf  temp0, edi = __insb(edi, dx, eflags)
 338 @ 100193bf  [edi].b = temp0.b
 339 @ 100193bf  goto 229 @ 0x100193c0

 340 @ 10019346  if (not(flag:s)) then 241 @ 0x100193c1 else 407 @ 0x10019348

 341 @ 100192cd  if (not(flag:s)) then 407 @ 0x10019348 else 408 @ 0x100192cf

 342 @ 10019399  temp0.b = [ebx - 0x6b77746b].b
 343 @ 10019399  [ebx - 0x6b77746b].b = bl
 344 @ 10019399  bl = temp0.b
 345 @ 10019399  goto 132 @ 0x1001939f

 346 @ 100193df  temp13.d = [0x782e0678].d
 347 @ 100193df  [0x782e0678].d = [0x782e0678].d ^ ebp
 348 @ 100193df  flag:s = (temp13.d ^ ebp) s< 0
 349 @ 100193df  goto 379 @ 0x100193e5

 350 @ 100193e0  temp14.d = eax
 351 @ 100193e0  eax = eax - 0x782e0678
 352 @ 100193e0  flag:s = temp14.d - 0x782e0678 s< 0
 353 @ 100193e0  goto 379 @ 0x100193e5

 354 @ 10019367  if (not(flag:s)) then 409 @ 0x100193e2 else 411 @ 0x10019369

 355 @ 100194bd  temp15.d = esi
 356 @ 100194bd  esi = esi + 1
 357 @ 100194bd  flag:p = unimplemented
 358 @ 100194bd  flag:a = unimplemented
 359 @ 100194bd  flag:z = temp15.d == -1
 360 @ 100194bd  flag:s = temp15.d + 1 s< 0
 361 @ 100194bd  flag:o = add_overflow(temp15.d, 1)
 362 @ 100194bd  goto 412 @ 0x100194be

 363 @ 100194ba  al, ah, eflags = __aas(al, ah, eflags)
 364 @ 100194ba  goto 383 @ 0x100194bb

 365 @ 10019442  if (flag:s) then 363 @ 0x100194ba else 414 @ 0x10019444

 366 @ 100193e9  [edi].d = [esi].d
 367 @ 100193e9  edi = edi - 4
 368 @ 100193e9  esi = esi - 4
 369 @ 100193e9  goto 415

 370 @ 100193e9  [edi].d = [esi].d
 371 @ 100193e9  edi = edi + 4
 372 @ 100193e9  esi = esi + 4
 373 @ 100193e9  goto 415

 374 @ 1001945e  temp16.b = [eax + 3].b
 375 @ 1001945e  flag:c = temp16.b u< ch
 376 @ 1001945e  flag:s = temp16.b - ch s< 0
 377 @ 10019461  if (flag:s) then 416 @ 0x10019405 else 417 @ 0x10019463

 378 @ 100193e6  if (flag:s) then 426 @ 0x100193f0 else 428 @ 0x100193e8

 379 @ 100193e5  if (flag:s) then 430 @ 0x1001945f else 432 @ 0x100193e7

 380 @ 1001936c  if (not(flag:s)) then 432 @ 0x100193e7 else 434 @ 0x1001936e

 381 @ 100194b7  dh = 0xa1
 382 @ 100194b7  goto 435 @ 0x100194b9

 383 @ 100194bb  push(esp)
 384 @ 100194bc  temp17.b = al
 385 @ 100194bc  temp18.b = [esi - 0x61].b
 386 @ 100194bc  al = al - [esi - 0x61].b
 387 @ 100194bc  flag:c = temp17.b u< temp18.b
 388 @ 100194bc  flag:s = temp17.b - temp18.b s< 0
 389 @ 100194bc  flag:o = add_overflow(temp17.b, neg.b(temp18.b))
 390 @ 100194bc  goto 439 @ 0x100194bf

 391 @ 10019443  if (flag:z || flag:c) then 355 @ 0x100194bd else 441 @ 0x10019445

 392 @ 100193c9  esi = esi - 1
 393 @ 100193c9  edi = edi - 1
 394 @ 100193c9  goto 442

 395 @ 100193c9  esi = esi + 1
 396 @ 100193c9  edi = edi + 1
 397 @ 100193c9  goto 442

 398 @ 100193ce  edi = edi - 1
 399 @ 100193ce  goto 443

 400 @ 100193ce  edi = edi + 1
 401 @ 100193ce  goto 443

 402 @ 10019353  edx:eax = sx.q(eax)
 403 @ 10019353  goto 444 @ 0x10019354

 404 @ 10019355  if (not(flag:s)) then 445 @ 0x100193d0 else 446 @ 0x10019357

 405 @ 100192dc  if (not(flag:s)) then 446 @ 0x10019357 else 447 @ 0x100192de

 406 @ 100192f4  if (not(flag:s)) then 448 @ 0x1001936f else 449 @ 0x100192f6

 407 @ 10019348  if (not(flag:s)) then 450 @ 0x100192e3 else 248 @ 0x1001934a

 408 @ 100192cf  if (not(flag:s)) then 248 @ 0x1001934a else 451 @ 0x100192d1

 409 @ 100193e2  push(zx.d(es))
 410 @ 100193e2  goto 318 @ 0x100193e3

 411 @ 10019369  if (not(flag:s)) then 452 @ 0x100193e4 else 453 @ 0x1001936b

 412 @ 100194be  ah = flagbit.b(flag:s, 7) | flagbit.b(flag:z, 6) | flagbit.b(flag:a, 4) | flagbit.b(flag:p, 2) | flagbit.b(flag:c, 0)
 413 @ 100194be  goto 439 @ 0x100194bf

 414 @ 10019444  if (flag:s) then 412 @ 0x100194be else 454 @ 0x10019446

 415 @ 100193e9  goto 455 @ 0x100193ea

 416 @ 10019405  if (flag:s) then 459 @ 0x1001947f else 461 @ 0x10019407

 417 @ 10019463  edi = pop
 418 @ 10019463  esi = pop
 419 @ 10019463  ebp = pop
 420 @ 10019463  esp = esp + 4
 421 @ 10019463  ebx = pop
 422 @ 10019463  edx = pop
 423 @ 10019463  ecx = pop
 424 @ 10019463  eax = pop
 425 @ 10019463  goto 475 @ 0x10019464

 426 @ 100193f0  eax = [esi].d
 427 @ 100193f0  if (flag:d) then 476 else 478

 428 @ 100193e8  ah = [ebp - 0x78796e6c].b
 429 @ 100193e8  goto 480 @ 0x100193ee

 430 @ 1001945f  push(0x61a27803)
 431 @ 1001945f  goto 475 @ 0x10019464

 432 @ 100193e7  [edx - 0x796e6b5b].b = [edx - 0x796e6b5b].b | cl
 433 @ 100193e7  goto 482 @ 0x100193ed

 434 @ 1001936e  if (not(flag:s)) then 317 @ 0x100193e9 else 486 @ 0x10019370

 435 @ 100194b9  temp0.d = esp
 436 @ 100194b9  esp = eax
 437 @ 100194b9  eax = temp0.d
 438 @ 100194b9  goto 363 @ 0x100194ba

 439 @ 100194bf  call(0xd710d2d)
 440 @ 100194c4  if (flag:s) then 487 @ 0x1001953e else 489 @ 0x100194c6

 441 @ 10019445  if (flag:s) then 439 @ 0x100194bf else 490 @ 0x10019447

 442 @ 100193c9  goto 327 @ 0x100193ca

 443 @ 100193ce  goto 491 @ 0x100193cf

 444 @ 10019354  if (not(flag:s)) then 491 @ 0x100193cf else 493 @ 0x10019356

 445 @ 100193d0  undefined

 446 @ 10019357  if (not(flag:s)) then 494 @ 0x100193d2 else 497 @ 0x10019359

 447 @ 100192de  if (not(flag:s)) then 497 @ 0x10019359 else 498 @ 0x100192e0

 448 @ 1001936f  if (not(flag:s)) then 455 @ 0x100193ea else 500 @ 0x10019371

 449 @ 100192f6  if (not(flag:s)) then 501 @ 0x10019375 else 502 @ 0x100192f8

 450 @ 100192e3  if (not(flag:s)) then 503 @ 0x1001935e else 504 @ 0x100192e5

 451 @ 100192d1  if (not(flag:s)) then 265 @ 0x1001934c else 505 @ 0x100192d3

 452 @ 100193e4  if (flag:s) then 374 @ 0x1001945e else 378 @ 0x100193e6

 453 @ 1001936b  if (not(flag:s)) then 378 @ 0x100193e6 else 506 @ 0x1001936d

 454 @ 10019446  if (flag:s) then 507 @ 0x100194c0 else 509 @ 0x10019448

 455 @ 100193ea  temp0.d = esp
 456 @ 100193ea  esp = eax
 457 @ 100193ea  eax = temp0.d
 458 @ 100193ea  goto 513 @ 0x100193eb

 459 @ 1001947f  edx = pop
 460 @ 1001947f  goto 517 @ 0x10019480

 461 @ 10019407  temp19.b = ah
 462 @ 10019407  temp20.b = [ecx + 0x1d].b
 463 @ 10019407  ah = ah | [ecx + 0x1d].b
 464 @ 10019407  flag:c = 0
 465 @ 1001940a  temp21.d = eax
 466 @ 1001940a  eax = eax + 1
 467 @ 1001940a  flag:s = temp21.d + 1 s< 0
 468 @ 1001940a  flag:o = add_overflow(temp21.d, 1)
 469 @ 1001940c  push(ebp)
 470 @ 1001940d  __bound_gprv_mema32(ebx, [-0xfffffffffc78aca7].q)
 471 @ 10019413  temp0.d = esi
 472 @ 10019413  esi = eax
 473 @ 10019413  eax = temp0.d
 474 @ 10019414  if (flag:s) then 518 @ 0x1001948e else 519 @ 0x10019416

 475 @ 10019464  if (flag:s) then 520 @ 0x100194de else 528 @ 0x10019466

 476 @ 100193f0  esi = esi - 4
 477 @ 100193f0  goto 529

 478 @ 100193f0  esi = esi + 4
 479 @ 100193f0  goto 529

 480 @ 100193ee  cl = 0xc3
 481 @ 100193ee  goto 426 @ 0x100193f0

 482 @ 100193ed  temp0.d = [ecx - 0x5376523d].d
 483 @ 100193ed  [ecx - 0x5376523d].d = esi
 484 @ 100193ed  esi = temp0.d
 485 @ 100193ed  goto 530 @ 0x100193f3

 486 @ 10019370  if (not(flag:s)) then 513 @ 0x100193eb else 533 @ 0x10019372

 487 @ 1001953e  eip = __int1()
 488 @ 1001953e  goto 534 @ 0x1001953f

 489 @ 100194c6  if (flag:s) then 536 @ 0x1001947a else 544 @ 0x100194c8

 490 @ 10019447  if (flag:s) then 546 @ 0x10019492 else 547 @ 0x10019449

 491 @ 100193cf  ecx, es = __les_gprz_memp([esi + 0x78a48278].6)
 492 @ 100193d5  if (flag:s) then 549 @ 0x1001944f else 553 @ 0x100193d7

 493 @ 10019356  if (not(flag:s)) then 555 @ 0x100193d1 else 556 @ 0x10019358

 494 @ 100193d2  [eax + (edi << 1) + 0x2ef7878].b = [eax + (edi << 1) + 0x2ef7878].b & 4
 495 @ 100193da  st0 = st0 f+ float.t([eax].w)
 496 @ 100193da  goto 282 @ 0x100193dc

 497 @ 10019359  if (not(flag:s)) then 557 @ 0x100193d4 else 558 @ 0x1001935b

 498 @ 100192e0  cl = 0x79
 499 @ 100192e2  if (flag:p) then 559 @ 0x1001935d else 560 @ 0x100192e4

 500 @ 10019371  if (not(flag:s)) then 561 @ 0x100193ec else 566 @ 0x10019373

 501 @ 10019375  if (not(flag:s)) then 426 @ 0x100193f0 else 567 @ 0x10019377

 502 @ 100192f8  if (not(flag:s)) then 566 @ 0x10019373 else 568 @ 0x100192fa

 503 @ 1001935e  if (not(flag:s)) then 569 @ 0x100193d9 else 571 @ 0x10019360

 504 @ 100192e5  if (not(flag:s)) then 498 @ 0x100192e0 else 573 @ 0x100192e7

 505 @ 100192d3  if (not(flag:s)) then 293 @ 0x1001934e else 574 @ 0x100192d5

 506 @ 1001936d  if (not(flag:s)) then 428 @ 0x100193e8 else 448 @ 0x1001936f

 507 @ 100194c0  edi = [eax + 0x6f].d * 0x787878fd
 508 @ 100194c0  goto 575 @ 0x100194c7

 509 @ 10019448  temp22.d = ecx
 510 @ 10019448  ecx = ecx - 1
 511 @ 10019448  flag:s = temp22.d - 1 s< 0
 512 @ 10019448  goto 547 @ 0x10019449

 513 @ 100193eb  temp0.d = ecx
 514 @ 100193eb  ecx = eax
 515 @ 100193eb  eax = temp0.d
 516 @ 100193eb  goto 561 @ 0x100193ec

 517 @ 10019480  if (not(flag:c)) then 578 @ 0x100194fa else 580 @ 0x10019482

 518 @ 1001948e  if (al == [eax + 0x78].b) then 584 else 587

 519 @ 10019416  if (flag:s) then 590 @ 0x10019465 else 591 @ 0x10019418

 520 @ 100194de  cond:10 = al - 0x69 s< 0
 521 @ 100194de  cond:14 = al - 0x69 s< 0
 522 @ 100194e0  ah = 0x78
 523 @ 100194e2  temp0.d = esi
 524 @ 100194e2  esi = eax
 525 @ 100194e2  eax = temp0.d
 526 @ 100194e3  ebp = pop
 527 @ 100194e4  if (cond:10) then 596 @ 0x1001955e else 603 @ 0x100194e6

 528 @ 10019466  if (flag:s) then 604 @ 0x1001949d else 606 @ 0x10019468

 529 @ 100193f0  goto 607 @ 0x100193f1

 530 @ 100193f3  ds = [edx].w
 531 @ 100193f5  ss = pop.w
 532 @ 100193f6  <return> jump(pop)

 533 @ 10019372  if (not(flag:s)) then 482 @ 0x100193ed else 609 @ 0x10019374

 534 @ 1001953f  al, ah, eflags = __aas(al, ah, eflags)
 535 @ 10019540  if (flag:o) then 610 @ 0x100195ba else 611 @ 0x10019542

 536 @ 1001947a  temp23.b = al
 537 @ 1001947a  cond:22 = flag:c
 538 @ 1001947a  al = adc.b(temp23.b, 0x78, cond:22)
 539 @ 1001947a  flag:c = adc.b(temp23.b, 0x78, cond:22) u< temp23.b || (cond:22 && adc.b(temp23.b, 0x78, cond:22) == temp23.b)
 540 @ 1001947a  flag:s = adc.b(temp23.b, 0x78, cond:22) s< 0
 541 @ 1001947a  flag:o = unimplemented
 542 @ 1001947c  flag:c = flag:c ^ 1
 543 @ 1001947c  goto 616 @ 0x1001947d

 544 @ 100194c8  mm6 = _m_psubb(mm6, mm4)
 545 @ 100194c8  goto 617 @ 0x100194cb

 546 @ 10019492  if (flag:s) then 622 @ 0x10019502 else 624 @ 0x10019494

 547 @ 10019449  push(esp)
 548 @ 1001944a  if (flag:s) then 625 @ 0x100194a6 else 626 @ 0x1001944c

 549 @ 1001944f  temp0.d = ebx
 550 @ 1001944f  ebx = eax
 551 @ 1001944f  eax = temp0.d
 552 @ 1001944f  goto 629 @ 0x10019450

 553 @ 100193d7  __out_dx_oeax(dx, eax, eflags)
 554 @ 100193d7  goto 631 @ 0x100193d8

 555 @ 100193d1  if (flag:s) then 404 @ 0x10019355 else 633 @ 0x100193d3

 556 @ 10019358  if (not(flag:s)) then 633 @ 0x100193d3 else 634 @ 0x1001935a

 557 @ 100193d4  if (flag:s) then 635 @ 0x1001944e else 639 @ 0x100193d6

 558 @ 1001935b  if (flag:s == flag:o) then 639 @ 0x100193d6 else 559 @ 0x1001935d

 559 @ 1001935d  if (not(flag:s)) then 631 @ 0x100193d8 else 240 @ 0x1001935f

 560 @ 100192e4  if (not(flag:s)) then 240 @ 0x1001935f else 640 @ 0x100192e6

 561 @ 100193ec  temp0.b = [edi - 0x76523c4f].b
 562 @ 100193ec  [edi - 0x76523c4f].b = al
 563 @ 100193ec  al = temp0.b
 564 @ 100193f2  al = [esi].b
 565 @ 100193f2  if (flag:d) then 642 else 644

 566 @ 10019373  if (not(flag:s)) then 480 @ 0x100193ee else 501 @ 0x10019375

 567 @ 10019377  if (not(flag:s)) then 646 @ 0x10019300 else 648 @ 0x10019379

 568 @ 100192fa  if (not(flag:s)) then 648 @ 0x10019379 else 653 @ 0x100192fc

 569 @ 100193d9  al = al - 0x22
 570 @ 100193d9  goto 654 @ 0x100193db

 571 @ 10019360  ecx = 0x79797979
 572 @ 10019360  goto 313 @ 0x10019365

 573 @ 100192e7  if (not(flag:s)) then 656 @ 0x10019362 else 657 @ 0x100192e9

 574 @ 100192d5  if (not(flag:s)) then 332 @ 0x10019350 else 658 @ 0x100192d7

 575 @ 100194c7  dl = 0xf
 576 @ 100194c9  flag:c = 0
 577 @ 100194ca  trap(0xd)
{ Does not return }

 578 @ 100194fa  [edi].d - edi
 579 @ 100194fa  goto 659 @ 0x100194fc

 580 @ 10019482  temp24.d = [edx + 0x78].d
 581 @ 10019482  edx = [edx + 0x78].d * 0x78
 582 @ 10019482  flag:c = unimplemented
 583 @ 10019486  if (flag:s) then 435 @ 0x100194b9 else 666 @ 0x10019488

 584 @ 1001948e  [eax + 0x78].b = bh
 585 @ 1001948e  flag:z = 1
 586 @ 1001948e  goto 674

 587 @ 1001948e  al = [eax + 0x78].b
 588 @ 1001948e  flag:z = 0
 589 @ 1001948e  goto 674

 590 @ 10019465  if (flag:s) then 675 @ 0x100194df else 677 @ 0x10019467

 591 @ 10019418  bl = sbb.b(bl, [esi].b, flag:c)
 592 @ 1001941a  edi = 0x36f1ad16
 593 @ 1001941f  temp25.d = eax
 594 @ 1001941f  eax = eax + 1
 595 @ 10019421  if (temp25.d + 1 s< 0) then 683 @ 0x100193f8 else 691 @ 0x10019423

 596 @ 1001955e  temp26.d = ecx
 597 @ 1001955e  ecx = ecx + 1
 598 @ 1001955e  flag:s = temp26.d + 1 s< 0
 599 @ 1001955f  ebx = ebp * 0x78
 600 @ 1001955f  flag:c = unimplemented
 601 @ 10019562  dh = 0x6e
 602 @ 10019564  if (flag:s) then 703 @ 0x100195de else 721 @ 0x10019566

 603 @ 100194e6  if (cond:14) then 722 @ 0x1001951c else 724 @ 0x100194e8

 604 @ 1001949d  al - [edi].b
 605 @ 1001949d  if (flag:d) then 725 else 727

 606 @ 10019468  if (flag:d) then 729 else 733

 607 @ 100193f1  [esi + (ecx << 2) - 0x733ce8e6].d = ebp
 608 @ 100193f1  goto 683 @ 0x100193f8

 609 @ 10019374  if (not(flag:s)) then 737 @ 0x100193ef else 738 @ 0x10019376

 610 @ 100195ba  undefined

 611 @ 10019542  temp27.d = [esi].d
 612 @ 10019542  [esi].d = [esi].d ^ edi
 613 @ 10019542  flag:s = (temp27.d ^ edi) s< 0
 614 @ 10019542  flag:o = 0
 615 @ 10019544  if (flag:s) then 739 @ 0x100195be else 744 @ 0x10019546

 616 @ 1001947d  if (flag:s) then 439 @ 0x100194bf else 459 @ 0x1001947f

 617 @ 100194cb  temp28.b = al
 618 @ 100194cb  al = al - -0x1b
 619 @ 100194cb  flag:s = temp28.b - -0x1b s< 0
 620 @ 100194cd  push(zx.d(ds))
 621 @ 100194cd  goto 745 @ 0x100194ce

 622 @ 10019502  __bound_gprv_mema32(ecx, [ecx].q)
 623 @ 10019502  goto 749 @ 0x10019504

 624 @ 10019494  if (flag:s) then 750 @ 0x1001950e else 755 @ 0x10019496

 625 @ 100194a6  if (flag:s) then 756 @ 0x100194d8 else 764 @ 0x100194a8

 626 @ 1001944c  esi = __outsd(dx, [esi].d, esi, eflags)
 627 @ 1001944d  edi = edi - 1
 628 @ 1001944d  goto 635 @ 0x1001944e

 629 @ 10019450  esi = __outsd(dx, [esi].d, esi, eflags)
 630 @ 10019451  if (flag:s) then 617 @ 0x100194cb else 771 @ 0x10019453

 631 @ 100193d8  al = al + [esi + (ebx << 3)].b
 632 @ 100193d8  goto 654 @ 0x100193db

 633 @ 100193d3  if (flag:d) then 772 else 776

 634 @ 1001935a  if (not(flag:s)) then 569 @ 0x100193d9 else 780 @ 0x1001935c

 635 @ 1001944e  temp29.b = al
 636 @ 1001944e  al = al ^ 0x93
 637 @ 1001944e  flag:s = (temp29.b ^ 0x93) s< 0
 638 @ 1001944e  goto 629 @ 0x10019450

 639 @ 100193d6  if (flag:s) then 289 @ 0x100193c7 else 631 @ 0x100193d8

 640 @ 100192e6  flag:c = 1
 641 @ 100192e6  goto 573 @ 0x100192e7

 642 @ 100193f2  esi = esi - 1
 643 @ 100193f2  goto 781

 644 @ 100193f2  esi = esi + 1
 645 @ 100193f2  goto 781

 646 @ 10019300  ecx = ecx - 1
 647 @ 10019300  if (flag:z || ecx != 0) then 782 @ 0x1001937b else 787 @ 0x10019302

 648 @ 10019379  [esi - 0x7176766b].b = dl
 649 @ 1001937f  temp0.d = edi
 650 @ 1001937f  edi = eax
 651 @ 1001937f  eax = temp0.d
 652 @ 1001937f  goto 797 @ 0x10019380

 653 @ 100192fc  if (flag:s != flag:o) then 567 @ 0x10019377 else 798 @ 0x100192fe

 654 @ 100193db  al = al + dl
 655 @ 100193db  goto 799 @ 0x100193dd

 656 @ 10019362  if (not(flag:s)) then 799 @ 0x100193dd else 802 @ 0x10019364

 657 @ 100192e9  if (not(flag:s)) then 802 @ 0x10019364 else 803 @ 0x100192eb

 658 @ 100192d7  if (not(flag:s)) then 804 @ 0x10019352 else 806 @ 0x100192d9

 659 @ 100194fc  ebp = ebp - [edx].d
 660 @ 100194fe  flag:s = (esp & ebx) s< 0
 661 @ 10019500  temp30.d = [eax + 0x62].d
 662 @ 10019500  edi = [eax + 0x62].d * 0x78787809
 663 @ 10019500  flag:c = unimplemented
 664 @ 10019507  esi = 0xdb88c814
 665 @ 10019507  goto 807 @ 0x1001950c

 666 @ 10019488  temp31.d = [ecx].d
 667 @ 10019488  cond:23 = flag:c
 668 @ 10019488  [ecx].d = sbb.d(temp31.d, esi, cond:23)
 669 @ 10019488  flag:c = unimplemented
 670 @ 10019488  flag:z = sbb.d(temp31.d, esi, cond:23) == 0
 671 @ 10019488  flag:s = sbb.d(temp31.d, esi, cond:23) s< 0
 672 @ 10019488  flag:o = unimplemented
 673 @ 1001948a  if (flag:z) then 749 @ 0x10019504 else 808 @ 0x1001948c

 674 @ 1001948e  goto 546 @ 0x10019492

 675 @ 100194df  esi = [eax + (edi << 1) + 0x78785d96].d * 0x6ccd3478
 676 @ 100194df  goto 810 @ 0x100194ea

 677 @ 10019467  eax = eax ^ 0x9393a9a4
 678 @ 1001946c  temp0.b = [esi + 0x2eac5fd8].b
 679 @ 1001946c  [esi + 0x2eac5fd8].b = al
 680 @ 1001946c  al = temp0.b
 681 @ 10019472  al = [esi].b
 682 @ 10019472  if (flag:d) then 821 else 823

 683 @ 100193f8  [-0xffffffffd6d1170e].w = int.w(st0)
 684 @ 100193fe  temp32.b = bl
 685 @ 100193fe  temp33.b = [ecx + 0x78].b
 686 @ 100193fe  bl = bl & [ecx + 0x78].b
 687 @ 100193fe  flag:c = 0
 688 @ 100193fe  flag:s = (temp32.b & temp33.b) s< 0
 689 @ 100193fe  flag:o = 0
 690 @ 10019401  if (flag:s) then 825 @ 0x10019456 else 826 @ 0x10019403

 691 @ 10019423  edi = [eax + 0x78].d * 0x78
 692 @ 10019427  flag:c = test_bit(ah, 0)
 693 @ 10019427  flag:p = test_bit(ah, 2)
 694 @ 10019427  flag:a = test_bit(ah, 4)
 695 @ 10019427  flag:z = test_bit(ah, 6)
 696 @ 10019427  flag:s = test_bit(ah, 7)
 697 @ 10019429  temp34.b = [edi].b
 698 @ 10019429  flag:c = al u< temp34.b
 699 @ 10019429  flag:z = al == temp34.b
 700 @ 10019429  flag:s = al - temp34.b s< 0
 701 @ 10019429  flag:o = add_overflow(al, neg.b(temp34.b))
 702 @ 10019429  if (flag:d) then 827 else 829

 703 @ 100195de  temp35.d = ebp
 704 @ 100195de  ebp = ebp + 1
 705 @ 100195de  flag:p = unimplemented
 706 @ 100195de  flag:a = unimplemented
 707 @ 100195de  flag:z = temp35.d == -1
 708 @ 100195de  flag:s = temp35.d + 1 s< 0
 709 @ 100195de  flag:o = add_overflow(temp35.d, 1)
 710 @ 100195df  temp0, edi = __insb(edi, dx, eflags)
 711 @ 100195df  [edi].b = temp0.b
 712 @ 100195e0  edi = pop
 713 @ 100195e0  esi = pop
 714 @ 100195e0  ebp = pop
 715 @ 100195e0  esp = esp + 4
 716 @ 100195e0  ebx = pop
 717 @ 100195e0  edx = pop
 718 @ 100195e0  ecx = pop
 719 @ 100195e0  eax = pop
 720 @ 100195e1  if (flag:s) then 831 @ 0x100195da else 832 @ 0x100195e3

 721 @ 10019566  if (flag:s) then 833 @ 0x100195b5 else 834 @ 0x10019568

 722 @ 1001951c  flag:s = (al & 0xa7) s< 0
 723 @ 1001951c  goto 852 @ 0x1001951e

 724 @ 100194e8  undefined

 725 @ 1001949d  edi = edi - 1
 726 @ 1001949d  goto 854 @ 0x1001949e

 727 @ 1001949d  edi = edi + 1
 728 @ 1001949d  goto 854 @ 0x1001949e

 729 @ 10019468  [edi].b = [esi].b
 730 @ 10019468  edi = edi - 1
 731 @ 10019468  esi = esi - 1
 732 @ 10019468  goto 858 @ 0x10019469

 733 @ 10019468  [edi].b = [esi].b
 734 @ 10019468  edi = edi + 1
 735 @ 10019468  esi = esi + 1
 736 @ 10019468  goto 858 @ 0x10019469

 737 @ 100193ef  <return> jump(pop)

 738 @ 10019376  if (not(flag:s)) then 607 @ 0x100193f1 else 864 @ 0x10019378

 739 @ 100195be  temp36.d = [edi + 3].d
 740 @ 100195be  ebp = [edi + 3].d * 0x78
 741 @ 100195be  flag:c = unimplemented
 742 @ 100195c2  st0 = st0 f* fconvert.t([eax + 0x78].q)
 743 @ 100195c5  if (flag:s) then 869 @ 0x1001963f else 870 @ 0x100195c7

 744 @ 10019546  if (flag:s) then 487 @ 0x1001953e else 882 @ 0x10019548

 745 @ 100194ce  __out_dx_al(dx, al, eflags)
 746 @ 100194cf  flag:c = 0
 747 @ 100194d0  push(ebx)
 748 @ 100194d1  if (flag:s) then 578 @ 0x100194fa else 888 @ 0x100194d3

 749 @ 10019504  if (flag:s) then 889 @ 0x1001957e else 891 @ 0x10019506

 750 @ 1001950e  __out_dx_oeax(dx, eax, eflags)
 751 @ 1001950f  temp37.b = [esi].b
 752 @ 1001950f  [esi].b = [esi].b | bl
 753 @ 1001950f  flag:s = (temp37.b | bl) s< 0
 754 @ 10019511  if (flag:s) then 892 @ 0x100194f6 else 896 @ 0x10019513

 755 @ 10019496  if (flag:s) then 575 @ 0x100194c7 else 897 @ 0x10019498

 756 @ 100194d8  temp38.b = [eax].b
 757 @ 100194d8  cond:24 = flag:c
 758 @ 100194d8  [eax].b = adc.b(temp38.b, ch, cond:24)
 759 @ 100194d8  flag:c = adc.b(temp38.b, ch, cond:24) u< temp38.b || (cond:24 && adc.b(temp38.b, ch, cond:24) == temp38.b)
 760 @ 100194da  temp39.d = eax
 761 @ 100194da  eax = sbb.d(temp39.d, 0x3ca614ae, flag:c)
 762 @ 100194da  flag:s = sbb.d(temp39.d, 0x3ca614ae, flag:c) s< 0
 763 @ 100194da  goto 675 @ 0x100194df

 764 @ 100194a8  al = [-0xffffffff869393af].b
 765 @ 100194ad  temp0.b = ch
 766 @ 100194ad  ch = ah
 767 @ 100194ad  ah = temp0.b
 768 @ 100194af  esi = __outsd(dx, [esi].d, esi, eflags)
 769 @ 100194b0  al = [esi].b
 770 @ 100194b0  if (flag:d) then 900 else 902

 771 @ 10019453  jump(0x437a0cd0)

 772 @ 100193d3  [edi].b = [esi].b
 773 @ 100193d3  edi = edi - 1
 774 @ 100193d3  esi = esi - 1
 775 @ 100193d3  goto 904

 776 @ 100193d3  [edi].b = [esi].b
 777 @ 100193d3  edi = edi + 1
 778 @ 100193d3  esi = esi + 1
 779 @ 100193d3  goto 904

 780 @ 1001935c  if (not(flag:s)) then 553 @ 0x100193d7 else 503 @ 0x1001935e

 781 @ 100193f2  goto 530 @ 0x100193f3

 782 @ 1001937b  temp0.d = ebp
 783 @ 1001937b  ebp = eax
 784 @ 1001937b  eax = temp0.d
 785 @ 1001937c  [ecx + 0x5ca5978e].d = ecx
 786 @ 1001937c  goto 905 @ 0x10019382

 787 @ 10019302  temp40.d = [ecx + 0x79].d
 788 @ 10019302  cond:25 = flag:c
 789 @ 10019302  [ecx + 0x79].d = sbb.d(temp40.d, edi, cond:25)
 790 @ 10019302  flag:c = unimplemented
 791 @ 10019302  flag:p = unimplemented
 792 @ 10019302  flag:a = unimplemented
 793 @ 10019302  flag:z = sbb.d(temp40.d, edi, cond:25) == 0
 794 @ 10019302  flag:s = sbb.d(temp40.d, edi, cond:25) s< 0
 795 @ 10019302  flag:o = unimplemented
 796 @ 10019305  if (not(flag:s)) then 797 @ 0x10019380 else 906 @ 0x10019307

 797 @ 10019380  if (flag:d) then 907 else 911

 798 @ 100192fe  if (not(flag:s)) then 648 @ 0x10019379 else 646 @ 0x10019300

 799 @ 100193dd  temp41.d = [edi].d
 800 @ 100193dd  flag:s = (temp41.d & 0x6782d31) s< 0
 801 @ 100193dd  goto 318 @ 0x100193e3

 802 @ 10019364  if (not(flag:s)) then 346 @ 0x100193df else 261 @ 0x10019366

 803 @ 100192eb  if (not(flag:s)) then 261 @ 0x10019366 else 915 @ 0x100192ed

 804 @ 10019352  eax = [0x79797999].d
 805 @ 10019352  goto 446 @ 0x10019357

 806 @ 100192d9  if (not(flag:s)) then 444 @ 0x10019354 else 916 @ 0x100192db

 807 @ 1001950c  if (not(flag:s)) then 917 @ 0x100194dc else 750 @ 0x1001950e

 808 @ 1001948c  esi = __outsd(dx, [esi].d, esi, eflags)
 809 @ 1001948c  goto 919 @ 0x1001948d

 810 @ 100194ea  temp0.d = ebx
 811 @ 100194ea  ebx = eax
 812 @ 100194ea  eax = temp0.d
 813 @ 100194eb  temp0.d = ebx
 814 @ 100194eb  ebx = eax
 815 @ 100194eb  eax = temp0.d
 816 @ 100194ec  temp0.b = [esi + 0x78ac8fab].b
 817 @ 100194ec  [esi + 0x78ac8fab].b = al
 818 @ 100194ec  al = temp0.b
 819 @ 100194f2  al = [esi].b
 820 @ 100194f2  if (flag:d) then 920 else 922

 821 @ 10019472  esi = esi - 1
 822 @ 10019472  goto 924

 823 @ 10019472  esi = esi + 1
 824 @ 10019472  goto 924

 825 @ 10019456  if (flag:s) then 925 @ 0x1001948b else 926 @ 0x10019458

 826 @ 10019403  if (flag:s) then 616 @ 0x1001947d else 416 @ 0x10019405

 827 @ 10019429  edi = edi - 1
 828 @ 10019429  goto 932 @ 0x1001942a

 829 @ 10019429  edi = edi + 1
 830 @ 10019429  goto 932 @ 0x1001942a

 831 @ 100195da  goto 943 @ 0x10019625

 832 @ 100195e3  if (not(flag:z)) then 944 @ 0x1001965d else 946 @ 0x100195e5

 833 @ 100195b5  undefined

 834 @ 10019568  eax = 0x86939364
 835 @ 1001956d  temp0.b = al
 836 @ 1001956d  al = cl
 837 @ 1001956d  cl = temp0.b
 838 @ 1001956f  dh = 0xac
 839 @ 10019571  temp42.d = eax
 840 @ 10019571  cond:26 = flag:c
 841 @ 10019571  eax = adc.d(temp42.d, 0x7828bdac, cond:26)
 842 @ 10019571  flag:c = adc.d(temp42.d, 0x7828bdac, cond:26) u< temp42.d || (cond:26 && adc.d(temp42.d, 0x7828bdac, cond:26) == temp42.d)
 843 @ 10019576  esp = ebp
 844 @ 10019576  ebp = pop
 845 @ 10019577  al = 0x30
 846 @ 10019579  temp43.d = esi
 847 @ 10019579  esi = esi + 1
 848 @ 10019579  flag:p = unimplemented
 849 @ 10019579  flag:z = temp43.d == -1
 850 @ 10019579  flag:s = temp43.d + 1 s< 0
 851 @ 1001957a  if (not(flag:c)) then 947 @ 0x100195ee else 950 @ 0x1001957d

 852 @ 1001951e  push(zx.d(-0x48))
 853 @ 1001951e  goto 955 @ 0x10019521

 854 @ 1001949e  temp44.b = [ecx - 0x31].b
 855 @ 1001949e  flag:c = ch u< temp44.b
 856 @ 1001949e  flag:s = ch - temp44.b s< 0
 857 @ 100194a1  if (flag:s) then 956 @ 0x10019437 else 957 @ 0x100194a3

 858 @ 10019469  eax & 0x86869393
 859 @ 1001946e  st0 f- fconvert.t([edi - 0x54].d)
 860 @ 1001946e  __free_slot(st0)
 861 @ 1001946e  top = top + 1
 862 @ 10019471  al = [esi].b
 863 @ 10019471  if (flag:d) then 959 else 961

 864 @ 10019378  temp0.d = [eax - 0x76766a6a].d
 865 @ 10019378  [eax - 0x76766a6a].d = ecx
 866 @ 10019378  ecx = temp0.d
 867 @ 1001937e  ss = [edi - 0x6455a35b].w
 868 @ 1001937e  goto 963 @ 0x10019384

 869 @ 1001963f  goto 966 @ 0x10019649

 870 @ 100195c7  ebp = ebp - 1
 871 @ 100195c8  __out_immb_oeax(0xcf, eax, eflags)
 872 @ 100195ca  push(edi)
 873 @ 100195cb  eax = eax + 1
 874 @ 100195cc  push(eax)
 875 @ 100195cd  [eax - 0x34].b = adc.b([eax - 0x34].b, cl, flag:c)
 876 @ 100195d0  temp45.d = edi
 877 @ 100195d0  temp46.d = [eax + 0x6d].d
 878 @ 100195d0  edi = edi ^ [eax + 0x6d].d
 879 @ 100195d0  flag:s = (temp45.d ^ temp46.d) s< 0
 880 @ 100195d0  flag:o = 0
 881 @ 100195d0  goto 972 @ 0x100195d3

 882 @ 10019548  temp47.b = al
 883 @ 10019548  al = al & ch
 884 @ 10019548  flag:c = 0
 885 @ 1001954a  al = adc.b(al, 0x3a, flag:c)
 886 @ 1001954c  flag:c = 0
 887 @ 1001954c  goto 974 @ 0x1001954d

 888 @ 100194d3  if (flag:s) then 974 @ 0x1001954d else 976 @ 0x100194d5

 889 @ 1001957e  ebx = pop
 890 @ 1001957f  if (not(flag:o)) then 977 @ 0x100195f9 else 978 @ 0x10019581

 891 @ 10019506  if (flag:s) then 489 @ 0x100194c6 else 979 @ 0x10019508

 892 @ 100194f6  esp = ebp
 893 @ 100194f6  ebp = pop
 894 @ 100194f7  al = [esi].b
 895 @ 100194f7  if (flag:d) then 986 else 988

 896 @ 10019513  if (flag:s) then 990 @ 0x1001958d else 993 @ 0x10019515

 897 @ 10019498  ah = ah | [ecx + edx].b
 898 @ 1001949b  esp = 0x693aae32
 899 @ 100194a0  undefined

 900 @ 100194b0  esi = esi - 1
 901 @ 100194b0  goto 994

 902 @ 100194b0  esi = esi + 1
 903 @ 100194b0  goto 994

 904 @ 100193d3  goto 557 @ 0x100193d4

 905 @ 10019382  if (flag:d) then 995 else 998

 906 @ 10019307  if (not(flag:s)) then 905 @ 0x10019382 else 1001 @ 0x10019309

 907 @ 10019380  [edi].d = [esi].d
 908 @ 10019380  edi = edi - 4
 909 @ 10019380  esi = esi - 4
 910 @ 10019380  goto 1002 @ 0x10019381

 911 @ 10019380  [edi].d = [esi].d
 912 @ 10019380  edi = edi + 4
 913 @ 10019380  esi = esi + 4
 914 @ 10019380  goto 1002 @ 0x10019381

 915 @ 100192ed  if (flag:p) then 287 @ 0x10019368 else 1004 @ 0x100192ef

 916 @ 100192db  if (not(flag:s)) then 493 @ 0x10019356 else 1007 @ 0x100192dd

 917 @ 100194dc  al = adc.b(al, -0x5a, flag:c)
 918 @ 100194dc  goto 520 @ 0x100194de

 919 @ 1001948d  if (al == [eax + 0x78].b) then 1008 else 1011

 920 @ 100194f2  esi = esi - 1
 921 @ 100194f2  goto 1014 @ 0x100194f3

 922 @ 100194f2  esi = esi + 1
 923 @ 100194f2  goto 1014 @ 0x100194f3

 924 @ 10019472  goto 1016 @ 0x10019473

 925 @ 1001948b  if (flag:s) then 659 @ 0x100194fc else 919 @ 0x1001948d

 926 @ 10019458  push(zx.d(cs))
 927 @ 10019459  ecx = ecx & esp
 928 @ 1001945b  al = __in_al_immb(0xed, eflags)
 929 @ 1001945d  esp = ebp
 930 @ 1001945d  ebp = pop
 931 @ 1001945d  goto 374 @ 0x1001945e

 932 @ 1001942a  temp0.d = ebx
 933 @ 1001942a  ebx = eax
 934 @ 1001942a  eax = temp0.d
 935 @ 1001942b  temp0.d = ebx
 936 @ 1001942b  ebx = eax
 937 @ 1001942b  eax = temp0.d
 938 @ 1001942c  temp0.b = [esi - 0x2f52c82b].b
 939 @ 1001942c  [esi - 0x2f52c82b].b = al
 940 @ 1001942c  al = temp0.b
 941 @ 10019432  al = [esi].b
 942 @ 10019432  if (flag:d) then 1025 else 1027

 943 @ 10019625  if (flag:s) then 1029 @ 0x1001969f else 1039 @ 0x10019627

 944 @ 1001965d  push(ecx)
 945 @ 1001965d  goto 1041 @ 0x1001965e

 946 @ 100195e5  if (flag:s) then 1049 @ 0x1001965f else 1052 @ 0x100195e7

 947 @ 100195ee  dl = 0xc1
 948 @ 100195f0  al = [esi].b
 949 @ 100195f0  if (flag:d) then 1058 else 1060

 950 @ 1001957d  temp48.d = esp
 951 @ 1001957d  esp = esp - 1
 952 @ 1001957d  flag:s = temp48.d - 1 s< 0
 953 @ 1001957d  flag:o = add_overflow(temp48.d, -1)
 954 @ 1001957d  goto 889 @ 0x1001957e

 955 @ 10019521  if (flag:s) then 745 @ 0x100194ce else 1062 @ 0x10019523

 956 @ 10019437  if (flag:d) then 1063 else 1067

 957 @ 100194a3  esp = pop
 958 @ 100194a4  if (flag:s) then 852 @ 0x1001951e else 625 @ 0x100194a6

 959 @ 10019471  esi = esi - 1
 960 @ 10019471  goto 1071

 961 @ 10019471  esi = esi + 1
 962 @ 10019471  goto 1071

 963 @ 10019384  esi = 0x8790246a
 964 @ 10019389  ecx = ebx + (ecx << 2) - 0x4b627b7c
 965 @ 10019389  goto 102 @ 0x10019390

 966 @ 10019649  esi = esi + 1
 967 @ 1001964a  temp49.d = ebx
 968 @ 1001964a  ebx = ebx + edi
 969 @ 1001964a  flag:s = temp49.d + edi s< 0
 970 @ 1001964c  al, ah, eflags = __aad_immb(0xdc, al, ah)
 971 @ 1001964c  goto 1072 @ 0x1001964e

 972 @ 100195d3  eax = __in_oeax_dx(dx, eflags)
 973 @ 100195d4  if (flag:s) then 1072 @ 0x1001964e else 1075 @ 0x100195d6

 974 @ 1001954d  al = al & 0x18
 975 @ 1001954f  undefined

 976 @ 100194d5  if (flag:s) then 1076 @ 0x1001954f else 1077 @ 0x100194d7

 977 @ 100195f9  if (not(flag:o)) then 1082 @ 0x100195db else 1098 @ 0x100195fb

 978 @ 10019581  if (flag:s) then 721 @ 0x10019566 else 1100 @ 0x10019583

 979 @ 10019508  temp50.b = al
 980 @ 10019508  cond:27 = flag:c
 981 @ 10019508  al = adc.b(temp50.b, -0x38, cond:27)
 982 @ 10019508  flag:c = adc.b(temp50.b, -0x38, cond:27) u< temp50.b || (cond:27 && adc.b(temp50.b, -0x38, cond:27) == temp50.b)
 983 @ 10019508  flag:s = adc.b(temp50.b, -0x38, cond:27) s< 0
 984 @ 1001950a  bl = bl
 985 @ 1001950a  goto 807 @ 0x1001950c

 986 @ 100194f7  esi = esi - 1
 987 @ 100194f7  goto 1104

 988 @ 100194f7  esi = esi + 1
 989 @ 100194f7  goto 1104

 990 @ 1001958d  push(ecx)
 991 @ 1001958e  ecx = ecx - 1
 992 @ 1001958e  goto 1105 @ 0x1001958f

 993 @ 10019515  if (flag:s) then 1105 @ 0x1001958f else 1114 @ 0x10019517

 994 @ 100194b0  goto 320 @ 0x100194b1

 995 @ 10019382  [edi].b = al
 996 @ 10019382  edi = edi - 1
 997 @ 10019382  goto 1121 @ 0x10019383

 998 @ 10019382  [edi].b = al
 999 @ 10019382  edi = edi + 1
1000 @ 10019382  goto 1121 @ 0x10019383

1001 @ 10019309  if (flag:p) then 963 @ 0x10019384 else 1122 @ 0x1001930b

1002 @ 10019381  esp = pop
1003 @ 10019381  goto 905 @ 0x10019382

1004 @ 100192ef  esp = ebp
1005 @ 100192ef  ebp = pop
1006 @ 100192f0  if (not(flag:s)) then 453 @ 0x1001936b else 1123 @ 0x100192f2

1007 @ 100192dd  if (not(flag:s)) then 556 @ 0x10019358 else 1124 @ 0x100192df

1008 @ 1001948d  [eax + 0x78].b = bh
1009 @ 1001948d  flag:z = 1
1010 @ 1001948d  goto 1125

1011 @ 1001948d  al = [eax + 0x78].b
1012 @ 1001948d  flag:z = 0
1013 @ 1001948d  goto 1125

1014 @ 100194f3  esp = 0xacc97828
1015 @ 100194f3  goto 1126 @ 0x100194f8

1016 @ 10019473  unimplemented  {enter 0x7828, 0xc9}
1017 @ 10019477  al = 0x20
1018 @ 10019479  temp51.d = eax
1019 @ 10019479  eax = eax ^ 0x78f57814
1020 @ 10019479  flag:c = 0
1021 @ 1001947e  temp52.d = eax
1022 @ 1001947e  eax = eax + 1
1023 @ 1001947e  flag:s = temp52.d + 1 s< 0
1024 @ 1001947e  goto 459 @ 0x1001947f

1025 @ 10019432  esi = esi - 1
1026 @ 10019432  goto 1127 @ 0x10019433

1027 @ 10019432  esi = esi + 1
1028 @ 10019432  goto 1127 @ 0x10019433

1029 @ 1001969f  temp53.b = bh
1030 @ 1001969f  temp54.b = [eax + 0x78].b
1031 @ 1001969f  bh = bh & [eax + 0x78].b
1032 @ 1001969f  flag:c = 0
1033 @ 1001969f  flag:p = unimplemented
1034 @ 1001969f  flag:a = undefined
1035 @ 1001969f  flag:z = (temp53.b & temp54.b) == 0
1036 @ 1001969f  flag:s = (temp53.b & temp54.b) s< 0
1037 @ 1001969f  flag:o = 0
1038 @ 1001969f  goto 1128 @ 0x100196a2

1039 @ 10019627  ebp = pop
1040 @ 10019627  goto 1129 @ 0x10019628

1041 @ 1001965e  temp55.d = edx
1042 @ 1001965e  edx = edx + 1
1043 @ 1001965e  flag:p = unimplemented
1044 @ 1001965e  flag:a = unimplemented
1045 @ 1001965e  flag:z = temp55.d == -1
1046 @ 1001965e  flag:s = temp55.d + 1 s< 0
1047 @ 1001965e  flag:o = add_overflow(temp55.d, 1)
1048 @ 1001965e  goto 1049 @ 0x1001965f

1049 @ 1001965f  temp0, edi = __insd(edi, dx, eflags)
1050 @ 1001965f  [edi].d = temp0.d
1051 @ 10019660  if (not(flag:z)) then 1130 @ 0x100196da else 1132 @ 0x10019662

1052 @ 100195e7  edx = pop
1053 @ 100195e8  cl = 0xa9
1054 @ 100195ea  temp0.d = ebx
1055 @ 100195ea  ebx = eax
1056 @ 100195ea  eax = temp0.d
1057 @ 100195ea  goto 1133 @ 0x100195eb

1058 @ 100195f0  esi = esi - 1
1059 @ 100195f0  goto 1141 @ 0x100195f1

1060 @ 100195f0  esi = esi + 1
1061 @ 100195f0  goto 1141 @ 0x100195f1

1062 @ 10019523  if (flag:s) then 1142 @ 0x1001959e else 1147 @ 0x10019526

1063 @ 10019437  [edi].d = [esi].d
1064 @ 10019437  edi = edi - 4
1065 @ 10019437  esi = esi - 4
1066 @ 10019437  goto 1148 @ 0x10019438

1067 @ 10019437  [edi].d = [esi].d
1068 @ 10019437  edi = edi + 4
1069 @ 10019437  esi = esi + 4
1070 @ 10019437  goto 1148 @ 0x10019438

1071 @ 10019471  goto 1016 @ 0x10019473

1072 @ 1001964e  push(edx)
1073 @ 1001964f  ax, eflags = __arpl_gpr16_gpr16(ax, si)
1074 @ 10019651  if (flag:s) then 1149 @ 0x10019639 else 1153 @ 0x10019653

1075 @ 100195d6  if (flag:s) then 1162 @ 0x1001962e else 1164 @ 0x100195d8

1076 @ 1001954f  undefined

1077 @ 100194d7  al = al - 0x10
1078 @ 100194d9  temp56.b = [0x3ca614ae].b
1079 @ 100194d9  [0x3ca614ae].b = [0x3ca614ae].b - bl
1080 @ 100194d9  flag:s = temp56.b - bl s< 0
1081 @ 100194d9  goto 675 @ 0x100194df

1082 @ 100195db  ecx = ecx - 1
1083 @ 100195dc  al = [ebx + al.d].b
1084 @ 100195dd  temp57.d = eax
1085 @ 100195dd  eax = eax ^ 0x78616c45
1086 @ 100195dd  flag:c = 0
1087 @ 100195dd  flag:p = unimplemented
1088 @ 100195dd  flag:a = undefined
1089 @ 100195dd  flag:z = (temp57.d ^ 0x78616c45) == 0
1090 @ 100195dd  flag:s = (temp57.d ^ 0x78616c45) s< 0
1091 @ 100195dd  flag:o = 0
1092 @ 100195e2  temp2.d = [ebp + 0x78].d
1093 @ 100195e2  temp0.d = divu.dp.d(edx:eax, temp2.d)
1094 @ 100195e2  temp1.d = modu.dp.d(edx:eax, temp2.d)
1095 @ 100195e2  eax = temp0.d
1096 @ 100195e2  edx = temp1.d
1097 @ 100195e2  goto 946 @ 0x100195e5

1098 @ 100195fb  al = al - 1
1099 @ 100195fb  goto 1167 @ 0x100195fd

1100 @ 10019583  edi = [eax + 0x78].d * 0x78
1101 @ 10019587  edx = edx - 1
1102 @ 10019588  esi = esi | ecx
1103 @ 1001958a  if (esi u< 0) then 1133 @ 0x100195eb else 1180 @ 0x1001958c

1104 @ 100194f7  goto 1126 @ 0x100194f8

1105 @ 1001958f  temp58.b = [eax + 0x78].b
1106 @ 1001958f  [eax + 0x78].b = [eax + 0x78].b s>> 1
1107 @ 1001958f  flag:c = unimplemented
1108 @ 1001958f  flag:p = unimplemented
1109 @ 1001958f  flag:a = unimplemented
1110 @ 1001958f  flag:z = temp58.b s>> 1 == 0
1111 @ 1001958f  flag:s = temp58.b s>> 1 s< 0
1112 @ 1001958f  flag:o = unimplemented
1113 @ 10019592  if (flag:s) then 1189 @ 0x100195f7 else 1192 @ 0x10019594

1114 @ 10019517  al = al & 0x20
1115 @ 10019519  temp59.b = bl
1116 @ 10019519  temp60.b = [0x3ea7a8b5].b
1117 @ 10019519  bl = bl - [0x3ea7a8b5].b
1118 @ 10019519  flag:s = temp59.b - temp60.b s< 0
1119 @ 1001951f  push(zx.d(-0x48))
1120 @ 1001951f  goto 955 @ 0x10019521

1121 @ 10019383  goto 963 @ 0x10019384

1122 @ 1001930b  if (not(flag:s)) then 1193 @ 0x10019386 else 1195 @ 0x1001930d

1123 @ 100192f2  if (not(flag:s)) then 1196 @ 0x10019276 else 406 @ 0x100192f4  {"55555555555555555555555555555555…"}

1124 @ 100192df  if (not(flag:s)) then 1198 @ 0x10019292 else 1211 @ 0x100192e1  {"5555555555555555555555y{yyyyyyyy…"}

1125 @ 1001948d  goto 546 @ 0x10019492

1126 @ 100194f8  if (flag:d) then 1212 else 1215

1127 @ 10019433  if (flag:d) then 1218 else 1221

1128 @ 100196a2  if (flag:s) then 1224 @ 0x10019712 else 1225 @ 0x100196a4

1129 @ 10019628  if (not(flag:s)) then 1226 @ 0x100195d1 else 1227 @ 0x1001962a

1130 @ 100196da  ds = pop.w
1131 @ 100196da  goto 1231 @ 0x100196db

1132 @ 10019662  if (flag:z || flag:c) then 1234 @ 0x100196d9 else 1238 @ 0x10019664

1133 @ 100195eb  temp0.d = ebx
1134 @ 100195eb  ebx = eax
1135 @ 100195eb  eax = temp0.d
1136 @ 100195ec  temp0.b = [esi + 0x7bacc1b2].b
1137 @ 100195ec  [esi + 0x7bacc1b2].b = al
1138 @ 100195ec  al = temp0.b
1139 @ 100195f2  al = [esi].b
1140 @ 100195f2  if (flag:d) then 1239 else 1241

1141 @ 100195f1  if (not(flag:p)) then 1243 @ 0x1001959f else 1248 @ 0x100195f3

1142 @ 1001959e  temp61.d = edx
1143 @ 1001959e  edx = edx + 1
1144 @ 1001959e  flag:z = temp61.d == -1
1145 @ 1001959e  flag:s = temp61.d + 1 s< 0
1146 @ 1001959e  goto 1243 @ 0x1001959f

1147 @ 10019526  if (flag:s) then 1251 @ 0x10019569 else 1262 @ 0x10019528

1148 @ 10019438  if (flag:s) then 1274 @ 0x100194b2 else 1276 @ 0x1001943a

1149 @ 10019639  flag:c = 1
1150 @ 1001963a  esi = esi | edi
1151 @ 1001963c  eax = __in_oeax_dx(dx, eflags)
1152 @ 1001963d  undefined

1153 @ 10019653  temp62.b = al
1154 @ 10019653  al = al & 0x78
1155 @ 10019653  flag:c = 0
1156 @ 10019653  flag:p = unimplemented
1157 @ 10019653  flag:a = undefined
1158 @ 10019653  flag:z = (temp62.b & 0x78) == 0
1159 @ 10019653  flag:s = (temp62.b & 0x78) s< 0
1160 @ 10019653  flag:o = 0
1161 @ 10019655  if (flag:s) then 1283 @ 0x100196cf else 1284 @ 0x10019657

1162 @ 1001962e  ecx = 0xae79aecd
1163 @ 1001962e  goto 1291 @ 0x10019633

1164 @ 100195d8  esp = esp + 1
1165 @ 100195d9  ebp = ebp ^ ebx
1166 @ 100195d9  goto 1082 @ 0x100195db

1167 @ 100195fd  temp63.d = eax
1168 @ 100195fd  eax = eax - -0x178708de
1169 @ 100195fd  flag:c = temp63.d u< -0x178708de
1170 @ 10019603  temp64.b = [eax + 0x78].b
1171 @ 10019603  cond:28 = flag:c
1172 @ 10019603  [eax + 0x78].b = adc.b(temp64.b, bh, cond:28)
1173 @ 10019603  flag:c = adc.b(temp64.b, bh, cond:28) u< temp64.b || (cond:28 && adc.b(temp64.b, bh, cond:28) == temp64.b)
1174 @ 10019603  flag:p = unimplemented
1175 @ 10019603  flag:a = unimplemented
1176 @ 10019603  flag:z = adc.b(temp64.b, bh, cond:28) == 0
1177 @ 10019603  flag:s = adc.b(temp64.b, bh, cond:28) s< 0
1178 @ 10019603  flag:o = unimplemented
1179 @ 10019606  if (flag:s) then 943 @ 0x10019625 else 1292 @ 0x10019608

1180 @ 1001958c  push(eax)
1181 @ 1001958c  push(ecx)
1182 @ 1001958c  push(edx)
1183 @ 1001958c  push(ebx)
1184 @ 1001958c  push(esp)
1185 @ 1001958c  push(ebp)
1186 @ 1001958c  push(esi)
1187 @ 1001958c  push(edi)
1188 @ 1001958c  goto 990 @ 0x1001958d

1189 @ 100195f7  temp0.d = pop
1190 @ 100195f7  esp = esp + 0x7176
1191 @ 100195f7  <return> jump(temp0.d)

1192 @ 10019594  if (flag:s) then 1294 @ 0x1001960e else 1297 @ 0x10019596

1193 @ 10019386  al = al & 0x90
1194 @ 10019386  goto 1298 @ 0x10019388

1195 @ 1001930d  if (not(flag:s)) then 1298 @ 0x10019388 else 1302 @ 0x1001930f

1196 @ 10019276  eax = eax ^ 0x35353535
1197 @ 10019276  goto 57 @ 0x1001927b  {"55555555555555555555555555555555…"}

1198 @ 10019292  eax = eax ^ 0x35353535
1199 @ 10019297  eax = eax ^ 0x35353535
1200 @ 1001929c  eax = eax ^ 0x35353535
1201 @ 100192a1  eax = eax ^ 0x35353535
1202 @ 100192a6  temp65.d = eax
1203 @ 100192a6  eax = eax ^ 0x797b7935
1204 @ 100192a6  flag:c = 0
1205 @ 100192a6  flag:p = unimplemented
1206 @ 100192a6  flag:a = undefined
1207 @ 100192a6  flag:z = (temp65.d ^ 0x797b7935) == 0
1208 @ 100192a6  flag:s = (temp65.d ^ 0x797b7935) s< 0
1209 @ 100192a6  flag:o = 0
1210 @ 100192ab  if (not(flag:s)) then 1303 @ 0x10019326 else 1305 @ 0x100192ad

1211 @ 100192e1  if (not(flag:s)) then 559 @ 0x1001935d else 450 @ 0x100192e3

1212 @ 100194f8  [edi].d = eax
1213 @ 100194f8  edi = edi - 4
1214 @ 100194f8  goto 1306 @ 0x100194f9

1215 @ 100194f8  [edi].d = eax
1216 @ 100194f8  edi = edi + 4
1217 @ 100194f8  goto 1306 @ 0x100194f9

1218 @ 10019433  [edi].d = eax
1219 @ 10019433  edi = edi - 4
1220 @ 10019433  goto 1307 @ 0x10019434

1221 @ 10019433  [edi].d = eax
1222 @ 10019433  edi = edi + 4
1223 @ 10019433  goto 1307 @ 0x10019434

1224 @ 10019712  if (not(flag:z) && not(flag:c)) then 1309 @ 0x1001978b else 1310 @ 0x10019714

1225 @ 100196a4  if (flag:s) then 1311 @ 0x100196ff else 1312 @ 0x100196a6

1226 @ 100195d1  if (flag:s) then 1313 @ 0x10019640 else 972 @ 0x100195d3

1227 @ 1001962a  temp0.d = esp
1228 @ 1001962a  esp = eax
1229 @ 1001962a  eax = temp0.d
1230 @ 1001962a  goto 1323 @ 0x1001962b

1231 @ 100196db  ds = pop.w
1232 @ 100196dc  esp = 0x70c0a4bc
1233 @ 100196e1  if (not(flag:z) && not(flag:c)) then 1331 @ 0x10019753 else 1333 @ 0x100196e3  {"Wxxx$yy"""}

1234 @ 100196d9  temp0.d = ebx
1235 @ 100196d9  ebx = eax
1236 @ 100196d9  eax = temp0.d
1237 @ 100196d9  goto 1130 @ 0x100196da

1238 @ 10019664  if (flag:s) then 1335 @ 0x100196de else 1336 @ 0x10019666

1239 @ 100195f2  esi = esi - 1
1240 @ 100195f2  goto 1337

1241 @ 100195f2  esi = esi + 1
1242 @ 100195f2  goto 1337

1243 @ 1001959f  temp66.d = [eax + (edi << 1)].d
1244 @ 1001959f  ebx = [eax + (edi << 1)].d * -0x41
1245 @ 1001959f  flag:c = unimplemented
1246 @ 1001959f  flag:o = unimplemented
1247 @ 100195a3  if (not(flag:c)) then 1338 @ 0x1001961d else 1340 @ 0x100195a5

1248 @ 100195f3  [eax].b = [eax].b u>> cl
1249 @ 100195f5  ecx = ror.d(ecx, cl)
1250 @ 100195f5  goto 1189 @ 0x100195f7

1251 @ 10019569  temp0.d = ebx
1252 @ 10019569  ebx = eax
1253 @ 10019569  eax = temp0.d
1254 @ 1001956b  temp0.d = ebx
1255 @ 1001956b  ebx = eax
1256 @ 1001956b  eax = temp0.d
1257 @ 1001956c  temp0.b = [esi + 0x15acb6c8].b
1258 @ 1001956c  [esi + 0x15acb6c8].b = al
1259 @ 1001956c  al = temp0.b
1260 @ 10019572  al = [esi].b
1261 @ 10019572  if (flag:d) then 1341 else 1343

1262 @ 10019528  eax = __in_oeax_immb(0x6f, eflags)
1263 @ 1001952a  temp0.d = ebx
1264 @ 1001952a  ebx = eax
1265 @ 1001952a  eax = temp0.d
1266 @ 1001952b  temp0.d = ebx
1267 @ 1001952b  ebx = eax
1268 @ 1001952b  eax = temp0.d
1269 @ 1001952c  temp0.b = [esi + 0x5eac9fb6].b
1270 @ 1001952c  [esi + 0x5eac9fb6].b = al
1271 @ 1001952c  al = temp0.b
1272 @ 10019532  al = [esi].b
1273 @ 10019532  if (flag:d) then 1345 else 1347

1274 @ 100194b2  al = [esi].b
1275 @ 100194b2  if (flag:d) then 1349 else 1351

1276 @ 1001943a  temp67.d = eax
1277 @ 1001943a  eax = eax + 0x783bc84d
1278 @ 1001943a  flag:c = temp67.d u>= 0x87c437b3
1279 @ 1001943a  flag:z = temp67.d == -0x783bc84d
1280 @ 1001943a  flag:s = temp67.d + 0x783bc84d s< 0
1281 @ 1001943a  flag:o = add_overflow(temp67.d, 0x783bc84d)
1282 @ 1001943a  goto 288 @ 0x1001943f

1283 @ 100196cf  if (flag:z || flag:c) then 1353 @ 0x10019748 else 1355 @ 0x100196d1

1284 @ 10019657  temp68.d = [ebp + 0x33].d
1285 @ 10019657  cond:29 = flag:c
1286 @ 10019657  [ebp + 0x33].d = sbb.d(temp68.d, ecx, cond:29)
1287 @ 10019657  flag:c = unimplemented
1288 @ 1001965a  temp0, eflags = __arpl_memw_gpr16([ecx + 0x53].w, sp)
1289 @ 1001965a  [ecx + 0x53].w = temp0.w
1290 @ 1001965a  goto 944 @ 0x1001965d

1291 @ 10019633  if (not(flag:s)) then 1356 @ 0x10019658 else 1363 @ 0x10019635

1292 @ 10019608  st5, x87status = __fstpnce_x87_st0(st0, x87pop)
1293 @ 1001960a  if (not(flag:c)) then 1364 @ 0x10019670 else 1366 @ 0x1001960c

1294 @ 1001960e  flag:c = 0
1295 @ 10019610  flag:c = 1
1296 @ 10019611  if (flag:s) then 1369 @ 0x1001961e else 1375 @ 0x10019613

1297 @ 10019596  if (flag:s) then 1378 @ 0x100195a9 else 1390 @ 0x10019598

1298 @ 10019388  temp0.d = [ebp - 0x7b7b7474].d
1299 @ 10019388  [ebp - 0x7b7b7474].d = ecx
1300 @ 10019388  ecx = temp0.d
1301 @ 10019388  goto 1395 @ 0x1001938e

1302 @ 1001930f  if (not(flag:s)) then 1404 @ 0x1001938a else 1406 @ 0x10019311

1303 @ 10019326  flag:c = 1
1304 @ 10019326  goto 95 @ 0x10019327

1305 @ 100192ad  if (not(flag:s)) then 1407 @ 0x10019328 else 1408 @ 0x100192af

1306 @ 100194f9  if (not(flag:s)) then 1409 @ 0x10019534 else 1411 @ 0x100194fb

1307 @ 10019434  al, eflags = __daa(al, eflags)
1308 @ 10019435  if (not(flag:z)) then 1413 @ 0x100193ff else 956 @ 0x10019437

1309 @ 1001978b  if (not(flag:s)) then 1415 @ 0x10019806 else 1416 @ 0x1001978d

1310 @ 10019714  if (flag:s) then 1417 @ 0x1001978e else 1418 @ 0x10019716

1311 @ 100196ff  if (flag:s) then 1419 @ 0x10019779 else 1420 @ 0x10019701  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1312 @ 100196a6  if (flag:s) then 1421 @ 0x100196d4 else 1422 @ 0x100196a8

1313 @ 10019640  temp69.b = [eax + 0x34].b
1314 @ 10019640  [eax + 0x34].b = [eax + 0x34].b | bh
1315 @ 10019640  flag:c = 0
1316 @ 10019640  flag:p = unimplemented
1317 @ 10019640  flag:a = undefined
1318 @ 10019640  flag:z = (temp69.b | bh) == 0
1319 @ 10019640  flag:s = (temp69.b | bh) s< 0
1320 @ 10019640  flag:o = 0
1321 @ 10019643  al = __in_al_dx(dx, eflags)
1322 @ 10019644  if (flag:s) then 1423 @ 0x100196be else 1424 @ 0x10019646

1323 @ 1001962b  temp0.d = ebx
1324 @ 1001962b  ebx = eax
1325 @ 1001962b  eax = temp0.d
1326 @ 1001962c  [esi + 0x79aecdb9].b = al
1327 @ 10019632  temp70.b = [edi].b
1328 @ 10019632  flag:s = al - temp70.b s< 0
1329 @ 10019632  flag:o = add_overflow(al, neg.b(temp70.b))
1330 @ 10019632  if (flag:d) then 1425 else 1427

1331 @ 10019753  push(edi)
1332 @ 10019754  if (flag:s) then 1429 @ 0x100197ce else 1430 @ 0x10019756  {"x$yy"""}

1333 @ 100196e3  ecx = pop
1334 @ 100196e3  goto 1431 @ 0x100196e4

1335 @ 100196de  if (flag:d) then 1432 else 1436

1336 @ 10019666  if (flag:s) then 1440 @ 0x100196c7 else 1441 @ 0x10019668

1337 @ 100195f2  goto 1248 @ 0x100195f3

1338 @ 1001961d  esp = esp - 1
1339 @ 1001961d  goto 1369 @ 0x1001961e

1340 @ 100195a5  if (flag:s) then 1442 @ 0x1001961f else 1445 @ 0x100195a7

1341 @ 10019572  esi = esi - 1
1342 @ 10019572  goto 1452 @ 0x10019573

1343 @ 10019572  esi = esi + 1
1344 @ 10019572  goto 1452 @ 0x10019573

1345 @ 10019532  esi = esi - 1
1346 @ 10019532  goto 1460 @ 0x10019533

1347 @ 10019532  esi = esi + 1
1348 @ 10019532  goto 1460 @ 0x10019533

1349 @ 100194b2  esi = esi - 1
1350 @ 100194b2  goto 1462 @ 0x100194b3

1351 @ 100194b2  esi = esi + 1
1352 @ 100194b2  goto 1462 @ 0x100194b3

1353 @ 10019748  ebp = ebp + edi
1354 @ 10019748  goto 1464 @ 0x1001974a

1355 @ 100196d1  if (flag:s) then 1464 @ 0x1001974a else 1469 @ 0x100196d3

1356 @ 10019658  ebp = ebp - 1
1357 @ 10019659  temp71.d = esp
1358 @ 10019659  temp72.d = [ebx + 0x61].d
1359 @ 10019659  esp = esp ^ [ebx + 0x61].d
1360 @ 10019659  flag:c = 0
1361 @ 1001965c  push(ebx)
1362 @ 1001965c  goto 944 @ 0x1001965d

1363 @ 10019635  if (flag:s != flag:o) then 1167 @ 0x100195fd else 1470 @ 0x10019637

1364 @ 10019670  dh = 0x79
1365 @ 10019670  goto 1471 @ 0x10019672

1366 @ 1001960c  push(zx.d(cs))
1367 @ 1001960d  flag:c = 1
1368 @ 1001960d  goto 1294 @ 0x1001960e

1369 @ 1001961e  temp73.d = esi
1370 @ 1001961e  esi = esi + 1
1371 @ 1001961e  flag:z = temp73.d == -1
1372 @ 1001961e  flag:s = temp73.d + 1 s< 0
1373 @ 1001961e  flag:o = add_overflow(temp73.d, 1)
1374 @ 1001961e  goto 1442 @ 0x1001961f

1375 @ 10019613  temp0, x87status = __fnstcw_memmem16(x87control)
1376 @ 10019613  [eax + 0x78].w = temp0.w
1377 @ 10019616  if (flag:s) then 1480 @ 0x10019656 else 1481 @ 0x10019618

1378 @ 100195a9  eflags = __cli(eflags)
1379 @ 100195aa  temp0.d = ebx
1380 @ 100195aa  ebx = eax
1381 @ 100195aa  eax = temp0.d
1382 @ 100195ab  temp0.d = ebx
1383 @ 100195ab  ebx = eax
1384 @ 100195ab  eax = temp0.d
1385 @ 100195ac  temp0.b = [esi - 0x58532e32].b
1386 @ 100195ac  [esi - 0x58532e32].b = al
1387 @ 100195ac  al = temp0.b
1388 @ 100195b2  al = [esi].b
1389 @ 100195b2  if (flag:d) then 1490 else 1492

1390 @ 10019598  temp74.b = [0x42f1ba05].b
1391 @ 10019598  [0x42f1ba05].b = [0x42f1ba05].b ^ dl
1392 @ 10019598  flag:z = (temp74.b ^ dl) == 0
1393 @ 10019598  flag:s = (temp74.b ^ dl) s< 0
1394 @ 10019598  goto 1243 @ 0x1001959f

1395 @ 1001938e  temp0.d = pop
1396 @ 1001938e  flag:c = test_bit(temp0.d, 0)
1397 @ 1001938e  flag:p = test_bit(temp0.d, 2)
1398 @ 1001938e  flag:a = test_bit(temp0.d, 4)
1399 @ 1001938e  flag:z = test_bit(temp0.d, 6)
1400 @ 1001938e  flag:s = test_bit(temp0.d, 7)
1401 @ 1001938e  flag:d = test_bit(temp0.d, 0xa)
1402 @ 1001938e  flag:o = test_bit(temp0.d, 0xb)
1403 @ 1001938e  goto 1494 @ 0x1001938f

1404 @ 1001938a  [ebx - 0x4b627b7c].w = cs
1405 @ 1001938a  goto 102 @ 0x10019390

1406 @ 10019311  if (not(flag:s)) then 1496 @ 0x1001938c else 1498 @ 0x10019313

1407 @ 10019328  if (not(flag:s)) then 1499 @ 0x100193a3 else 1501 @ 0x1001932a

1408 @ 100192af  if (not(flag:s)) then 1501 @ 0x1001932a else 1502 @ 0x100192b1

1409 @ 10019534  [eax - 0x37].b = [eax - 0x37].b - bh
1410 @ 10019537  if (flag:d) then 1503 else 1506

1411 @ 100194fb  al, ah, eflags = __aas(al, ah, eflags)
1412 @ 100194fb  goto 659 @ 0x100194fc

1413 @ 100193ff  ecx = pop
1414 @ 10019400  if (flag:s) then 536 @ 0x1001947a else 1509 @ 0x10019402

1415 @ 10019806  if (not(flag:s)) then 1511 @ 0x10019881 else 1520 @ 0x10019808

1416 @ 1001978d  if (not(flag:s)) then 1520 @ 0x10019808 else 1521 @ 0x1001978f

1417 @ 1001978e  if (not(flag:s)) then 1522 @ 0x10019809 else 1524 @ 0x10019790

1418 @ 10019716  if (flag:s) then 1525 @ 0x10019787 else 1526 @ 0x10019718

1419 @ 10019779  if (not(flag:s)) then 1527 @ 0x100197f4 else 1528 @ 0x1001977b  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1420 @ 10019701  if (flag:s) then 1529 @ 0x10019758 else 1530 @ 0x10019703  {"yy"""}

1421 @ 100196d4  if (flag:s) then 1531 @ 0x1001974e else 1541 @ 0x100196d6

1422 @ 100196a8  if (not(flag:s)) then 1542 @ 0x10019723 else 1544 @ 0x100196aa

1423 @ 100196be  if (flag:c) then 1546 @ 0x10019737 else 1547 @ 0x100196c0

1424 @ 10019646  if (flag:s) then 1323 @ 0x1001962b else 1548 @ 0x10019648

1425 @ 10019632  edi = edi - 1
1426 @ 10019632  goto 1551

1427 @ 10019632  edi = edi + 1
1428 @ 10019632  goto 1551

1429 @ 100197ce  if (flag:z || flag:s != flag:o) then 1552 @ 0x100197e9 else 1553 @ 0x100197d0

1430 @ 10019756  if (flag:s) then 1555 @ 0x1001977c else 1529 @ 0x10019758  {"yy"""}  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1431 @ 100196e4  if (flag:s) then 1556 @ 0x100196f0 else 1565 @ 0x100196e6

1432 @ 100196de  [edi].b = [esi].b
1433 @ 100196de  edi = edi - 1
1434 @ 100196de  esi = esi - 1
1435 @ 100196de  goto 1566 @ 0x100196df

1436 @ 100196de  [edi].b = [esi].b
1437 @ 100196de  edi = edi + 1
1438 @ 100196de  esi = esi + 1
1439 @ 100196de  goto 1566 @ 0x100196df

1440 @ 100196c7  if (flag:z) then 1575 @ 0x1001972d else 1579 @ 0x100196c9

1441 @ 10019668  if (not(flag:s)) then 1333 @ 0x100196e3 else 1588 @ 0x1001966a

1442 @ 1001961f  temp0, edi = __insb(edi, dx, eflags)
1443 @ 1001961f  [edi].b = temp0.b
1444 @ 1001961f  goto 1591 @ 0x10019620

1445 @ 100195a7  push(esi)
1446 @ 100195a8  temp75.b = [esi].b
1447 @ 100195a8  temp76.b = [edi].b
1448 @ 100195a8  flag:c = temp75.b u< temp76.b
1449 @ 100195a8  flag:s = temp75.b - temp76.b s< 0
1450 @ 100195a8  flag:o = add_overflow(temp75.b, neg.b(temp76.b))
1451 @ 100195a8  if (flag:d) then 1592 else 1595

1452 @ 10019573  ebp = 0xb0c97828
1453 @ 10019578  temp77.b = [esi - 0xe].b
1454 @ 10019578  [esi - 0xe].b = [esi - 0xe].b ^ al
1455 @ 10019578  flag:c = 0
1456 @ 10019578  flag:p = unimplemented
1457 @ 10019578  flag:z = (temp77.b ^ al) == 0
1458 @ 10019578  flag:s = (temp77.b ^ al) s< 0
1459 @ 1001957b  if (not(flag:c)) then 947 @ 0x100195ee else 950 @ 0x1001957d

1460 @ 10019533  al - [edi].b
1461 @ 10019533  if (flag:d) then 1598 else 1600

1462 @ 100194b3  x87.push([eax].t)
1463 @ 100194b5  if (flag:s) then 517 @ 0x10019480 else 381 @ 0x100194b7

1464 @ 1001974a  ah = ah & [edx].b
1465 @ 1001974c  temp78.b = [eax].b
1466 @ 1001974c  [eax].b = [eax].b + al
1467 @ 1001974c  flag:c = temp78.b + al u< temp78.b
1468 @ 1001974c  goto 1531 @ 0x1001974e

1469 @ 100196d3  if (flag:z || flag:c) then 1602 @ 0x1001974d else 1611 @ 0x100196d5

1470 @ 10019637  if (not(flag:s)) then 1363 @ 0x10019635 else 1149 @ 0x10019639

1471 @ 10019672  bl = 0x79
1472 @ 10019674  temp79.b = bh
1473 @ 10019674  temp80.b = [ecx - 0x44].b
1474 @ 10019674  bh = adc.b(temp79.b, temp80.b, flag:c)
1475 @ 10019674  flag:p = unimplemented
1476 @ 10019674  flag:a = unimplemented
1477 @ 10019674  flag:z = adc.b(temp79.b, temp80.b, flag:c) == 0
1478 @ 10019674  flag:s = adc.b(temp79.b, temp80.b, flag:c) s< 0
1479 @ 10019674  goto 1612 @ 0x10019677  {"yli"s"}

1480 @ 10019656  if (flag:s) then 1613 @ 0x10019671 else 1356 @ 0x10019658

1481 @ 10019618  ecx = ecx - 1
1482 @ 10019619  eax = eax + 1
1483 @ 1001961b  edi = pop
1484 @ 1001961c  temp81.d = [esi + (eax << 1) + 0x6c].d
1485 @ 1001961c  [esi + (eax << 1) + 0x6c].d = [esi + (eax << 1) + 0x6c].d ^ ecx
1486 @ 1001961c  flag:z = (temp81.d ^ ecx) == 0
1487 @ 1001961c  flag:s = (temp81.d ^ ecx) s< 0
1488 @ 1001961c  flag:o = 0
1489 @ 1001961c  goto 1591 @ 0x10019620

1490 @ 100195b2  esi = esi - 1
1491 @ 100195b2  goto 1614 @ 0x100195b3

1492 @ 100195b2  esi = esi + 1
1493 @ 100195b2  goto 1614 @ 0x100195b3

1494 @ 1001938f  ah = 0x9a
1495 @ 1001938f  goto 1616 @ 0x10019391

1496 @ 1001938c  [ebp + (ebx << 2) - 0x6ba4654c].b & al
1497 @ 1001938c  goto 1618 @ 0x10019393

1498 @ 10019313  if (not(flag:s)) then 1395 @ 0x1001938e else 1619 @ 0x10019315

1499 @ 100193a3  al = [esi].b
1500 @ 100193a3  if (flag:d) then 1620 else 1622

1501 @ 1001932a  if (not(flag:s)) then 1624 @ 0x100193a5 else 1635 @ 0x1001932c

1502 @ 100192b1  if (not(flag:s)) then 1635 @ 0x1001932c else 1636 @ 0x100192b3

1503 @ 10019537  [edi].b = al
1504 @ 10019537  edi = edi - 1
1505 @ 10019537  goto 1637 @ 0x10019538

1506 @ 10019537  [edi].b = al
1507 @ 10019537  edi = edi + 1
1508 @ 10019537  goto 1637 @ 0x10019538

1509 @ 10019402  push(ebx)
1510 @ 10019402  goto 826 @ 0x10019403

1511 @ 10019881  temp82.b = ah
1512 @ 10019881  cond:30 = flag:c
1513 @ 10019881  ah = sbb.b(temp82.b, 0x62, cond:30)
1514 @ 10019881  flag:c = unimplemented
1515 @ 10019881  flag:p = unimplemented
1516 @ 10019881  flag:z = sbb.b(temp82.b, 0x62, cond:30) == 0
1517 @ 10019881  flag:s = sbb.b(temp82.b, 0x62, cond:30) s< 0
1518 @ 10019881  flag:o = unimplemented
1519 @ 10019884  if (not(flag:s)) then 1643 @ 0x100198eb else 1644 @ 0x10019886

1520 @ 10019808  if (not(flag:s)) then 1645 @ 0x100197cf else 1654 @ 0x1001980a

1521 @ 1001978f  if (not(flag:s)) then 1654 @ 0x1001980a else 1656 @ 0x10019791

1522 @ 10019809  ymm5 = __vpaddusw_ymmqq_ymmqq_memqq(ymm3.32, [ebp + 0x79a77979].32)
1523 @ 10019809  goto 1657 @ 0x10019812

1524 @ 10019790  if (not(flag:s)) then 1659 @ 0x1001980b else 1660 @ 0x10019792

1525 @ 10019787  if (not(flag:s)) then 1661 @ 0x10019802 else 1662 @ 0x10019789

1526 @ 10019718  if (flag:d) then 1663 else 1666

1527 @ 100197f4  trap(0xd)
{ Does not return }

1528 @ 1001977b  if (not(flag:s)) then 1669 @ 0x100197f6 else 1670 @ 0x1001977d  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1529 @ 10019758  if (not(flag:s)) then 1671 @ 0x100197d3 else 1674 @ 0x1001975a

1530 @ 10019703  if (flag:s) then 1670 @ 0x1001977d else 1683 @ 0x10019705  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1531 @ 1001974e  temp83.b = al
1532 @ 1001974e  cond:31 = flag:c
1533 @ 1001974e  al = sbb.b(temp83.b, 0x4f, cond:31)
1534 @ 1001974e  flag:c = unimplemented
1535 @ 1001974e  flag:p = unimplemented
1536 @ 1001974e  flag:a = unimplemented
1537 @ 1001974e  flag:z = sbb.b(temp83.b, 0x4f, cond:31) == 0
1538 @ 1001974e  flag:s = sbb.b(temp83.b, 0x4f, cond:31) s< 0
1539 @ 1001974e  flag:o = unimplemented
1540 @ 1001974e  goto 1684 @ 0x10019750  {"UxUWxxx$yy"""}

1541 @ 100196d6  if (flag:s) then 1686 @ 0x10019744 else 1687 @ 0x100196d8

1542 @ 10019723  ecx = ecx - 1
1543 @ 10019723  if (flag:z || ecx != 0) then 1690 @ 0x1001979d else 1691 @ 0x10019725

1544 @ 100196aa  eax = [0x799591a0].d
1545 @ 100196af  if (not(flag:s)) then 1471 @ 0x10019672 else 1694 @ 0x100196b1

1546 @ 10019737  goto 1695 @ 0x10019739

1547 @ 100196c0  if (flag:s) then 1698 @ 0x1001973a else 1709 @ 0x100196c2

1548 @ 10019648  eax = eax | 0xd5fb0146
1549 @ 1001964d  st0 f- fconvert.t([edx + 0x63].q)
1550 @ 10019650  undefined

1551 @ 10019632  goto 1291 @ 0x10019633

1552 @ 100197e9  if (not(flag:s)) then 1711 @ 0x100197a5 else 1712 @ 0x100197eb

1553 @ 100197d0  flag:c = flag:c ^ 1
1554 @ 100197d0  goto 1714 @ 0x100197d1

1555 @ 1001977c  if (not(flag:s)) then 1715 @ 0x100197f7 else 1716 @ 0x1001977e  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1556 @ 100196f0  temp84.b = [ecx - 0x39].b
1557 @ 100196f0  [ecx - 0x39].b = [ecx - 0x39].b s>> cl
1558 @ 100196f0  flag:c = unimplemented
1559 @ 100196f0  flag:p = unimplemented
1560 @ 100196f0  flag:a = unimplemented
1561 @ 100196f0  flag:z = temp84.b s>> cl == 0
1562 @ 100196f0  flag:s = temp84.b s>> cl s< 0
1563 @ 100196f0  flag:o = unimplemented
1564 @ 100196f0  goto 1717 @ 0x100196f3

1565 @ 100196e6  if (flag:s) then 1717 @ 0x100196f3 else 1718 @ 0x100196e8

1566 @ 100196df  temp85.b = [eax + 0x77].b
1567 @ 100196df  [eax + 0x77].b = [eax + 0x77].b << 0x70
1568 @ 100196df  flag:c = unimplemented
1569 @ 100196df  flag:p = unimplemented
1570 @ 100196df  flag:a = unimplemented
1571 @ 100196df  flag:z = temp85.b << 0x70 == 0
1572 @ 100196df  flag:s = temp85.b << 0x70 s< 0
1573 @ 100196df  flag:o = unimplemented
1574 @ 100196df  goto 1333 @ 0x100196e3

1575 @ 1001972d  temp0.d = ebp
1576 @ 1001972d  ebp = eax
1577 @ 1001972d  eax = temp0.d
1578 @ 1001972e  if (not(flag:s)) then 1719 @ 0x100197a9 else 1721 @ 0x10019730

1579 @ 100196c9  push(eax)
1580 @ 100196c9  push(ecx)
1581 @ 100196c9  push(edx)
1582 @ 100196c9  push(ebx)
1583 @ 100196c9  push(esp)
1584 @ 100196c9  push(ebp)
1585 @ 100196c9  push(esi)
1586 @ 100196c9  push(edi)
1587 @ 100196ca  if (flag:o) then 1698 @ 0x1001973a else 1723 @ 0x100196cc

1588 @ 1001966a  edx:eax = sx.q(eax)
1589 @ 1001966c  cl = [ecx + (edi << 1) - 0x4c864987].b
1590 @ 1001966c  goto 1726 @ 0x10019673

1591 @ 10019620  if (not(flag:z)) then 1727 @ 0x1001969a else 1729 @ 0x10019622

1592 @ 100195a8  esi = esi - 1
1593 @ 100195a8  edi = edi - 1
1594 @ 100195a8  goto 1731

1595 @ 100195a8  esi = esi + 1
1596 @ 100195a8  edi = edi + 1
1597 @ 100195a8  goto 1731

1598 @ 10019533  edi = edi - 1
1599 @ 10019533  goto 1732

1600 @ 10019533  edi = edi + 1
1601 @ 10019533  goto 1732

1602 @ 1001974d  temp86.b = [edi + (ecx << 1)].b
1603 @ 1001974d  [edi + (ecx << 1)].b = [edi + (ecx << 1)].b + bl
1604 @ 1001974d  flag:c = temp86.b + bl u< temp86.b
1605 @ 1001974d  flag:p = unimplemented
1606 @ 1001974d  flag:a = unimplemented
1607 @ 1001974d  flag:z = temp86.b == neg.b(bl)
1608 @ 1001974d  flag:s = temp86.b + bl s< 0
1609 @ 1001974d  flag:o = add_overflow(temp86.b, bl)
1610 @ 1001974d  goto 1684 @ 0x10019750  {"UxUWxxx$yy"""}

1611 @ 100196d5  if (flag:s) then 1733 @ 0x1001974f else 1741 @ 0x100196d7  {"OUxUWxxx$yy"""}

1612 @ 10019677  if (not(flag:s)) then 1744 @ 0x100196e5 else 1753 @ 0x10019679

1613 @ 10019671  if (not(flag:s)) then 1758 @ 0x10019626 else 1726 @ 0x10019673

1614 @ 100195b3  edi = 0xb1c96228
1615 @ 100195b8  if (flag:c) then 1129 @ 0x10019628 else 610 @ 0x100195ba

1616 @ 10019391  ebx = pop
1617 @ 10019391  goto 1759 @ 0x10019392

1618 @ 10019393  if (flag:d) then 1763 else 1767

1619 @ 10019315  if (not(flag:s)) then 102 @ 0x10019390 else 1771 @ 0x10019317

1620 @ 100193a3  esi = esi - 1
1621 @ 100193a3  goto 1772

1622 @ 100193a3  esi = esi + 1
1623 @ 100193a3  goto 1772

1624 @ 100193a5  temp87.d = ebp
1625 @ 100193a5  temp88.d = [ebx + (edx << 2)].d
1626 @ 100193a5  cond:32 = flag:c
1627 @ 100193a5  ebp = sbb.d(temp87.d, temp88.d, cond:32)
1628 @ 100193a5  flag:c = unimplemented
1629 @ 100193a5  flag:p = unimplemented
1630 @ 100193a5  flag:a = unimplemented
1631 @ 100193a5  flag:z = sbb.d(temp87.d, temp88.d, cond:32) == 0
1632 @ 100193a5  flag:s = sbb.d(temp87.d, temp88.d, cond:32) s< 0
1633 @ 100193a5  flag:o = unimplemented
1634 @ 100193a5  goto 133 @ 0x100193a8

1635 @ 1001932c  if (not(flag:s)) then 133 @ 0x100193a8 else 1773 @ 0x1001932e

1636 @ 100192b3  if (not(flag:s)) then 1773 @ 0x1001932e else 1774 @ 0x100192b5

1637 @ 10019538  al, ah, eflags = __aam_immb(0xc5, al)
1638 @ 1001953a  [ecx + 0x46].d = [ecx + 0x46].d & edx
1639 @ 1001953d  temp89.b = al
1640 @ 1001953d  al = al ^ 0xf1
1641 @ 1001953d  flag:o = 0
1642 @ 1001953d  goto 534 @ 0x1001953f

1643 @ 100198eb  if (not(flag:z)) then 1775 @ 0x1001996b else 1776 @ 0x100198ed

1644 @ 10019886  if (flag:p) then 1782 @ 0x10019831 else 1784 @ 0x10019888

1645 @ 100197cf  temp90.d = ebp
1646 @ 100197cf  cond:33 = flag:c
1647 @ 100197cf  ebp = sbb.d(temp90.d, esi, cond:33)
1648 @ 100197cf  flag:c = unimplemented
1649 @ 100197cf  flag:p = unimplemented
1650 @ 100197cf  flag:z = sbb.d(temp90.d, esi, cond:33) == 0
1651 @ 100197cf  flag:s = sbb.d(temp90.d, esi, cond:33) s< 0
1652 @ 100197cf  flag:o = unimplemented
1653 @ 100197cf  goto 1714 @ 0x100197d1

1654 @ 1001980a  eax = __in_oeax_immb(0xdd, eflags)
1655 @ 1001980a  goto 1786 @ 0x1001980c

1656 @ 10019791  if (not(flag:s)) then 1786 @ 0x1001980c else 1788 @ 0x10019793

1657 @ 10019812  st0 = float.t([ecx - 0x55].w) f/ st0
1658 @ 10019812  goto 1789 @ 0x10019815

1659 @ 1001980b  undefined

1660 @ 10019792  if (not(flag:s)) then 1791 @ 0x1001980d else 1793 @ 0x10019794

1661 @ 10019802  if (not(flag:s)) then 1794 @ 0x1001987d else 1797 @ 0x10019804

1662 @ 10019789  if (not(flag:s)) then 1797 @ 0x10019804 else 1309 @ 0x1001978b

1663 @ 10019718  [edi].d = eax
1664 @ 10019718  edi = edi - 4
1665 @ 10019718  goto 1798 @ 0x10019719

1666 @ 10019718  [edi].d = eax
1667 @ 10019718  edi = edi + 4
1668 @ 10019718  goto 1798 @ 0x10019719

1669 @ 100197f6  trap(0xd)
{ Does not return }

1670 @ 1001977d  if (not(flag:s)) then 1816 @ 0x100197f8 else 1817 @ 0x1001977f  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1671 @ 100197d3  temp91.d = [ecx + 0x79].d | edi
1672 @ 100197d3  [ecx + 0x79].d = temp91.d
1673 @ 100197d6  if (temp91.d s>= 0) then 1818 @ 0x10019856 else 1820 @ 0x100197d8

1674 @ 1001975a  ah = ah & [edx].b
1675 @ 1001975c  temp92.b = [edx].b
1676 @ 1001975c  [edx].b = [edx].b + al
1677 @ 1001975c  flag:c = temp92.b + al u< temp92.b
1678 @ 1001975c  flag:p = unimplemented
1679 @ 1001975c  flag:z = temp92.b == neg.b(al)
1680 @ 1001975c  flag:s = temp92.b + al s< 0
1681 @ 1001975c  flag:o = add_overflow(temp92.b, al)
1682 @ 1001975e  if (not(flag:s)) then 1828 @ 0x100197d9 else 1836 @ 0x10019760

1683 @ 10019705  if (flag:s) then 1817 @ 0x1001977f else 1838 @ 0x10019707  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1684 @ 10019750  push(ebp)
1685 @ 10019751  if (flag:s) then 1839 @ 0x100197a8 else 1331 @ 0x10019753  {"Wxxx$yy"""}

1686 @ 10019744  if (flag:s) then 1840 @ 0x100197be else 1841 @ 0x10019746

1687 @ 100196d8  ecx = 0xbc1f1f93
1688 @ 100196dd  esp = 0x7770c0a4
1689 @ 100196e2  if (flag:o) then 1842 @ 0x1001973d else 1431 @ 0x100196e4

1690 @ 1001979d  if (not(flag:s)) then 1850 @ 0x10019818 else 1851 @ 0x1001979f

1691 @ 10019725  temp0, x87control, x87tag, x87status = __fnsave_memmem108(x87control, x87tag, x87status)
1692 @ 10019725  [edi - 0x3f].108 = temp0.108
1693 @ 10019728  if (not(flag:s)) then 1853 @ 0x100197a3 else 1861 @ 0x1001972a

1694 @ 100196b1  if (not(flag:s)) then 1863 @ 0x1001966e else 1864 @ 0x100196b3

1695 @ 10019739  [edx].b = [edx].b + ah
1696 @ 1001973b  al = al & [eax].b
1697 @ 1001973b  goto 1842 @ 0x1001973d

1698 @ 1001973a  ah = ah & [edx].b
1699 @ 1001973c  [eax].b = [eax].b + al
1700 @ 1001973e  temp93.b = dl
1701 @ 1001973e  temp94.b = [ebp + 0x55].b
1702 @ 1001973e  dl = dl & [ebp + 0x55].b
1703 @ 1001973e  flag:c = 0
1704 @ 1001973e  flag:p = unimplemented
1705 @ 1001973e  flag:z = (temp93.b & temp94.b) == 0
1706 @ 1001973e  flag:s = (temp93.b & temp94.b) s< 0
1707 @ 1001973e  flag:o = 0
1708 @ 1001973e  goto 1865 @ 0x10019741

1709 @ 100196c2  push(ebp)
1710 @ 100196c2  goto 1866 @ 0x100196c3

1711 @ 100197a5  if (not(flag:s)) then 1867 @ 0x10019820 else 1869 @ 0x100197a7

1712 @ 100197eb  edx = 0x79792828
1713 @ 100197eb  goto 1870 @ 0x100197f0

1714 @ 100197d1  if (not(flag:s)) then 1873 @ 0x100197b8 else 1671 @ 0x100197d3

1715 @ 100197f7  if (not(flag:s)) then 1874 @ 0x10019872 else 1876 @ 0x100197f9

1716 @ 1001977e  if (not(flag:s)) then 1876 @ 0x100197f9 else 1877 @ 0x10019780  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy9…"}

1717 @ 100196f3  if (not(flag:s)) then 1878 @ 0x100196b6 else 1887 @ 0x100196f5

1718 @ 100196e8  if (not(flag:s)) then 1888 @ 0x10019763 else 1889 @ 0x100196ea

1719 @ 100197a9  [ecx - 0x78].d = edi
1720 @ 100197a9  goto 1891 @ 0x100197ac

1721 @ 10019730  eip, eflags = __into(eflags)
1722 @ 10019730  goto 1892 @ 0x10019731

1723 @ 100196cc  push(zx.d(0x66))
1724 @ 100196ce  push(zx.d(0x76))
1725 @ 100196d0  if (not(flag:z) && not(flag:c)) then 1464 @ 0x1001974a else 1893 @ 0x100196d2

1726 @ 10019673  if (not(flag:s)) then 1894 @ 0x10019687 else 1895 @ 0x10019675

1727 @ 1001969a  esi = esi - 1
1728 @ 1001969a  goto 1896 @ 0x1001969b

1729 @ 10019622  push(edx)
1730 @ 10019623  if (not(flag:z)) then 1899 @ 0x1001969d else 943 @ 0x10019625

1731 @ 100195a8  goto 1378 @ 0x100195a9

1732 @ 10019533  goto 1409 @ 0x10019534

1733 @ 1001974f  temp95.d = edi
1734 @ 1001974f  edi = edi - 1
1735 @ 1001974f  flag:p = unimplemented
1736 @ 1001974f  flag:a = unimplemented
1737 @ 1001974f  flag:z = temp95.d == 1
1738 @ 1001974f  flag:s = temp95.d - 1 s< 0
1739 @ 1001974f  flag:o = add_overflow(temp95.d, -1)
1740 @ 1001974f  goto 1684 @ 0x10019750  {"UxUWxxx$yy"""}

1741 @ 100196d7  temp0, edi = __insb(edi, dx, eflags)
1742 @ 100196d7  [edi].b = temp0.b
1743 @ 100196d7  goto 1687 @ 0x100196d8

1744 @ 100196e5  temp96.b = bh
1745 @ 100196e5  temp97.b = [eax + 0xb].b
1746 @ 100196e5  bh = bh | [eax + 0xb].b
1747 @ 100196e5  flag:c = 0
1748 @ 100196e5  flag:p = unimplemented
1749 @ 100196e5  flag:z = (temp96.b | temp97.b) == 0
1750 @ 100196e5  flag:s = (temp96.b | temp97.b) s< 0
1751 @ 100196e5  flag:o = 0
1752 @ 100196e5  goto 1718 @ 0x100196e8

1753 @ 10019679  temp98.d = [edx].d
1754 @ 10019679  esp = [edx].d * 0x6f700073
1755 @ 10019679  flag:c = unimplemented
1756 @ 10019679  flag:o = unimplemented
1757 @ 1001967f  if (not(flag:z) && not(flag:c)) then 1902 @ 0x100196f9 else 1903 @ 0x10019681

1758 @ 10019626  if (flag:s) then 1904 @ 0x10019685 else 1129 @ 0x10019628

1759 @ 10019392  temp0.d = esp
1760 @ 10019392  esp = eax
1761 @ 10019392  eax = temp0.d
1762 @ 10019392  goto 1618 @ 0x10019393

1763 @ 10019393  [edi].d = [esi].d
1764 @ 10019393  edi = edi - 4
1765 @ 10019393  esi = esi - 4
1766 @ 10019393  goto 1905 @ 0x10019394

1767 @ 10019393  [edi].d = [esi].d
1768 @ 10019393  edi = edi + 4
1769 @ 10019393  esi = esi + 4
1770 @ 10019393  goto 1905 @ 0x10019394

1771 @ 10019317  if (not(flag:s)) then 1759 @ 0x10019392 else 1907 @ 0x10019319

1772 @ 100193a3  goto 105 @ 0x100193a4

1773 @ 1001932e  if (not(flag:s)) then 161 @ 0x10019339 else 1908 @ 0x10019330

1774 @ 100192b5  if (not(flag:s)) then 1908 @ 0x10019330 else 1909 @ 0x100192b7

1775 @ 1001996b  if (flag:z || flag:s != flag:o) then 1910 @ 0x100199b2 else 1917 @ 0x1001996d

1776 @ 100198ed  temp99.b = cl
1777 @ 100198ed  cl = sbb.b(temp99.b, -9, flag:c)
1778 @ 100198ed  flag:z = sbb.b(temp99.b, -9, flag:c) == 0
1779 @ 100198ed  flag:s = sbb.b(temp99.b, -9, flag:c) s< 0
1780 @ 100198ed  flag:o = unimplemented
1781 @ 100198ed  goto 1923 @ 0x100198f0

1782 @ 10019831  al = __in_al_dx(dx, eflags)
1783 @ 10019831  goto 1925 @ 0x10019832

1784 @ 10019888  cl = 0x81
1785 @ 10019888  goto 1927 @ 0x1001988a

1786 @ 1001980c  al = [esi].b
1787 @ 1001980c  if (flag:d) then 1931 else 1933

1788 @ 10019793  if (not(flag:s)) then 1935 @ 0x1001980e else 1936 @ 0x10019795

1789 @ 10019815  call(-0xffffffffd07b11ff)
1790 @ 10019815  goto 1937 @ 0x1001981a

1791 @ 1001980d  eax = __in_oeax_immb(0x79, eflags)
1792 @ 1001980d  goto 1941 @ 0x1001980f

1793 @ 10019794  if (not(flag:s)) then 1941 @ 0x1001980f else 1942 @ 0x10019796

1794 @ 1001987d  esi = ror.d(esi, 0x83)
1795 @ 10019880  [eax + 0x657962dc].d = [eax + 0x657962dc].d - 0x7e4e5686
1796 @ 10019880  goto 1927 @ 0x1001988a

1797 @ 10019804  if (not(flag:s)) then 1943 @ 0x100197ed else 1415 @ 0x10019806

1798 @ 10019719  temp0.d = pop
1799 @ 10019719  flag:c = test_bit(temp0.d, 0)
1800 @ 10019719  flag:p = test_bit(temp0.d, 2)
1801 @ 10019719  flag:a = test_bit(temp0.d, 4)
1802 @ 10019719  flag:z = test_bit(temp0.d, 6)
1803 @ 10019719  flag:s = test_bit(temp0.d, 7)
1804 @ 10019719  flag:d = test_bit(temp0.d, 0xa)
1805 @ 10019719  flag:o = test_bit(temp0.d, 0xb)
1806 @ 1001971a  temp100.b = ch
1807 @ 1001971a  temp101.b = [eax + eax].b
1808 @ 1001971a  ch = ch & [eax + eax].b
1809 @ 1001971a  flag:c = 0
1810 @ 1001971a  flag:p = unimplemented
1811 @ 1001971a  flag:a = undefined
1812 @ 1001971a  flag:z = (temp100.b & temp101.b) == 0
1813 @ 1001971a  flag:s = (temp100.b & temp101.b) s< 0
1814 @ 1001971a  flag:o = 0
1815 @ 1001971a  goto 1945 @ 0x1001971d

1816 @ 100197f8  if (not(flag:s)) then 1948 @ 0x100197e5 else 1949 @ 0x100197fa

1817 @ 1001977f  if (not(flag:s)) then 1949 @ 0x100197fa else 1950 @ 0x10019781

1818 @ 10019856  st0 = float.t([edi + 0x6587fc81].d) f/ st0
1819 @ 10019856  goto 1951 @ 0x1001985c

1820 @ 100197d8  temp102.b = [eax].b
1821 @ 100197d8  [eax].b = [eax].b - ch
1822 @ 100197d8  flag:c = temp102.b u< ch
1823 @ 100197d8  flag:p = unimplemented
1824 @ 100197d8  flag:z = temp102.b == ch
1825 @ 100197d8  flag:s = temp102.b - ch s< 0
1826 @ 100197d8  flag:o = add_overflow(temp102.b, neg.b(ch))
1827 @ 100197d8  goto 1957 @ 0x100197da

1828 @ 100197d9  temp103.b = [ecx - 0x46].b
1829 @ 100197d9  [ecx - 0x46].b = [ecx - 0x46].b - bh
1830 @ 100197d9  flag:c = temp103.b u< bh
1831 @ 100197d9  flag:p = unimplemented
1832 @ 100197d9  flag:z = temp103.b == bh
1833 @ 100197d9  flag:s = temp103.b - bh s< 0
1834 @ 100197d9  flag:o = add_overflow(temp103.b, neg.b(bh))
1835 @ 100197d9  goto 1958 @ 0x100197dc

1836 @ 10019760  push(edx)
1837 @ 10019761  if (not(flag:s)) then 1873 @ 0x100197b8 else 1888 @ 0x10019763

1838 @ 10019707  if (not(flag:z) && not(flag:c)) then 1959 @ 0x10019770 else 1960 @ 0x10019709  {"yyy9yyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1839 @ 100197a8  if (flag:p) then 1961 @ 0x10019733 else 1962 @ 0x100197aa

1840 @ 100197be  if (not(flag:s)) then 1963 @ 0x10019839 else 1964 @ 0x100197c0

1841 @ 10019746  if (flag:s) then 1966 @ 0x1001976a else 1353 @ 0x10019748

1842 @ 1001973d  temp104.b = [edx].b
1843 @ 1001973d  [edx].b = [edx].b + ah
1844 @ 1001973d  flag:c = temp104.b + ah u< temp104.b
1845 @ 1001973d  flag:p = unimplemented
1846 @ 1001973d  flag:z = temp104.b == neg.b(ah)
1847 @ 1001973d  flag:s = temp104.b + ah s< 0
1848 @ 1001973d  flag:o = add_overflow(temp104.b, ah)
1849 @ 1001973d  goto 1967 @ 0x1001973f

1850 @ 10019818  if (not(flag:s)) then 1957 @ 0x100197da else 1937 @ 0x1001981a

1851 @ 1001979f  flag:s = ecx - edi s< 0
1852 @ 1001979f  goto 1970 @ 0x100197a1

1853 @ 100197a3  temp105.d = [ecx + 0x79].d
1854 @ 100197a3  flag:c = temp105.d u< edi
1855 @ 100197a3  flag:p = unimplemented
1856 @ 100197a3  flag:a = unimplemented
1857 @ 100197a3  flag:z = temp105.d == edi
1858 @ 100197a3  flag:s = temp105.d - edi s< 0
1859 @ 100197a3  flag:o = add_overflow(temp105.d, neg.d(edi))
1860 @ 100197a6  if (not(flag:s)) then 1971 @ 0x10019821 else 1839 @ 0x100197a8

1861 @ 1001972a  al = 0xb2
1862 @ 1001972c  goto 1575 @ 0x1001972d

1863 @ 1001966e  if (not(flag:s)) then 1972 @ 0x100196e9 else 1364 @ 0x10019670

1864 @ 100196b3  if (not(flag:s)) then 1128 @ 0x100196a2 else 1973 @ 0x100196b5

1865 @ 10019741  if (flag:s) then 1974 @ 0x10019798 else 1975 @ 0x10019743

1866 @ 100196c3  if (flag:s) then 1842 @ 0x1001973d else 1977 @ 0x100196c5

1867 @ 10019820  [ecx - 0x26].t = x87.pop{x87c1z}
1868 @ 10019820  goto 1978 @ 0x10019823

1869 @ 100197a7  if (not(flag:s)) then 1978 @ 0x10019823 else 1719 @ 0x100197a9

1870 @ 100197f0  __out_immb_al(0x79, al, eflags)
1871 @ 100197f2  __out_immb_al(0x79, al, eflags)
1872 @ 100197f2  goto 1527 @ 0x100197f4

1873 @ 100197b8  if (flag:p) then 1980 @ 0x10019833 else 1981 @ 0x100197ba

1874 @ 10019872  eax = eax - -0x3e60f571
1875 @ 10019877  undefined

1876 @ 100197f9  goto 1982 @ 0x10019874

1877 @ 10019780  if (not(flag:s)) then 1987 @ 0x100197fb else 1988 @ 0x10019782

1878 @ 100196b6  temp106.d = [esi].d
1879 @ 100196b6  temp107.d = [edi].d
1880 @ 100196b6  flag:c = temp106.d u< temp107.d
1881 @ 100196b6  flag:p = unimplemented
1882 @ 100196b6  flag:a = unimplemented
1883 @ 100196b6  flag:z = temp106.d == temp107.d
1884 @ 100196b6  flag:s = temp106.d - temp107.d s< 0
1885 @ 100196b6  flag:o = add_overflow(temp106.d, neg.d(temp107.d))
1886 @ 100196b6  if (flag:d) then 1989 else 1992

1887 @ 100196f5  if (not(flag:s)) then 1894 @ 0x10019687 else 1995 @ 0x100196f7  {"ytq"x"}

1888 @ 10019763  if (not(flag:s)) then 1996 @ 0x100197dd else 1998 @ 0x10019765

1889 @ 100196ea  [esi].d - [edi].d
1890 @ 100196ea  if (flag:d) then 1999 else 2002

1891 @ 100197ac  if (not(flag:s)) then 2005 @ 0x10019827 else 2007 @ 0x100197ae

1892 @ 10019731  if (not(flag:s)) then 1311 @ 0x100196ff else 1961 @ 0x10019733

1893 @ 100196d2  if (not(flag:z) && not(flag:c)) then 1464 @ 0x1001974a else 1421 @ 0x100196d4

1894 @ 10019687  if (not(flag:o)) then 1718 @ 0x100196e8 else 2008 @ 0x10019689

1895 @ 10019675  if (not(flag:s)) then 1291 @ 0x10019633 else 1612 @ 0x10019677  {"yli"s"}

1896 @ 1001969b  esi = esi - 1
1897 @ 1001969c  ebp = ebp + 1
1898 @ 1001969c  goto 1899 @ 0x1001969d

1899 @ 1001969d  ebp = ebp + 1
1900 @ 1001969e  eip = __int1()
1901 @ 1001969e  goto 1029 @ 0x1001969f

1902 @ 100196f9  if (not(flag:o)) then 1945 @ 0x1001971d else 2016 @ 0x100196fb

1903 @ 10019681  if (flag:s) then 1687 @ 0x100196d8 else 2017 @ 0x10019683

1904 @ 10019685  if (flag:s) then 1311 @ 0x100196ff else 1894 @ 0x10019687

1905 @ 10019394  ecx = [edx + 0x65].d * -0x6c
1906 @ 10019394  goto 128 @ 0x10019398

1907 @ 10019319  if (not(flag:s)) then 279 @ 0x10019395 else 2018 @ 0x1001931b

1908 @ 10019330  if (not(flag:s)) then 162 @ 0x100193ab else 155 @ 0x10019332

1909 @ 100192b7  if (not(flag:s)) then 155 @ 0x10019332 else 2019 @ 0x100192b9

1910 @ 100199b2  edx = edx - 1
1911 @ 100199b3  eflags = __cli(eflags)
1912 @ 100199b4  temp108.d = [eax - 0x46119f7f].d
1913 @ 100199b4  [eax - 0x46119f7f].d = [eax - 0x46119f7f].d | edx
1914 @ 100199b4  flag:s = (temp108.d | edx) s< 0
1915 @ 100199b4  flag:o = 0
1916 @ 100199b4  goto 2020 @ 0x100199ba

1917 @ 1001996d  temp109.d = [edx - 0x1d].d
1918 @ 1001996d  [edx - 0x1d].d = [edx - 0x1d].d | 0x69a3237f
1919 @ 1001996d  flag:p = unimplemented
1920 @ 10019975  mm0 = _m_psrld(mm0, mm6)
1921 @ 10019978  esi = __outsd(dx, [esi].d, esi, eflags)
1922 @ 10019979  if (not(flag:p)) then 2022 @ 0x1001993a else 2039 @ 0x1001997b

1923 @ 100198f0  __out_dx_al(dx, al, eflags)
1924 @ 100198f2  if (not(flag:z) && flag:s == flag:o) then 2043 @ 0x1001996c else 2045 @ 0x100198f4

1925 @ 10019832  eax = __in_oeax_dx(dx, eflags)
1926 @ 10019832  goto 1980 @ 0x10019833

1927 @ 1001988a  flag:d = 0
1928 @ 1001988b  esi = 0x69e081ee
1929 @ 10019890  ch = 0xde
1930 @ 10019890  goto 2053 @ 0x10019892

1931 @ 1001980c  esi = esi - 1
1932 @ 1001980c  goto 2054

1933 @ 1001980c  esi = esi + 1
1934 @ 1001980c  goto 2054

1935 @ 1001980e  if (not(flag:s)) then 2055 @ 0x10019889 else 2060 @ 0x10019810

1936 @ 10019795  if (not(flag:s)) then 2060 @ 0x10019810 else 2068 @ 0x10019797

1937 @ 1001981a  st0 f- st3
1938 @ 1001981a  __free_slot(st0)
1939 @ 1001981a  top = top + 1
1940 @ 1001981c  undefined

1941 @ 1001980f  if (not(flag:s)) then 1873 @ 0x100197b8 else 2069 @ 0x10019811

1942 @ 10019796  if (not(flag:s)) then 2069 @ 0x10019811 else 1974 @ 0x10019798

1943 @ 100197ed  [ecx + 0x79].b = [ecx + 0x79].b - bh
1944 @ 100197ed  goto 1870 @ 0x100197f0

1945 @ 1001971d  __out_dx_oeax(dx, eax, eflags)
1946 @ 1001971e  al = [esi].b
1947 @ 1001971e  if (flag:d) then 2070 else 2072

1948 @ 100197e5  trap(0xd)
{ Does not return }

1949 @ 100197fa  if (not(flag:s)) then 2074 @ 0x10019875 else 2076 @ 0x100197fc

1950 @ 10019781  if (not(flag:s)) then 2076 @ 0x100197fc else 2077 @ 0x10019783

1951 @ 1001985c  edx = edx + 1
1952 @ 1001985d  esi = 0x63f22d42
1953 @ 10019862  temp110.b = [ebx].b
1954 @ 10019862  flag:c = bl u< temp110.b
1955 @ 10019864  al, ah, eflags = __aaa(al, ah, eflags)
1956 @ 10019864  goto 2078 @ 0x10019865

1957 @ 100197da  if (not(flag:s)) then 1942 @ 0x10019796 else 1958 @ 0x100197dc

1958 @ 100197dc  if (not(flag:s)) then 1415 @ 0x10019806 else 2084 @ 0x100197de

1959 @ 10019770  if (not(flag:s)) then 1712 @ 0x100197eb else 2086 @ 0x10019772  {"y9yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1960 @ 10019709  if (not(flag:c)) then 1670 @ 0x1001977d else 2087 @ 0x1001970c  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

1961 @ 10019733  if (not(flag:s)) then 1469 @ 0x100196d3 else 2089 @ 0x10019735

1962 @ 100197aa  if (not(flag:s)) then 2090 @ 0x10019734 else 1891 @ 0x100197ac

1963 @ 10019839  if (not(flag:s)) then 2096 @ 0x100198b4 else 2102 @ 0x1001983b

1964 @ 100197c0  edx:eax = sx.q(eax)
1965 @ 100197c1  if (not(flag:s)) then 2104 @ 0x1001983c else 2105 @ 0x100197c3

1966 @ 1001976a  if (not(flag:s)) then 1948 @ 0x100197e5 else 2106 @ 0x1001976c

1967 @ 1001973f  push(ebp)
1968 @ 10019740  push(ebp)
1969 @ 10019740  goto 1865 @ 0x10019741

1970 @ 100197a1  if (not(flag:s)) then 2107 @ 0x1001981c else 1853 @ 0x100197a3

1971 @ 10019821  if (not(flag:s)) then 2108 @ 0x100197fd else 1978 @ 0x10019823

1972 @ 100196e9  if (not(flag:s)) then 2109 @ 0x10019692 else 2110 @ 0x100196eb

1973 @ 100196b5  if (not(flag:s)) then 1041 @ 0x1001965e else 2120 @ 0x100196b7  {"ypm"v"}

1974 @ 10019798  if (not(flag:s)) then 2121 @ 0x10019813 else 2122 @ 0x1001979a

1975 @ 10019743  push(ebp)
1976 @ 10019743  goto 1686 @ 0x10019744

1977 @ 100196c5  if (flag:s) then 1967 @ 0x1001973f else 1440 @ 0x100196c7

1978 @ 10019823  ecx = ecx - 1
1979 @ 10019823  if (ecx != 0) then 1797 @ 0x10019804 else 2123 @ 0x10019826

1980 @ 10019833  goto 2124 @ 0x1001981d

1981 @ 100197ba  if (not(flag:s)) then 2126 @ 0x10019835 else 2127 @ 0x100197bc

1982 @ 10019874  bl = bl | [edi + 0x470dbc1].b
1983 @ 1001987a  temp111.d = edi
1984 @ 1001987a  edi = edi - 1
1985 @ 1001987a  flag:s = temp111.d - 1 s< 0
1986 @ 1001987a  goto 2128 @ 0x1001987b

1987 @ 100197fb  if (not(flag:s)) then 2130 @ 0x10019876 else 2108 @ 0x100197fd

1988 @ 10019782  if (not(flag:s)) then 2108 @ 0x100197fd else 2135 @ 0x10019784

1989 @ 100196b6  esi = esi - 4
1990 @ 100196b6  edi = edi - 4
1991 @ 100196b6  goto 2136

1992 @ 100196b6  esi = esi + 4
1993 @ 100196b6  edi = edi + 4
1994 @ 100196b6  goto 2136

1995 @ 100196f7  if (not(flag:s)) then 2137 @ 0x1001976d else 1902 @ 0x100196f9

1996 @ 100197dd  [edx + 0x79f4e6e6].b = [edx + 0x79f4e6e6].b - bh
1997 @ 100197dd  goto 2138 @ 0x100197e3

1998 @ 10019765  if (not(flag:s)) then 2140 @ 0x1001970d else 2142 @ 0x10019767

1999 @ 100196ea  esi = esi - 4
2000 @ 100196ea  edi = edi - 4
2001 @ 100196ea  goto 2143

2002 @ 100196ea  esi = esi + 4
2003 @ 100196ea  edi = edi + 4
2004 @ 100196ea  goto 2143

2005 @ 10019827  edx = 0xbac979ec
2006 @ 1001982c  goto 1659 @ 0x1001980b

2007 @ 100197ae  if (not(flag:s)) then 2144 @ 0x1001982a else 2147 @ 0x100197b0

2008 @ 10019689  ebx = pop
2009 @ 1001968a  temp0, edi = __insd(edi, dx, eflags)
2010 @ 1001968a  [edi].d = temp0.d
2011 @ 1001968b  temp112.d = [ebp + 0x62].d
2012 @ 1001968b  esp = [ebp + 0x62].d * 0x68
2013 @ 1001968b  flag:c = unimplemented
2014 @ 1001968b  flag:o = unimplemented
2015 @ 1001968f  if (flag:z || flag:c) then 2154 @ 0x10019708 else 2155 @ 0x10019691

2016 @ 100196fb  goto 2156 @ 0x100196fd

2017 @ 10019683  if (not(flag:z) && not(flag:c)) then 2156 @ 0x100196fd else 1904 @ 0x10019685

2018 @ 1001931b  if (not(flag:s)) then 306 @ 0x10019396 else 2157 @ 0x1001931d

2019 @ 100192b9  if (not(flag:s)) then 166 @ 0x10019334 else 2158 @ 0x100192bb

2020 @ 100199ba  es = pop.w
2021 @ 100199ba  goto 2159 @ 0x100199bb

2022 @ 1001993a  bl = 0x59
2023 @ 1001993c  flag:c = 1
2024 @ 1001993d  edi = pop
2025 @ 1001993e  bh = 0x88
2026 @ 10019940  eax = eax ^ [ecx + (ebp << 2)].d
2027 @ 10019943  al = al + [ebx + 0x16].b
2028 @ 10019946  temp113.b = [ebx - 0x4d7b1608].b
2029 @ 10019946  [ebx - 0x4d7b1608].b = [ebx - 0x4d7b1608].b + bl
2030 @ 10019946  flag:c = temp113.b + bl u< temp113.b
2031 @ 10019946  flag:p = unimplemented
2032 @ 10019946  flag:z = temp113.b == neg.b(bl)
2033 @ 10019946  flag:s = temp113.b + bl s< 0
2034 @ 10019946  flag:o = add_overflow(temp113.b, bl)
2035 @ 1001994c  flag:d = 0
2036 @ 1001994d  __out_dx_al(dx, al, eflags)
2037 @ 1001994e  al, ah, eflags = __aas(al, ah, eflags)
2038 @ 1001994f  if (flag:z || flag:c) then 2159 @ 0x100199bb else 2161 @ 0x10019951

2039 @ 1001997b  push(ebp)
2040 @ 1001997d  ebx = 0xfe7c8d20
2041 @ 10019982  push(0x7c798370)
2042 @ 10019982  goto 2162 @ 0x10019987

2043 @ 1001996c  ebp = ebp + 1
2044 @ 1001996c  goto 1917 @ 0x1001996d

2045 @ 100198f4  flag:d = 1
2046 @ 100198f5  [ecx - 0x2e].d & eax
2047 @ 100198f8  al = 0x69
2048 @ 100198fa  al, eflags = __das(al, eflags)
2049 @ 100198fb  ebx = pop
2050 @ 100198fc  temp114.d = [edi].d
2051 @ 100198fc  flag:c = eax u< temp114.d
2052 @ 100198fc  if (flag:d) then 2164 else 2166

2053 @ 10019892  goto 2168 @ 0x10019855

2054 @ 1001980c  goto 1791 @ 0x1001980d

2055 @ 10019889  esp - -0x1f7e1142
2056 @ 1001988f  esi = [ebp - 0x523e1422].d * -0x2f8d4d8f
2057 @ 10019899  esp = pop
2058 @ 1001989a  al = [esi].b
2059 @ 1001989a  if (flag:d) then 2170 else 2172

2060 @ 10019810  temp115.d = [esi].d
2061 @ 10019810  temp116.d = [edi].d
2062 @ 10019810  flag:c = temp115.d u< temp116.d
2063 @ 10019810  flag:p = unimplemented
2064 @ 10019810  flag:z = temp115.d == temp116.d
2065 @ 10019810  flag:s = temp115.d - temp116.d s< 0
2066 @ 10019810  flag:o = add_overflow(temp115.d, neg.d(temp116.d))
2067 @ 10019810  if (flag:d) then 2174 else 2177

2068 @ 10019797  if (not(flag:s)) then 1657 @ 0x10019812 else 2180 @ 0x10019799

2069 @ 10019811  if (not(flag:s)) then 2181 @ 0x100197f1 else 2121 @ 0x10019813

2070 @ 1001971e  esi = esi - 1
2071 @ 1001971e  goto 2182 @ 0x1001971f

2072 @ 1001971e  esi = esi + 1
2073 @ 1001971e  goto 2182 @ 0x1001971f

2074 @ 10019875  ah = flagbit.b(flag:s, 7) | flagbit.b(flag:z, 6) | flagbit.b(flag:a, 4) | flagbit.b(flag:p, 2) | flagbit.b(flag:c, 0)
2075 @ 10019875  goto 2130 @ 0x10019876

2076 @ 100197fc  if (not(flag:s)) then 2184 @ 0x10019877 else 2185 @ 0x100197fe

2077 @ 10019783  if (not(flag:s)) then 2185 @ 0x100197fe else 2189 @ 0x10019785

2078 @ 10019865  temp117.d = [esp + (esi << 2) + 0x58d8f81e].d
2079 @ 10019865  cond:34 = flag:c
2080 @ 10019865  [esp + (esi << 2) + 0x58d8f81e].d = rrc.d(temp117.d, cl, cond:34)
2081 @ 10019865  flag:c = unimplemented
2082 @ 1001986c  eax = eax - 1
2083 @ 1001986c  goto 2190 @ 0x1001986d

2084 @ 100197de  edx = 0x79f4e6e6
2085 @ 100197de  goto 2138 @ 0x100197e3

2086 @ 10019772  if (not(flag:s)) then 2192 @ 0x100197ad else 2193 @ 0x10019774  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2087 @ 1001970c  esi = __outsb(dx, [esi].b, esi, eflags)
2088 @ 1001970c  goto 2140 @ 0x1001970d

2089 @ 10019735  if (not(flag:s)) then 2194 @ 0x100196b9 else 1546 @ 0x10019737

2090 @ 10019734  flag:c = test_bit(ah, 0)
2091 @ 10019734  flag:p = test_bit(ah, 2)
2092 @ 10019734  flag:a = test_bit(ah, 4)
2093 @ 10019734  flag:z = test_bit(ah, 6)
2094 @ 10019734  flag:s = test_bit(ah, 7)
2095 @ 10019734  goto 2089 @ 0x10019735

2096 @ 100198b4  temp118.b = [edi].b
2097 @ 100198b4  [edi].b = neg.b([edi].b)
2098 @ 100198b4  flag:z = neg.b(temp118.b) == 0
2099 @ 100198b4  flag:s = neg.b(temp118.b) s< 0
2100 @ 100198b4  flag:o = neg.b(temp118.b) == 0x80
2101 @ 100198b4  goto 2206 @ 0x100198b6

2102 @ 1001983b  eax = __in_oeax_dx(dx, eflags)
2103 @ 1001983b  goto 2104 @ 0x1001983c

2104 @ 1001983c  undefined

2105 @ 100197c3  if (not(flag:s)) then 2217 @ 0x1001983e else 2219 @ 0x100197c5

2106 @ 1001976c  if (not(flag:s)) then 2220 @ 0x100197e7 else 2222 @ 0x1001976e

2107 @ 1001981c  undefined

2108 @ 100197fd  if (not(flag:s)) then 1996 @ 0x100197dd else 2223 @ 0x100197ff

2109 @ 10019692  if (not(flag:z) && not(flag:c)) then 2225 @ 0x1001970a else 2226 @ 0x10019694

2110 @ 100196eb  al = 0x99
2111 @ 100196ed  call(0x89d4106d)
2112 @ 100196f4  temp119.d = [ecx - 0x70].d
2113 @ 100196f4  [ecx - 0x70].d = [ecx - 0x70].d s>> 0x79
2114 @ 100196f4  flag:c = unimplemented
2115 @ 100196f4  flag:p = unimplemented
2116 @ 100196f4  flag:z = temp119.d s>> 0x79 == 0
2117 @ 100196f4  flag:s = temp119.d s>> 0x79 s< 0
2118 @ 100196f4  flag:o = unimplemented
2119 @ 100196f8  if (flag:z) then 2227 @ 0x1001976b else 2228 @ 0x100196fa

2120 @ 100196b7  if (not(flag:s)) then 2238 @ 0x10019729 else 2194 @ 0x100196b9

2121 @ 10019813  if (not(flag:s)) then 1964 @ 0x100197c0 else 1789 @ 0x10019815

2122 @ 1001979a  if (not(flag:s)) then 1789 @ 0x10019815 else 2239 @ 0x1001979c

2123 @ 10019826  goto 2240 @ 0x100197e2

2124 @ 1001981d  st0 = float.t([ecx + 0x79].d) f/ st0
2125 @ 1001981d  goto 1867 @ 0x10019820

2126 @ 10019835  if (not(flag:s)) then 2241 @ 0x10019814 else 2242 @ 0x10019837

2127 @ 100197bc  if (flag:p) then 1851 @ 0x1001979f else 1840 @ 0x100197be

2128 @ 1001987b  edx = pop
2129 @ 1001987b  goto 2246 @ 0x1001987c

2130 @ 10019876  ebx = rrc.d(ebx, 0x70, flag:c)
2131 @ 10019879  temp120.b = al
2132 @ 10019879  al = al + 0x4f
2133 @ 10019879  flag:s = temp120.b + 0x4f s< 0
2134 @ 10019879  goto 2128 @ 0x1001987b

2135 @ 10019784  if (not(flag:s)) then 2223 @ 0x100197ff else 2247 @ 0x10019786

2136 @ 100196b6  goto 2120 @ 0x100196b7  {"ypm"v"}

2137 @ 1001976d  if (not(flag:s)) then 2248 @ 0x100197e8 else 2249 @ 0x1001976f

2138 @ 100197e3  __out_immb_al(0x79, al, eflags)
2139 @ 100197e3  goto 1948 @ 0x100197e5

2140 @ 1001970d  push(zx.d(0x6c))
2141 @ 1001970d  goto 2251 @ 0x1001970f

2142 @ 10019767  if (not(flag:s)) then 2240 @ 0x100197e2 else 2252 @ 0x10019769

2143 @ 100196ea  goto 2110 @ 0x100196eb

2144 @ 1001982a  esp = ebp
2145 @ 1001982a  ebp = pop
2146 @ 1001982a  goto 2253 @ 0x1001982b

2147 @ 100197b0  temp121.d = [ecx + 0x39].d
2148 @ 100197b0  flag:c = temp121.d u< edi
2149 @ 100197b0  flag:p = unimplemented
2150 @ 100197b0  flag:z = temp121.d == edi
2151 @ 100197b0  flag:s = temp121.d - edi s< 0
2152 @ 100197b0  flag:o = add_overflow(temp121.d, neg.d(edi))
2153 @ 100197b0  goto 2255 @ 0x100197b3

2154 @ 10019708  if (not(flag:c)) then 1670 @ 0x1001977d else 2087 @ 0x1001970c  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2155 @ 10019691  if (flag:s) then 2225 @ 0x1001970a else 2256 @ 0x10019693

2156 @ 100196fd  if (flag:s) then 2257 @ 0x10019773 else 1311 @ 0x100196ff  {"9yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2157 @ 1001931d  if (not(flag:s)) then 128 @ 0x10019398 else 2264 @ 0x1001931f

2158 @ 100192bb  if (not(flag:s)) then 188 @ 0x10019336 else 2265 @ 0x100192bd

2159 @ 100199bb  push(ecx)
2160 @ 100199bc  if (flag:s == flag:o) then 2266 @ 0x100199cb else 2277 @ 0x100199be

2161 @ 10019951  if (flag:p) then 2020 @ 0x100199ba else 2286 @ 0x10019953

2162 @ 10019987  ecx = ecx - 1
2163 @ 10019987  if (ecx != 0) then 2299 @ 0x100199b0 else 2300 @ 0x10019989

2164 @ 100198fc  edi = edi - 4
2165 @ 100198fc  goto 2306

2166 @ 100198fc  edi = edi + 4
2167 @ 100198fc  goto 2306

2168 @ 10019855  __out_dx_al(dx, al, eflags)
2169 @ 10019855  goto 1818 @ 0x10019856

2170 @ 1001989a  esi = esi - 1
2171 @ 1001989a  goto 2307 @ 0x1001989b

2172 @ 1001989a  esi = esi + 1
2173 @ 1001989a  goto 2307 @ 0x1001989b

2174 @ 10019810  esi = esi - 4
2175 @ 10019810  edi = edi - 4
2176 @ 10019810  goto 2311

2177 @ 10019810  esi = esi + 4
2178 @ 10019810  edi = edi + 4
2179 @ 10019810  goto 2311

2180 @ 10019799  if (not(flag:s)) then 2241 @ 0x10019814 else 2312 @ 0x1001979b

2181 @ 100197f1  if (not(flag:s)) then 1828 @ 0x100197d9 else 2313 @ 0x100197f3

2182 @ 1001971f  unimplemented  {enter 0x3b63, 0x55}
2183 @ 1001971f  goto 1542 @ 0x10019723

2184 @ 10019877  undefined

2185 @ 100197fe  st4 = st0 f- st4
2186 @ 100197fe  __free_slot(st0)
2187 @ 100197fe  top = top + 1
2188 @ 100197fe  goto 2314 @ 0x10019800

2189 @ 10019785  if (not(flag:s)) then 2314 @ 0x10019800 else 1525 @ 0x10019787

2190 @ 1001986d  ds = pop.w
2191 @ 1001986d  goto 2315 @ 0x1001986e

2192 @ 100197ad  if (not(flag:s)) then 2321 @ 0x10019828 else 2323 @ 0x100197af

2193 @ 10019774  if (not(flag:s)) then 2324 @ 0x100197ef else 2325 @ 0x10019776  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2194 @ 100196b9  temp0, edi = __insd(edi, dx, eflags)
2195 @ 100196b9  [edi].d = temp0.d
2196 @ 100196ba  temp122.b = dh
2197 @ 100196ba  temp123.b = [esi].b
2198 @ 100196ba  dh = dh & [esi].b
2199 @ 100196ba  flag:c = 0
2200 @ 100196ba  flag:p = unimplemented
2201 @ 100196ba  flag:a = undefined
2202 @ 100196ba  flag:z = (temp122.b & temp123.b) == 0
2203 @ 100196ba  flag:s = (temp122.b & temp123.b) s< 0
2204 @ 100196ba  flag:o = 0
2205 @ 100196bd  if (flag:z) then 1892 @ 0x10019731 else 2326 @ 0x100196bf

2206 @ 100198b6  push(eax)
2207 @ 100198b6  push(ecx)
2208 @ 100198b6  push(edx)
2209 @ 100198b6  push(ebx)
2210 @ 100198b6  push(esp)
2211 @ 100198b6  push(ebp)
2212 @ 100198b6  push(esi)
2213 @ 100198b6  push(edi)
2214 @ 100198b7  esi = 0xc871beaf
2215 @ 100198bc  ecx = pop
2216 @ 100198bd  if (not(flag:z) && flag:s == flag:o) then 2327 @ 0x100198fe else 2330 @ 0x100198bf

2217 @ 1001983e  st0 = st0 f- st0
2218 @ 10019840  goto 2005 @ 0x10019827

2219 @ 100197c5  if (not(flag:s)) then 2334 @ 0x10019844 else 2336 @ 0x100197c7

2220 @ 100197e7  edx = 0xbaba7979
2221 @ 100197e7  goto 2337 @ 0x100197ec

2222 @ 1001976e  if (not(flag:s)) then 2252 @ 0x10019769 else 1959 @ 0x10019770  {"yyy9yyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2223 @ 100197ff  al = __in_al_immb(0x79, eflags)
2224 @ 100197ff  goto 2340 @ 0x10019801

2225 @ 1001970a  if (not(flag:c)) then 1670 @ 0x1001977d else 2087 @ 0x1001970c  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2226 @ 10019694  if (flag:s) then 2341 @ 0x1001970e else 2344 @ 0x10019696

2227 @ 1001976b  if (not(flag:s)) then 2345 @ 0x100197e6 else 2137 @ 0x1001976d

2228 @ 100196fa  temp124.b = bh
2229 @ 100196fa  temp125.b = [eax].b
2230 @ 100196fa  bh = bh & [eax].b
2231 @ 100196fa  flag:c = 0
2232 @ 100196fa  flag:p = unimplemented
2233 @ 100196fa  flag:a = undefined
2234 @ 100196fa  flag:z = (temp124.b & temp125.b) == 0
2235 @ 100196fa  flag:s = (temp124.b & temp125.b) s< 0
2236 @ 100196fa  flag:o = 0
2237 @ 100196fa  goto 2156 @ 0x100196fd

2238 @ 10019729  if (not(flag:s)) then 1231 @ 0x100196db else 2346 @ 0x1001972b

2239 @ 1001979c  if (not(flag:s)) then 2348 @ 0x10019817 else 2349 @ 0x1001979e

2240 @ 100197e2  if (not(flag:s)) then 2350 @ 0x100197ca else 2351 @ 0x100197e4

2241 @ 10019814  if (flag:d) then 2352 else 2355

2242 @ 10019837  st5 = st0 f- st5
2243 @ 10019837  __free_slot(st0)
2244 @ 10019837  top = top + 1
2245 @ 10019837  goto 1963 @ 0x10019839

2246 @ 1001987c  if (not(flag:s)) then 2358 @ 0x1001983f else 2360 @ 0x1001987e

2247 @ 10019786  if (not(flag:s)) then 2340 @ 0x10019801 else 2369 @ 0x10019788

2248 @ 100197e8  if (not(flag:s)) then 2370 @ 0x10019863 else 2376 @ 0x100197ea

2249 @ 1001976f  flag:c = 1
2250 @ 1001976f  goto 1959 @ 0x10019770  {"yyy9yyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2251 @ 1001970f  if (flag:z || flag:c) then 2369 @ 0x10019788 else 2378 @ 0x10019711

2252 @ 10019769  if (not(flag:s)) then 2351 @ 0x100197e4 else 2227 @ 0x1001976b

2253 @ 1001982b  edx = 0x7979ddeb
2254 @ 1001982b  goto 2379 @ 0x10019830

2255 @ 100197b3  if (not(flag:s)) then 2381 @ 0x1001982e else 2382 @ 0x100197b5

2256 @ 10019693  if (flag:z || flag:c) then 2140 @ 0x1001970d else 2384 @ 0x10019695

2257 @ 10019773  temp126.d = [ecx + 0x79].d
2258 @ 10019773  flag:c = temp126.d u< edi
2259 @ 10019773  flag:p = unimplemented
2260 @ 10019773  flag:z = temp126.d == edi
2261 @ 10019773  flag:s = temp126.d - edi s< 0
2262 @ 10019773  flag:o = add_overflow(temp126.d, neg.d(edi))
2263 @ 10019773  goto 2325 @ 0x10019776  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2264 @ 1001931f  if (not(flag:s)) then 2385 @ 0x10019312 else 97 @ 0x10019321

2265 @ 100192bd  if (not(flag:s)) then 207 @ 0x10019338 else 251 @ 0x100192bf

2266 @ 100199cb  temp127.b = [ecx - 0x7db8aefd].b
2267 @ 100199cb  [ecx - 0x7db8aefd].b = [ecx - 0x7db8aefd].b + bh
2268 @ 100199cb  flag:c = temp127.b + bh u< temp127.b
2269 @ 100199d1  bl = 0x6c
2270 @ 100199d3  eax = sx.d(ax)
2271 @ 100199d4  __out_dx_al(dx, al, eflags)
2272 @ 100199d5  ebx = ebx - 1
2273 @ 100199d6  al = __in_al_dx(dx, eflags)
2274 @ 100199d7  edx = sbb.d(edx, [edx - 0x1b9555c].d, flag:c)
2275 @ 100199dd  eflags = __sti(eflags)
2276 @ 100199de  undefined

2277 @ 100199be  dl - [ebx + (ebx << 2) + 0x7db9dd01].b
2278 @ 100199c5  edi = pop
2279 @ 100199c6  ds = pop.w
2280 @ 100199c7  al = __salc(eflags)
2281 @ 100199c8  temp0, edi = __insb(edi, dx, eflags)
2282 @ 100199c8  [edi].b = temp0.b
2283 @ 100199c9  eflags = __cli(eflags)
2284 @ 100199ca  es = pop.w
2285 @ 100199ca  goto 2266 @ 0x100199cb

2286 @ 10019953  ch = 0x28
2287 @ 10019955  al, ah, eflags = __aaa(al, ah, eflags)
2288 @ 10019956  esp & edi
2289 @ 10019958  al = 0x12
2290 @ 1001995a  flag:c = 0
2291 @ 10019960  temp128.d = eax
2292 @ 10019960  eax = eax + 1
2293 @ 10019960  flag:p = unimplemented
2294 @ 10019960  flag:a = unimplemented
2295 @ 10019960  flag:z = temp128.d == -1
2296 @ 10019960  flag:s = temp128.d + 1 s< 0
2297 @ 10019960  flag:o = add_overflow(temp128.d, 1)
2298 @ 10019960  goto 2386 @ 0x10019961

2299 @ 100199b0  if (([esi].d & eax) s> 0) then 2388 @ 0x100199fc else 1910 @ 0x100199b2

2300 @ 10019989  eax = __in_oeax_immb(0x71, eflags)
2301 @ 1001998b  temp0.d = [eax + 0x5f38851].d
2302 @ 1001998b  [eax + 0x5f38851].d = eax
2303 @ 1001998b  eax = temp0.d
2304 @ 10019991  esi = esi ^ 0xe5180695
2305 @ 10019997  undefined

2306 @ 100198fc  goto 2391 @ 0x100198fd

2307 @ 1001989b  [ebx - 0x31].b = [ebx - 0x31].b | 0x4c
2308 @ 1001989f  push(ebx)
2309 @ 100198a0  breakpoint

2311 @ 10019810  goto 2069 @ 0x10019811

2312 @ 1001979b  if (not(flag:s)) then 2395 @ 0x10019816 else 1690 @ 0x1001979d

2313 @ 100197f3  if (not(flag:s)) then 1552 @ 0x100197e9 else 2397 @ 0x100197f5

2314 @ 10019800  if (not(flag:s)) then 2128 @ 0x1001987b else 1661 @ 0x10019802

2315 @ 1001986e  temp129.b = ah
2316 @ 1001986e  cond:35 = flag:c
2317 @ 1001986e  ah = sbb.b(temp129.b, -0x10, cond:35)
2318 @ 1001986e  flag:c = unimplemented
2319 @ 10019871  call(-0xffffffffaf0c27a3)
2320 @ 10019871  goto 2130 @ 0x10019876

2321 @ 10019828  al = __in_al_dx(dx, eflags)
2322 @ 10019829  if (not(flag:s)) then 1527 @ 0x100197f4 else 2253 @ 0x1001982b

2323 @ 100197af  if (flag:p) then 2376 @ 0x100197ea else 2398 @ 0x100197b1

2324 @ 100197ef  if (not(flag:s)) then 2399 @ 0x100197d7 else 2181 @ 0x100197f1

2325 @ 10019776  if (not(flag:s)) then 2181 @ 0x100197f1 else 2400 @ 0x10019778  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2326 @ 100196bf  if (not(flag:z) && not(flag:c)) then 1695 @ 0x10019739 else 2401 @ 0x100196c1

2327 @ 100198fe  __free_slot(st2)
2328 @ 10019900  ah - [ebx - 0x1183b078].b
2329 @ 10019900  goto 2402 @ 0x10019906

2330 @ 100198bf  temp0.d = ebp
2331 @ 100198bf  ebp = eax
2332 @ 100198bf  eax = temp0.d
2333 @ 100198c0  undefined

2334 @ 10019844  ecx = ecx - 1
2335 @ 10019844  if (ecx != 0) then 2330 @ 0x100198bf else 2404 @ 0x10019846

2336 @ 100197c7  if (not(flag:s)) then 2406 @ 0x10019845 else 2407 @ 0x100197c9

2337 @ 100197ec  temp130.b = [eax].b
2338 @ 100197ec  [eax].b = [eax].b - ch
2339 @ 100197ee  if (temp130.b - ch s>= 0) then 2408 @ 0x10019869 else 1870 @ 0x100197f0

2340 @ 10019801  if (not(flag:s)) then 2246 @ 0x1001987c else 2413 @ 0x10019803

2341 @ 1001970e  temp0, edi = __insb(edi, dx, eflags)
2342 @ 1001970e  [edi].b = temp0.b
2343 @ 1001970e  goto 2251 @ 0x1001970f

2344 @ 10019696  if (flag:s) then 2414 @ 0x10019702 else 2416 @ 0x10019698

2345 @ 100197e6  trap(0xd)
{ Does not return }

2346 @ 1001972b  dl = 0x9b
2347 @ 1001972b  goto 1575 @ 0x1001972d

2348 @ 10019817  if (not(flag:s)) then 2053 @ 0x10019892 else 2418 @ 0x10019819

2349 @ 1001979e  if (not(flag:s)) then 1828 @ 0x100197d9 else 2420 @ 0x100197a0

2350 @ 100197ca  if (flag:z || flag:s != flag:o) then 2422 @ 0x1001984a else 2423 @ 0x100197cc

2351 @ 100197e4  if (not(flag:s)) then 1957 @ 0x100197da else 2345 @ 0x100197e6

2352 @ 10019814  [edi].d = eax
2353 @ 10019814  edi = edi - 4
2354 @ 10019814  goto 2424

2355 @ 10019814  [edi].d = eax
2356 @ 10019814  edi = edi + 4
2357 @ 10019814  goto 2424

2358 @ 1001983f  call(-0xfffffffff57b7e2f)
2359 @ 1001983f  goto 2334 @ 0x10019844

2360 @ 1001987e  eip, eflags = __into(eflags)
2361 @ 1001987f  temp131.d = [ecx + 0x7962dc80].d
2362 @ 1001987f  [ecx + 0x7962dc80].d = [ecx + 0x7962dc80].d + 0x65
2363 @ 1001987f  flag:c = temp131.d u>= 0xffffff9b
2364 @ 1001987f  flag:p = unimplemented
2365 @ 1001987f  flag:z = temp131.d == -0x65
2366 @ 1001987f  flag:s = temp131.d + 0x65 s< 0
2367 @ 1001987f  flag:o = add_overflow(temp131.d, 0x65)
2368 @ 1001987f  goto 1644 @ 0x10019886

2369 @ 10019788  if (not(flag:s)) then 2413 @ 0x10019803 else 2425 @ 0x1001978a

2370 @ 10019863  temp132.d = esi
2371 @ 10019863  temp133.d = [edi].d
2372 @ 10019863  cond:36 = flag:c
2373 @ 10019863  esi = sbb.d(temp132.d, temp133.d, cond:36)
2374 @ 10019863  flag:c = unimplemented
2375 @ 10019863  goto 2078 @ 0x10019865

2376 @ 100197ea  edx = 0x792828ba
2377 @ 100197ea  goto 2324 @ 0x100197ef

2378 @ 10019711  if (flag:s) then 2425 @ 0x1001978a else 2426 @ 0x10019713

2379 @ 10019830  st4 = st4 f- st0
2380 @ 10019830  goto 1925 @ 0x10019832

2381 @ 1001982e  if (not(flag:s)) then 2427 @ 0x100198a9 else 2379 @ 0x10019830

2382 @ 100197b5  edx:eax = sx.q(eax)
2383 @ 100197b6  if (not(flag:s)) then 1782 @ 0x10019831 else 1873 @ 0x100197b8

2384 @ 10019695  if (flag:s) then 2251 @ 0x1001970f else 2432 @ 0x10019697

2385 @ 10019312  if (not(flag:s)) then 2435 @ 0x1001938d else 2437 @ 0x10019314

2386 @ 10019961  eax = [-0xfffffffffa6acc21].d
2387 @ 10019966  if (flag:s != flag:o) then 2438 @ 0x1001996a else 2440 @ 0x10019968

2388 @ 100199fc  eflags = __cli(eflags)
2389 @ 100199fd  push(zx.d(ss))
2390 @ 100199fe  jump(-0xfffffffff0668bdd)

2391 @ 100198fd  ebp = sbb.d(ebp, -0x775cc53e, flag:c)
2392 @ 10019903  temp134.d = edi
2393 @ 10019903  edi = edi - 1
2394 @ 10019904  if (temp134.d s< 1) then 2045 @ 0x100198f4 else 2402 @ 0x10019906

2395 @ 10019816  eax = __in_oeax_immb(0x79, eflags)
2396 @ 10019816  goto 1850 @ 0x10019818

2397 @ 100197f5  if (not(flag:s)) then 1712 @ 0x100197eb else 1715 @ 0x100197f7

2398 @ 100197b1  if (not(flag:s)) then 2337 @ 0x100197ec else 2255 @ 0x100197b3

2399 @ 100197d7  if (flag:z || flag:s != flag:o) then 2340 @ 0x10019801 else 1828 @ 0x100197d9

2400 @ 10019778  if (not(flag:s)) then 2313 @ 0x100197f3 else 2449 @ 0x1001977a  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2401 @ 100196c1  if (flag:s) then 1526 @ 0x10019718 else 1866 @ 0x100196c3

2402 @ 10019906  [eax - 0x29].b & bh
2403 @ 10019906  goto 2450 @ 0x10019909

2404 @ 10019846  st0 = float.t([edx - 0x12868615].d) f/ st0
2405 @ 10019846  goto 2453 @ 0x1001984c

2406 @ 10019845  if (not(flag:s)) then 1971 @ 0x10019821 else 2454 @ 0x10019847

2407 @ 100197c9  if (flag:s != flag:o) then 2456 @ 0x10019849 else 2457 @ 0x100197cb

2408 @ 10019869  flag:c = 0
2409 @ 1001986a  st0 f- fconvert.t([eax + 0x48].d)
2410 @ 1001986a  __free_slot(st0)
2411 @ 1001986a  top = top + 1
2412 @ 1001986a  goto 2190 @ 0x1001986d

2413 @ 10019803  if (not(flag:s)) then 2360 @ 0x1001987e else 2458 @ 0x10019805

2414 @ 10019702  push(ebp)
2415 @ 10019702  goto 1530 @ 0x10019703

2416 @ 10019698  esp = esp & ebp
2417 @ 10019698  goto 1727 @ 0x1001969a

2418 @ 10019819  ch = rrc.b(ch, 0xeb, flag:c)
2419 @ 1001981c  undefined

2420 @ 100197a0  flag:c = 1
2421 @ 100197a0  goto 1970 @ 0x100197a1

2422 @ 1001984a  if (not(flag:s)) then 1963 @ 0x10019839 else 2453 @ 0x1001984c

2423 @ 100197cc  if (flag:s != flag:o) then 2422 @ 0x1001984a else 1429 @ 0x100197ce

2424 @ 10019814  goto 1789 @ 0x10019815

2425 @ 1001978a  if (not(flag:s)) then 2458 @ 0x10019805 else 2460 @ 0x1001978c

2426 @ 10019713  if (not(flag:z) && not(flag:c)) then 1416 @ 0x1001978d else 2461 @ 0x10019715

2427 @ 100198a9  flag:c = al u< 0x7d
2428 @ 100198a9  flag:p = unimplemented
2429 @ 100198a9  flag:s = al - 0x7d s< 0
2430 @ 100198a9  flag:o = add_overflow(al, -0x7d)
2431 @ 100198ab  if (not(flag:c)) then 2462 @ 0x1001991e else 2463 @ 0x100198ad

2432 @ 10019697  push(zx.d(0x23))
2433 @ 10019699  eax = __in_oeax_immb(0x4e, eflags)
2434 @ 10019699  goto 1896 @ 0x1001969b

2435 @ 1001938d  [ebp - 0x6ba4654c].b & bl
2436 @ 1001938d  goto 1618 @ 0x10019393

2437 @ 10019314  if (not(flag:s)) then 1494 @ 0x1001938f else 2464 @ 0x10019316

2438 @ 1001996a  push(flagbit.d(flag:o, 0xb) | flagbit.d(flag:d, 0xa) | flagbit.d(flag:s, 7) | flagbit.d(flag:z, 6) | flagbit.d(flag:a, 4) | flagbit.d(flag:p, 2) | flagbit.d(flag:c, 0))
2439 @ 1001996a  goto 1775 @ 0x1001996b

2440 @ 10019968  temp135.d = ebp
2441 @ 10019968  ebp = ebp - 1
2442 @ 10019968  flag:p = unimplemented
2443 @ 10019968  flag:a = unimplemented
2444 @ 10019968  flag:z = temp135.d == 1
2445 @ 10019968  flag:s = temp135.d - 1 s< 0
2446 @ 10019968  flag:o = add_overflow(temp135.d, -1)
2447 @ 10019969  push(flagbit.d(flag:o, 0xb) | flagbit.d(flag:d, 0xa) | flagbit.d(flag:s, 7) | flagbit.d(flag:z, 6) | flagbit.d(flag:a, 4) | flagbit.d(flag:p, 2) | flagbit.d(flag:c, 0))
2448 @ 10019969  goto 1775 @ 0x1001996b

2449 @ 1001977a  if (not(flag:s)) then 2397 @ 0x100197f5 else 1555 @ 0x1001977c  {"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy…"}

2450 @ 10019909  esi = __outsb(dx, [esi].b, esi, eflags)
2451 @ 1001990a  dl = 0xf0
2452 @ 1001990c  undefined

2453 @ 1001984c  undefined

2454 @ 10019847  edx = 0xed7979eb
2455 @ 10019847  goto 2453 @ 0x1001984c

2456 @ 10019849  if (not(flag:s)) then 2465 @ 0x100198c4 else 2492 @ 0x1001984b

2457 @ 100197cb  if (flag:z || flag:s != flag:o) then 2456 @ 0x10019849 else 2494 @ 0x100197cd

2458 @ 10019805  __out_immb_oeax(0x79, eax, eflags)
2459 @ 10019805  goto 2495 @ 0x10019807

2460 @ 1001978c  if (not(flag:s)) then 2495 @ 0x10019807 else 1417 @ 0x1001978e

2461 @ 10019715  if (flag:s) then 1521 @ 0x1001978f else 2496 @ 0x10019717

2462 @ 1001991e  if (flag:s == flag:o) then 2498 @ 0x1001997a else 2501 @ 0x10019920

2463 @ 100198ad  if (flag:p) then 2505 @ 0x100198e0 else 2508 @ 0x100198af

2464 @ 10019316  if (not(flag:s)) then 1616 @ 0x10019391 else 2511 @ 0x10019318

2465 @ 100198c4  eax = 0x7f7eee84
2466 @ 100198c9  flag:c = 1
2467 @ 100198ca  eax = sx.d(ax)
2468 @ 100198cb  dh = not.b(dh)
2469 @ 100198cd  ebp = ebp + 1
2470 @ 100198ce  ebp = pop
2471 @ 100198cf  ecx = pop
2472 @ 100198d0  edi = edi + 1
2473 @ 100198d1  ecx = 0x5549ceb7
2474 @ 100198d6  al, ah, eflags = __aas(al, ah, eflags)
2475 @ 100198d7  edi = pop
2476 @ 100198d7  esi = pop
2477 @ 100198d7  ebp = pop
2478 @ 100198d7  esp = esp + 4
2479 @ 100198d7  ebx = pop
2480 @ 100198d7  edx = pop
2481 @ 100198d7  ecx = pop
2482 @ 100198d7  eax = pop
2483 @ 100198d8  temp136.b = al
2484 @ 100198d8  al = al & 0x25
2485 @ 100198d8  flag:c = 0
2486 @ 100198d8  flag:p = unimplemented
2487 @ 100198d8  flag:a = undefined
2488 @ 100198d8  flag:z = (temp136.b & 0x25) == 0
2489 @ 100198d8  flag:s = (temp136.b & 0x25) s< 0
2490 @ 100198d8  flag:o = 0
2491 @ 100198da  if (flag:d) then 2512 else 2515

2492 @ 1001984b  eax = __in_oeax_dx(dx, eflags)
2493 @ 1001984b  goto 2453 @ 0x1001984c

2494 @ 100197cd  if (flag:s != flag:o) then 2518 @ 0x1001984d else 1645 @ 0x100197cf

2495 @ 10019807  if (not(flag:s)) then 2520 @ 0x10019882 else 1522 @ 0x10019809

2496 @ 10019717  esi = __outsd(dx, [esi].d, esi, eflags)
2497 @ 10019717  goto 1526 @ 0x10019718

2498 @ 1001997a  edi = 0x20bb5565
2499 @ 1001997f  edi = esi + (edi << 3) + 0x68
2500 @ 10019983  if (flag:o) then 2522 @ 0x10019908 else 2524 @ 0x10019985

2501 @ 10019920  temp137.d = [edx].d
2502 @ 10019920  edi = [edx].d * 0x4414f9eb
2503 @ 10019920  flag:o = unimplemented
2504 @ 10019926  if (not(flag:o)) then 2525 @ 0x100198f7 else 2529 @ 0x10019928

2505 @ 100198e0  [eax - 0x48fb8813].b = [eax - 0x48fb8813].b << 1
2506 @ 100198e6  esp = pop
2507 @ 100198e6  goto 2540 @ 0x100198e7

2508 @ 100198af  temp138.d = ecx
2509 @ 100198af  ecx = ecx + 1
2510 @ 100198b0  if (temp138.d s< -1) then 1951 @ 0x1001985c else 2551 @ 0x100198b3

2511 @ 10019318  if (not(flag:s)) then 1618 @ 0x10019393 else 257 @ 0x1001931a

2512 @ 100198da  [edi].d = eax
2513 @ 100198da  edi = edi - 4
2514 @ 100198da  goto 2559 @ 0x100198db

2515 @ 100198da  [edi].d = eax
2516 @ 100198da  edi = edi + 4
2517 @ 100198da  goto 2559 @ 0x100198db

2518 @ 1001984d  __out_dx_al(dx, al, eflags)
2519 @ 1001984e  if (not(flag:s)) then 2381 @ 0x1001982e else 2560 @ 0x10019850

2520 @ 10019882  st0 = st0 f- fconvert.t([edx + 0x79].q)
2521 @ 10019885  if (flag:p) then 1782 @ 0x10019831 else 1784 @ 0x10019888

2522 @ 10019908  al = [ebx + al.d].b
2523 @ 10019908  goto 2450 @ 0x10019909

2524 @ 10019985  if (not(flag:s)) then 2561 @ 0x10019a03 else 2162 @ 0x10019987

2525 @ 100198f7  temp139.b = [eax - 0x50a4d097].b
2526 @ 100198f7  [eax - 0x50a4d097].b = [eax - 0x50a4d097].b << cl
2527 @ 100198f7  flag:c = unimplemented
2528 @ 100198f7  goto 2391 @ 0x100198fd

2529 @ 10019928  temp0.d = pop
2530 @ 10019928  flag:c = test_bit(temp0.d, 0)
2531 @ 10019928  flag:p = test_bit(temp0.d, 2)
2532 @ 10019928  flag:a = test_bit(temp0.d, 4)
2533 @ 10019928  flag:z = test_bit(temp0.d, 6)
2534 @ 10019928  flag:s = test_bit(temp0.d, 7)
2535 @ 10019928  flag:d = test_bit(temp0.d, 0xa)
2536 @ 10019928  flag:o = test_bit(temp0.d, 0xb)
2537 @ 10019929  al = adc.b(al, 6, flag:c)
2538 @ 1001992b  ch = 0xff
2539 @ 1001992e  undefined

2540 @ 100198e7  temp0, edi = __insb(edi, dx, eflags)
2541 @ 100198e7  [edi].b = temp0.b
2542 @ 100198e8  temp140.b = al
2543 @ 100198e8  al = al - 0x32
2544 @ 100198e8  flag:c = temp140.b u>= 0x32
2545 @ 100198e8  flag:p = unimplemented
2546 @ 100198e8  flag:a = unimplemented
2547 @ 100198e8  flag:z = temp140.b == 0x32
2548 @ 100198e8  flag:s = temp140.b - 0x32 s< 0
2549 @ 100198e8  flag:o = add_overflow(temp140.b, -0x32)
2550 @ 100198e8  goto 2564 @ 0x100198ea

2551 @ 100198b3  temp141.b = dh
2552 @ 100198b3  temp142.b = dh
2553 @ 100198b3  dh = dh + dh
2554 @ 100198b3  flag:z = temp141.b == neg.b(temp142.b)
2555 @ 100198b3  flag:s = temp141.b + temp142.b s< 0
2556 @ 100198b3  flag:o = add_overflow(temp141.b, temp142.b)
2557 @ 100198b5  ds = pop.w
2558 @ 100198b5  goto 2206 @ 0x100198b6

2559 @ 100198db  if (flag:s == flag:o) then 2565 @ 0x10019861 else 2568 @ 0x100198dd

2560 @ 10019850  goto 2379 @ 0x10019830

2561 @ 10019a03  temp0, edi = __insb(edi, dx, eflags)
2562 @ 10019a03  [edi].b = temp0.b
2563 @ 10019a04  if (not(flag:c)) then 2572 @ 0x1001999f else 2573 @ 0x10019a06

2564 @ 100198ea  if (ecx == 0) then 2386 @ 0x10019961 else 2579 @ 0x100198ec

2565 @ 10019861  temp0, eflags = __arpl_memw_gpr16([edx].w, di)
2566 @ 10019861  [edx].w = temp0.w
2567 @ 10019861  goto 2370 @ 0x10019863

2568 @ 100198dd  temp0.d = [ebp - 0x124f2fcd].d
2569 @ 100198dd  [ebp - 0x124f2fcd].d = eax
2570 @ 100198dd  eax = temp0.d
2571 @ 100198e3  if (not(flag:z) && not(flag:c)) then 2580 @ 0x100198e9 else 2582 @ 0x100198e5

2572 @ 1001999f  if (flag:d) then 2584 else 2587

2573 @ 10019a06  al = __in_al_dx(dx, eflags)
2574 @ 10019a07  temp0.d = edx
2575 @ 10019a07  edx = eax
2576 @ 10019a07  eax = temp0.d
2577 @ 10019a08  edx = [edx + ecx - 0x5c5001ff].d
2578 @ 10019a0f  undefined

2579 @ 100198ec  if (flag:z || flag:s != flag:o) then 2315 @ 0x1001986e else 2590 @ 0x100198ee

2580 @ 100198e9  eip, eflags = __into(eflags)
2581 @ 100198e9  goto 2564 @ 0x100198ea

2582 @ 100198e5  bh = 0x5c
2583 @ 100198e5  goto 2540 @ 0x100198e7

2584 @ 1001999f  [edi].b = al
2585 @ 1001999f  edi = edi - 1
2586 @ 1001999f  goto 2592 @ 0x100199a0

2587 @ 1001999f  [edi].b = al
2588 @ 1001999f  edi = edi + 1
2589 @ 1001999f  goto 2592 @ 0x100199a0

2590 @ 100198ee  top = top + 1
2591 @ 100198ee  goto 1923 @ 0x100198f0

2592 @ 100199a0  if (flag:d) then 2593 else 2597

2593 @ 100199a0  [edi].b = [esi].b
2594 @ 100199a0  edi = edi - 1
2595 @ 100199a0  esi = esi - 1
2596 @ 100199a0  goto 2601 @ 0x100199a1

2597 @ 100199a0  [edi].b = [esi].b
2598 @ 100199a0  edi = edi + 1
2599 @ 100199a0  esi = esi + 1
2600 @ 100199a0  goto 2601 @ 0x100199a1

2601 @ 100199a1  temp143.d = [esi - 0x73].d
2602 @ 100199a1  flag:c = 0
2603 @ 100199a4  flag:c = flag:c ^ 1
2604 @ 100199a5  temp0, edi = __insd(edi, dx, eflags)
2605 @ 100199a5  [edi].d = temp0.d
2606 @ 100199a6  bh = bh ^ [edi].b
2607 @ 100199a6  cond:19 = bh != 0
2608 @ 100199a8  temp0.d = ecx
2609 @ 100199a8  ecx = eax
2610 @ 100199a8  eax = temp0.d
2611 @ 100199a9  ecx = ecx - 1
2612 @ 100199a9  if (cond:19 && ecx != 0) then 2300 @ 0x10019989 else 2613 @ 0x100199ab

2613 @ 100199ab  temp0.d = [edi - 0x12].d
2614 @ 100199ab  [edi - 0x12].d = ebp
2615 @ 100199ab  ebp = temp0.d
2616 @ 100199ab  goto 2299 @ 0x100199b0

100191e9                             3b 15 26 2a 4b 7a c1 97 71 ab f1 ca 1c 34 b0 d8 02 8a 67 71 7d 9b 32           ;.&*Kz..q....4....gq}.2
10019200  69 9e a2 f8 24 74 a8 90 64                                                                       i...$t..d
10019225                 75 9d 8e d6 61 75 69 bc c4 f2 d6 17 be b8 9d 0b 15 d6 e9 d9 99 8e 09 0b d6 ae b8       u...aui....................
10019240  53 11 c6 88 c3 cb e2 1e b3 7d c6 01 61 da fb d9 e4 d9 80 45 6f b0 76 ab 19 35 ce bd 0e 34 35 35  S........}..a......Eo.v..5...455
10019260  17 35 9f f3 ce 35 32 2a 35 35 35 35 35 35 35 35 35 35 35 35 35 35                                .5...52*55555555555555
10019550                                                  60 78 47 78 78 78 78 26 31 2e 30 ce b4 b9                        `xGxxxx&1.0...
100195bb                                                                                   13 77 76                                   .wv
1001963e                                                                                            f1                                   .
1001983d                                                                                         ee                                     .
10019852                                                        79 e5 e2                                                     y..
100198a1     ba 79 e9 bb 17 04 85 4d                                                                        .y.....M
100198c1     fa e1 65                                                                                       ..e
1001990d                                         f9 3b 42 91 d4 62 39 b4 2c ac d8 65 7c 21 2a 9c c6                     .;B..b9.,..e|!*..
1001992f                                               f9 b6 41 83 ec 03 8b 7a 90 b2 69                                   ..A....z..i
10019998                                                                          fd 95 b9 c9 69 61 a5                             ....ia.
100199df                                                                                               c1                                 .
100199e0  88 a2 02 06 78 3f ff 64 91 b7 96 15 f0 51 7a 8b 47 cd 04 87 d9 ed 02 06 7b 81 a1 fa              ....x?.d.....Qz.G.......{...
10019a10                                                  ee ec 98 47 8a db bd b7 e0 21 64 a1 8b 02 18 f5                  ...G.....!d.....
10019a20  e7 ab 69 e4 15 69 88 fd 84 1f 8d 96 0b 7d 87 b5 9d 77 7f 01 66 82 95 ce e6 04 ba 9c 62 ab 73 7c  ..i..i.......}...w..f.......b.s|
10019a40  7e 74 a4 83 13 8c ac 98 63 d4 8b 3a 7f 1a 43 15 fb 0b b5 4a 1b 3e 04 3a 25 01 cd 9f 1f 0d 83 bf  ~t......c..:..C....J.>.:%.......
10019a60  06 77 2d bc 48 bc 03 c1 59 f1 ac 5d 56 ab c1 a9 e3 88 6c 55 80 b0 c7 85 40 2c 89 09 2b 0a 1f 01  .w-.H...Y..]V.....lU....@,..+...
10019a80  7f be ab 80 f6 82 64 a1 54 d0 fa 49 3a 62 af 83 9b 52 65 21 41 7f 6c 3c 3c b2 35 0a 03 cf 4a 04  ......d.T..I:b...Re!A.l<<.5...J.
10019aa0  ce 8a 06 ca a9 ad cf 49 88 bb fc 2b e3 69 1b 1a d4 13 2d fc 24 7d 71 6b af 1d 65 3b 40 06 92 cc  .......I...+.i....-.$}qk..e;@...
10019ac0  c9 02 45 07 1f 1a ad 09 3f ce 2f d1 9f ff bd c0 05 ec 5c bc 30 33 ce 87 8f ca c1 bd a5 59 fd a5  ..E.....?./.......\.03.......Y..
10019ae0  64 88 cc ff 7c b8 39 02 88 c5 ce ac 8d 42 06 3a f4 16 bb 6d c1 82 1d 7c 8a b4 f7 cd 70 07 06 5d  d...|.9......B.:...m...|....p..]
10019b00  07 01 07 98 af 85 03 85 ea e9 62 3d 8c 11 62 a3 a2 99 8f 3b d4 59 a4 16 8e f1 8c fb 9b 89 19 cd  ..........b=..b....;.Y..........
10019b20  1e 20 26 78 6b ab d9 9f 5d ce c1 09 f3 33 6b 90 66 0a 64 23 cd c2 09 01 ca b5 55 5f ee db 93 c4  . &xk...]....3k.f.d#......U_....
10019b40  5f 7d 60 ef d2 c2 78 e4 49 40 5a 84 76 96 53 fd 9d 8d 97 71 74 e7 e3 03 cc d5 fd 8a 09 09 83 9f  _}`...x.I@Z.v.S....qt...........
10019b60  9c 6d 9c 01 ce 5c 6b 9e c7 fa 9d 84 aa 81 62 9a 7b 25 25 78 e6 3b ac dc 21 89 be 4f 89 02 da 00  .m...\k.......b.{%%x.;..!..O....
10019b80  fb 38 de 36 6b 9f 8a d9 05 64 ea df d5 3d a2 de ad ff 31 a1 7d 97 7b 29 5f 6a 66 81 fd 1f 4b d8  .8.6k....d...=....1.}.{)_jf...K.
10019ba0  42 9f db be 7c 46 ba 89 70 8d cc 9b 74 6d 1b fb 8a b4 d6 c0 51 0a 7a fc 94 6c ff bc c0 41 95 64  B...|F..p...tm......Q.z..l...A.d
10019bc0  13 0a 2d 02 92 c0 42 ad af 78 f5 8d e5 d5 4b 09 a7 7a 2e 7b 1d 5c 2a 94 5f 31 73 c9 0e 90 7a 77  ..-...B..x....K..z.{.\*._1s...zw
10019be0  dc a4 0f b7 63 74 39 4c e0 67 81 e7 a5 fe 6d 95 8e 80 2a 29 9b e6 f3 e8 a1 7d bf eb 51 e3 0a d1  ....ct9L.g....m...*).....}..Q...
10019c00  7c 2b 7e d2 64 15 f1 76 c2 19 39 e2 7f 85 8b 30 34 0c b2 8a 8a 1a 8e e7 e1 79 0c 4b 17 2e 16 c1  |+~.d..v..9....04........y.K....
10019c20  8f 1b d6 8e 9b 81 b2 25 53 4a 1b 5f fc 73 4b 05 b9 88 ee e9 63 59 09 86 7b 37 4a 5c f8 7a 3b 87  .......%SJ._.sK.....cY..{7J\.z;.
10019c40  9f a5 43 85 72 51 8c 44 35 bc 88 da d1 7b 64 f9 74 83 f6 e9 40 8b b9 08 b2 7f 62 7c 7d 4a eb ea  ..C.rQ.D5....{d.t...@.....b|}J..
10019c60  b4 50 fc 7c f7 a2 61 54 4e 7d 83 ee 07 49 31 83 7e c5 2f 08 0f 4a 06 01 f6 5b 51 e0 9b c0 fd c8  .P.|..aTN}...I1.~./..J...[Q.....
10019c80  93 61 96 81 09 8d 2d ab 78 3a c6 5d fa 87 8b 92 8e 64 32 32 8a eb 53 1b 5c f5 bb df 4e 7d 06 82  .a....-.x:.].....d22..S.\...N}..
10019ca0  c3 e7 62 84 4a b8 5a 0f 5b 2d 44 b2 d3 d1 15 46 55 3c 36 be 87 14 78 0b 6a 51 89 29 43 37 95 42  ..b.J.Z.[-D....FU<6...x.jQ.)C7.B
10019cc0  36 56 0c 13 a6 03 70 ac bd 76 60 bf 00 46 7b 73 04 79 38 7f 38 cc 54 29 86 ef 3e bc 76 7f 1a a7  6V....p..v`..F{s.y8.8.T)..>.v...
10019ce0  be 4d bd 3a d3 d5 a9 70 f8 75 6e b7 32 e3 f5 68 44 40 ee 1e 4d f8 ac d5 3d 39 80 45 46 a5 7b 35  .M.:...p.un.2..hD@..M...=9.EF.{5
10019d00  2c e9 cf 5d 57 8c 1b aa b1 45 9f aa 3e 2e 80 9d 2c a5 ce 3a 8e 3a 71 94 d6 77 eb ce f5 2c 03 25  ,..]W....E..>...,..:.:q..w...,.%
10019d20  c8 1c 8f b2 3b 19 15 b2 1a 9f d9 c9 5c 35 85 39 29 3c f8 30 3f 37 cb 7d 74 ff 8c c3 96 6d 05 88  ....;.......\5.9)<.0?7.}t....m..
10019d40  53 73 34 c2 c9 b8 31 b3 b3 b8 fb b2 3e 25 b5 cf 4f 51 6b 1d e3 86 6c d6 12 85 53 94 b6 93 f6 7d  Ss4...1.....>%..OQk...l...S....}
10019d60  41 8a 80 f8 85 62 c0 6d 3f 3a a5 a1 89 9c 55 85 39 36 8d 41 75 02 8c 99 b9 b7 59 8d 3d 8d a5 bf  A....b.m?:....U.96.Au.....Y.=...
10019d80  45 6a fd 5a 51 45 08 59 81 c6 b4 e4 d7 59 3d b1 87 a0 7f 48 69 5f 11 c5 b7 e9 37 ae 44 85 b8 45  Ej.ZQE.Y.....Y=....Hi_....7.D..E
10019da0  3b b9 8b 63 b5 a7 55 d6 39 06 3d 51 48 89 55 26 3f f0 fc 21 3f f8 bf 38 b8 cd 84 49 bd e3 6d 4a  ;..c..U.9.=QH.U&?..!?..8...I..mJ
10019dc0  51 60 34 44 7b f5 97 c5 b6 89 88 bd 8c 75 48 81 8b 22 56 92 91 c2 4e 41 39 64 ea 7b 78 31 a4 25  Q`4D{........uH.."V...NA9d.{x1.%
10019de0  c0 60 65 b8 42 13 3c f5 66 e2 8b 51 37 75 67 54 ab 64 9e c2 50 e0 1c f2 3f ac 37 b0 c5 7d ba 79  .`e.B.<.f..Q7ugT.d..P...?.7..}.y
10019e00  b8 a8 7d a9 39 2b 36 f5 2f 28 43 9d ee c0 d9 28 b8 70 4f 75 58 fd b0 1f 7a 53 50 7b c3 a4 96 34  ..}.9+6./(C....(.pOuX...zSP{...4
10019e20  64 33 8d 3b 36 51 39 cd 83 60 1d c5 7b db c2 be 63 61 86 38 59 47 36 c0 f8 5c 9f 86 75 7d ba be  d3.;6Q9..`..{...ca.8YG6..\..u}..
10019e40  e0 56 80 ca 67 3e 94 6c ba eb 8b 4c 1d a7 44 f5 61 6e 42 75 2b c9 f2 52 36 5b 5d 41 7a 8a 69 cf  .V..g>.l...L..D.anBu+..R6[]Az.i.
10019e60  ca 21 f6 5e 75 ba 30 c5 7c a3 90 d3 49 01 b5 3b ba 76 fe 86 be a9 3d 7b 42 bf c0 dd ca 02 87 aa  .!.^u.0.|...I..;.v....={B.......
10019e80  4f 79 b0 e3 df 6f c2 0e 87 b0 20 fc 62 8c 71 16 f6 b6 55 a9 2c 38 b5 f6 54 81 86 66 c2 66 be 3f  Oy...o.... .b.q...U.,8..T..f.f.?
10019ea0  3c 49 b4 43 ba 5b 85 74 74 82 52 06 4b fd ba 07 3c b2 47 4b 3a cb 76 87 69 3d 42 ba 9f e0 3d 66  <I.C.[.tt.R.K...<.GK:.v.i=B...=f
10019ec0  45 7d 38 78 49 20 51 f5 78 75 41 57 d6 5a 80 4b 13 4f dd aa 6c 35 55 8d 6e 5d 38 1e 2c 61 40 be  E}8xI Q.xuAW.Z.K.O..l5U.n]8.,a@.
10019ee0  3b d9 27 f6 fb 5a b8 57 fb a9 f7 27 55 3c c6 4e 5e 6c c2 7c e8 79 0b 8c 38 94 be 70 44 d7 93 92  ;.'..Z.W...'U<.N^l.|.y..8..pD...
10019f00  db fc ea 7b d2 90 35 41 75 3b f8 31 2e c8 20 b6 f9 90 81 1d b9 4a f0 b9 c8 02 74 43 15 38 c7 de  ...{..5Au;.1.. ......J....tC.8..
10019f20  37 79 05 86 a8 d7 00 34 66 4b f6 f8 83 08 a9 37 78 e5 ef 30 b3 b3 c7 f8 7a b8 20 ce 29 fb 8f 37  7y.....4fK.....7x..0....z. .)..7
10019f40  85 e0 87 c8 f8 f7 41 68 e4 b8 20 41 19 e1 53 05 20 fe 39 aa 98 7c 3b fa 21 e2 e4 02 7a 80 b7 07  ......Ah.. A..S. .9..|;.!...z...
10019f60  49 45 36 9b 05 7d f6 3a ce da 3c 3f 38 be a0 41 f7 99 f2 20 b3 67 3d 29 cd a9 1d 4b 53 dd 71 4b  IE6..}.:..<?8..A... .g=)...KS.qK
10019f80  91 8d 8b 19 56 3f 73 fe f5 44 40 85 33 20 2d 8a 65 be 57 3c 75 ec 7e 63 14 b9 7b c3 45 aa 59 bc  ....V?s..D@.3 -.e.W<u.~c..{.E.Y.
10019fa0  56 c8 4b 13 de 5f b2 8f 35 2d 0b 31 a1 75 aa 38 ab 6b af b1 41 70 93 47 36 1d b2 91 69 7b 61 31  V.K.._..5-.1.u.8.k..Ap.G6...i{a1
10019fc0  3b 8a 04 36 27 21 c9 05 5f 38 a9 fd 2f bf f7 6f 3b 70 08 aa 33 42 0c 51 53 f6 f6 f5 1d 45 36 3b  ;..6'!.._8../..o;p..3B.QS....E6;
10019fe0  cd 4c 9b 82 3d 99 bb f9 8e 49 39 76 04 20 7b 38 65 f3 fb 93 0c a9 fd 7e 49 64 70 65 aa e0 1e 54  .L..=....I9v. {8e......~Idpe...T
1001a000  8d 01 6a 2c 5f ad d6 4b 69 37 38 85 73 c3 21 b8 86 44 32 2d 4c 9b 6e c5 c0 39 ab ef 47 dc 7e 51  ..j,_..Ki78.s.!..D2-L.n..9..G.~Q
1001a020  15 c3 17 b6 87 74 33 8e 32 a3 09 60 1b 1a 5c 1f e8 30 8c 76 a9 85 46 4c 82 93 13 22 02 f9 96 a8  .....t3.2..`..\..0.v..FL..."....
1001a040  d7 15 85 67 78 b2 af a9 28 73 5d 2d 80 f6 62 e5 5c da c0 2e 3d b8 45 37 87 4e 0e 39 34 4b bc 06  ...gx...(s]-..b.\...=.E7.N.94K..
1001a060  b0 0f 16 2f 49 e0 68 d9 72 db ff 62 56 94 55 67 8f c2 f9 70 df 75 6b 67 d5 37 aa d7 8b 18 7c 65  .../I.h.r..bV.Ug...p.ukg.7....|e
1001a080  d7 cf f8 7d d7 43 4a d1 0b f0 86 c6 87 11 5e be 8b 89 25 bf 7d f4 d9 99 16 be b2 a3 21 76 e7 7f  ...}.CJ.......^...%.}.......!v..
1001a0a0  5b 6b c0 60 c2 93 7d fd 9b 61 55 80 01 38 43 7d 39 05 cc 76 b1 29 49 f0 d0 2b 80 80 d4 56 53 86  [k.`..}..aU..8C}9..v.)I..+...VS.
1001a0c0  8c fc 87 c0 3d 3b dd 64 ec 45 21 fd b3 75 47 aa 51 7b ab 99 05 5e a9 ea 8f c5 9c 10 6b 3b f8 50  ....=;.d.E!..uG.Q{...^......k;.P
1001a0e0  33 cf 4a 20 c4 2f e5 ff 71 fc b2 43 18 2e 25 75 3f fe 70 46 aa 3a 20 0f 60 7e 9e 45 44 41 80 d1  3.J ./..q..C..%u?.pF.: .`~.EDA..
1001a100  3c 12 34 15 df c3 6c 6c 7e 75 71 40 19 8f 61 62 19 62 93 f0 0f 00 75 3d 59 91 9d fa 36 d0 fa 6e  <.4...ll~uq@..ab.b....u=Y...6..n
1001a120  27 b7 34 3e 0c 52 62 8f cd 41 78 38 3b a8 83 72 59 86 eb 1d a9 82 3d 78 85 1d 3b 34 b3 56 88 86  '.4>.Rb..Ax8;..rY.....=x..;4.V..
1001a140  ba 8c 03 b0 45 54 af 37 de fa 46 7d c5 bd 20 49 7d 3e af 2d 50 03 12 7d 57 7a 43 97 a2 92 3e 4f  ....ET.7..F}.. I}>.-P..}WzC...>O
1001a160  ab fc c3 19 a8 41 9b 91 7b 80 b8 05 a0 45 c8 c0 99 f9 be 56 e6 24 e3 2b 8e 65 83 07 bc be f5 ba  .....A..{....E.....V.$.+.e......
1001a180  6a 63 48 2f c8 51 b8 a7 3b b2 0f 98 20 45 85 03 46 fe 83 20 83 e6 58 f2 2b df 53 d4 49 37 fc 27  jcH/.Q..;... E..F.. ..X.+.S.I7.'
1001a1a0  07 42 8a 0b ba a3 92 cd 48 3e bf a9 1c 5e 5a bd ed de 48 87 21 83 79 b4 92 9b 83 20 58 43 71 0b  .B......H>...^Z...H.!.y.... XCq.
1001a1c0  3a 76 5a 0d 9f 2d d5 38 cd 82 86 7e 75 54 a4 a0 67 a1 6d 8f 00 43 5b 9d d2 c9 7e fd 37 f0 a0 d1  :vZ..-.8...~uT..g.m..C[...~.7...
1001a1e0  89 6a ee e1 97 b9 20 d7 26 1d 31 28 8c f5 05 be ea a2 7a 65 a4 5e 5f 60 28 a0 39 41 51 b5 db 6b  .j.... .&.1(......ze.^_`(.9AQ..k
1001a200  82 e4 47 76 70 47 9b 20 cf ee a9 d6 a2 55 71 87 4f 75 31 4a e7 35 51 15 40 3c 49 4d c2 b8 1e f6  ..GvpG. .....Uq.Ou1J.5Q.@<IM....
1001a220  36 04 7d fc b1 95 72 5c 6f 49 68 ab 86 85 53 30 62 55 16 64 c2 bf e7 8d 52 53 dd 61 2b 53 43 1c  6.}...r\oIh...S0bU.d....RS.a+SC.
1001a240  39 7a 3c 49 52 8d bd 8e d6 41 19 bf 61 ff dc ae ba 57 da 8e 9a 41 42 af 7f e7 5a da 68 e4 d5 b0  9z<IR....A..a....W...AB...Z.h...
1001a260  b4 d1 de 04 3f 4f f9 5b be 08 ed e0 b5 b6 db 90 6c 4c c2 8b 62 60 c0 69 a9 55 f1 3c 76 a1 a3 a4  ....?O.[........lL..b`.i.U.<v...
1001a280  a5 75 7d 98 a6 9a 9e 96 b4 15 a7 6e 22 47 63 2b ba aa a6 a6 04 89 14 55 e6 f1 9d 71 9a 98 a8 5a  .u}........n"Gc+.......U...q...Z
1001a2a0  03 49 73 99 2d 6a 04 32 23 10 a1 b2 ae a9 6b 14 a3 96 f3 97 ab 9e 76 20 b7 96 f3 81 88 1d 61 fb  .Is.-j.2#.....k.......v ......a.
1001a2c0  79 99 99 6a 6d a1 7c 81 98 97 24 5f 7f b7 61 28 28 07 55 7e 68 aa 8c 5c 96 a4 b8 b8 d0 82 77 e5  y..jm.|...$_..a((.U~h..\......w.
1001a2e0  67 9c a8 c4 68 ad ec 5c 49 1b 15 c4 ac ad 6d ad 7b a0 76 a9 2c a1 68 9b 81 3c 74 a9 7a 85 f5 78  g...h..\I.....m.{.v.,.h..<t.z..x
1001a300  9e 50 f5 d9 ad 9d d9 11 60 04 96 11 a3 44 7c 54 c4 4d 7d a5 99 a9 84 93 a7 d5 89 51 f9 e5 d8 a9  .P......`....D|T.M}........Q....
1001a320  a1 b4 82 8b 5e 75 b1 9e cf c3 c3 cf 98 17 b7 79 5b 3e 76 db 2a be ab c8 3e 57 94 c1 d8 a2 85 c6  ....^u.........y[>v.*...>W......
1001a340  36 20 e0 08 78 71 6e fd 4e e3 7d 7e 65 cd 36 b6 af 05 88 3e 5b 22 d1 da 5d 68 35 59 95 59 b5 e7  6 ..xqn.N.}~e.6....>["..]h5Y.Y..
1001a360  a9 31 b5 b1 c0 10 c0 59 68 35 e8 35 37 35 99 1d a2 fe d9 a8 1d 35 35 2b a8 76 a8 1d 51 90 37 e8  .1.....Yh5.575.......55+.v..Q.7.
1001a380  f5 58 35 35 68 e5 35 35 aa 09 1d 35 84 47 20 df 35 74 45 a8 35 1d f5 2c 35 5d 35 00 35 aa 20 35  .X55h.55...5.G .5tE.5..,5]5.5. 5
1001a3a0  60 35 82 1d 35 e1 45 77 f6 1d 1d fe a9 20 e1 3d 48 15 06 c6 82 61 51 7d b5 3b 35 b2 35 35 a8 3a  `5..5.Ew..... .=H....aQ}.;5.55.:
1001a3c0  35 31 35 a8 72 b8 35 3f 36 60 b4 76 ac ca 2c c0 76 8b 2d fa 37 25 c0 e8 4b f8 d9 37 93 07 07 47  515.r.5?6`.v..,.v.-.7%..K..7...G
1001a3e0  c3 7b 28 3a 20 68 aa bf 1c a7 76 34 1d 34 34 34 34 34 fe fe                                      .{(: h....v4.44444..

1001a3f4  int32_t __convention("regparm") sub_1001a3f4(int32_t arg1, int32_t* arg2, void* arg3 @ ebp, int32_t arg4 @ esi, int32_t* arg5 @ edi)

   0 @ 1001a3f4  temp1.d = esp {__return_addr}
   1 @ 1001a3f4  temp2.d = [edi].d
   2 @ 1001a3f4  esp = esp & [edi].d
   3 @ 1001a3f4  flag:c = 0
   4 @ 1001a3f6  eax = eax - 1
   5 @ 1001a3f7  eax = sbb.d(eax, -0x419fca09, flag:c)
   6 @ 1001a3fc  cl = 0xb1
   7 @ 1001a3fe  eax = eax ^ 0xf8415d35
   8 @ 1001a403  push(ecx)
   9 @ 1001a404  ecx = pop
  10 @ 1001a405  eax = eax ^ 0x38359659
  11 @ 1001a40a  cl - [ebx + 0x38 {0x38}].b
  12 @ 1001a40d  eax = eax ^ 0x3579e745
  13 @ 1001a412  [ebp + 0x35].d = [ebp + 0x35].d | edi
  14 @ 1001a415  eax = eax ^ 0x38753e35
  15 @ 1001a41a  bh - [edx].b
  16 @ 1001a41c  [eax].b - bh
  17 @ 1001a41e  dl - [ebp + 0x61].b
  18 @ 1001a421  eax = eax ^ 0x3535355d
  19 @ 1001a426  eax = eax ^ 0x3a45bd35
  20 @ 1001a42b  [esi + 0x59d3ed47].b - dh
  21 @ 1001a433  eax = eax & 0xc277be35
  22 @ 1001a438  al, ah, eflags = __aaa(al, ah, eflags)
  23 @ 1001a439  dh - [esi].b
  24 @ 1001a43b  0
  25 @ 1001a43d  temp3.b = bh
  26 @ 1001a43d  bh = bh << 0xb8
  27 @ 1001a43d  flag:c = unimplemented
  28 @ 1001a43d  flag:z = temp3.b << 0xb8 == 0
  29 @ 1001a440  ecx = pop
  30 @ 1001a441  push(zx.d(ds))
  31 @ 1001a442  if (flag:z || flag:c) then 32 @ 0x1001a485 else 42 @ 0x1001a444

  32 @ 1001a485  eax = eax - -0x3fc23fc8
  33 @ 1001a48a  temp0.d = [eax - 0x40].d
  34 @ 1001a48a  [eax - 0x40].d = edi
  35 @ 1001a48a  edi = temp0.d
  36 @ 1001a48d  push(ebp)
  37 @ 1001a48e  push(ebp)
  38 @ 1001a48f  al = al - 0x42
  39 @ 1001a492  edi & esi
  40 @ 1001a494  push(-0x3f3fc788)
  41 @ 1001a499  undefined

  42 @ 1001a444  [eax - 0x79].d = esp
  43 @ 1001a447  eflags = __sti(eflags)
  44 @ 1001a448  edi = [edx].d * -0x7800a42
  45 @ 1001a44e  ebx, es = __les_gprz_memp([ecx - 0x5200b898].6)
  46 @ 1001a454  [-0xffffffff8c8b8bed].d = [-0xffffffff8c8b8bed].d ^ esi
  47 @ 1001a45a  eax = eax ^ 0xcd8a3539
  48 @ 1001a45f  temp0.d = pop
  49 @ 1001a45f  esp = esp + 0x87f9
  50 @ 1001a45f  <return> jump(temp0.d)


1001a462  int32_t __convention("regparm") sub_1001a462(int32_t arg1, int16_t arg2, void* arg3 @ ebp, void* arg4 @ esi, void* arg5 @ edi)

   0 @ 1001a462  eax = eax ^ 0x8847b886
   1 @ 1001a467  [ebp - 0x3f78bacb].w = ds
   2 @ 1001a46d  temp1.b = [0x35354d45].b
   3 @ 1001a46d  [0x35354d45].b = [0x35354d45].b << 0x9f
   4 @ 1001a46d  flag:c = unimplemented
   5 @ 1001a474  [ebx + 0x39c03675 {0x39c03675}].b = dh
   6 @ 1001a47b  [edi - 0x3ffa70bb].b = sbb.b([edi - 0x3ffa70bb].b, 0x34, flag:c)
   7 @ 1001a482  al & 0xff
   8 @ 1001a484  eax = eax ^ 0x3dc0382d
   9 @ 1001a489  [edi + 0x5555c078].b = rol.b([edi + 0x5555c078].b, 0x80)
  10 @ 1001a490  [esi + 0x7868f785].b = [esi + 0x7868f785].b s>> 0x38
  11 @ 1001a497  al = rol.b(al, 0xff)
  12 @ 1001a49a  [esi + 0x413880f7].b - bh
  13 @ 1001a4a0  eax - -0x3fc7ae80
  14 @ 1001a4a5  temp0.d = pop
  15 @ 1001a4a5  esp = esp + 0x2751
  16 @ 1001a4a5  <return> jump(temp0.d)

1001a4a8                          78 87 51 34 85 06 2d c0 8b 3d 78 8d 8c c0 8f 38 8b 41 c0 f5 7b 39 80 c0          x.Q4..-..=x....8.A..{9..
1001a4c0  b8 3d 25 25 31 be 60 be c0 49 49 ba 34 74 80 c0 be 25 83 35 0c 8f 48 45 35 c0 41 35 38 b5 46 34  .=%%1.`..II.4t...%.5..HE5.A58.F4
1001a4e0  9d 8c 20 35 ff fb 35 9f 35 35 93 92 94 34 35 35 90 35 8f 35 8e 35 15 35 35 35 35 35 35 35 35 35  .. 5..5.55...455.5.5.5.555555555
1001a500  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a520  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a540  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a560  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a580  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a5a0  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a5c0  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a5e0  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a600  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a620  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a640  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a660  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a680  35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35  55555555555555555555555555555555
1001a6a0  35 35 35 35 35 35 35 35 ff 03 20 ff 03 ff 20 3c ff ff a3 ff 00 00 ff ff ff                       55555555.. ... <.........

1001a6b9  int32_t __convention("regparm") sub_1001a6b9(int32_t arg1)

   0 @ 1001a6b9  jump([eax].d)

1001a6bb                                                                                   20 03 03 ff ff                              ....
1001a6c0  c7 ff 57 ff 00 ff 00 ff 00 00 20 20 03 03 00 00 7b 00 49 00 00 00 00 00 00 72 00 00 00 00 65 4b  ..W.......  ....{.I......r....eK
1001a6e0  00 00 00 00 00 6e 00 00 53 54 6c 64 33 6c 52 43 2e 56 65 00 32 2e 6c 4d 00 00 6c 00 6c 00 03 20  .....n..STld3lRC.Ve.2.lM..l.l.. 
1001a700  00 f8 64 20 00 07 e7 03 00 00 03 03 00 00 03 21 21 34 21 21 15 43 26 03 00 00 03 03 00 00 03 21  ..d ...........!!4!!.C&........!
1001a720  21 5e 21 00 54 6d 00 00 00 00 03 03 00 00 03 21 21 9c 21 21 7c af 89 03 00 00 03 03 00 00 00 00  !^!.Tm.........!!.!!|...........
1001a740  21 00 21 00 bb 00 00 00 00 00 00 03 00 00 03 21 20 07 00 20 e7 15 f8 03 00 00 03 03 00 00 03 21  !.!............! .. ...........!
1001a760  21 43 21 21 26 54 34 03 00 00 03 00 00 00 03 21 00 6d 21 21 00 7c 5e 03 00 00 03 03 00 00 03 21  !C!!&T4........!.m!!.|^........!
1001a780  21 af 21 21 89 bb 9c 03 65 6f 03 00 00 00 72 50 00 74 21 00 00 63 ca 47 4c 4c 64 73 64 73 64 61  !.!!....eo....rP.t!..c.GLLdsdsda
1001a7a0  65 6f 41 6b 72 69 00 00 72 65 72 41 61 00 74 61 79 65 62 00 72 46 c0 43 74 50 6c 30 65 00 6c 61  eoAkri..rerAa.tayeb.rF.CtPl0e.la
1001a7c0  00 75 69 69 41 72 56 72 6f 41 74 00 65 40 6c 61 74 62 6f 47 63 6c 00 6c 75 6c 6f 00 63 56 41 6c  .uiiArVroAt.e@latboGcl.lulo.cVAl
1001a7e0  64 61 6c 72 00 6c 69 74 74 72 63 47 00 65 6f 46 00 65 6f 44 d0 6d 74 61 70 97 74 00 41 53 00 78  dalr.littrcG.eoF.eoD.mtap.t.AS.x
1001a800  d6 45 61 65 00 00 6c 65 64 00 5f 63 70 6f 08 00 5f 65 5f 6d 5f 5f 6d 6f 76 5f 64 74 6a 5f 00 30  .Eae..led._cpo.._e_m__mov_dtj_.0
1001a820  73 00 61 64 75 5f 66 69 00 65 5f 6f 5f 64 73 5f 6d 5f 70 00 66 74 65 bf 72 5f 73 61 65 74 00 7f  s.adu_fi.e_o_ds_m_p.fte.r_saet..
1001a840  6d 00 75 65 72 65 68 72 6c 00 63 5f 65 68 33 72 74 65 78 6e 70 62 61 64 00 5f 5f 74 69 74 5f 00  m.uerehrl.c_eh3rtexnpbad.__tit_.
1001a860  69 f3 00 72 6e 73 65 6d 65 00 74 70 5f 5f 00 00 70 00 65 79 61 00 74 70 00 00 00 00 00 00 00 00  i..rnseme.tp__..p.eya.tp........
1001a880  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 ff 00 00 00  ................................
1001a8a0  00 00 ff 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001a8c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001a8e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001a900  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001a920  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001a940  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001a960  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001a980  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001a9a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001a9c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001a9e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001aa00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001aa20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001aa40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001aa60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001aa80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001aaa0  00 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f0  ................................
1001aac0  38 00 01 02 00 80 80 00 00 00 00 01 00 00 02 00 88 00 04 09 00 80 80 00 00 00 00 02 00 00 00 00  8...............................
1001aae0  20 00 0c 00 00 00 80 00 00 00 00 00 00 15 02 d0 00 00 00 01 00 80 00 00 00 00 00 02 00 00 03 00   ...............................
1001ab00  e8 00 02 03 00 80 80 00 00 00 00 03 00 00 03 30 18 00 04 05 00 80 80 00 00 00 00 03 00 00 03 60  ...............0...............`
1001ab20  48 00 06 07 00 80 80 00 00 00 00 03 00 00 03 90 78 00 08 09 00 80 80 00 00 00 00 03 00 00 03 c0  H...............x...............
1001ab40  a8 00 0a 0b 00 80 80 00 00 00 00 03 00 00 03 f0 d8 00 0c 0d 00 80 80 00 00 00 00 04 00 00 04 20  ............................... 
1001ab60  08 00 0e 0f 00 80 80 00 00 00 00 04 00 00 04 50 38 00 10 11 00 80 80 00 00 00 00 04 00 00 04 80  ...............P8...............
1001ab80  68 00 12 13 00 80 80 00 00 00 00 04 00 00 04 b0 98 00 14 15 00 80 80 00 00 11 00 00 00 00 00 00  h...............................
1001aba0  00 00 00 00 00 00 00 00 00 00 00 04 00 00 04 e0 c8 00 8d 93 00 80 80 00 00 00 50 04 00 00 05 10  ..........................P.....
1001abc0  f8 00 2c 2d 00 80 80 50 00 00 50 05 00 00 05 40 28 00 d6 e1 00 80 80 52 00 00 52 05 00 00 05 70  ..,-...P..P....@(......R..R....p
1001abe0  58 00 e2 d8 00 80 80 59 00 00 59 05 00 00 05 a0 88 00 d9 88 00 80 80 67 00 00 67 05 00 00 05 d0  X......Y..Y............g..g.....
1001ac00  b8 00 8a 8c 00 80 80 67 00 00 67 05 00 00 06 00 e8 00 8e 90 00 80 80 67 00 00 67 06 00 00 06 30  .......g..g............g..g....0
1001ac20  18 00 92 93 00 80 80 67 00 00 67 06 00 00 00 00 48 00 94 00 00 00 80 00 00 00 00 00 00 0d 06 60  .......g..g.....H..............`
1001ac40  00 00 00 cc 00 80 00 00 00 00 00 06 00 00 00 00 78 00 d2 d7 00 00 80 00 00 00 00 06 00 00 06 c0  ................x...............
1001ac60  a8 00 d8 d9 00 80 80 00 00 00 01 06 00 00 06 f0 d8 00 0d 38 00 80 80 01 00 00 01 07 00 00 07 20  ...................8........... 
1001ac80  08 00 3a 3b 00 80 80 01 00 00 50 07 00 00 07 50 38 00 8c d8 00 80 80 52 00 00 52 07 00 00 07 80  ..:;......P....P8......R..R.....
1001aca0  68 00 df e0 00 80 80 52 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07 00 00 07 b0  h......R........................
1001acc0  98 00 cb cc 00 80 80 00 00 13 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 57 07 00 00 07 e0  ..........................W.....
1001ace0  c8 00 20 9a 80 80 80 00 00 00 00 07 00 00 08 10 f8 00 9c 9e 00 80 80 00 00 00 00 08 00 00 08 40  .. ............................@
1001ad00  28 00 b7 d6 00 80 80 00 00 00 00 08 00 00 08 70 58 00 d7 37 00 80 80 01 00 00 01 08 00 00 08 a0  (..............pX..7............
1001ad20  88 00 39 3b 00 80 80 01 00 00 03 08 00 00 08 d0 b8 00 09 0a 00 80 80 03 00 00 03 08 00 00 09 00  ..9;............................
1001ad40  e8 00 0b 0c 00 80 80 03 00 00 03 09 00 00 09 30 18 00 0d 45 00 80 80 03 00 00 03 09 00 00 09 60  ...............0...E...........`
1001ad60  48 00 46 7c 00 80 80 05 00 00 05 09 00 00 09 90 78 00 7d 7e 00 80 80 05 00 01 00 00 00 00 00 00  H.F|............x.}~............
1001ad80  00 00 00 00 00 00 00 00 00 00 00 09 00 00 00 00 a8 00 00 00 00 00 00 00 00 00 00 00 00 01 09 b8  ................................
1001ada0  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 09 00 00 00 00  ................................
1001adc0  c8 00 09 00 00 00 00 00 00 00 00 00 00 01 09 d8 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001ade0  00 00 00 00 00 00 00 00 00 00 04 09 00 00 00 00 e8 00 09 00 00 00 00 00 00 00 00 00 00 01 09 f8  ................................
1001ae00  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0a 00 00 00 00  ................................
1001ae20  08 00 09 00 00 00 00 00 00 00 00 00 00 01 0a 18 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001ae40  00 00 00 00 00 00 00 00 00 00 04 0a 00 00 00 00 28 00 09 00 00 00 00 00 00 00 00 00 00 01 0a 38  ................(..............8
1001ae60  00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0a 00 00 00 00  ................................
1001ae80  48 00 00 00 00 00 00 00 00 00 00 00 00 01 0a 58 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  H..............X................
1001aea0  00 00 00 00 00 00 00 00 00 00 00 0a 00 00 00 00 68 00 00 00 00 00 00 00 00 00 00 00 00 01 0a 78  ................h..............x
1001aec0  00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0a 00 00 00 00  ................................
1001aee0  88 00 09 00 00 00 00 00 00 00 00 00 00 01 0a 98 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001af00  00 00 00 00 00 00 00 00 00 00 04 0a 00 00 00 00 a8 00 09 00 00 00 00 00 00 00 00 00 00 01 0a b8  ................................
1001af20  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0a 00 00 00 00  ................................
1001af40  c8 00 09 00 00 00 00 00 00 00 00 00 00 01 0a d8 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001af60  00 00 00 00 00 00 00 00 00 00 04 0a 00 00 00 00 e8 00 09 00 00 00 00 00 00 00 00 00 00 01 0a f8  ................................
1001af80  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0b 00 00 00 00  ................................
1001afa0  08 00 09 00 00 00 00 00 00 00 00 00 00 01 0b 18 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001afc0  00 00 00 00 00 00 00 00 00 00 04 0b 00 00 00 00 28 00 09 00 00 00 00 00 00 00 00 00 00 01 0b 38  ................(..............8
1001afe0  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0b 00 00 00 00  ................................
1001b000  48 00 09 00 00 00 00 00 00 00 00 00 00 01 0b 58 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  H..............X................
1001b020  00 00 00 00 00 00 00 00 00 00 04 0b 00 00 00 00 68 00 09 00 00 00 00 00 00 00 00 00 00 01 0b 78  ................h..............x
1001b040  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0b 00 00 00 00  ................................
1001b060  88 00 09 00 00 00 00 00 00 00 00 00 00 01 0b 98 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001b080  00 00 00 00 00 00 00 00 00 00 04 0b 00 00 00 00 a8 00 09 00 00 00 00 00 00 00 00 00 00 01 0b b8  ................................
1001b0a0  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0b 00 00 00 00  ................................
1001b0c0  c8 00 09 00 00 00 00 00 00 00 00 00 00 01 0b d8 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001b0e0  00 00 00 00 00 00 00 00 00 00 04 0b 00 00 00 00 e8 00 09 00 00 00 00 00 00 00 00 00 00 01 0b f8  ................................
1001b100  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0c 00 00 00 00  ................................
1001b120  08 00 09 00 00 00 00 00 00 00 00 00 00 01 0c 18 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001b140  00 00 00 00 00 00 00 00 00 00 04 0c 00 00 00 00 28 00 09 00 00 00 00 00 00 00 00 00 00 01 0c 38  ................(..............8
1001b160  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0c 00 00 00 00  ................................
1001b180  48 00 09 00 00 00 00 00 00 00 00 00 00 01 0c 58 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  H..............X................
1001b1a0  00 00 00 00 00 00 00 00 00 00 04 0c 00 00 00 00 68 00 09 00 00 00 00 00 00 00 00 00 00 01 0c 78  ................h..............x
1001b1c0  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0c 00 00 00 00  ................................
1001b1e0  88 00 09 00 00 00 00 00 00 00 00 00 00 01 0c 98 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001b200  00 00 00 00 00 00 00 00 00 00 04 0c 00 00 00 00 a8 00 09 00 00 00 00 00 00 00 00 00 00 01 0c b8  ................................
1001b220  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0c 00 00 00 00  ................................
1001b240  c8 00 09 00 00 00 00 00 00 00 00 00 00 01 0c d8 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................................
1001b260  00 00 00 00 00 00 00 00 00 00 04 0c 00 00 00 00 e8 00 09 00 00 00 00 00 00 00 00 00 00 01 0c f8  ................................
1001b280  00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0d 00 00 00 00  ................................
1001b2a0  08 00 09 00 00 00 00 00 00 00 00 00 00 01 0d 18 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001b2c0  00 00 00 00 00 00 00 00 00 00 04 0d 00 00 00 00 28 00 09 00 00 00 00 00 00 00 00 00 00 01 0d 38  ................(..............8
1001b2e0  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0d 00 00 00 00  ................................
1001b300  48 00 09 00 00 00 00 00 00 00 00 00 00 01 0d 58 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  H..............X................
1001b320  00 00 00 00 00 00 00 00 00 00 04 0d 00 00 00 00 68 00 09 00 00 00 00 00 00 00 00 00 00 01 0d 78  ................h..............x
1001b340  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0d 00 00 00 00  ................................
1001b360  88 00 09 00 00 00 00 00 00 00 00 00 00 01 0d 98 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................................
1001b380  00 00 00 00 00 00 00 00 00 00 00 0d 00 00 00 00 a8 00 00 00 00 00 00 00 00 00 00 00 00 01 0d b8  ................................
1001b3a0  00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0d 00 00 00 00  ................................
1001b3c0  c8 00 00 00 00 00 00 00 00 00 00 00 00 01 0d d8 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................................
1001b3e0  00 00 00 00 00 00 00 00 00 00 04 0d 00 00 00 00 e8 00 09 00 00 00 00 00 00 00 00 00 00 01 0d f8  ................................
1001b400  00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0e 00 00 00 00  ................................
1001b420  08 00 09 00 00 00 00 00 00 00 00 00 00 01 0e 18 00 00 00 09 00 00 00 04 00 01 00 00 00 00 00 00  ................................
1001b440  00 00 00 00 00 00 00 00 03 00 04 0e 00 00 01 34 28 00 09 38 00 00 00 3e 03 00 00 00 00 00 02 ec  ...............4(..8...>........
1001b460  00 00 00 6c 00 00 00 3f 03 00 00 00 00 00 02 ec 00 00 00 58 00 00 00 42 03 00 00 00 00 00 02 ec  ...l...?...........X...B........
1001b480  00 00 00 44 00 00 00 45 03 00 00 00 00 00 01 34 00 00 00 30 00 00 00 48 03 00 00 00 00 00 01 34  ...D...E.......4...0...H.......4
1001b4a0  00 00 00 64 00 00 00 49 03 00 00 00 00 00 01 34 00 00 00 98 00 00 00 4a 03 00 00 00 00 00 01 34  ...d...I.......4.......J.......4
1001b4c0  00 00 00 cc 00 00 00 4b 03 00 00 00 00 00 02 ec 00 00 00 00 00 00 00 4d 03 00 00 00 00 00 01 34  .......K...............M.......4
1001b4e0  00 00 00 ec 00 00 00 4f 03 00 00 00 00 00 01 34 00 00 00 20 00 00 00 51 03 00 00 00 00 00 01 34  .......O.......4... ...Q.......4
1001b500  00 00 00 54 00 00 00 52 03 00 00 00 00 00 01 34 00 00 00 88 00 00 00 53 03 00 00 00 00 00 01 34  ...T...R.......4.......S.......4
1001b520  00 00 00 bc 00 00 00 54 03 00 00 00 00 00 01 34 00 00 00 f0 00 00 00 55 03 00 00 00 00 00 01 34  .......T.......4.......U.......4
1001b540  00 00 00 24 00 00 00 57 03 00 00 00 00 00 01 34 00 00 00 58 00 00 00 58 03 00 00 00 00 00 01 34  ...$...W.......4...X...X.......4
1001b560  00 00 00 8c 00 00 00 59 03 00 00 00 00 00 01 34 00 00 00 c0 00 00 00 5a 03 00 00 00 00 00 01 34  .......Y.......4.......Z.......4
1001b580  00 00 00 f4 00 00 00 5b 03 00 00 00 00 00 01 34 00 00 00 28 00 00 00 5d 03 00 00 00 00 00 03 28  .......[.......4...(...].......(
1001b5a0  00 00 00 5c 00 00 00 5e 03 00 00 00 00 00 00 e0 00 00 00 84 00 00 00 61 03 00 04 00 00 00 00 e0  ...\...^...............a........
1001b5c0  00 00 e4 64 00 00 00 62 03 00 04 00 00 00 00 e0 00 00 e4 44 00 00 00 63 03 00 04 00 00 00 00 e0  ...d...b...........D...c........
1001b5e0  00 00 e4 24 00 00 00 64 03 00 04 00 00 00 01 58 00 00 e4 04 00 00 00 65 03 00 04 00 00 00 00 e0  ...$...d.......X.......e........
1001b600  00 00 e4 5c 00 00 00 66 03 00 04 00 00 00 00 78 00 00 e4 3c 00 00 00 67 03 00 04 00 00 00 00 84  ...\...f.......x...<...g........
1001b620  00 00 e4 b4 00 00 00 67 03 00 04 00 00 00 00 e0 00 00 e4 38 00 00 00 68 03 00 04 00 00 00 00 e0  .......g...........8...h........
1001b640  00 00 e4 18 00 00 00 69 03 00 04 00 00 00 00 e0 00 00 e4 f8 00 00 00 69 03 00 04 00 00 00 00 e0  .......i...............i........
1001b660  00 00 e4 d8 00 00 00 6a 03 00 04 00 00 00 02 68 00 00 e4 b8 00 00 00 6b 03 00 04 00 00 00 02 98  .......j.......h.......k........
1001b680  00 00 e4 20 00 00 00 6e 03 00 04 00 00 00 00 94 00 00 e4 b8 00 00 00 70 03 00 04 00 00 00 00 b0  ... ...n...............p........
1001b6a0  00 00 e4 4c 00 00 00 71 03 00 04 00 00 00 03 6c 00 00 e4 fc 00 00 00 71 03 00 04 00 00 00 01 b2  ...L...q.......l.......q........
1001b6c0  00 00 e4 68 00 00 00 75 03 00 04 00 00 00 02 94 00 00 e4 1c 00 00 00 77 03 00 04 00 00 00 03 30  ...h...u...............w.......0
1001b6e0  00 00 e4 b0 00 00 00 79 03 00 04 00 00 00 01 f0 00 00 e4 e0 00 00 00 7c 03 00 04 00 00 00 02 a8  .......y...............|........
1001b700  00 00 e4 d0 00 00 00 7e 03 00 04 00 00 00 01 78 00 00 e4 78 00 00 00 81 03 00 04 00 00 00 01 94  .......~.......x...x............
1001b720  00 00 e4 f0 00 00 00 82 03 00 04 00 00 00 00 7a 00 00 e4 84 00 00 00 84 03 00 04 00 00 00 00 5e  ...............z...............^
1001b740  00 00 e4 00 00 00 00 85 03 00 04 00 00 00 00 8e 00 00 e4 60 00 00 00 85 03 00 04 00 00 00 00 c8  ...................`............
1001b760  00 00 e4 f0 00 00 00 85 03 00 04 00 00 00 00 56 00 00 e4 b8 00 00 00 86 03 00 04 00 00 00 00 08  ...............V................
1001b780  00 00 e4 10 00 00 00 87 03 00 04 00 00 00 00 08 00 00 e4 18 00 00 00 87 03 00 04 00 00 00 00 14  ................................
1001b7a0  00 00 e4 28 00 00 00 87 03 00 00 00 00 00 00 14 00 00 00 3c 00 00 00 87 03 00 00 00 00 00 00 14  ...(...............<............
1001b7c0  00 00 00 50 00 00 00 87 03 00 00 00 00 00 00 14 00 00 00 64 00 00 00 87 03 00 00 00 00 00 00 14  ...P...............d............
1001b7e0  00 00 00 78 00 00 00 87 03 00 00 00 00 00 00 14 00 00 00 8c 00 00 00 87 03 00 00 00 00 00 00 22  ...x..........................."
1001b800  00 00 00 a0 00 00 00 87 03 00 00 00 00 00 00 14 00 00 00 c4 00 00 00 87 03 00 00 00 00 00 00 14  ................................
1001b820  00 00 00 d8 00 00 00 87 03 00 00 00 00 00 00 14 00 00 00 ec 00 00 00 87 03 00 00 00 00 00 00 14  ................................
1001b840  00 00 00 00 00 00 00 88 03 00 00 00 00 00 00 14 00 00 00 14 00 00 00 88 03 00 00 00 00 00 00 14  ................................
1001b860  00 00 00 28 00 00 00 88 03 00 00 00 00 00 00 14 00 00 00 3c 00 00 00 88 03 00 00 00 00 00 00 14  ...(...............<............
1001b880  00 00 00 50 00 00 00 88 03 00 00 00 00 00 00 14 00 00 00 64 00 00 00 88 03 00 00 00 00 00 00 14  ...P...............d............
1001b8a0  00 00 00 78 00 00 00 88 03 00 00 00 00 00 00 14 00 00 00 8c 00 00 00 88 03 00 00 00 00 00 00 14  ...x............................
1001b8c0  00 00 00 a0 00 00 00 88 03 00 00 00 00 00 00 14 00 00 00 b4 00 00 00 88 0a 00 00 00 00 00 00 28  ...............................(
1001b8e0  00 00 00 0a 00 00 00 00 01 00 00 00 00 00 00 00 40 00 20 01 00 00 00 00 00 00 02 00 00 00 00 00  ................@. .............
1001b900  00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00  ................................
1001b920  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00  .............................. .
1001b940  00 00 00 00 00 00 00 00 00 00 70 f8 00 00 20 00 00 00 00 00 00 00 00 20 40 60 20 20 00 00 70 30  ..........p... ........ @`  ..p0
1001b960  00 00 00 10 00 00 00 20 40 00 ff 70 f0 60 20 00 30 00 7f 10 00 00 00 20 00 00 20 20 00 00 f8 00  ....... @..p.` .0...... ..  ....
1001b980  00 00 00 00 00 00 00 20 00 ff 70 20 00 00 ff ff 00 00 00 00 00 ff 00 00 ff ff ff ff ff ff ff ff  ....... ..p ....................
1001b9a0  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 8f ff  ................................
1001b9c0  ff ff ff ff ff ff ff df ff ff 07 03 ff ff 8f ff fe ff ff fe ff ff ff 03 1f 0f 8f 8f ff 3f 00 80  .............................?..
1001b9e0  e7 ff ff c7 ff ff ff 8f 1f 3f 00 00 07 0f 8f e7 80 ff 00 c7 ff ff ff 8f ff ff 8f 8f ff ff 03 fe  .........?......................
1001ba00  ff ff ff fe ff ff ff 03 ff 0b 07 8f ff ff 00 0c ff ff ff ff ff 00 ff df 00 04 00 00 00 00 00 01  ................................
1001ba20  20 00 28 40 00 00 00 00 00 00 00 02 00 00 00 00 80 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00   .(@............................
1001ba40  00 00 10 00 00 00 00 00 00 80 80 80 00 80 00 80 00 00 00 80 00 00 00 00 80 ff 80 c0 00 c0 00 00  ................................
1001ba60  c0 00 80 80 00 00 00 80 00 ff ff ff 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 ff ff 00 ff 00 00  ................................
1001ba80  ff 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001baa0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0f 00 f0 00 00 00  ................................
1001bac0  00 00 00 00 00 00 00 00 00 00 0f 00 f0 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 00  ................................
1001bae0  00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0f f0 00 00 00 00 00  ................................
1001bb00  00 00 0f 00 00 00 00 00 00 0f f0 00 00 00 00 00 00 00 0f 00 00 f0 00 00 00 0f 00 00 00 00 00 00  ................................
1001bb20  00 00 ff 00 00 ff 00 00 00 0f 00 00 00 00 00 00 00 00 ff 00 00 ff 00 00 00 0f ff 00 f0 00 00 00  ................................
1001bb40  00 00 ff 00 00 ff 00 00 07 0f ff 00 00 00 77 77 00 77 ff 00 00 ff 00 00 0f 0f f0 00 00 00 ff ff  ..............ww.w..............
1001bb60  00 ff ff 00 00 ff 00 00 0f 0f 00 00 00 00 ff ff 00 ff ff 00 00 ff 00 00 0f 0f 00 00 00 00 88 88  ................................
1001bb80  00 f8 f0 00 00 ff 00 00 0f 0f 00 00 00 00 ff ff 00 ff 07 00 00 f0 00 00 0f 0f 00 00 00 00 88 88  ................................
1001bba0  00 f8 f7 00 00 0f 00 00 0f 00 00 00 00 00 ff ff 00 ff f7 00 00 ff 00 00 0f 08 00 00 00 00 88 88  ................................
1001bbc0  00 f8 f7 00 00 8f 00 00 0f ff 00 00 00 00 ff ff 00 ff f7 00 00 ff 00 00 0f 88 00 00 00 00 88 88  ................................
1001bbe0  00 f8 f7 00 00 8f 00 00 0f ff 00 00 00 00 ff ff 00 ff f7 00 00 ff 00 00 0f 88 00 00 00 00 88 88  ................................
1001bc00  00 f8 f7 00 00 8f 00 00 0f ff 00 00 00 00 ff ff 00 ff f7 00 00 ff 00 00 0f ff 00 00 00 00 ff ff  ................................
1001bc20  00 ff f7 00 00 00 00 00 0f ff 00 00 00 00 ff ff 00 ff 00 00 00 0f 00 00 0f ff 00 00 00 00 ff ff  ................................
1001bc40  00 ff f0 00 00 0f 00 00 0f ff 00 00 00 00 ff ff 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001bc60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff 00 00 00 00 ff ff  ................................
1001bc80  00 ff 00 ff 00 ff 00 ff c3 87 ff ff e7 c3 ff ff ff ff ff ff ff ff ff ff 0f 1f f7 f3 87 0f f0 ff  ................................
1001bca0  ff ff ff ff ff ff ff f1 07 0f f0 f0 01 03 00 f0 ff ff ff f0 ff ff ff 00 1f 1f 00 00 1f 1f 00 f0  ................................
1001bcc0  f0 ff f0 f0 ff ff ff 00 1f 1f 00 00 1f 1f 00 f0 f0 ff f0 f0 ff ff ff 00 1f 1f 00 00 1f 1f 00 f0  ................................
1001bce0  f0 ff f0 f0 ff ff ff 00 7f ff 00 00 1f 3f 00 f0 f0 ff f0 f0 ff ff ff 00 0b 00 01 ff ff ff 00 28  .............?.................(
1001bd00  ff 00 f0 13 ff 00 ff 00 04 00 00 00 00 00 00 00 40 00 20 01 00 00 00 00 00 00 02 00 00 00 00 10  ................@. .............
1001bd20  00 00 80 00 00 00 00 00 80 00 00 00 00 00 80 00 00 00 00 00 00 00 00 00 80 00 80 00 80 00 80 80  ................................
1001bd40  80 00 00 80 00 00 00 00 ff 00 c0 80 c0 80 ff 00 80 00 c0 00 00 00 00 00 ff 00 ff 00 ff 00 ff ff  ................................
1001bd60  ff 00 00 ff 00 00 00 00 00 00 ff 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001bd80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001bda0  00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 00  ................................
1001bdc0  00 00 00 00 00 00 00 00 00 00 f0 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 00 f0 00 00 00 00 00  ................................
1001bde0  00 00 0f 00 00 00 00 00 00 f0 00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00  ................................
1001be00  00 00 ff 00 00 0f 00 00 00 ff 00 00 00 00 00 00 00 00 f0 ff 00 ff 0f ff 00 ff 00 00 00 0f 00 00  ................................
1001be20  00 00 f0 ff 00 ff ff f0 0f ff ff 00 00 0f 00 00 00 00 ff ff 00 ff ff 00 ff ff f0 00 00 ff 70 f7  ..............................p.
1001be40  00 00 ff f0 00 ff ff 00 ff ff 00 00 00 ff f0 ff 00 00 ff 00 00 ff ff 0f ff ff 00 00 00 ff f0 ff  ................................
1001be60  00 00 f0 00 00 ff f0 ff ff ff 00 00 00 ff 80 f8 00 00 00 0f 00 f0 00 ff f0 ff 00 00 00 f0 f0 ff  ................................
1001be80  00 00 70 ff 00 0f 00 ff f0 f0 00 00 00 00 80 88 00 0f 70 ff 00 ff 0f ff 00 0f 00 00 00 00 f0 ff  ..p...............p.............
1001bea0  00 0f 70 ff 00 ff ff f0 00 88 00 00 00 00 80 88 00 f8 70 00 00 ff 00 00 ff ff 00 00 00 00 ff ff  ..p...............p.............
1001bec0  00 ff 70 00 00 ff 00 00 ff 88 00 00 00 00 88 88 00 88 70 00 00 ff 00 00 ff ff 00 00 00 00 ff ff  ..p...............p.............
1001bee0  00 ff 70 00 00 ff 00 00 ff 88 00 00 00 00 88 88 00 88 70 00 00 ff 00 00 ff ff 00 00 00 00 ff ff  ..p...............p.............
1001bf00  00 ff 70 00 00 ff 00 00 ff f0 00 00 00 00 ff ff 00 ff 70 00 00 00 00 00 ff f0 00 00 00 00 ff ff  ..p...............p.............
1001bf20  00 ff 00 00 00 ff 00 00 ff f0 00 00 00 00 ff ff 00 ff 00 00 00 f0 00 00 ff f0 00 00 00 00 ff ff  ................................
1001bf40  00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001bf60  00 00 00 00 00 00 00 00 ff ff 00 ff 00 ff ff ff ff ff 00 ff 00 cf ff ff ff ef ff ff ff ff ff ff  ................................
1001bf80  ff 0f ff ff 87 0f 87 ff e0 e0 ff 0f e6 e2 01 e0 fc 3f ff f0 1f 03 1f 03 00 00 01 00 e0 80 00 c0  .................?..............
1001bfa0  c0 1f e0 c0 07 3f 0f 00 00 00 00 00 00 00 00 e0 c0 3f c0 c0 3f 3f 3f 00 00 00 00 00 00 00 f0 ff  .....?...........?..???.........
1001bfc0  f0 3f e0 fc 3f 3f 3f 00 00 00 e0 e0 00 00 e0 ff ff 3f ff ff 3f 3f 3f e0 01 03 e0 e0 00 00 e0 ff  .?..???..........?..???.........
1001bfe0  ff ff ff ff 7f ff ff e0 00 00 ff 00 ff 0b 00 20 0c 00 ff 28 ff 00 00 00 00 00 00 00 00 04 02 80  ............... ...(............
1001c000  01 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00 00 80 00 00 00 80 80 00  ..@.............................
1001c020  00 00 00 00 00 00 00 80 00 c0 00 00 00 80 c0 c0 80 00 80 80 00 00 00 80 00 ff 80 00 80 ff ff 00  ................................
1001c040  00 00 80 00 00 00 00 ff 00 ff 00 00 00 ff ff ff ff 00 ff ff 00 00 00 ff 00 00 00 00 00 00 00 00  ................................
1001c060  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 ff ff  ................................
1001c080  00 00 00 00 00 f0 00 00 f0 ff 00 00 00 00 f0 ff 00 00 00 00 00 f0 00 0f f0 ff 00 00 00 00 f0 ff  ................................
1001c0a0  00 00 00 00 00 f0 00 0f 00 00 00 00 00 00 00 f0 00 00 00 00 00 f0 00 ff 00 ff 00 00 00 00 f0 ff  ................................
1001c0c0  00 00 00 00 00 f0 00 ff 00 ff 00 00 00 00 f0 ff 00 00 00 0f 00 f0 00 f0 00 ff 00 00 00 0f ff ff  ................................
1001c0e0  00 00 00 0f 00 f0 00 f0 00 00 00 00 00 0f 00 00 00 00 00 ff 00 00 f0 00 00 00 00 00 00 0f 00 00  ................................
1001c100  00 00 00 ff 00 00 ff 00 f0 00 00 00 00 0f 00 00 00 00 00 ff 00 00 ff ff 00 00 00 00 00 0f 00 00  ................................
1001c120  00 00 00 ff 00 00 ff ff 00 00 00 77 07 0f 00 00 77 00 00 ff 77 00 ff f0 00 00 00 ff 0f 0f 00 00  ...........w....w...w...........
1001c140  ff 00 00 ff ff 00 ff 00 00 00 00 ff 0f 0f 00 00 ff 00 00 f0 ff 00 ff 00 00 00 00 88 0f 0f 00 00  ................................
1001c160  88 00 00 07 f8 00 ff 00 00 00 00 ff 0f 0f 00 00 ff 00 00 f7 ff 00 f0 00 00 00 00 88 0f 0f 00 00  ................................
1001c180  88 00 00 f7 f8 00 0f 00 00 00 00 ff 0f 00 00 00 ff 00 00 f7 ff 00 ff 00 00 00 00 88 0f 08 00 00  ................................
1001c1a0  88 00 00 f7 f8 00 8f 00 00 00 00 ff 0f ff 00 00 ff 00 00 f7 ff 00 ff 00 00 00 00 88 0f 88 00 00  ................................
1001c1c0  88 00 00 f7 f8 00 8f 00 00 00 00 ff 0f ff 00 00 ff 00 00 f7 ff 00 ff 00 00 00 00 88 0f 88 00 00  ................................
1001c1e0  88 00 00 f7 f8 00 8f 00 00 00 00 ff 0f ff 00 00 ff 00 00 f7 ff 00 ff 00 00 00 00 ff 0f ff 00 00  ................................
1001c200  ff 00 00 00 ff 00 00 00 00 00 00 ff 0f ff 00 00 ff 00 00 f0 ff 00 0f 00 00 00 00 ff 0f ff 00 00  ................................
1001c220  ff 00 00 00 ff 00 0f 00 00 00 00 ff 0f ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00  ................................
1001c240  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 e6 c2 ff ff ff fe ff ff  ................................
1001c260  ff 00 ff ff ff 00 00 ff 86 0e ff ff c2 86 f3 ff ff 00 ff ff 00 00 00 f7 01 03 f1 f0 0e 1e f0 ff  ................................
1001c280  ff ff ff ff 00 ff 00 f0 1f 1f 00 00 07 0f 00 f0 f0 ff f0 f0 ff ff ff 00 1f 1f 00 00 1f 1f 00 f0  ................................
1001c2a0  f0 ff f0 f0 ff ff ff 00 1f 1f 00 00 1f 1f 00 f0 f0 ff f0 f0 ff ff ff 00 1f 3f 00 00 1f 1f 00 f0  .........................?......
1001c2c0  f0 ff f0 f0 ff ff ff 00 ff ff 00 00 7f ff ff ff f0 ff f0 f0 ff ff ff 01 00 00 00 00 09 00 00 40  ...............................@
1001c2e0  28 00 05 20 00 00 00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00 00 01 00 00 00 00 00 00 00 00  (.. ............................
1001c300  00 00 00 00 00 00 00 00 00 00 ff 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 0c 00  ................................
1001c320  00 00 00 00 00 00 00 04 00 00 08 18 00 00 30 02 00 00 00 00 00 00 00 10 00 00 20 e0 00 00 f8 03  ..............0........... .....
1001c340  03 00 03 03 00 00 00 fc 00 00 f0 e0 00 00 a0 7b 03 00 03 03 00 00 00 c0 00 00 60 e0 00 00 e0 7b  ...............{..........`....{
1001c360  7a 00 7b 79 00 00 00 e0 00 00 e0 e0 00 00 e0 65 73 00 7f 6f 00 00 00 e0 00 00 e0 00 00 00 00 7f  z.{y...........es..o............
1001c380  71 00 61 61 00 00 00 40 ff ff 00 ff 00 ff ff ff ff ff 00 ff 00 ff ff ff ff ff ff f3 ff ff e1 ff  q.aa...@........................
1001c3a0  ff ff ff ff ff ff ff f1 ff ff e3 c3 ff ff 87 f8 fb ff ff f9 ff ff ff c7 ff ff 0f 01 ff ff 03 f8  ................................
1001c3c0  f8 ff f8 f8 ff ff ff 01 ff ff 07 0f ff ff 0f 00 f8 ff f8 00 ff ff ff 0f ff ff 0f 0f ff ff 0f 00  ................................
1001c3e0  00 ff 00 00 ff ff ff 0f ff ff 0f 0f ff ff 0f 00 00 ff 00 00 ff ff ff 0f ff ff 0f 0f ff ff 3f 00  ..............................?.
1001c400  00 ff 00 00 ff ff ff 1f 00 00 7f 00 ff 08 00 20 10 00 00 28 ff 00 00 00 00 00 00 00 00 01 01 00  ............... ...(............
1001c420  01 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0a 15 00 ff 00 ff 00 00  ..@.............................
1001c440  ff aa 00 00 00 55 00 00 08 10 00 00 08 10 00 00 00 02 00 00 02 81 01 00 09 03 00 00 08 15 00 00  .....U..........................
1001c460  00 aa 00 00 c2 00 95 00 7e 7e 00 00 43 66 00 00 00 00 00 00 00 00 00 00 7f 7e 00 00 7f 7f 00 00  ........~~..Cf...........~......
1001c480  00 00 00 00 c0 00 80 00 70 60 00 00 7c 78 00 00 00 6c 00 00 10 82 28 00 00 00 00 00 40 00 00 00  ........p`..|x...l....(.....@...
1001c4a0  00 10 00 00 6c 00 28 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 e0 e0 00 00 00 00 ff ff  ....l.(.........................
1001c4c0  00 00 00 ff 00 00 00 ff e7 e6 ff ff e7 e7 ff ff ff 7c ff ff fc 1c fc ff 64 38 ff ff e6 e0 ff ff  .................|......d8......
1001c4e0  ff 00 ff ff 1c 7f 20 ff 00 00 ff ff 18 00 ff ff ff ff ff ff 7f 0f ff ff 00 00 ff ff 00 00 ff ff  ...... .........................
1001c500  ff 7f ff ff 1f ff 3f ff 07 0f ff ff 01 03 ff ff ff 83 ff ff ef 01 c7 ff ff ff ff ff 1f 3f ff ff  ......?......................?..
1001c520  ff ef ff ff 83 ff c7 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 04 00 ff ff ff ff 00 28  ...............................(
1001c540  ff 00 ff 0c ff 00 ff 00 01 00 00 00 00 00 00 00 40 00 20 01 00 00 00 00 00 00 01 00 00 00 00 00  ................@. .............
1001c560  00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00  ................................
1001c580  00 00 00 00 00 00 00 00 f8 f8 00 00 00 00 07 00 00 00 00 00 00 00 00 07 fc fe 0f 0f fc fc 1f 00  ................................
1001c5a0  00 00 00 00 00 00 00 1f fe fe 3f 2f fe fe ef 00 00 00 00 00 00 00 00 6f b4 b0 cf 0a f6 b6 0a 00  ..........?/...........o........
1001c5c0  00 00 00 00 00 00 00 0a 00 00 0a 0c 80 00 0c 00 00 00 00 00 00 00 00 0c 00 00 0c 0c 00 00 00 00  ................................
1001c5e0  00 00 00 00 00 00 00 00 00 ff 00 00 00 00 ff ff 00 00 00 00 00 ff 00 00 ff ff ff ff ff ff ff ff  ................................
1001c600  ff ff ff ff ff ff ff ff 03 03 ff f0 ff 03 f0 ff ff ff ff ff ff ff ff f0 01 00 e0 e0 01 01 c0 ff  ................................
1001c620  ff ff ff ff ff ff ff c0 00 00 80 80 00 00 00 fe ff ff ff ff ff ff ff 00 01 03 00 20 00 00 e0 ff  ........................... ....
1001c640  fe ff fe ff ff ff ff e0 ff ff e0 e0 0f 7f e1 ff ff ff ff ff ff ff ff e1 ff ff e1 e1 ff ff ff ff  ................................
1001c660  ff ff ff ff ff ff ff f3 ff 01 ff ff ff ff 00 00 ff ff ff ff ff 00 ff ff 00 01 00 00 00 00 00 01  ................................
1001c680  20 00 28 40 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 ff ff   .(@............................
1001c6a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 00 00 00 07 00  ................................
1001c6c0  00 00 00 00 00 00 00 02 80 40 06 07 80 00 07 00 00 00 00 00 00 00 00 06 80 40 8f cf 80 40 8f 01  .........@...............@...@..
1001c6e0  00 00 00 01 00 00 00 8f 00 00 08 00 00 00 02 7e 43 00 03 66 00 00 00 06 00 00 00 c0 00 00 00 7f  ...............~C..f............
1001c700  7f 00 7e 7f 00 00 00 80 00 00 00 10 00 00 6c 70 7c 00 7e 78 00 00 00 28 00 00 82 6c 00 00 10 00  ..~...........lp|.~x...(...l....
1001c720  40 00 60 00 00 00 00 28 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 2f 1f ff f8 af 57 f0 ff  @.`....(................/....W..
1001c740  ff ff ff ff ff ff ff f0 3f 1f f0 f0 3f 3f 70 ff ff ff ff ff ff ff ff f0 1f 1f 20 00 1f 1f 20 7c  ........?...??p........... ... |
1001c760  fe ff fe fc ff ff ff 20 7f 7f 60 70 3f 7f f0 00 18 ff 38 00 ff ff ff f0 ff ff 18 1f ff ff 7f 00  ....... ..`p?.....8.............
1001c780  00 ff 00 00 ff ff ff 3f ff ff ff ef ff ff 83 07 01 ff 00 03 ff ff ff c7 ff ff 01 83 ff ff ef ff  .......?........................
1001c7a0  1f ff 0f 3f ff ff ff c7 00 00 00 00 01 00 00 40 28 00 00 20 00 00 00 00 00 00 00 00 04 00 00 00  ...?...........@(.. ............
1001c7c0  00 00 01 80 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 80 80 00 00 80  ................................
1001c7e0  00 00 00 00 00 00 00 80 c0 80 00 80 80 00 80 80 80 00 80 c0 00 00 00 c0 ff 00 00 ff ff 00 00 ff  ................................
1001c800  00 00 00 00 00 00 00 ff ff 00 00 ff ff 00 00 00 ff 00 ff ff 00 00 00 ff 00 00 00 00 00 00 00 00  ................................
1001c820  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001c840  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001c860  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 80 00 00  ................................
1001c880  00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 00 80 00 00 00 78 00 00 00 00 00 00 80 07 00 00 00  ....................x...........
1001c8a0  80 00 00 00 78 00 00 00 00 00 00 00 07 00 00 00 80 00 00 00 78 00 00 00 00 00 00 00 07 00 00 00  ....x...............x...........
1001c8c0  80 00 00 00 78 00 00 00 00 00 00 00 07 00 00 00 80 00 00 00 78 00 00 00 00 00 00 00 07 00 00 00  ....x...............x...........
1001c8e0  88 00 f0 00 77 00 00 00 00 00 00 00 77 00 00 00 88 00 ff 00 77 0f 00 00 00 00 00 00 77 00 00 00  ....w.......w.......w.......w...
1001c900  88 00 f0 00 77 0f 00 00 00 00 00 00 77 00 00 00 88 00 f0 00 77 ff 00 00 00 00 00 00 77 00 00 0f  ....w.......w.......w.......w...
1001c920  78 00 00 00 77 ff 00 00 00 0f 00 00 70 00 f0 0f 00 00 00 00 00 f0 00 00 00 ff 00 00 08 00 ff 0f  x...w.......p...................
1001c940  00 00 00 00 78 f0 00 00 00 ff 00 00 0f 00 ff 0f 00 00 00 00 77 f0 00 00 00 ff 00 00 08 00 ff 0f  ....x...............w...........
1001c960  00 00 00 00 78 ff 00 00 00 ff 00 00 00 00 ff 0f 00 00 ff 00 00 ff 00 00 00 ff 00 00 00 00 ff 0f  ....x...........................
1001c980  00 00 f0 00 00 ff 00 00 00 ff 00 00 00 00 ff 0f 00 00 00 00 00 f0 00 00 00 ff 00 00 00 00 ff 0f  ................................
1001c9a0  00 00 00 00 00 00 00 00 00 f0 0f 00 00 00 ff 0f 00 00 00 00 00 00 00 00 00 00 f0 00 f0 00 ff 0f  ................................
1001c9c0  00 00 00 00 00 00 00 00 00 00 f0 00 ff 00 f0 0f 00 00 0f 00 00 00 00 00 00 00 00 00 00 00 00 0f  ................................
1001c9e0  00 00 f0 00 f0 00 00 00 00 00 f0 00 ff 00 00 00 00 00 0f 00 00 00 00 00 00 00 f0 00 f0 00 00 00  ................................
1001ca00  00 00 00 00 00 00 00 00 00 ff 0f 00 00 00 ff ff 00 00 00 00 00 ff 00 00 ff ff ff ff ff ff ff ff  ................................
1001ca20  ff ff ff ff ff ff ff ff 2f 1f ff f8 ff 57 f0 ff ff ff ff ff ff ff ff f0 3f 1f f0 f0 3f 3f 30 fe  ......../....W..........?...??0.
1001ca40  ff ff ff ff ff ff ff 70 1f 1f 00 20 1f 1f 60 38 fc ff fe 7c ff ff ff 20 7f 7f 60 f0 3f 7f 10 00  .......p... ..`8...|... ..`.?...
1001ca60  00 ff 18 00 ff ff ff f0 ff ff 18 3f ff ff ff 00 00 ff 00 00 ff ff ff 7f ff ff ef c7 ff ff 01 0f  ...........?....................
1001ca80  03 ff 01 07 ff ff ff 83 ff 08 83 c7 ff ff 00 07 3f ff 1f ff ff 00 ff ef 00 01 00 00 00 00 00 01  ................?...............
1001caa0  20 00 28 40 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 ff ff   .(@............................
1001cac0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001cae0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001cb00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 03 00 00 00 00 00 00 00 00 00 00 e0 e0 00 00 30 18  ..............................0.
1001cb20  0e 00 0f 1e 00 00 00 f0 00 00 f0 e0 00 00 80 03 0e 00 1e 0f 00 00 00 e0 00 00 00 00 00 00 00 00  ................................
1001cb40  00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................................
1001cb60  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff f0 ff  ................................
1001cb80  ff ff ff ff ff ff ff f9 ff ff e0 c1 ff ff 07 f0 ff ff ff fc ff ff ff 03 ff ff 0f 0f ff ff 07 c0  ................................
1001cba0  e0 ff e0 c0 ff ff ff 07 ff ff 07 0f ff ff 1f f0 e0 ff c0 e0 ff ff ff 0f ff ff 7f ff ff ff ff ff  ................................
1001cbc0  ff ff fc ff ff ff ff ff 00 00 00 00 08 00 00 40 28 00 07 20 00 00 00 00 00 00 00 00 01 00 00 00  ...............@(.. ............
1001cbe0  00 00 01 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 ff 00 00 00  ................................
1001cc00  00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001cc20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001cc40  00 00 00 00 00 00 00 00 00 00 80 e0 00 00 f0 1f 0f 00 03 0f 00 00 00 e0 00 00 30 f0 00 00 e0 0f  ..........................0.....
1001cc60  1f 00 18 0f 00 00 00 e0 00 00 80 00 00 00 00 00 00 00 03 00 00 00 00 00 ff ff 00 ff 00 ff ff ff  ................................
1001cc80  ff ff 00 ff 00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................................
1001cca0  ff ff ff ff ff ff ff ff ff ff ff ff ff ff f9 ff ff ff ff ff ff ff ff ff ff ff f0 e0 ff ff 03 fc  ................................
1001ccc0  ff ff ff ff ff ff ff c1 ff ff 07 0f ff ff 07 c0 e0 ff f0 e0 ff ff ff 0f ff ff 07 07 ff ff 0f e0  ................................
1001cce0  c0 ff c0 e0 ff ff ff 0f ff ff 1f 7f ff ff ff ff fc ff f0 ff ff ff ff ff 00 00 ff 00 ff 08 00 20  ............................... 
1001cd00  07 00 ff 28 ff 00 00 00 00 00 00 00 00 01 01 00 01 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00  ...(..............@.............
1001cd20  00 00 00 00 00 00 00 00 00 00 00 ff 00 ff 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001cd40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001cd60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 e0 0f  ................................
1001cd80  03 00 00 0f 00 00 00 e0 00 00 f0 f0 00 00 e0 0f 1f 00 1f 1f 00 00 00 f0 00 00 e0 80 00 00 00 00  ................................
1001cda0  03 00 0f 00 00 00 00 00 ff ff 00 00 00 00 ff ff 00 ff 00 ff 00 ff 00 ff ff ff ff ff ff ff ff ff  ................................
1001cdc0  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................................
1001cde0  ff ff ff ff ff ff ff ff ff ff f9 f0 ff ff c1 ff ff ff ff ff ff ff ff e0 ff ff 03 07 ff ff 0f e0  ................................
1001ce00  f0 ff fc e0 ff ff ff 0f ff ff 07 07 ff ff 0f e0 c0 ff c0 c0 ff ff ff 07 ff ff 0f 1f ff ff ff     ...............................

1001ce1f  int32_t __convention("regparm") sub_1001ce1f(int32_t arg1)

   0 @ 1001ce1f  push(eax)
   1 @ 1001ce21  jump(eax)

1001ce23           fc ff ff ff 7f 00 00 ff ff ff ff 00 28 ff 00 ff 00 ff 00 ff 00 01 00 00 00 00 00 00 00     ............(................
1001ce40  40 00 20 01 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00  @. .............................
1001ce60  00 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001ce80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 c0 00 00 00 00 00 00 00 00 00 00 e0 c0 80 00 00 1f 03  ................................
1001cea0  01 00 00 01 00 00 00 80 00 00 1f 00 e0 00 00 7e 66 00 43 76 00 00 00 00 00 00 c0 80 00 00 00 7e  ...............~f.Cv...........~
1001cec0  7f 00 7f 7f 00 00 00 00 00 00 00 00 00 00 00 60 78 00 7c 70 00 00 00 00 00 ff 00 00 00 00 ff ff  ...............`x.|p............
1001cee0  00 00 40 00 00 ff 00 00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ..@.............................
1001cf00  ff ff ff ff ff ff ff ff ff ff ff ff ff ff 1f fe ff ff ff ff ff ff ff 3f 0f 0f 1f 3f ff ff 40 38  .......................?...?..@8
1001cf20  fc ff fe 7c ff ff ff 00 ff ff 40 c0 0f 0f 0f 00 00 ff 18 00 ff ff ff ff ff ff 1f 3f ff ff ff 00  ...|......@................?....
1001cf40  00 ff 00 00 ff ff ff 7f ff ff ff ff ff ff ff 0f 03 ff 01 07 ff ff ff ff ff 00 ff ff ff ff 00 00  ................................
1001cf60  3f ff 1f 7f ff 00 ff ff 00 01 00 00 00 00 00 01 20 00 28 40 00 00 00 00 00 00 00 01 00 00 00 00  ?............... .(@............
1001cf80  00 00 00 00 00 00 00 00 00 ff 00 00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001cfa0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001cfc0  00 00 00 00 00 00 00 00 00 00 c0 c3 00 00 83 01 00 00 00 01 00 00 00 83 00 00 1f 1f e0 e0 03 76  ...............................v
1001cfe0  43 00 03 66 00 00 00 03 00 00 03 c0 00 00 00 7f 7f 00 7e 7f 00 00 00 80 00 00 00 00 00 00 00 70  C..f..............~............p
1001d000  7c 00 7e 78 00 00 00 00 00 00 00 00 00 00 00 00 40 00 60 00 00 00 00 00 ff ff ff ff ff ff ff ff  |.~x............@.`.............
1001d020  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 3f ff  ..............................?.
1001d040  ff ff ff ff ff ff ff ff 7f 0f 18 18 7f 7f 00 7c fe ff fe fc ff ff ff 38 0f 7f 40 40 0f 0f f8 00  ...............|.......8..@@....
1001d060  18 ff 38 00 ff ff ff c0 ff ff 08 18 7f 7f 7f 00 00 ff 00 00 ff ff ff 3f ff ff ff ff ff ff ff 07  ..8....................?........
1001d080  01 ff 00 03 ff ff ff ff ff ff ff ff ff ff ff 7f 1f ff 0f 3f ff ff ff ff 00 00 00 00 09 00 00 40  ...................?...........@
1001d0a0  28 00 09 20 00 00 00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00 00 01 00 00 00 00 00 00 00 00  (.. ............................
1001d0c0  00 00 00 00 00 00 00 00 00 00 ff 00 ff 00 00 00 00 00 ff 00 00 00 00 00 40 c0 00 00 00 00 00 00  ........................@.......
1001d0e0  00 00 00 00 00 00 00 00 00 00 00 01 80 80 23 00 00 00 00 00 00 00 00 01 c0 80 32 3e 00 00 bf 7f  ..............#...........2>....
1001d100  00 00 00 00 00 00 00 3f 00 00 3f be 00 00 ba 57 5f 00 40 50 00 00 00 3c 00 00 b6 ae 00 00 be 57  .......?..?....W_.@P...<.......W
1001d120  57 00 57 57 00 00 00 9e 00 00 fe 3e 00 00 5e 56 57 00 57 56 00 00 00 fe 00 00 1e 10 00 00 f0 07  W.WW.......>..^VW.WV............
1001d140  17 00 16 06 00 00 00 14 ff ff 00 ff 00 ff ff ff ff ff 00 ff 00 ff ff ff 1f 1f ff ff ff 3f fe ff  .............................?..
1001d160  ff ff ff ff ff ff ff ff 7f 7f fe bc 3f 3f 88 ff ff ff ff ff ff ff ff 9c 1f 3f 80 80 ff 0f 00 00  ............??...........?......
1001d180  ff ff ff 00 ff ff ff 00 ff ff 00 00 7f ff 00 00 00 ff 00 00 ff ff ff 00 ff ff 00 00 ff ff 00 00  ................................
1001d1a0  00 ff 00 00 ff ff ff 00 ff ff 00 00 ff ff 00 00 00 ff 00 00 ff ff ff 00 ff ff 00 00 ff ff 03 f0  ................................
1001d1c0  c0 ff 80 e0 ff ff ff 01 00 00 07 00 ff 0f 00 20 0f 00 f8 28 ff 00 00 00 00 00 00 00 00 01 00 80  ............... ...(............
1001d1e0  01 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 ff 00 00  ..@.............................
1001d200  ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 e2 07 18 e0 18 43 00  ..............................C.
1001d220  00 00 00 00 00 00 00 20 44 8c 8c 10 11 20 20 02 01 80 00 01 00 40 80 20 42 82 41 42 12 22 48 02  ....... D....  ......@. B.AB."H.
1001d240  02 40 02 02 40 40 40 44 08 31 31 22 04 04 8c 00 01 80 02 01 40 00 80 04 18 e0 43 20 c2 04 07 00  .@..@@@D.11"........@.....C ....
1001d260  00 00 00 00 00 00 00 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff 00 00 00 00 ff ff  ................................
1001d280  00 ff 00 ff 00 ff 00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 03 01 f8 e0 1f 07 80 ff  ................................
1001d2a0  ff ff ff ff ff ff ff c0 80 00 03 0f e0 c0 1f fc fe 7f ff fe ff 3f 7f 1f 3c 7c 3e 3c 0c 1c 30 fc  .....................?..<|><..0.
1001d2c0  fc 3f fc fc 3f 3f 3f 38 f0 c0 00 01 f8 f8 03 ff fe 7f fc fe 3f ff 7f 03 07 1f 80 c0 01 03 f8 ff  .?..???8............?...........
1001d2e0  ff ff ff ff ff ff ff e0 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 0c 00 ff ff ff ff 00 28  ...............................(
1001d300  ff 00 ff 0f ff 00 ff 00 01 00 00 00 00 00 00 00 40 00 20 01 00 00 00 00 00 00 01 00 00 00 00 00  ................@. .............
1001d320  00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00  ................................
1001d340  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 80 00 00 00 00 02 00  ................................
1001d360  00 00 00 00 00 00 00 03 82 85 02 02 80 80 a2 00 00 00 00 00 00 00 00 42 80 80 3e 02 fc 80 02 02  .......................B..>.....
1001d380  02 20 01 04 80 40 40 02 82 80 3e a2 fc 85 02 00 00 00 01 00 80 00 00 42 80 00 02 02 80 80 00 00  . ...@@...>............B........
1001d3a0  00 00 00 00 00 00 00 03 00 ff 00 00 00 00 ff ff 00 00 00 00 00 ff 00 00 ff ff ff ff ff ff ff ff  ................................
1001d3c0  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 7f 7f ff ff ff ff fc ff  ................................
1001d3e0  ff ff ff ff ff ff ff fc 7d 78 fc fc 7f 7f 1c ff ff ff ff ff ff ff ff bc 00 00 00 00 00 00 00 fc  ........}x......................
1001d400  fc 1f fe f8 7f 3f 3f 00 7d 7f 00 1c 00 78 fc ff ff ff fe ff 7f ff ff bc 7f ff fc fc 7f 7f ff ff  .....??.}....x..................
1001d420  ff ff ff ff ff ff ff fc ff 09 ff ff ff ff 00 09 ff ff ff ff ff 00 ff ff 00 01 00 00 00 00 00 01  ................................
1001d440  20 00 28 40 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 ff ff   .(@............................
1001d460  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 c0 80 00 00 00 40 00 00  .............................@..
1001d480  00 00 00 00 00 00 00 00 00 00 01 01 80 00 32 00 00 00 00 00 00 00 00 23 80 00 3e 3f 00 c0 3f 40  ..............2........#..>?..?@
1001d4a0  00 00 00 7f 00 00 00 bf 00 00 be 3c 00 00 b6 57 50 00 5f 57 00 00 00 ba 00 00 ae 9e 00 00 fe 57  ...........<...WP._W...........W
1001d4c0  57 00 57 57 00 00 00 be 00 00 be be 00 00 be 17 57 00 57 56 00 00 00 0e 00 00 b0 f4 00 00 00 00  W.WW............W.WV............
1001d4e0  07 00 17 07 00 00 00 f0 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 1f 3f ff ff 3f 1f fe ff  .........................?..?...
1001d500  ff ff ff ff ff ff ff fe 7f ff bc 9c 3f 7f 80 ff ff ff ff ff ff ff ff 88 3f 7f 80 00 0f 1f 00 00  ............?...........?.......
1001d520  00 ff ff 00 ff ff ff 00 ff ff 00 00 ff ff 00 00 00 ff 00 00 ff ff ff 00 ff ff 00 00 ff ff 00 00  ................................
1001d540  00 ff 00 00 ff ff ff 00 ff ff 00 00 ff ff 00 80 00 ff 00 00 ff ff ff 00 ff ff 00 01 ff ff 07 f8  ................................
1001d560  e0 ff c0 f0 ff ff ff 03 00 00 00 00 09 00 00 40 28 00 05 20 00 00 00 00 00 00 00 00 01 00 00 00  ...............@(.. ............
1001d580  00 00 01 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 ff 00 00 00  ................................
1001d5a0  00 00 ff 00 00 00 00 00 00 00 00 00 00 00 0c 00 00 00 00 00 00 00 00 04 00 00 08 18 00 00 30 02  ..............................0.
1001d5c0  00 00 00 00 00 00 00 10 00 00 20 e0 00 00 f8 03 03 00 03 03 00 00 00 fc 00 00 f0 e0 00 00 a0 7b  .......... ....................{
1001d5e0  03 00 03 03 00 00 00 c0 00 00 60 e0 00 00 e0 7b 7a 00 7b 79 00 00 00 e0 00 00 e0 e0 00 00 e0 60  ..........`....{z.{y...........`
1001d600  7b 00 7f 7b 00 00 00 e0 00 00 e0 00 00 00 00 7f 7b 00 7b 7f 00 00 00 40 ff ff 00 ff 00 ff ff ff  {..{............{.{....@........
1001d620  ff ff 00 ff 00 ff ff ff ff ff ff f3 ff ff e1 ff ff ff ff ff ff ff ff f1 ff ff e3 c3 ff ff 87 f8  ................................
1001d640  fb ff ff f9 ff ff ff c7 ff ff 0f 00 ff ff 03 f8 f8 ff f8 f8 ff ff ff 01 ff ff 07 0f ff ff 0f 00  ................................
1001d660  f8 ff f8 00 ff ff ff 0f ff ff 0f 0f ff ff 0f 00 00 ff 00 00 ff ff ff 0f ff ff 0f 0f ff ff 0f 00  ................................
1001d680  00 ff 00 00 ff ff ff 0f ff ff 0f 0f ff ff 3f 00 00 ff 00 00 ff ff ff 1f 00 00 7f 00 ff 09 00 20  ..............?................ 
1001d6a0  09 00 00 28 ff 00 00 00 00 00 00 00 00 01 01 00 01 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00  ...(..............@.............
1001d6c0  00 00 00 00 00 00 00 00 00 00 00 ff 00 ff 00 00 ff 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00  .........................@......
1001d6e0  00 00 00 00 00 00 00 00 80 00 00 00 c0 80 01 00 00 00 00 00 00 00 00 01 00 c0 23 32 00 00 3f 00  ..........................#2..?.
1001d700  00 00 00 00 00 00 00 3e 00 00 bf 3f 80 00 3c 50 40 00 7f 5f 00 00 00 be 00 00 ba b6 00 00 9e 57  .......>...?..<P@.._...........W
1001d720  57 00 57 57 00 00 00 ae 00 00 be fe 00 00 fe 57 57 00 57 57 00 00 00 fe 00 00 fe fe 00 00 f4 07  W.WW...........WW.WW............
1001d740  17 00 57 17 00 00 00 f0 ff ff f0 00 00 00 ff ff 00 ff 07 ff 00 ff 00 ff 3f 1f ff ff ff ff ff ff  ..W.....................?.......
1001d760  ff ff ff ff ff ff ff ff 3f 7f fe fe 1f 3f 9c ff ff ff ff ff ff ff ff bc 0f 1f 88 80 7f ff 00 00  ........?....?..................
1001d780  ff ff ff ff ff ff ff 80 ff ff 00 00 3f 7f 00 00 00 ff 00 00 ff ff ff 00 ff ff 00 00 ff ff 00 00  ............?...................
1001d7a0  00 ff 00 00 ff ff ff 00 ff ff 00 00 ff ff 00 00 00 ff 00 00 ff ff ff 00 ff ff 00 00 ff ff 01 e0  ................................
1001d7c0  80 ff 00 c0 ff ff ff 00 09 00 03 07 ff ff 00 28 f8 00 f0 05 ff 00 ff 00 01 00 00 00 00 00 00 00  ...............(................
1001d7e0  40 00 20 01 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00  @. .............................
1001d800  00 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 0c 00 00 18 00  ................................
1001d820  00 00 00 00 00 00 00 08 00 00 10 30 00 00 e0 03 02 00 00 03 00 00 00 20 00 00 fc f8 00 00 e0 03  ...........0........... ........
1001d840  03 00 03 03 00 00 00 f0 00 00 c0 a0 00 00 e0 7a 7b 00 03 7b 00 00 00 60 00 00 e0 e0 00 00 e0 7f  ...............z{..{...`........
1001d860  7b 00 79 7f 00 00 00 e0 00 00 e0 e0 00 00 00 7f 7f 00 7f 7f 00 00 00 e0 00 ff 40 00 00 00 ff ff  {.y.......................@.....
1001d880  7f 00 7f 00 00 ff 00 00 ff ff ff ff ff ff f3 ff ff ff ff ff ff ff ff ff ff ff f1 e1 ff ff c3 fb  ................................
1001d8a0  ff ff ff ff ff ff ff e3 ff ff c7 87 ff ff 00 f8 f8 ff f9 f8 ff ff ff 0f ff ff 01 03 ff ff 0f f8  ................................
1001d8c0  f8 ff f8 f8 ff ff ff 07 ff ff 0f 0f ff ff 0f 00 00 ff 00 00 ff ff ff 0f ff ff 0f 0f ff ff 0f 00  ................................
1001d8e0  00 ff 00 00 ff ff ff 0f ff ff 0f 0f ff ff 0f 00 00 ff 00 00 ff ff ff 0f ff 00 1f 3f ff ff 00 28  ...........................?...(
1001d900  00 ff 00 00 ff 00 ff 7f 18 00 00 00 00 00 00 00 10 00 10 01 00 00 00 00 00 00 03 00 00 00 00 00  ................................
1001d920  00 00 00 00 00 00 00 00 06 81 00 00 00 00 00 c1 00 88 00 88 00 bd 06 c1 00 00 81 bd bd 00 00 00  ................................
1001d940  81 00 00 bd 00 00 81 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 91 c4 00 00 00 00 4a ea  ..............................J.
1001d960  00 d3 00 a9 00 f7 35 dc 81 bd b0 d5 e6 05 81 00 9d bd 2f c5 18 00 8a 00 00 00 bd 00 00 00 00 00  ......5.........../.............
1001d980  bd 00 81 00 81 00 00 00 4c e7 00 00 00 00 92 d9 00 b2 00 a9 00 ff 35 dc d1 e6 dd ff ff 66 ba 36  ........L.............5......f.6
1001d9a0  dd f7 66 ff 66 1c dd 55 00 00 d5 04 0d 88 00 00 ce 00 a3 00 91 00 c5 00 35 f7 00 00 00 00 bf dc  ..f.f..U................5.......
1001d9c0  00 a9 00 a9 00 ff 35 dc ee ff ee ff ff 73 ee 73 ee ff 73 ff 73 73 ee 73 bd 00 ff 1c 55 a0 00 00  ......5......s.s..s.ss.s....U...
1001d9e0  ff 00 ee 00 ca 00 d7 81 31 e5 00 00 00 00 b1 e3 00 aa 00 a9 00 f2 35 dc fb ff fb ff ff 7e fb 7e  ........1.............5......~.~
1001da00  fb ff 7e ff 7e 7e fb 7e bd 00 ff 6f 57 de 00 00 ff 00 fb 00 cc 00 f7 81 56 bd 00 00              ..~.~~.~...oW...........V...
1001da29                             ff ff ff                                                                       ...

1001da2c  int32_t sub_1001da2c()
// This function has unresolved stack usage. View graph of stack usage to resolve.

   0 @ 1001da2c  call([eax - 0x6f01].d)
   1 @ 1001da32  ah = 0xff
   2 @ 1001da36  call([eax - 0x6000ff30].d)
   3 @ 1001da3c  ebx = pop
   4 @ 1001da3d  __out_dx_al(dx, al, eflags)
   5 @ 1001da3e  [eax].b = [eax].b + al
   6 @ 1001da40  [eax].d = [eax].d + 1
   7 @ 1001da42  jump([ebx].d)

1001da44              ce 00 ff a3 6e b1 00 00 00 00 34 ff 00 d5 00 a9 00 e2 35 dc ff                           ....n.....4.......5..

1001da59  int32_t sub_1001da59(void* arg1 @ esi, int80_t arg2 @ st0, int80_t arg3 @ st1)
// This function has unresolved stack usage. View graph of stack usage to resolve.

   0 @ 1001da59  push([esi - 0x5c261e].d)
   1 @ 1001da5f  dh = 0xc5
   2 @ 1001da61  call([ebp - 0x12].d)
   3 @ 1001da64  if (flag:z || flag:c) then 4 @ 0x1001da1c else 9 @ 0x1001da66

   4 @ 1001da1c  [eax].b = [eax].b + al
   5 @ 1001da1e  eflags = __sti(eflags)
   6 @ 1001da20  cl = cl + al
   7 @ 1001da22  [ecx - 0x23ca2200].b = [ecx - 0x23ca2200].b + ch
   8 @ 1001da28  undefined

   9 @ 1001da66  st0 f- st1
  10 @ 1001da66  __free_slot(st0)
  11 @ 1001da66  __free_slot(st1)
  12 @ 1001da66  top = top + 2
  13 @ 1001da68  al, ah, eflags = __aad_immb(0, al, ah)
  14 @ 1001da6a  [esi - 0x7e422a9c].d = [esi - 0x7e422a9c].d - 1
  15 @ 1001da70  [eax].d = [eax].d + 1
  16 @ 1001da72  push([ebx - 0x32 {0xffffffce}].d)
  17 @ 1001da75  ch = ch + dl
  18 @ 1001da77  undefined


1001da7a  int32_t __convention("regparm") sub_1001da7a(char* arg1, int16_t arg2, int32_t arg3 @ esi, int32_t arg4 @ edi)

   0 @ 1001da7a  [eax].b = [eax].b + al
   1 @ 1001da7c  [eax].b = [eax].b + al
   2 @ 1001da7e  temp0, edi = __insb(edi, dx, eflags)
   3 @ 1001da7e  [edi].b = temp0.b
   4 @ 1001da7f  [eax].d = [eax].d + 1
   5 @ 1001da81  __out_immb_oeax(0, eax, eflags)
   6 @ 1001da83  eax & 0xdc35ff00
   7 @ 1001da88  if (flag:d) then 8 else 11

   8 @ 1001da88  [edi].b = al
   9 @ 1001da88  edi = edi - 1
  10 @ 1001da88  goto 14 @ 0x1001da89

  11 @ 1001da88  [edi].b = al
  12 @ 1001da88  edi = edi + 1
  13 @ 1001da88  goto 14 @ 0x1001da89

  14 @ 1001da89  edx:eax = mulu.dp.d(eax, esi)
  15 @ 1001da8b  temp0.d = divs.dp.d(edx:eax, edi)
  16 @ 1001da8b  temp1.d = mods.dp.d(edx:eax, edi)
  17 @ 1001da8b  eax = temp0.d
  18 @ 1001da8b  edx = temp1.d
  19 @ 1001da8d  al - -0x12
  20 @ 1001da8f  undefined

1001da90                                                  d9 c5 6c e2 5b f0                                                ..l.[.

1001da96  int32_t __convention("regparm") sub_1001da96(char arg1)

   0 @ 1001da96  esp, ds = __lds_gprz_memp([ebx {0}].6)
   1 @ 1001da98  al = sbb.b(al, 0, flag:c)
   2 @ 1001da9a  [-0xffffffff87ac5b93].d = [-0xffffffff87ac5b93].d + 1
   3 @ 1001daa0  undefined

1001daa7                       69 7e fb 00 00 00 00 7e ff 00 fb 00 a9 00 ff 35 dc ed e2 fb ff ff 7e c5 3c         i~.....~.......5......~.<
1001dac0  fb f7 7e ff 7e 23 fb 6a 42 00 c5 26 10 b6 0f 53 19 00 aa 26 62 00 45 b2 ab ff 00 00 00 00 81 ff  ..~.~#.jB..&...S...&b.E.........
1001dae0  00 fe 00 a9 00 ff 35 dc f6 ff ff fb ff 89 ff bd f4 fb 81 ee bb 23 dc b6 74 00 45 36 16 e1 21 86  ......5..............#..t.E6..!.
1001db00  2d 13 88 40 96 4b 69 ef 88 de 00 00 00 00 97 e6 00 ce 00 a9 00 ee 35 dc a9 00 f7 d7 fb 35 4b 00  -..@.Ki...............5......5K.
1001db20  b1 dc d1 dc 4b 00 a9 35 50 00 00 2d 06 cf 13 70 0e 0a 4b 2a 69 4b 5a c2 35 a9 00 00 4b 00 35 dc  ....K..5P..-...p..K*iKZ.5...K.5.
1001db40  00 a9 00 81 00 dc 00 bd 00 00 a9 bd dc 00 00 00 81 00 35 00 00 00 00 00 3c 00 00 1c 00 ab 00 4b  ..................5.....<......K
1001db60  00 00 00 1e 4b 00 3d a9 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ....K.=.........................
1001db80  00 00 00 00 00 00 00 00 0e 00 00 1f 00 bb 00 4b 00 00 00 06 4b 00 49 69 00 00 00 00 00 00 00 00  ...............K....K.Ii........
1001dba0  00 00 00 00 00 00 00 00 4b 00 00 00 00 00 4b 00 00 00 00 00 00 00 4b 00 00 00 00 08 08 73 00 00  ........K.....K.......K......s..
1001dbc0  14 00 4b 00 76 00 14 4b 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 00 00 00 00 4b 00  ..K.v..K................K.....K.
1001dbe0  00 00 00 00 00 02 4b 00 00 00 05 00 01 4b 00 00 03 00 5e 00 57 00 00 00 00 00 00 00 00 00 00 00  ......K......K....^.W...........
1001dc00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..............K.................
1001dc20  00 00 4b 00 00 00 00 00 00 00 00 00 00 00 00 0f 28 00 00 10 00 00 00 00 00 00 00 00 04 00 00 00  ..K.............(...............
1001dc40  00 00 01 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 80 80 00 00 80  ...x............................
1001dc60  00 00 00 00 00 00 00 80 c0 80 00 80 80 00 80 80 80 00 80 c0 00 00 00 c0 ff 00 00 ff ff 00 00 ff  ................................
1001dc80  00 00 00 00 00 00 00 ff ff 00 00 ff ff 00 00 00 ff 00 ff ff 00 00 00 ff 00 00 00 00 00 00 00 00  ................................
1001dca0  00 00 00 00 00 00 00 00 00 88 00 00 00 00 88 07 00 00 00 00 00 88 00 00 07 70 88 77 88 77 77 0f  .........................p.w.ww.
1001dcc0  0f 80 88 77 80 00 77 77 07 70 07 70 77 00 77 0f 0f 80 00 00 80 00 00 00 77 ff 07 77 77 77 ff 0f  ...w..ww.p.pw.w.........w..www..
1001dce0  0f 80 00 77 80 ff 77 77 00 00 ff 00 ff 00 00 00 00 00 ff 00 70 00 00 00 00 00 00 00 00 00 00 00  ...w..ww............p...........
1001dd00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0a 28 00 00 11 00 00 00 00 00 00 00 00 04 00 00 00  ................(...............
1001dd20  00 00 01 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 80 80 00 00 80  ...x............................
1001dd40  00 00 00 00 00 00 00 80 c0 80 00 80 80 00 80 80 80 00 80 c0 00 00 00 c0 ff 00 00 ff ff 00 00 ff  ................................
1001dd60  00 00 00 00 00 00 00 ff ff 44 00 ff ff 00 44 74 ff 00 ff ff 00 44 00 ff cc cc                    .........D....Dt.....D....

1001dd7a  int32_t __convention("regparm") sub_1001dd7a(int32_t arg1) __noreturn

   0 @ 1001dd7a  esp = esp + 1
   1 @ 1001dd7b  [eax + eax - 0x34].b = [eax + eax - 0x34].b + al
   2 @ 1001dd7f  breakpoint

1001dd80  70 cc                                                                                            p.

1001dd82  int32_t __convention("regparm") sub_1001dd82(int32_t arg1, uint16_t arg2) __noreturn

   0 @ 1001dd82  esp = esp + 1
   1 @ 1001dd83  al = __in_al_dx(dx, eflags)
   2 @ 1001dd84  esp = esp + 1
   3 @ 1001dd85  breakpoint

1001dd86                    00 cc cc 41 00 cc 6a cc 00 4b ec cc                                                  ...A..j..K..

1001dd92  int32_t sub_1001dd92() __noreturn

   0 @ 1001dd92  esp = esp + 1
   1 @ 1001dd93  breakpoint

1001dd94                                                              00 00 cc cc 42 77 ee ee ee ee 77 77                      ....Bw....ww
1001dda0  ee 02 7e 74 ee 77 ee 00 77 77 77 00 77 02 77 77 74 77 77 77 77 77 00 77 44 ff 00 44 ff 44 ff 7d  ..~t.w..www.w.wwtwwwww.wD..D.D.}
1001ddc0  74 44 72 44 fd fd 44                                                                             tDrD..D
1001ddce                                            cc ec cc                                                             ...

1001ddd1  int32_t __convention("regparm") sub_1001ddd1(uint8_t arg1, uint16_t arg2, int32_t arg3) __noreturn

   0 @ 1001ddd1  temp0.d = esp {__return_addr}
   1 @ 1001ddd1  esp = esp - -0x333333b4
   2 @ 1001ddd1  cond:0 = temp0.d != -0x333333b4
   3 @ 1001ddd7  ecx = ecx - 1
   4 @ 1001ddd7  if (cond:0 && ecx != 0) then 5 @ 0x1001ddc7 else 9 @ 0x1001ddd9

   5 @ 1001ddc7  esp = esp + 1
   6 @ 1001ddc8  eax & 0xcccccccc
   7 @ 1001ddcd  breakpoint

   9 @ 1001ddd9  __out_dx_al(dx, al, eflags)
  10 @ 1001ddda  breakpoint

1001dddb                                                                                   00 cc 01 ee ee                             .....
1001dde0  40 ee cc 7e cc ee 00 ee 00 00 01 00 02 00 00 0f 28 00 76 10 00 00 00 00 00 00 00 00 04 00 00 00  @..~............(.v.............
1001de00  00 00 01 78 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00 10 00 00 00 00 80 00 00 80 80 00 00 80  ...x............................
1001de20  00 00 00 00 00 00 00 80 c0 80 00 80 80 00 80 80 80 00 80 c0 00 00 00 c0 ff 00 00 ff ff 00 00 ff  ................................
1001de40  00 00 00 00 00 00 00 ff ff 77 00 ff ff 00 77 77 ff 00 ff ff 00 77 00 ff 77 77 77 77 77 77 77 77  .........w....ww.....w..wwwwwwww
1001de60  77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77  wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
1001de80  77 77 77 77 77 00 70 77 77 70 77 77 77 70 77 77 77 77 07 00 77 77 07 77 77 77 07 77 77 77 77 77  wwwww.pwwpwwwpwwww..ww.www.wwwww
1001dea0  77 77 70 77 77 77 77 00 77 77 70 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77 77  wwpwwww.wwpwwwwwwwwwwwwwwwwwwwww
1001dec0  77 77 77 77 77 77 77 77 00 00 77 00 77 00 00 0f 28 00 77 10 77 00 00 00 00 00 00 00 04 00 00 00  wwwwwwww..w.w...(.w.w...........
1001dee0  00 00 01 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 80 80 00 00 80  ...x............................
1001df00  00 00 00 00 00 00 00 80 c0 80 00 80 80 00 80 80 80 00 80 c0 00 00 00 c0 ff 00 00 ff ff 00 00 ff  ................................
1001df20  00 00 00 00 00 00 00 ff ff 00 00 ff ff 00 00 70 ff 00 ff ff 00 00 00 ff 77 00 00 77 00 77 00 07  ...............p........w..w.w..
1001df40  07 70 00 77 07 00 77 77 f0 00 00 0e 00 fe 0f 07 07 70 00 fe 70 00 fe fe f0 00 0f 0e e0 fe 0f 07  .p.w..ww.........p..p...........
1001df60  07 70 00 fe 70 00 fe fe f0 00 ef 0e e0 fe 0f 07 07 70 0f fe 70 00 fe fe f0 70 00 0e e0 f7 0f 07  .p..p............p..p....p......
1001df80  07 70 00 fe 70 0f fe fe f0 00 ef 07 e0 fe 00 07 07 70 ef fe 70 00 fe fe 77 00 00 77 00 77 00 70  .p..p............p..p...w..w.w.p
1001dfa0  07 70 00 77 70 00 77 77 00 00 00 00 00 00 00 0f 28 00 00 20 07 00 00 00 00 00 00 00 04 00 00 00  .p.wp.ww........(.. ............
1001dfc0  00 00 01 f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 80 80 00 00 80  ................................
1001dfe0  00 00 00 00 00 00 00 80 c0 80 00 80 80 00 80 80 80 00 80 c0 00 00 00 c0 ff 00 00 ff ff 00 00 ff  ................................
1001e000  00 00 00 00 00 00 00 ff ff 00 00 ff ff 00 00 00 ff 00 ff ff 00 00 00 ff 77 cf 00 77 00 77 cc 0f  ........................w..w.w..
1001e020  77 77 00 77 00 ff 77 77 c7 fc fc 00 cf 00 ff 0f 70 77 cc 00 f0 fc 00 77 cc cf fc ff fc ff fc 0f  ww.w..ww........pw.....w........
1001e040  70 77 fc f0 f0 fc ff 7c cc ff fc f0 cf 00 cf 0f 70 c7 fc f0 f0 ff 0f cc c7 cc fc ff ff ff fc 0f  pw.....|........p...............
1001e060  70 77 ff f0 f0 ff ff 77 c7 00 fc ff ff 00 00 00 70 77 ff f0 f0 00 00 77 c7 77 00 ff 00 ff 77 77  pw.....w........pw.....w.w....ww
1001e080  70 77 00 f0 00 77 ff 77 c7 77 77 ff 77 00 77 77 70 77 77 f0 77 70 00 77 c7 77 00 ff 00 ff 77 77  pw...w.w.ww.w.wwpww.wp.w.w....ww
1001e0a0  70 77 00 f0 07 70 ff 77 c7 00 aa ff aa 00 00 70 70 77 aa f0 07 70 00 77 c7 b0 00 ff 00 ff bb 70  pw...p.w.......ppw...p.w.......p
1001e0c0  70 77 00 f0 07 77 ff 77 c7 b0 77 f0 77 00 bb 70 70 77 77 f0 77 70 0f 77 c7 00 00 ff 00 ff 00 70  pw...w.w..w.w..ppww.wp.w.......p
1001e0e0  70 77 00 f0 07 70 ff 77 c7 77 99 00 99 00 77 77 70 77 99 00 07 70 00 77 77 00 00 77 00 77 00 28  pw...p.w.w....wwpw...p.ww..w.w.(
1001e100  77 77 00 77 07 00 77 77 04 00 00 00 00 00 00 00 0f 00 10 01 00 00 00 00 00 00 00 00 00 00 00 00  ww.w..ww........................
1001e120  00 00 78 00 00 00 00 00 80 00 00 00 00 00 80 00 00 00 00 00 00 00 00 00 80 00 80 00 80 00 80 80  ..x.............................
1001e140  80 00 00 80 00 00 00 00 ff 00 c0 80 c0 80 ff 00 80 00 c0 00 00 00 00 00 ff 00 ff 00 ff 00 ff ff  ................................
1001e160  ff 00 00 ff 00 00 00 00 77 00 ff 77 ff 77 00 77 77 77 ff 77 00 00 77 77 99 cc 70 0c 00 cc 0c 77  ........w..w.w.www.w..ww..p....w
1001e180  77 07 07 07 07 cc cc 70 99 cc 70 0c 99 cc 0c 77 77 07 07 07 07 cc cc 70 77 77 70 00 00 00 77 77  w......p..p....ww......pwwp...ww
1001e1a0  77 77 07 07 07 77 00 77 00 77 77 77 77 77 77 77 77 07 77 00 77 70 70 00 00 b0 aa 00 aa 00 bb 70  ww...w.w.wwwwwwww.w.wpp........p
1001e1c0  70 07 aa 00 07 77 70 00 00 00 77 bb 77 b0 00 70 70 07 77 00 77 70 70 00 00 00 99 77 99 77 00 28  p....wp...w.w..pp.w.wpp....w.w.(
1001e1e0  77 07 99 00 07 00 70 00 04 00 00 00 00 00 00 00 04 00 07 01 00 00 00 00 00 00 00 00 00 00 00 00  w.....p.........................
1001e200  00 00 10 00 00 00 00 00 80 00 00 00 00 00 80 00 00 00 00 00 00 00 00 00 80 00 80 00 80 00 80 80  ................................
1001e220  80 00 00 80 00 00 00 00 ff 00 c0 80 c0 80 ff 00 80 00 c0 00 00 00 00 00 ff 00 ff 00 ff 00 ff ff  ................................
1001e240  ff 00 00 ff 00 00 00 00 07 00 ff 70 ff 77 00 70 77 71 ff 77 00 70 71 00 00 00 00 00 00 00 00 07  ...........p.w.pwq.w.pq.........
1001e260  28 00 00 04 01 00 00 00 00 00 00 00 04 00 00 00 00 00 01 1c 00 00 00 00 00 00 00 00 00 00 00 00  (...............................
1001e280  00 00 00 00 00 00 00 00 80 00 00 80 80 00 00 80 00 00 00 00 00 00 00 80 c0 80 00 80 80 00 80 80  ................................
1001e2a0  80 00 80 c0 00 00 00 c0 ff 00 00 ff ff 00 00 ff 00 00 00 00 00 00 00 ff ff a8 00 ff ff 00 77 07  ..............................w.
1001e2c0  ff 00 ff ff 00 81 00 ff 00 00 77 07 a8 00 07 00 00 00 00 00 81 00 00 00 00 00 77 77 00 24 00 10  ..........w...............ww.$..
1001e2e0  07 00 00 28 00 00 03 00 00 00 00 00 00 04 00 78 01 00 0f 00 00 00 00 00 00 00 00 00 00 00 00 00  ...(...........x................
1001e300  00 00 00 00 00 00 00 00 00 80 00 00 00 80 80 00 00 00 00 00 00 00 00 80 00 c0 00 00 00 80 c0 c0  ................................
1001e320  80 00 80 80 00 00 00 80 00 ff 80 00 80 ff ff 00 00 00 80 00 00 00 00 ff 00 ff 00 00 00 ff ff ff  ................................
1001e340  ff 00 ff ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001e360  00 00 00 00 00 00 00 00 77 77 88 88 88 88 77 77 88 77 07 0f 88 80 80 77 77 77 70 00 00 07 77 77  ........ww....ww.w.....wwwp...ww
1001e380  00 77 0f 0f 00 80 80 77 77 77 70 00 00 07 77 77 00 77 0f 0f 00 80 80 77 00 00 ff ff ff ff 00 00  .w.....wwwp...ww.w.....w........
1001e3a0  ff 00 0f 00 ff 00 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10  ......p.........................
1001e3c0  00 00 00 28 00 00 00 00 00 00 00 00 00 04 00 78 01 00 0f 00 00 00 00 00 00 00 00 00 00 00 00 00  ...(...........x................
1001e3e0  00 00 00 00 00 00 00 00 00 80 00 00 00 80 80 00 00 00 00 00 00 00 00 80 00 c0 00 00 00 80 c0 c0  ................................
1001e400  80 00 80 80 00 00 00 80 00 ff 80 00 80 ff ff 00 00 00 80 00 00 00 00 ff 00 ff 00 00 00 ff ff ff  ................................
1001e420  ff 00 ff ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001e440  00 00 00 00 00 00 00 00 77 77 88 88 88 88 77 77 88 77 07 0f 88 80 80 77 07 77 77 70 70 07 77 07  ........ww....ww.w.....w.wwpp.w.
1001e460  77 77 0f 0f 00 80 80 77 77 77 70 77 00 77 77 77 00 77 0f 0f 00 80 80 77 00 00 ff ff ff ff 00 00  ww.....wwwpw.www.w.....w........
1001e480  ff 00 0f 00 ff 00 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10  ......p.........................
1001e4a0  00 00 00 28 00 00 00 00 00 00 00 00 00 04 00 78 01 00 0f 00 00 00 00 00 00 00 00 00 00 00 00 00  ...(...........x................
1001e4c0  00 00 00 00 00 00 00 00 00 80 00 00 00 80 80 00 00 00 00 00 00 00 00 80 00 c0 00 00 00 80 c0 c0  ................................
1001e4e0  80 00 80 80 00 00 00 80 00 ff 80 00 80 ff ff 00 00 00 80 00 00 00 00 ff 00 ff 00 00 00 ff ff ff  ................................
1001e500  ff 00 ff ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001e520  00 00 00 00 00 00 00 00 77 77 88 88 88 88 77 77 88 77 07 0f 88 80 80 77 77 77 77 77 70 77 77 77  ........ww....ww.w.....wwwwwpwww
1001e540  77 07 0f 0f 00 80 80 77 77 77 70 00 00 07 77 77 00 77 0f 0f 00 80 80 77 00 00 ff ff ff ff 00 00  w......wwwp...ww.w.....w........
1001e560  ff 00 0f 00 ff 00 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10  ......p.........................
1001e580  00 00 00 28 00 00 00 00 00 00 00 00 00 04 00 78 01 00 0f 00 00 00 00 00 00 00 00 00 00 00 00 00  ...(...........x................
1001e5a0  00 00 00 00 00 00 00 00 00 80 00 00 00 80 80 00 00 00 00 00 00 00 00 80 00 c0 00 00 00 80 c0 c0  ................................
1001e5c0  80 00 80 80 00 00 00 80 00 ff 80 00 80 ff ff 00 00 00 80 00 00 00 00 ff 00 ff 00 00 00 ff ff ff  ................................
1001e5e0  ff 00 ff ff 00 00 00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00 00 ff ff ff ff 00 00  ................................
1001e600  ff 00 ff 00 ff 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001e620  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
1001e640  00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00 00 ff ff ff ff 00 40  ...............................@
1001e660  ff 00 ff 28 ff 00 ff 00 00 00 00 00 00 04 02 00 01 00 10 00 00 00 00 00 00 00 00 00 00 00 00 10  ...(............................
1001e680  00 00 00 10 00 00 00 00 00 80 00 00 00 80 80 00 00 00 00 00 00 00 00 80 00 c0 00 00 00 80 c0 c0  ................................
1001e6a0  80 00 80 80 00 00 00 80 00 ff 80 00 80 ff ff 00 00 00 80 00 00 00 00 ff 00 ff 00 00 00 ff ff ff  ................................
1001e6c0  ff 00 ff ff 00 00 00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................................
1001e6e0  ff ff ff ff ff ff ff                                                                             .......

1001e6e7  int32_t sub_1001e6e7() __noreturn

   0 @ 1001e6e7  esp = esp - 1
   1 @ 1001e6e9  breakpoint

1001e6ea                                ff ff ff                                                                     ...

1001e6ed  int32_t sub_1001e6ed() __noreturn

   0 @ 1001e6ed  esp = esp - 1
   1 @ 1001e6ef  breakpoint

1001e6f0                                                  ff cc ff fc ff cf ff cc bb bb 99 99 99 99 bb bb                  ................
1001e700  99 bb f9 fb 99 bf 9f bb cc cc ff ff ff                                                           .............

1001e70d  int32_t sub_1001e70d() __noreturn

   0 @ 1001e70d  esp = esp - 1
   1 @ 1001e70f  breakpoint

1001e710                                                  ff cc ff fc ff cf ff cc bb bb 99 99 99 99 bb bb                  ................
1001e720  99 bb f9 fb 99 bf 9f bb cc cc ff ff ff                                                           .............

1001e72d  int32_t sub_1001e72d() __noreturn

   0 @ 1001e72d  esp = esp - 1
   1 @ 1001e72f  breakpoint

1001e730                                                  ff cc ff ff ff ff                                                ......

1001e736  int32_t __convention("regparm") sub_1001e736(int32_t arg1) __noreturn
// This function has unresolved stack usage. View graph of stack usage to resolve.

   0 @ 1001e736  esp = esp - 1
   1 @ 1001e738  ebx = 0x999999bb
   2 @ 1001e73d  edx:eax = sx.q(eax)
   3 @ 1001e73e  ebx = 0xffbb99bb
   4 @ 1001e743  call([ecx - 0x33440001].6)
   5 @ 1001e749  breakpoint

1001e74a                                ff ff ff                                                                     ...

1001e74d  int32_t sub_1001e74d() __noreturn

   0 @ 1001e74d  esp = esp - 1
   1 @ 1001e74f  breakpoint

1001e750                                                  ff cc ff ff ff ff                                                ......

1001e756  int32_t __convention("regparm") sub_1001e756(int32_t arg1)
// This function has unresolved stack usage. View graph of stack usage to resolve.

   0 @ 1001e756  esp = esp - 1
   1 @ 1001e758  ebx = 0x999999bb
   2 @ 1001e75d  edx:eax = sx.q(eax)
   3 @ 1001e75e  ebx = 0xffbb99bb
   4 @ 1001e763  call([ecx - 0x33440001].6)
   5 @ 1001e769  undefined

1001e76a                                ff ff ff                                                                     ...

1001e76d  int32_t sub_1001e76d() __noreturn

   0 @ 1001e76d  esp = esp - 1
   1 @ 1001e76f  breakpoint

1001e770                                                  ff cc ff ff ff ff ff fc bb bf f9 99 99 9f bb bb                  ................
1001e780  99 bb ff ff 99 ff ff fb cc cf ff ff ff                                                           .............

1001e78d  int32_t sub_1001e78d() __noreturn

   0 @ 1001e78d  esp = esp - 1
   1 @ 1001e78f  breakpoint

1001e790                                                  ff cc ff ff ff ff ff fc bb bf f9 99 99 9f bb bb                  ................
1001e7a0  99 bb ff ff 99 ff ff fb cc ff ff ff ff                                                           .............

1001e7ad  int32_t sub_1001e7ad() __noreturn

   0 @ 1001e7ad  esp = esp - 1
   1 @ 1001e7af  breakpoint

1001e7b0                                                  ff cc ff ff ff ff ff ff bb ff ff 99 99 ff bb bb                  ................
1001e7c0  99 bb ff ff 99 ff ff ff cc ff ff ff ff                                                           .............

1001e7cd  int32_t sub_1001e7cd() __noreturn

   0 @ 1001e7cd  esp = esp - 1
   1 @ 1001e7cf  breakpoint

1001e7d0                                                  ff cc ff ff ff ff ff ff bb ff ff 99 99 ff bb bb                  ................
1001e7e0  99 bb ff ff 99 ff ff ff fc ff ff ff ff ff cf cc ff cc ff ff ff ff ff ff fb ff ff 9f f9 ff bf bb  ................................
1001e800  99 bb ff ff 99 ff ff ff fc ff ff ff ff ff cf cc ff cc ff ff ff ff ff ff fb ff ff 9f f9 ff bf bb  ................................
1001e820  99 bb ff ff 99 ff ff ff ff ff ff ff ff ff ff cc ff cc ff ff ff ff ff ff ff ff ff ff ff ff ff bb  ................................
1001e840  99 bb ff ff 99 ff ff ff ff ff ff ff ff ff ff cc ff cc ff ff ff ff ff ff ff ff ff ff ff ff ff bb  ................................
1001e860  99 bb ff ff 99 ff ff ff ff ff ff ff ff ff ff cf ff fc ff ff ff ff ff ff ff ff ff ff ff ff ff bf  ................................
1001e880  9f fb ff ff f9 ff ff ff ff ff ff ff ff ff ff cf ff fc ff ff ff ff ff ff ff ff ff ff ff ff ff bf  ................................
1001e8a0  9f fb ff ff f9 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................................
1001e8c0  ff ff ff ff ff ff ff ff 00 04 00 00 00 00 00 01 6e 00 28 0a 00 00 00 00 00 00 00 02 00 00 00 00  ................n.(.............
1001e8e0  30 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 80 80 00 80 00 80  0...............................
1001e900  00 00 00 80 00 00 00 00 80 ff 80 c0 00 c0 00 00 c0 00 80 80 00 00 00 80 00 ff ff ff 00 ff 00 ff  ................................
1001e920  00 00 00 ff 00 00 00 00 ff ff ff ff 00 ff ff ff ff ff ff ff 00 ff 00 ff ff ff ff ff ff ff ff ff  ................................
1001e940  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................................
1001e960  ff ff ff ff ff 00 ff ff ff fc ff ff ff ff ff ff ff ff ff ff ff cf ff ff cf 0f 00 ff ff ff ff 00  ................................
1001e980  f0 ff ff ff 0f f0 fc fc f0 ff fc cf cf ff cc ff fc ff ff ff ff ff 00 0f ff ff ff f0 00 ff ff ff  ................................
1001e9a0  0f ff fc ff ff ff 00 ff 0f ff ff ff ff cf ff f0 ff 0f ff ff ff fc fc 0f fc ff cf 0f fc 0f ff cf  ................................
1001e9c0  0f ff ff ff ff 0f f0 ff 0f ff 0f ff f0 cf f0 0f fc 0f 0f fc ff 00 ff ff ff cf ff ff ff ff ff ff  ................................
1001e9e0  ff ff ff ff ff fc ff ff fc 0f 0f ff 0f ff 0f 0f f0 ff ff ff 0f f0 fc cf f0 cf ff ff fc ff ff fc  ................................
1001ea00  cf ff ff 0f ff ff 0f 0f ff ff ff f0 0f ff ff ff 0f ff fc ff 0f ff 00 ff ff ff ff ff ff fc ff f0  ................................
1001ea20  ff 0f ff ff ff fc cf 00 cf ff fc ff cf 0f cf fc 00 ff ff ff ff 00 f0 fc 00 ff 0f cc f0 ff f0 0f  ................................
1001ea40  ff ff ff cf ff 00 fc ff ff cf ff ff ff ff ff ff ff ff ff ff ff fc ff ff ff 0f 0f ff 0f ff 0f 0f  ................................
1001ea60  f0 ff ff ff 0f f0 fc cf f0 ff ff fc fc ff ff fc ff ff ff 0f ff cf 0f 0f ff ff ff f0 0f ff ff ff  ................................
1001ea80  0f ff fc ff 0f ff 00 ff 0f ff ff ff ff cf ff f0 ff 0f ff ff ff fc fc 0f fc ff cf 0f ff 0f fc ff  ................................
1001eaa0  0f ff ff ff ff 0f f0 ff 0f ff 0f ff f0 ff f0 0f fc 0f 0f fc ff 00 cf ff ff fc ff ff ff ff ff ff  ................................
1001eac0  ff ff ff ff ff cf ff ff cf 0f 00 0f ff ff ff 00 00 ff ff ff 0f 00 fc fc 00 ff fc cf cf ff cc ff  ................................
1001eae0  fc 0f 0f ff ff cf 00 0f ff ff ff 00 00 0f ff ff 0f ff fc ff ff ff 00 ff ff ff ff ff ff ff ff ff  ................................
1001eb00  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................................
1001eb20  ff ff ff ff ff 00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................................
1001eb40  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00 00 ff ff ff ff 00 08  ................................
1001eb60  ff 00 ff 28 ff 00 00 00 00 00 00 00 00 04 00 2c 01 00 0b 00 00 00 00 00 00 00 00 00 00 00 00 10  ...(...........,................
1001eb80  00 00 00 10 00 00 00 00 00 80 00 00 00 80 80 00 00 00 00 00 00 00 00 80 00 c0 00 00 00 80 c0 c0  ................................
1001eba0  80 00 80 80 00 00 00 80 00 ff 80 00 80 ff ff 00 00 00 80 00 00 00 00 ff 00 ff 00 00 00 ff ff ff  ................................
1001ebc0  ff 00 ff ff 00 00 00 ff 07 07 77 77 77 77 70 77 77 77 77 77 77 77 77 70 07 07 00 00 00 00 70 77  ..........wwwwpwwwwwwwwp......pw
1001ebe0  70 77 70 77 07 77 07 70 77 00 77 77 77 77 00 28 77 77 77 77 77 00 77 77 04 00 00 00 00 00 00 00  pwpw.w.pw.wwww.(wwwww.ww........
1001ec00  09 00 09 01 00 00 00 00 00 00 00 00 00 00 00 10 00 00 48 00 00 00 00 00 80 00 00 00 00 00 80 00  ..................H.............
1001ec20  00 00 10 00 00 00 00 00 80 00 80 00 80 00 80 80 80 00 00 80 00 00 00 00 ff 00 c0 80 c0 80 ff 00  ................................
1001ec40  80 00 c0 00 00 00 00 00 ff 00 ff 00 ff 00 ff ff ff 00 00 ff 00 00 00 00 00 77 ff 77 ff 77 07 70  .........................w.w.w.p
1001ec60  77 00 ff 70 00 00 77 00 00 00 00 00 00 70 00 77 70 00 70 70 00 07 00 00 00 00 00 70 00 00 00 77  w..p..w......p.wp.pp.......p...w
1001ec80  77 00 70 70 00 07 77 00 00 77 00 00 00 70 07 70 70 00 70 70 00 00 00 00 00 00 00 77 00 77 00 00  w.pp..w..w...p.pp.pp.......w.w..
1001eca0  77 00 70 70 00 00 77 00 65 00 00 00 48 61 00 72 65 00 10 64 00 00 00 00 65 61 00 00 f4 69 00 6e  w.pp..w.e...Ha.re..d....ea...i.n
1001ecc0  46 00 00 6c 80 00 00 00 00 f5 00 00 65 26 00 00 09 00 6d 66 00 80 00 00 50 74 00 00 75 6c 00 61  F..l........e&....mf....Pt..ul.a
1001ece0  6c 00 46 20 00 00 00 00 00 00 00 00 09 46 00 00 26 00 68 00 00 00 00 00 72 6e 00 00 f6 75 00 65  l.F .........F..&.h.....rn...u.e
1001ed00  43 00 00 72 80 00 00 00 65 26 00 00 20 61 00 09 50 00 74 67 00 00 00 00 6f 61 00 00 00 f7 00 74  C..r....e&.. a..P.tg....oa.....t
1001ed20  00 00 70 54 00 00 80 00 65 09 00 00 20 61 00 73 50 00 6c 67 00 00 00 00 00 f8 00 00 50 00 00 00  ..pT....e... a.sP.lg........P...
1001ed40  00 00 26 00 00 80 00 00 28 34 00 00 69 65 00 32 6d 00 54 20 00 00 00 00 26 00 00 00 68 29 00 74  ..&.....(4..ie.2m.T ....&...h).t
1001ed60  72 00 20 09 00 00 00 00 65 28 00 00 f9 69 00 20 54 00 00 6d 80 00 00 00 29 26 00 00 4d 50 00 09  r. .....e(...i. T..m....)&..MP..
1001ed80  2f 00 41 4d 00 00 00 00 69 65 00 00 00 fa 00 6d 00 00 54 54 00 00 80 00 61 29 00 00 28 6f 00 6c  /.AM....ie.....m..TT....a)..(o.l
1001eda0  4c 00 20 63 00 00 00 00 00 00 00 00 26 00 00 00 69 00 09 00 00 00 00 00 74 44 80 00 53 6f 00 20  L. c........&...i.......tD..So. 
1001edc0  68 00 fb 72 00 00 00 00 64 00 00 00 74 09 00 00 65 00 61 26 00 00 00 00 20 61 80 00 4c 6e 00 44  h..r....d...t...e.a&.... a..Ln.D
1001ede0  6f 00 fc 67 00 00 00 00 00 00 00 00 65 26 00 00 09 00 74 44 00 00 00 00 66 20 00 80 00 4c 00 74  o..g........e&....tD....f ...L.t
1001ee00  fd 00 00 65 00 00 00 00 66 09 00 00 75 74 00 79 73 00 4a 69 00 00 00 00 43 6e 00 00 6c 00 00 65  ...e....f...ut.ys.Ji....Cn..l..e
1001ee20  00 00 26 fe 00 00 00 80 63 80 00 00 65 09 00 00 72 00 74 26 00 00 00 00 74 4a 80 00 52 67 00 20  ..&.....c...e...r.t&....tJ..Rg. 
1001ee40  69 00 ff 68 00 00 00 00 79 26 00 00 73 69 00 09 74 00 75 66 00 00 00 00 6f 65 00 00 00 46 00 74  i..h....y&..si..t.uf....oe...F.t
1001ee60  90 00 72 6f 00 00 00 00 69 65 00 00 00 e5 00 6c 00 00 72 46 00 00 80 00 26 00 00 00 61 65 00 66  ..ro....ie.....l..rF....&...ae.f
1001ee80  6d 00 6e 09 00 00 00 00 6c 50 00 00 e6 75 00 20 46 00 00 6c 80 00 00 00 46 00 00 00 74 09 00 00  m.n.....lP...u. F..l....F...t...
1001eea0  68 00 61 26 00 00 00 00 75 72 00 00 00 e7 00 72 00 00 00 43 00 00 80 00 61 65 00 00 6e 20 00 67  h.a&....ur.....r...C....ae..n .g
1001eec0  74 00 65 50 00 00 00 00 e8 6f 00 00 26 00 00 54 70 80 09 00 00 00 00 00 61 65 00 00 61 20 00 67  t.eP.....o..&..Tp.......ae..a .g
1001eee0  6c 00 74 50 00 00 00 00 00 00 00 00 09 50 00 00 26 00 73 00 00 00 00 00 65 28 00 00 e9 69 00 20  l.tP.........P..&.s.....e(...i. 
1001ef00  54 00 00 6d 80 00 00 00 29 26 00 00 34 68 00 09 20 00 32 72 00 00 00 00 69 65 00 00 00 ea 00 6d  T..m....)&..4h.. .2r....ie.....m
1001ef20  00 00 74 54 00 00 80 00 50 29 00 00 28 4d 00 4d 41 00 20 2f 00 00 00 00 eb 69 00 00 26 00 00 54  ..tT....P)..(M.MA. /.....i..&..T
1001ef40  54 80 09 00 00 00 00 00 6f 61 00 00 65 28 00 63 20 00 6d 4c 00 00 00 00 00 00 00 00 29 26 00 00  T.......oa..e(.c .mL........)&..
1001ef60  09 00 6c 69 00 00 00 00 6f 74 00 80 00 53 00 72 ec 00 00 68 00 00 00 00 09 64 00 00 44 74 00 26  ..li....ot...S.r...h.....d..Dt.&
1001ef80  61 00 20 65 00 00 00 00 6e 20 00 80 00 4c 00 67 ed 00 00 6f 00 00 00 00 26 00 00 00 61 65 00 44  a. e....n ...L.g...o....&...ae.D
1001efa0  74 00 44 09 00 00 00 00 4c 66 00 00 00 00 00 65 00 00 00 ee 00 00 00 80 74 66 00 00 20 75 00 69  t.D.....Lf.....e........tf.. u.i
1001efc0  4a 00 74 73 00 00 00 00 00 43 00 00 09 6c 80 ef 26 00 79 00 00 00 00 00 09 63 00 00 6e 65 00 26  J.ts.....C...l..&.y......c..ne.&
1001efe0  74 00 65 72 00 00 00 00 67 74 00 80 80 52 00 68 f0 00 00 69 00 00 00 00 69 79 00 00 4a 73 00 66  t.er....gt...R.h...i....iy..Js.f
1001f000  75 00 20 74 00 00 00 00 00 4d 00 00 26 00 00 90 72 00 09 00 00 00 00 00 d0 00 00 00 6e 00 00 2b  u. t.....M..&...r...........n..+
1001f020  75 84 65 00 00 00 00 00 2a 00 00 00 00 00 00 00 00 00 00 d4 00 00 00 84 25 00 84 00 2f 00 00 00  u.e.....*...............%.../...
1001f040  00 00 d5 d6 00 00 00 84 d8 00 84 00 26 00 00 7c 26 84 d7 00 00 00 00 00 da 3c 00 00 d9 00 00 3c  ............&..|&........<.....<
1001f060  5e 84 00 00 84 00 00 00 00 00 00 84 00 3e 00 00 db 00 00 3e 00 00 00 00 79 65 00 84 00 55 00 74  ^............>.....>....ye...U.t
1001f080  d2 00 00 42 00 00 00 00 00 55 00 00 74 29 84 d3 28 00 41 00 00 00 00 00 41 28 00 00 68 72 00 74  ...B.....U..t)..(.A.....A(..hr.t
1001f0a0  6f 00 53 74 00 00 00 00 4c 6e 00 00 00 dc 00 6f 00 00 29 55 00 00 84 00 00 e3 00 00 41 28 00 00  o.St....Ln.....o..)U........A(..
1001f0c0  74 00 67 29 00 84 00 00 41 28 00 00 51 61 00 74 75 00 55 64 00 00 00 00 79 65 00 00 00 e0 00 74  t.g)....A(..Qa.tu.Ud....ye.....t
1001f0e0  00 00 29 62 00 00 84 00 36 29 00 00 6c 70 00 28 69 00 66 31 00 00 00 00 74 66 00 84 00 62 00 65  ..)b....6)..lp.(i.f1....tf...b.e
1001f100  e1 00 00 79 00 00 00 00 28 00 00 00 69 33 00 29 70 00 6c 32 00 00 00 00 65 6c 00 00 e2 79 00 66  ...y....(...i3.)p.l2....el...y.f
1001f120  62 00 00 74 84 00 00 00 29 00 00 00 70 34 00 00 36 00 69 28 00 00 00 00 61 74 00 00 00 dd 00 73  b..t....)...p4..6.i(....at.....s
1001f140  00 00 00 6c 00 00 84 00 61 74 00 84 00 73 00 72 de 00 00 74 00 00 00 00 72 79 00 84 00 61 00 61  ...l....at...s.r...t....ry...a.a
1001f160  df 00 00 72 00 00 00 00 00 e4 00 00 6e 65 00 00 64 00 69 78 00 84 00 00 65 67 00 00 69 65 00 6e  ...r........ne..d.ix....eg..ie.n
1001f180  6c 00 66 6c 00 00 00 00 00 e5 00 00 68 00 00 00 00 00 74 00 00 84 00 00 6f 00 00 00 69 64 00 73  l.fl........h.....t.....o...id.s
1001f1a0  6e 00 66 70 00 00 00 00 64 65 00 00 e6 69 00 6c 66 00 80 6e 84 00 00 00 00 00 00 00 67 68 00 00  n.fp....de...i.lf..n........gh..
1001f1c0  74 00 6e 00 00 00 00 00 4d 52 00 00 42 4f 00 41 4f 00 90 4b 00 00 00 00 55 00 00 00 5f 4f 00 50  t.n.....MR..BO.AO..K....U..._O.P
1001f1e0  50 00 4b 50 00 00 00 00 74 42 00 00 91 65 00 20 4e 00 00 78 05 00 00 00 72 00 00 00 6f 6d 00 6b  P.KP....tB...e. N..x....r...om.k
1001f200  6b 00 6f 61 00 00 00 00 76 6f 00 00 92 72 00 69 50 00 00 65 05 00 00 00 6f 6d 00 00 73 42 00 6b  k.oa....vo...r.iP..e....om..sB.k
1001f220  20 00 75 6f 00 00 00 00 00 00 00 00 72 00 00 00 6b 00 61 00 00 00 00 00 6f 53 00 00 26 6f 00 20   .uo........r...k.a.....oS..&o. 
1001f240  47 00 fd 74 00 00 00 00 65 20 00 00 6c 63 00 64 65 00 65 74 00 00 00 00 61 6b 00 00 6f 6b 00 72  G..t....e ..lc.de.et....ak..ok.r
1001f260  6f 00 42 6d 00 00 00 00 65 65 00 00 00 26 00 6c fe 00 00 53 00 00 00 00 6f 6d 00 00 74 42 00 6b  o.Bm....ee...&.l...S....om..tB.k
1001f280  20 00 63 6f 00 00 00 00 61 61 00 00 72 20 00 74 6b 00 61 44 00 00 00 00 70 20 00 e1 00 43 00 79   .co....aa..r .tk.aD....p ...C.y
1001f2a0  22 00 00 6f 00 00 00 00 09 74 00 00 61 75 00 43 6c 00 56 65 00 00 00 00 00 43 00 00 6c 43 89 e2  "..o.....t..au.Cl.Ve.....C..lC..
1001f2c0  2b 00 72 00 00 00 00 00 64 72 00 00 70 20 00 64 79 00 6f 41 00 00 00 00 0f 45 00 00 73 00 00 26  +.r.....dr..p .dy.oA.....E..s..&
1001f2e0  73 05 65 00 00 00 00 00 6f 6b 00 00 69 20 00 6f 74 00 64 42 00 00 00 00 2e 00 00 00 61 6b 00 2e  s.e.....ok..i .ot.dB........ak..
1001f300  72 00 6d 2e 00 00 00 00 6d 76 00 00 10 52 00 6f 26 00 00 65 05 00 00 00 6b 61 00 00 20 6f 00 6d  r.m.....mv...R.o&..e....ka.. o.m
1001f320  42 00 65 6f 00 00 00 00 6c 00 00 00 6b 44 00 00 09 00 72 65 00 00 00 00 70 6e 00 00 00 11 00 65  B.eo....l...kD....re....pn.....e
1001f340  00 00 00 4f 00 00 05 00 6b 61 00 00 26 6f 00 6d 42 00 20 6f 00 00 00 00 6c 65 00 00 6b 43 00 6c  ...O....ka..&o.mB. o....le..kC.l
1001f360  20 00 72 6f 00 00 00 00 2e 2e 00 00 74 6f 00 2e 69 00 63 6e 00 00 00 00 2b 68 00 00 43 72 00 53   .ro........to..i.cn....+h..Cr.S
1001f380  74 00 09 6c 00 00 00 00 00 12 00 00 66 2b 00 00 74 00 69 42 00 05 00 00 00 13 00 00 53 76 00 00  t..l........f+..t.iB........Sv..
1001f3a0  61 00 26 65 00 05 00 00 26 73 00 00 61 65 00 41 76 00 53 20 00 00 00 00 00 00 00 00 2e 00 00 00  a.&e....&s..ae.Av.S ............
1001f3c0  2e 00 2e 00 00 00 00 00 20 6f 05 00 26 64 00 42 41 00 0e 64 00 00 00 00 6b 2e 00 00 6b 61 00 2e  ........ o..&d.BA..d....k...ka..
1001f3e0  6d 00 6f 72 00 00 00 00 6c 42 00 00 09 74 00 2b 43 00 2e 72 00 00 00 00 6c 61 00 85 00 43 00 65  m.or....lB...t.+C..r....la...C.e
1001f400  2b 00 00 26 00 00 00 00 6b 61 00 00 20 6f 00 6d 42 00 72 6f 00 00 00 00 37 6f 00 00 6b 00 00 43  +..&....ka.. o.mB.ro....7o..k..C
1001f420  73 85 72 80 00 00 00 00 69 6e 00 00 6c 63 00 6f 65 00 6c 74 00 00 00 00 70 72 00 00 26 72 00 65  s.r.....in..lc.oe.lt....pr..&r.e
1001f440  50 00 20 6f 00 00 00 00 2e 00 00 00 69 73 00 2e 65 00 74 2e 00 00 00 00 52 43 00 00 00 53 00 55  P. o........is..e.t.....RC...S.U
1001f460  90 00 00 54 00 00 00 00 50 50 00 00 55 45 00 4f 52 00 54 5f 00 00 00 00 26 64 00 00 50 00 00 45  ...T....PP..UE.OR.T_....&d..P..E
1001f480  00 00 55 75 00 00 00 80 00 22 00 00 74 46 00 00 09 00 69 32 00 e1 00 00 09 74 00 00 26 70 00 43  ..Uu....."..tF....i2.....t..&p.C
1001f4a0  6f 00 43 79 00 00 00 00 00 00 00 00 6c 43 00 00 2b 00 72 00 00 00 00 00 63 20 00 00 93 26 00 6b  o.Cy........lC..+.r.....c ...&.k
1001f4c0  4c 00 00 6f 89 00 00 00 74 72 00 00 74 75 00 75 72 00 53 63 00 00 00 00 46 6f 00 00 00 94 00 6c  L..o....tr..tu.ur.Sc....Fo.....l
1001f4e0  00 00 65 26 00 00 89 00 72 63 00 00 74 53 00 75 20 00 61 74 00 00 00 00 00 56 00 00 75 65 89 89  ..e&....rc..tS.u .at.....V..ue..
1001f500  72 00 74 00 00 00 00 00 56 6c 00 00 69 77 00 61 65 00 26 20 00 00 00 00 6f 20 00 00 64 74 00 6e  r.t.....Vl..iw.ae.& ....o ..dt.n
1001f520  61 00 69 69 00 00 00 00 73 2e 00 00 74 74 00 2e 61 00 53 75 00 00 00 00 00 26 00 00 00 00 05 14  a.ii....s...tt..a.Su.....&......
1001f540  00 00 2e 00 00 00 00 00 74 53 00 00 65 65 00 20 6c 00 53 63 00 00 00 00 75 65 00 00 72 63 00 72  ........tS..ee. l.Sc....ue..rc.r
1001f560  75 00 74 74 00 00 00 00 61 79 00 00 4c 62 00 72 69 00 20 72 00 00 00 00 74 6c 00 00 2e 09 00 72  u.tt....ay..Lb.ri. r....tl.....r
1001f580  2e 00 2e 43 00 00 00 00 74 4c 00 00 53 69 00 2b 68 00 2b 66 00 00 00 00 6c 73 00 05 00 43 00 6f  ...C....tL..Si.+h.+f....ls...C.o
1001f5a0  18 00 00 26 00 00 00 00 72 72 00 00 20 69 00 61 4c 00 65 62 00 00 00 00 26 6c 00 00 00 27 00 65  ...&....rr.. i.aL.eb....&l...'.e
1001f5c0  00 00 79 52 00 00 05 00 69 72 00 00 61 20 00 62 64 00 6f 4c 00 00 00 00 00 00 00 00 72 00 00 00  ..yR....ir..a .bd.oL........r...
1001f5e0  79 00 61 00 00 00 00 00 20 74 05 00 26 64 00 53 41 00 15 64 00 00 00 00 72 2e 00 00 75 74 00 65  y.a..... t..&d.SA..d....r...ut.e
1001f600  63 00 72 75 00 00 00 00 72 2b 00 00 2e 43 00 6c 09 00 2e 74 00 00 00 00 52 6d 00 00 00 16 00 65  c.ru....r+...C.l...t....Rm.....e
1001f620  00 00 4c 26 00 00 05 00 74 75 00 00 76 20 00 72 65 00 6f 53 00 00 00 00 00 17 00 00 74 72 00 00  ..L&....tu..v .re.oS........tr..
1001f640  75 00 63 65 00 05 00 00 72 53 00 00 43 65 00 20 6c 00 26 61 00 00 00 00 75 65 00 00 72 63 00 72  u.ce....rS..Ce. l.&a....ue..rc.r
1001f660  75 00 74 74 00 00 00 00 65 72 00 00 00 88 00 66 00 00 73 52 00 00 89 00 41 6c 00 00 73 68 00 6c  u.tt....er.....f..sR....Al..sh.l
1001f680  26 00 65 20 00 00 00 00 63 75 00 00 53 72 00 74 74 00 20 75 00 00 00 00 00 00 00 00 65 00 00 00  &.e ....cu..Sr.tt. u........e...
1001f6a0  73 00 72 00 00 00 00 00 6f 53 89 00 26 6f 00 20 47 00 82 74 00 00 00 00 75 65 00 00 72 63 00 72  s.r.....oS..&o. G..t....ue..rc.r
1001f6c0  75 00 74 74 00 00 00 00 74 00 00 00 53 61 00 00 74 00 20 72 00 00 00 00 6f 53 89 00 47 26 00 20  u.tt....t...Sa..t. r....oS..G&. 
1001f6e0  6f 00 83 74 00 00 00 00 75 65 00 00 72 63 00 72 75 00 74 74 00 00 00 00 00 47 00 00 45 64 89 81  o..t....ue..rc.ru.tt.....G..Ed..
1001f700  6e 00 20 00 00 00 00 00 74 75 00 00 74 20 00 72 6f 00 6f 53 00 00 00 00 20 56 00 00 74 72 00 26  n. .....tu..t .ro.oS.... V..tr.&
1001f720  75 00 63 65 00 00 00 00 28 61 00 00 6c 65 00 76 75 00 61 20 00 00 00 00 73 6f 00 00 75 20 00 20  u.ce....(a..le.vu.a ....so..u . 
1001f740  65 00 6c 61 00 00 00 00 29 80 00 00 66 65 00 00 73 00 66 74 00 00 00 00 63 20 89 00 53 6c 00 74  e.la....)...fe..s.ft....c ..Sl.t
1001f760  65 00 84 65 00 00 00 00 74 72 00 00 74 75 00 75 72 00 53 63 00 00 00 00 74 00 00 00 20 44 00 61  e..e....tr..tu.ur.Sc....t... D.a
1001f780  26 00 65 61 00 00 00 00 46 45 00 00 00 4f 00 53 90 00 00 46 00 00 00 00 55 00 00 00 5f 4f 00 50  &.ea....FE...O.S...F....U..._O.P
1001f7a0  50 00 54 50 00 00 00 00 78 00 00 00 2e 48 00 00 26 00 08 65 80 00 00 00 69 61 80 00 26 65 00 6d  P.TP....x....H..&..e....ia..&e.m
1001f7c0  44 00 2f 63 00 00 00 00 00 53 00 00 00 00 85 3e 00 00 6c 00 00 00 00 00 6e 20 00 00 61 74 00 67  D./c.....S.....>..l.....n ..at.g
1001f7e0  72 00 74 69 00 00 00 00 74 2e 00 00 66 73 00 2e 66 00 4f 65 00 00 00 00 64 65 00 00 00 41 00 72  r.ti....t...fs..f.Oe....de...A.r
1001f800  10 00 2e 64 00 00 00 00 64 68 00 00 73 57 00 74 20 00 73 69 00 00 00 00 20 69 00 85 00 26 00 44  ...d....dh..sW.t .si.... i...&.D
1001f820  3f 00 00 34 00 00 00 00 00 26 00 00 69 73 85 40 74 00 67 00 00 00 00 00 69 73 00 00 20 69 00 74  ?..4.....&..is.@t.g.....is.. i.t
1001f840  44 00 35 67 00 00 00 00 20 69 00 85 00 26 00 44 41 00 00 36 00 00 00 00 00 26 00 00 69 73 85 42  D.5g.... i...&.DA..6.....&..is.B
1001f860  74 00 67 00 00 00 00 00 69 73 00 00 20 69 00 74 44 00 37 67 00 00 00 00 20 69 00 85 00 26 00 44  t.g.....is.. i.tD.7g.... i...&.D
1001f880  43 00 00 38 00 00 00 00 00 26 00 00 69 73 85 44 74 00 67 00 00 00 00 00 69 73 00 00 20 69 00 74  C..8.....&..is.Dt.g.....is.. i.t
1001f8a0  44 00 39 67 00 00 00 00 30 44 00 85 80 26 00 20 45 00 00 31 00 00 00 00 00 4f 00 00 67 74 00 10  D.9g....0D...&. E..1.....O..gt..
1001f8c0  69 00 69 73 00 00 00 00 2f 6e 00 00 66 65 00 49 73 00 66 74 00 00 00 00 79 00 00 00 65 20 00 00  i.is..../n..fe.Is.ft....y...e ..
1001f8e0  78 00 64 42 00 00 00 00 20 64 85 00 42 74 00 28 79 00 47 65 00 00 00 00 74 00 00 00 66 75 00 29  x.dB.... d..Bt.(y.Ge....t...fu.)
1001f900  61 00 65 6c 00 00 00 00 64 28 00 00 48 6f 00 20 57 00 00 72 85 00 00 00 65 29 00 00 20 79 00 73  a.el....d(..Ho. W..r....e).. y.s
1001f920  62 00 32 74 00 00 00 00 6f 64 00 85 80 44 00 72 49 00 00 57 00 00 00 00 79 65 00 00 28 20 00 74  b.2t....od...D.rI..W....ye..( .t
1001f940  34 00 20 62 00 00 00 00 00 0c 00 00 29 00 00 80 00 00 73 00 00 80 00 00 2e 2e 00 00 47 74 00 2e  4. b........).....s.........Gt..
1001f960  6f 00 26 6f 00 00 00 00 2b 00 00 00 43 72 00 47 74 00 09 6c 00 00 00 00 50 50 00 00 00 50 00 55  o.&o....+...Cr.Gt..l....PP...P.U
1001f980  90 00 00 4f 00 00 00 00 74 20 00 80 00 42 00 65 a3 00 00 79 00 00 00 00 2e 00 00 00 6c 70 00 2e  ...O....t ...B.e...y........lp..
1001f9a0  69 00 46 2e 00 00 00 00 65 73 00 00 a4 6e 00 72 49 00 00 76 80 00 00 00 73 00 00 00 20 69 00 00  i.F.....es...n.rI..v....s... i..
1001f9c0  42 00 65 74 00 00 00 00 74 4c 80 00 53 69 00 20 68 00 a5 66 00 00 00 00 2e 00 00 00 66 2e 00 00  B.et....tL..Si. h..f........f...
1001f9e0  74 00 65 2e 00 00 00 00 74 52 80 00 53 69 00 20 68 00 a6 66 00 00 00 00 2e 00 00 00 67 74 00 2e  t.e.....tR..Si. h..f........gt..
1001fa00  68 00 69 2e 00 00 00 00 61 65 00 00 a7 6f 00 74 52 00 00 74 80 00 00 00 2e 2e 00 00 4c 66 00 2e  h.i.....ae...o.tR..t........Lf..
1001fa20  65 00 20 74 00 00 00 00 74 74 00 80 00 52 00 61 a8 00 00 6f 00 00 00 00 68 2e 00 00 20 69 00 74  e. t....tt...R.a...o....h... i.t
1001fa40  52 00 65 67 00 00 00 00 6c 63 00 00 00 22 00 6f 00 00 2e 42 00 00 85 00 66 20 00 00 20 68 00 74  R.eg....lc...".o...B....f .. h.t
1001fa60  53 00 6b 69 00 00 00 00 00 42 00 00 65 74 85 23 66 00 4c 00 00 00 00 00 53 69 00 00 6f 6b 00 68  S.ki.....B..et.#f.L.....Si..ok.h
1001fa80  63 00 6c 20 00 00 00 00 67 74 00 00 74 52 00 68 20 00 66 69 00 00 00 00 74 43 00 85 00 53 00 20  c.l ....gt..tR.h .fi....tC...S. 
1001faa0  28 00 00 65 00 00 00 00 67 56 00 00 69 69 00 20 6c 00 65 6e 00 00 00 00 2e 00 00 00 6c 65 00 2e  (..e....gV..ii. l.en........le..
1001fac0  75 00 61 2e 00 00 00 00 20 6c 00 00 29 65 00 46 53 00 00 74 85 00 00 00 61 75 00 00 6f 20 00 6c  u.a..... l..)e.FS..t....au..o .l
1001fae0  72 00 6f 56 00 00 00 00 00 00 00 00 2e 2e 00 00 2e 00 65 00 00 00 00 00 2e 2e 00 00 93 4e 00 2e  r.oV..............e..........N..
1001fb00  41 00 00 44 84 00 00 00 2e 2e 00 80 00 4f 00 2e aa 00 00 52 00 00 00 00 52 2e 00 80 00 58 00 2e  A..D.........O.....R....R....X..
1001fb20  a9 00 00 4f 00 00 00 00 00 43 00 00 00 00 80 b2 00 00 2e 00 00 00 00 00 20 69 00 00 61 67 00 53  ...O.....C.............. i..ag.S
1001fb40  6e 00 68 65 00 00 00 00 00 ad 00 00 6e 2e 00 00 2e 00 67 2e 00 80 00 00 2e 00 00 00 64 2e 00 00  n.he........n.....g.........d...
1001fb60  64 00 41 2e 00 00 00 00 72 63 80 00 53 62 00 61 75 00 ae 74 00 00 00 00 00 4d 00 00 2e 2e 80 af  d.A.....rc..Sb.au..t.....M......
1001fb80  2e 00 74 00 00 00 00 00 6c 2e 00 00 6c 69 00 79 74 00 75 70 00 00 00 00 44 76 00 00 2e 00 00 69  ..t.....l...li.yt.up....Dv.....i
1001fba0  00 00 2e b0 00 00 00 80 2e 00 00 00 64 2e 00 00 65 00 69 2e 00 00 00 00 2e 00 80 00 4d 64 00 2e  ............d...e.i.........Md..
1001fbc0  6f 00 b1 2e 00 00 00 00 55 70 00 00 00 00 00 70 00 00 00 1e 00 00 00 85 73 00 00 00 72 43 00 65  o.......Up.....p........s...rC.e
1001fbe0  20 00 65 61 00 00 00 00 65 20 00 00 1f 6f 00 72 4c 00 00 77 85 00 00 00 80 49 00 00 61 65 85 21   .ea....e ...o.rL..w.....I..ae.!
1001fc00  73 00 43 00 00 00 00 00 65 43 00 00 76 72 00 20 65 00 6e 73 00 00 00 00 00 44 00 00 73 00 00 90  s.C.....eC..vr. e.ns.....D..s...
1001fc20  65 00 61 00 00 00 00 00 49 55 00 00 54 5f 00 53 41 00 41 56 00 00 00 00 52 50 00 00 4c 5a 00 5f  e.a.....IU..T_.SA.AV....RP..LZ._
1001fc40  49 00 41 45 00 00 00 00 00 5a 00 00 50 50 05 1c 55 00 4f 00 00 00 00 00 6f 45 00 00 6f 20 00 20  I.AE.....Z..PP..U.O.....oE..o . 
1001fc60  6d 00 6f 74 00 00 00 00 20 69 00 00 69 6f 00 56 74 00 64 72 00 00 00 00 5a 6f 00 00 77 00 00 6f  m.ot.... i..io.Vt.dr....Zo..w..o
1001fc80  00 00 65 1d 00 00 00 05 44 63 00 00 20 6f 00 6f 74 00 6d 20 00 00 00 00 6f 20 00 05 00 5a 00 6d  ..e.....Dc.. o.ot.m ....o ...Z.m
1001fca0  1e 00 00 6f 00 00 00 00 5a 6f 00 00 6e 00 00 6f 00 00 49 1f 00 00 00 05 00 00 00 00 20 75 00 00  ...o....Zo..n..o..I......... u..
1001fcc0  4f 00 6d 74 00 00 00 00 74 68 00 05 00 4d 00 63 20 00 00 61 00 00 00 00 6f 20 00 00 45 69 00 72  O.mt....th...M.c ..a....o ..Ei.r
1001fce0  64 00 20 74 00 00 00 00 65 67 00 00 6f 20 00 6e 77 00 52 4c 00 00 00 00 49 63 00 00 68 00 00 6e  d. t....eg..o .nw.RL....Ic..h..n
1001fd00  00 00 74 21 00 00 00 05 20 6f 00 00 65 73 00 52 61 00 72 65 00 00 00 00 67 68 00 00 20 65 00 74  ..t!.... o..es.Ra.re....gh.. e.t
1001fd20  4c 00 77 6e 00 00 00 00 63 65 00 05 00 44 00 72 22 00 00 65 00 00 00 00 6f 20 00 00 73 20 00 77  L.wn....ce...D.r"..e....o ..s .w
1001fd40  65 00 61 52 00 00 00 00 68 00 00 00 65 67 00 00 6e 00 4c 74 00 00 00 00 52 77 05 00 53 74 00 6f  e.aR....h...eg..n.Lt....Rw..St.o
1001fd60  65 00 23 20 00 00 00 00 74 2e 00 00 4c 6e 00 68 65 00 20 67 00 00 00 00 00 24 00 00 2e 00 00 80  e.# ....t...Ln.he. g.....$......
1001fd80  00 00 2e 00 00 05 00 00 73 00 00 00 65 72 00 68 66 00 52 65 00 00 00 00 49 4b 00 00 00 51 00 43  ........s...er.hf.Re....IK...Q.C
1001fda0  90 00 00 55 00 00 00 00 50 50 00 00 41 43 00 4f 4c 00 43 5f 00 00 00 00 68 77 00 00 50 10 00 6f  ...U....PP..AC.OL.C_....hw..P..o
1001fdc0  00 00 55 53 00 00 00 00 6c 73 00 00 52 73 00 74 65 00 20 75 00 00 00 00 cf 65 00 00 41 00 00 48  ..US....ls..Rs.te. u.....e..A..H
1001fde0  73 89 20 00 00 00 00 00 65 69 00 00 00 d0 00 63 00 00 78 44 00 00 89 00 d1 61 00 00 61 00 00 4d  s. .....ei.....c..xD.....a..a..M
1001fe00  6c 89 6d 80 00 00 00 00 6f 6c 00 00 63 20 00 6f 68 00 74 54 00 00 00 00 65 74 00 00 61 20 00 74  l.m.....ol..c .oh.tT....et..a .t
1001fe20  72 00 62 53 00 00 00 00 49 74 00 00 6e 00 00 6e 67 00 69 10 00 00 00 00 74 42 00 00 72 72 00 20  r.bS....It..n..ng.i.....tB..rr. 
1001fe40  70 00 65 65 00 00 00 00 72 65 00 00 74 20 00 64 65 00 79 4f 00 00 00 00 00 42 00 00 20 73 89 d2  p.ee....re..t .de.yO.....B.. s..
1001fe60  41 00 72 00 00 00 00 00 64 61 00 00 67 45 00 69 20 00 69 6e 00 00 00 00 74 72 00 00 20 4d 00 6f  A.r.....da..gE.i .in....tr.. M.o
1001fe80  28 00 6e 6f 00 00 00 00 00 4c 00 00 6c 29 89 d3 61 00 6f 00 00 00 00 00 20 6e 00 00 74 6c 00 45  (.no.....L..l)..a.o..... n..tl.E
1001fea0  74 00 69 65 00 00 00 00 28 6e 00 00 69 6e 00 49 61 00 64 20 00 00 00 00 80 4d 00 00 65 29 89 d4  t.ie....(n..in.Ia.d .....M..e)..
1001fec0  6c 00 74 00 00 00 00 00 54 6f 00 00 74 68 00 6f 63 00 61 20 00 00 00 00 53 74 00 00 62 72 00 65  l.t.....To..th.oc.a ....St..br.e
1001fee0  61 00 6c 20 00 00 00 00 80 50 00 00 69 67 89 d5 6e 00 74 00 00 00 00 00 72 73 00 00 61 65 00 65  a.l .....P..ig..n.t.....rs..ae.e
1001ff00  63 00 6c 20 00 00 00 00 6f 20 00 00 6c 73 00 6e 74 00 75 20 00 00 00 00 6f 72 00 00 6c 70 00 61  c.l ....o ..ls.nt.u ....or..lp.a
1001ff20  69 00 63 62 00 00 00 00 50 45 00 00 00 00 00 52 00 00 64 90 00 00 00 00 50 50 00 00 53 50 00 55  i.cb....PE.....R..d.....PP..SP.U
1001ff40  5f 00 46 4f 00 00 00 00 73 74 00 89 00 52 00 65 d9 00 00 65 00 00 00 00 65 61 00 00 74 20 00 66  _.FO....st...R.e...e....ea..t .f
1001ff60  6f 00 20 44 00 00 00 00 00 00 00 00 6c 00 00 00 74 00 75 00 00 00 00 00 72 2e 89 00 49 70 00 74  o. D........l...t.u.....r...Ip.t
1001ff80  6d 00 db 6f 00 00 00 00 45 70 00 00 2e 80 00 78 00 00 2e dc 00 00 00 89 2e 00 00 00 72 2e 00 00  m..o....Ep.....x............r...
1001ffa0  74 00 6f 2e 00 00 00 00 6f 74 00 00 00 53 00 72 90 00 00 68 00 00 00 00 73 20 00 00 75 4c 00 74  t.o.....ot...S.r...h....s ..uL.t
1001ffc0  74 00 63 69 00 00 00 00 00 4c 00 00 65 75 a8 2e 6e 00 4d 00 00 00 00 00 49 6f 00 00 72 65 00 63  t.ci.....L..eu..n.M.....Io..re.c
1001ffe0  67 00 61 20 00 00 00 00 6d 6c 00 00 00 2f 00 61 80 00 6e 53 00 00 a8 00 6e 00 00 00 20 63 00 00  g.a ....ml.../.a..nS....n... c..
10020000  49 00 6c 6f 00 00 00 00 69 65 00 00 00 26 00 6c 10 00 00 46 00 00 00 00 65 20 00 e1 00 26 00 77  I.lo....ie...&.l...F....e ...&.w
10020020  00 00 00 4e 00 00 00 00 77 43 00 00 69 64 00 09 6e 00 57 6f 00 00 00 00 00 00 00 00 72 2b 00 00  ...N....wC..id..n.Wo........r+..
10020040  6c 00 74 4e 00 00 00 00 78 74 00 e1 80 45 00 69 41 00 00 26 00 00 00 00 6c 00 00 00 90 48 00 70  l.tN....xt...E.iA..&....l....H.p
10020060  26 00 00 65 00 00 00 00 6f 74 00 00 40 41 00 75 26 00 80 62 e1 00 00 00 76 48 00 00 41 74 00 65  &..e....ot..@A.u&..b....vH..At.e
10020080  63 00 20 69 00 00 00 00 2e 00 00 00 73 2e 00 00 74 00 6f 2e 00 00 00 00 74 6d 00 00 00 26 00 65  c. i........s...t.o.....tm...&.e
100200a0  90 00 00 49 00 00 00 00 26 00 00 e1 00 43 00 74 23 00 00 75 00 00 00 00 70 00 00 00 22 43 00 79  ...I....&....C.t#..u....p..."C.y
100200c0  26 00 00 6f e1 00 00 00 73 65 00 00 25 50 00 74 26 00 00 61 e1 00 00 00 65 65 00 aa 00 26 00 6c  &..o....se..%P.t&..a....ee...&.l
100200e0  bf 00 00 44 00 00 00 00 00 d1 00 00 65 00 00 00 00 00 74 00 00 aa 00 00 20 6f 00 00 72 6e 00 74  ...D........e.....t..... o..rn.t
10020100  69 00 42 67 00 00 00 00 6e 00 00 00 26 72 00 74 46 00 20 6f 00 00 00 00 64 74 00 00 d2 65 00 20  i.Bg....n...&r.tF. o....dt...e. 
10020120  53 00 00 6e aa 00 00 00 63 00 00 00 20 42 00 6b 26 00 6f 61 00 00 00 00 41 74 00 00 00 80 00 63  S..n....c... B.k&.oa....At.....c
10020140  00 00 00 bb 00 00 00 aa 63 26 00 00 76 20 00 72 65 00 69 53 00 00 00 00 00 26 00 00 70 00 00 90  ........c&..v .re.iS.....&..p...
10020160  74 00 69 00 00 00 00 00 00 26 00 00 74 6d aa c1 65 00 49 00 00 00 00 00 72 69 00 00 72 70 00 74  t.i......&..tm..e.I.....ri..rp.t
10020180  6f 00 50 65 00 00 00 00 00 bb 00 00 73 00 00 80 00 00 65 00 00 aa 00 00 65 53 00 00 63 69 00 20  o.Pe........s.....e.....eS..ci. 
100201a0  74 00 41 76 00 00 00 00 74 00 00 00 72 69 00 00 26 00 63 70 00 00 00 00 71 00 00 85 70 00 80 75  t.Av....t...ri..&.cp....q...p..u
100201c0  39 00 83 83 00 00 00 00 02 20 00 00 43 52 00 01 55 00 09 00 00 00 00 00 01 02 00 00 01 34 00 00  9........ ..CR..U............4..
100201e0  01 00 40 00 00 00 01 00 34 12 00 00 20 01 00 00 40 01 01 01 00 00 00 00 01 34 00 00 02 20 00 01  ..@.....4... ...@........4... ..
10020200  01 00 00 40 00 01 00 00 20 01 00 00 10 02 00 40 00 00 00 01 00 00 00 00 02 20 00 00 34 13 00 01  ...@.... ......@......... ..4...
10020220  00 00 01 00 01 00 00 00 06 02 00 00 01 34 00 00 01 00 40 00 00 00 01 00 34 07 00 00 20 01 00 00  .............4....@.....4... ...
10020240  40 01 01 01 00 00 00 00 01 34 00 00 02 20 00 01 02 00 00 40 00 01 00 00 04 00 00 00 08 40 02 ec  @........4... .....@.........@..
10020260  20 00 00 01 00 00 00 00 20 01 00 00 00 02 00 40 00 00 09 01 00 00 00 00 02 20 00 00 34 11 00 01   ....... ......@......... ..4...
10020280  00 00 01 00 01 00 00 00 14 02 00 00 01 34 00 00 01 00 40 00 00 00 01 00 34 15 00 00 20 01 00 00  .............4....@.....4... ...
100202a0  40 01 01 01 00 00 00 00 01 34 00 00 02 20 00 01 01 00 00 40 00 01 00 00 20 01 00 00 0a 02 00 40  @........4... .....@.... ......@
100202c0  00 00 00 01 00 00 00 00 02 20 00 00 34 0b 00 01 00 00 01 00 01 00 00 00 0c 02 00 00 01 34 00 00  ......... ..4................4..
100202e0  01 00 40 00 00 00 01 00 34 0d 00 00 20 01 00 00 40 01 01 01 00 00 00 00 01 34 00 00 02 20 00 01  ..@.....4... ...@........4... ..
10020300  01 00 00 40 00 01 00 00 20 01 00 00 0e 02 00 40 00 00 00 01 00 00 00 00 02 20 00 00 34 0f 00 01  ...@.... ......@......... ..4...
10020320  00 00 01 00 01 00 00 00 05 02 00 00 01 34 00 00 01 00 40 00 00 00 01 00 ec 02 00 00 20 01 00 00  .............4....@......... ...
10020340  40 02 01 04 00 00 00 00 01 ec 00 00 02 20 00 04 01 00 00 40 00 02 00 00 20 01 00 00 03 02 00 40  @............ .....@.... ......@
10020360  00 00 00 01 00 00 00 00 ec b9 00 00 ec 04 57 56 00 53 04 55 02 ee 00 8b 00 ed ee e2 00 fc 81 5d  ..............WV.S.U...........]
10020380  5a 00 ee 00 52 b4 e8 00 00 32 40 81 00 c2 03 f6 d5 33 24 2d 8b 03 a4 40 03 10 3c 00 81 00 c1 83  Z...R....2@......3$-...@..<.....
100203a0  80 0a 76 8b c6 8b 00 0e 32 3b 83 c6 c6 03 8b de 8b 8b 31 60 18 51 02 03 00 40 51 ff 53 d7 8b 00  ..v.....2;........1`.Q...@Q.S...
100203c0  53 00 53 a1 51 34 64 18 61 c2 d5 2c 81 40 81 d5 09 8b 8b 89 c2 a4 00 02 83 0f 40 03 00 7f 8b 50  S.S.Q4d.a..,.@............@....P
100203e0  3a c7 2d 8b 8b 54 3c 32 00 e8 40 81 51 c2 83 32 d5 ff 6a 2d 8b 0c a4 40 00 40 10 81 60 c2 03 02  :.-..T<2..@.Q..2..j-...@.@..`...
10020400  d5 8b ff 2d 8b 3c a4 40 c1 83 80 8b 00 08 01 8b 00 10 05 0a 00 c0 03 83 00 8b 03 8b 02 10 08 c3  ...-.<.@........................
10020420  d8 83 08 69 8b d5 6a 6a ff 8b c2 00 85 8b 60 61 40 13 81 89 2f d5 03 02 3c 00 c2 00 a4 8b 00 80  ...i..jj......`a@.../...<.......
10020440  40 05 81 03 2d 00 02 40 c0 8b 08 c1 03 10 02 03 83 08 8b 01 0a d8 8b 83 d5 2f 10 00 6a 83 85 c2  @...-..@................./..j...
10020460  6a 81 8b 08 69 40 c3 8b 5e d5 8b ff 03 13 8b 2a 02 26 00 ba 89 81 61 35 05 00 a4 8b 2d 02 00 00  j...i@..^......*.&....a5....-...
10020480  00 80 c2 40 40 8b 03 3c 04 18 03 10 0a 8b 8b 02 c1 03 08 83 83 8b 01 c0 e8 8b 81 40 c2 00 18 8b  ...@@..<...................@....
100204a0  2d 04 d5 1a ac d5 89 83 71 d5 c2 00 b0 89 8b 64 40 66 81 ba 2d 81 1a 72 81 40 b6 8d 2c 02 2d ac  -.......q......d@f..-..r.@..,.-.
100204c0  00 c2 c2 8b 40 00 50 d5 8b 8b 12 c2 8b c1 02 89 81 f0 ff 40 d5 d5 2c 00 8b b0 c2 00 62 8d c2 81  ....@.P............@..,.....b...
100204e0  40 d5 81 50 2c 2d 02 56 40 8b 00 d5 ff 81 02 89 8b 00 40 5e 12 d5 c2 2c 8b b0 c2 00 a9 8d c2 81  @..P,-.V@.........@^...,........
10020500  40 d5 81 50 2c 2d 02 56 40 8b 00 d5 ff 81 02 89 8b 00 40 a5 12 d5 c2 2c 8b b0 c2 00 9b 8d c2 81  @..P,-.V@.........@....,........
10020520  40 d5 81 50 2c 2d 02 56 40 8b 00 d5 ff 81 02 89 8b 00 40 97 12 d5 c2 2c 8b b0 c2 00 8b 8d c2 81  @..P,-.V@.........@....,........
10020540  40 d5 81 50 2c 2d 02 56 40 8b 00 d5 ff 81 02 89 8b 00 40 87 12 d5 c2 2c 8b b0 c2 00 3b 8d        @..P,-.V@.........@....,....;.

1002055e  int32_t sub_1002055e() __pure

   0 @ 1002055e  temp0.d = pop
   1 @ 1002055e  esp = esp + 0x4081
   2 @ 1002055e  <return> jump(temp0.d)


10020561  int32_t __convention("regparm") sub_10020561(int32_t* arg1, char* arg2, int16_t arg3, void* arg4 @ esi)

   0 @ 10020561  al, ah, eflags = __aad_immb(0x81, al, ah)
   1 @ 10020563  push(eax)
   2 @ 10020564  al = al - 0x2d
   3 @ 10020566  dl = dl + [esi + 0x40].b
   4 @ 10020569  eax = [eax].d
   5 @ 1002056b  al, ah, eflags = __aad_immb(0xff, al, ah)
   6 @ 1002056d  temp1.d = [edx].d
   7 @ 1002056d  [edx].d = [edx].d + 0x40008b89
   8 @ 1002056d  flag:c = temp1.d u>= 0xbfff7477
   9 @ 10020573  al, ah, eflags = __aaa(al, ah, eflags)
  10 @ 10020574  dl = adc.b(dl, ch, flag:c)
  11 @ 10020576  temp0.d = pop
  12 @ 10020576  esp = esp + 0x8b2c
  13 @ 10020576  <return> jump(temp0.d)


10020579  void* __convention("regparm") sub_10020579(void* arg1, char arg2)

   0 @ 10020579  al = 0xc2
   1 @ 1002057b  [eax - 0x73].b = [eax - 0x73].b + dl
   2 @ 1002057e  temp0.d = pop
   3 @ 1002057e  esp = esp + 0x4081
   4 @ 1002057e  <return> jump(temp0.d)


10020581  int32_t __convention("regparm") sub_10020581(int32_t* arg1, char* arg2, int16_t arg3, void* arg4 @ esi)

   0 @ 10020581  al, ah, eflags = __aad_immb(0x81, al, ah)
   1 @ 10020583  push(eax)
   2 @ 10020584  al = al - 0x2d
   3 @ 10020586  dl = dl + [esi + 0x40].b
   4 @ 10020589  eax = [eax].d
   5 @ 1002058b  al, ah, eflags = __aad_immb(0xff, al, ah)
   6 @ 1002058d  temp1.d = [edx].d
   7 @ 1002058d  [edx].d = [edx].d + 0x40008b89
   8 @ 1002058d  flag:c = temp1.d u>= 0xbfff7477
   9 @ 10020593  esp = esp - 1
  10 @ 10020594  dl = adc.b(dl, ch, flag:c)
  11 @ 10020596  temp0.d = pop
  12 @ 10020596  esp = esp + 0xd52c
  13 @ 10020596  <return> jump(temp0.d)


10020599  int32_t __convention("regparm") sub_10020599(int32_t arg1, char* arg2 @ esi)

   0 @ 10020599  eax = eax - -0x724bff3e
   1 @ 1002059e  al = [esi].b
   2 @ 1002059e  if (flag:d) then 3 else 5

   3 @ 1002059e  esi = esi - 1
   4 @ 1002059e  goto 7 @ 0x1002059f

   5 @ 1002059e  esi = esi + 1
   6 @ 1002059e  goto 7 @ 0x1002059f

   7 @ 1002059f  temp0.d = pop
   8 @ 1002059f  esp = esp + 0x8140
   9 @ 1002059f  <return> jump(temp0.d)


100205a2  int32_t __convention("regparm") sub_100205a2(int32_t* arg1, int32_t* arg2)

   0 @ 100205a2  [eax + 0x2d].d = adc.d([eax + 0x2d].d, 0x8b0240, flag:c)
   1 @ 100205a9  temp1.b = bh
   2 @ 100205a9  temp2.b = bh
   3 @ 100205a9  bh = bh + bh
   4 @ 100205a9  flag:c = temp1.b + temp2.b u< temp1.b
   5 @ 100205ab  [edx].d = adc.d([edx].d, -0x2a0f763e, flag:c)
   6 @ 100205b1  eax = [eax].d
   7 @ 100205b3  eax = eax - 0x40c18b8b
   8 @ 100205b8  push(esi)
   9 @ 100205b9  temp0.d = pop
  10 @ 100205b9  esp = esp + 0x4081
  11 @ 100205b9  <return> jump(temp0.d)


100205bc  int32_t sub_100205bc() __pure

   0 @ 100205bc  temp0.d = pop
   1 @ 100205bc  esp = esp + 0x8100
   2 @ 100205bc  <return> jump(temp0.d)


100205bf  int32_t __convention("regparm") sub_100205bf(int32_t arg1, int32_t arg2, int16_t arg3, char* arg4 @ ebp)

   0 @ 100205bf  al, ah, eflags = __aad_immb(0x2d, al, ah)
   1 @ 100205c1  edx = ebp
   2 @ 100205c3  al = al + ch
   3 @ 100205c5  al = 0x8d
   4 @ 100205c7  push(eax)
   5 @ 100205c8  eax = eax - 0x8b4002
   6 @ 100205cd  al, ah, eflags = __aad_immb(0x89, al, ah)
   7 @ 100205cf  [edx].b = [edx].b + dl
   8 @ 100205d1  eax = eax + 1
   9 @ 100205d2  eax = eax - -0x7e74003e
  10 @ 100205d7  al = __salc(eflags)
  11 @ 100205d8  push(esi)
  12 @ 100205d9  temp0.d = pop
  13 @ 100205d9  esp = esp + 0x4081
  14 @ 100205d9  <return> jump(temp0.d)


100205dc  int32_t sub_100205dc() __pure

   0 @ 100205dc  temp0.d = pop
   1 @ 100205dc  esp = esp + 0x8100
   2 @ 100205dc  <return> jump(temp0.d)


100205df  void** __convention("regparm") sub_100205df(void** arg1, int32_t arg2, void* arg3)

   0 @ 100205df  al, ah, eflags = __aad_immb(0x2f, al, ah)
   1 @ 100205e1  edx = ebp
   2 @ 100205e3  bl = bl + [ecx - 0x50].b
   3 @ 100205e6  edx = eax + 0x2f
   4 @ 100205e9  al = al + [eax - 0x75].b
   5 @ 100205ec  temp1.b = ch
   6 @ 100205ec  ch = ch + dl
   7 @ 100205ec  flag:c = temp1.b + dl u< temp1.b
   8 @ 100205ee  [eax].d = eax
   9 @ 100205f0  al = adc.b(al, [eax + 0x2d].b, flag:c)
  10 @ 100205f3  temp0.d = pop
  11 @ 100205f3  esp = esp + 0x8bff
  12 @ 100205f3  <return> jump(temp0.d)


100205f6  void** __convention("regparm") sub_100205f6(void** arg1, int32_t arg2, void* arg3, void* arg4 @ ebp)

   0 @ 100205f6  [ebp + 0x56].d = [ebp + 0x56].d & 0xc24081c2
   1 @ 100205fd  [ecx - 0x2a74d02b].b = [ecx - 0x2a74d02b].b + al
   2 @ 10020603  ch = ch + [ecx - 0x50].b
   3 @ 10020606  edx = eax + 0x2f
   4 @ 10020609  al = al + [eax - 0x75].b
   5 @ 1002060c  temp1.b = ch
   6 @ 1002060c  ch = ch + dl
   7 @ 1002060c  flag:c = temp1.b + dl u< temp1.b
   8 @ 1002060e  [eax].d = eax
   9 @ 10020610  al = adc.b(al, [eax + 0x2d].b, flag:c)
  10 @ 10020613  temp0.d = pop
  11 @ 10020613  esp = esp + 0x8bff
  12 @ 10020613  <return> jump(temp0.d)


10020616  int32_t __convention("regparm") sub_10020616(int32_t arg1, char* arg2, void* arg3, void* arg4 @ ebp, int32_t arg5 @ esi)

   0 @ 10020616  [ebp + 0x56].d = [ebp + 0x56].d ^ 0xc24081c2
   1 @ 1002061d  [ecx - 0x2a74d22b].b = [ecx - 0x2a74d22b].b + al
   2 @ 10020623  ah = ah + [eax + (esi << 2) - 0x73].b
   3 @ 10020627  push(eax)
   4 @ 10020628  eax = eax - 0x8b4002
   5 @ 1002062d  al, ah, eflags = __aad_immb(0x89, al, ah)
   6 @ 1002062f  [edx].b = [edx].b + dl
   7 @ 10020631  eax = eax + 1
   8 @ 10020632  temp1.d = eax
   9 @ 10020632  eax = eax - -0x7e74003e
  10 @ 10020637  if (temp1.d == -0x7e74003e) then 11 @ 0x1002068f else 22 @ 0x10020639

  11 @ 1002068f  ecx = [ebx + 0x12834000 {0x12834000}].d
  12 @ 10020695  al = al + dl
  13 @ 10020697  temp2.b = al
  14 @ 10020697  al = al - 0x50
  15 @ 10020697  flag:c = temp2.b u< 0x50
  16 @ 10020699  ebp = adc.d(ebp, -0x2abf7ed4, flag:c)
  17 @ 1002069f  ebp = [edi + 0x56].d
  18 @ 100206a2  ecx = [ebp + 0x200c2c2].d
  19 @ 100206a8  ecx = [ecx - 0x74bfedd3].d * 0
  20 @ 100206af  eax = eax + 1
  21 @ 100206b0  undefined

  22 @ 10020639  temp0.d = pop
  23 @ 10020639  esp = esp + 0x4081
  24 @ 10020639  <return> jump(temp0.d)


1002063c  int32_t sub_1002063c() __pure

   0 @ 1002063c  temp0.d = pop
   1 @ 1002063c  esp = esp + 0x8100
   2 @ 1002063c  <return> jump(temp0.d)

1002063f                                                                                               d5                                 .
10020640  2c 8b d5 02 e5 b0 8d 50 2c 02 40 8b 00 d5 89 00 12 40 2d c2 ff 8b 81 e1 56 c2 81 40              ,......P,.@......@-.....V..@

1002065c  int32_t sub_1002065c() __pure

   0 @ 1002065c  temp0.d = pop
   1 @ 1002065c  esp = esp + 0x8100
   2 @ 1002065c  <return> jump(temp0.d)


1002065f  void** __convention("regparm") sub_1002065f(void** arg1, int32_t arg2, int16_t arg3, void* arg4 @ ebp)

   0 @ 1002065f  al, ah, eflags = __aad_immb(0x2f, al, ah)
   1 @ 10020661  edx = ebp
   2 @ 10020663  bl = bl + [edx + 0x2f508db0].b
   3 @ 10020669  al = al + [eax - 0x75].b
   4 @ 1002066c  temp1.b = ch
   5 @ 1002066c  ch = ch + dl
   6 @ 1002066c  flag:c = temp1.b + dl u< temp1.b
   7 @ 1002066e  [eax].d = eax
   8 @ 10020670  al = adc.b(al, [eax + 0x2d].b, flag:c)
   9 @ 10020673  temp0.d = pop
  10 @ 10020673  esp = esp + 0x8bff
  11 @ 10020673  <return> jump(temp0.d)


10020676  int32_t* __convention("regparm") sub_10020676(int32_t* arg1, void* arg2 @ ebp)

   0 @ 10020676  [ebp + 0x4081ac8b].d = [ebp + 0x4081ac8b].d - -0x7e3dff3e
   1 @ 10020680  temp1.b = al
   2 @ 10020680  al = al - -0x2b
   3 @ 10020680  cond:0 = temp1.b - -0x2b s>= 0
   4 @ 10020682  al, ah, eflags = __aad_immb(2, al, ah)
   5 @ 10020684  if (cond:0) then 6 @ 0x100206b3 else 10 @ 0x10020686

   6 @ 100206b3  [eax].d = [eax].d + 0x50c2d502
   7 @ 100206b9  temp0.d = pop
   8 @ 100206b9  esp = esp + 0x2cd5
   9 @ 100206b9  <return> jump(temp0.d)

  10 @ 10020686  edx = eax + 0x40
  11 @ 10020689  [eax].d = eax
  12 @ 1002068b  al, ah, eflags = __aad_immb(0xff, al, ah)
  13 @ 1002068d  temp2.d = eax
  14 @ 1002068d  eax = eax ^ 0x40008b8b
  15 @ 1002068d  flag:c = 0
  16 @ 10020693  [edx].d = adc.d([edx].d, 2, flag:c)
  17 @ 10020696  temp0.d = pop
  18 @ 10020696  esp = esp + 0x502c
  19 @ 10020696  <return> jump(temp0.d)

100206bc                                                                                      81 40 81 d5                              .@..
100206c0  79 8b 8b 8d                                                                                      y...

100206c4  int32_t sub_100206c4() __pure

   0 @ 100206c4  temp0.d = pop
   1 @ 100206c4  esp = esp + 0xac
   2 @ 100206c4  <return> jump(temp0.d)


100206c7  int32_t __convention("fastcall") sub_100206c7(char arg1)

   0 @ 100206c7  cl = cl + [ebx + 0xba4007 {0xba4007}].b
   1 @ 100206cd  push(edi)
   2 @ 100206ce  <return> jump(pop)

100206cf                                               81 12 dd 2d 4d ff 2d 47 4f 00 4b 00 8b ff f3 51 b8                 ...-M.-GO.K....Q.
100206e0  5f 00 40 03 33 4e ba 00 1c ac 83 16 fa 83 00 00 74 00 59 04 00 aa c6 b9 ff 6b fc 3e 33 4a 57 b8  _.@.3N..........t.Y......k.>3JW.
10020700  03 ff e2 e0 ff 48 e9 ff                                                                          .....H..

10020708  int32_t __convention("regparm") sub_10020708(int32_t arg1, int32_t* arg2, int32_t arg3 @ ebp)

   0 @ 10020708  al - dl
   1 @ 1002070a  esp = [ebp + (edx << 3) - 0x3d2a7ed3].d
   2 @ 10020711  eax = [edx].d
   3 @ 10020714  [-0xfffffffff22c8b40].d = [-0xfffffffff22c8b40].d | 0xd5008b40
   4 @ 1002071e  eax = [eax].d
   5 @ 10020720  al - [eax + 0x2c].b
   6 @ 10020723  temp0.d = pop
   7 @ 10020723  esp = esp + 0xb903
   8 @ 10020723  <return> jump(temp0.d)


10020726  int32_t __convention("regparm") sub_10020726(int32_t arg1, char arg2, int32_t* arg3, char* arg4 @ esi)

   0 @ 10020726  [ecx].d = adc.d([ecx].d, -0x55ffbf7f, flag:c)
   1 @ 1002072c  dl = dl + ah
   2 @ 1002072e  al = al - 9
   3 @ 10020730  al = [esi].b
   4 @ 10020730  if (flag:d) then 5 else 7

   5 @ 10020730  esi = esi - 1
   6 @ 10020730  goto 9 @ 0x10020731

   7 @ 10020730  esi = esi + 1
   8 @ 10020730  goto 9 @ 0x10020731

   9 @ 10020731  temp0.d = pop
  10 @ 10020731  esp = esp + 0x8b04
  11 @ 10020731  <return> jump(temp0.d)

10020734                                                              00 00 fc d5 00 00 02 0f 83 84 02 00                      ............
10020740  57 e9 8b 00 f8 00 05 00 2d 02 4e 8b 00 d5 8b 00 00 40 e8 c2 00 8b 81 a4 40 b8 81 40 c2 00 d0 8b  W.......-.N......@......@..@....
10020760  2d 3c d5 02 a4 00 8b 03 00 c1 40 3c 00 05 81 08 40 8b 00 00 03 00 80 00 04 40 40 10 00 8b 00 00  -<........@<....@........@@.....
10020780  c1 05 00 83 83 00 01 c0 c0 e9 18 8b 83 f8 10 ff 04 0c 8b c7 e8 ad 8b 83 81 40 00 59 00 52 2d a4  .........................@.Y.R-.
100207a0  50 c2 01 8b bf 00 43 d5 f7 c2 02 d8 8b 03 83 d6 8b 8b 8b 3c f8 06 7f 8b 00 00 c9 81 66 c6 ba d2  P.....C............<........f...
100207c0  0a 33 33 00 8b 00 f8 00 2e 0f 00 45 b8 53 72 73 43 72 00 81 54 84 3e 3e 6c 01 01 81 00 3e 48 84  .33........E.SrsCr..T.>>l....>H.
100207e0  3e 0f 55 72 00 00 2e 65 3b 3e 3e 65 81 64 00 00 2e 01 00 0f 3e 81 61 84 00 2e 2e 0f 72 84 3e 81  >.Ur...e;>>e.d......>.a.....r.>.
10020800  61 3e 3e 01 64 69 2e 00 3e 73 61 01 0f 00 6c 74 21 2e 64 3e 84 0f 00 81 0f 00 14 3e 01 83 01 09  a>>.di..>sa...lt!.d>.......>....
10020820  00 84 84 14 00 00 7e 00 00 4e 83 0f 7e 84 8b 3e 00 60 3e 00 10 10 fe 00 c2 00 8b e9 76 51 40 2d  ......~..N..~..>.`>.........vQ@-
10020840  d1 07 3e d5 0c 8b 8b 81 03 c2 8b 8a dd                                                           ..>..........

1002084d  int32_t __convention("regparm") sub_1002084d(int32_t arg1, char* arg2)

   0 @ 1002084d  eax = eax - -0x743c2a7f
   1 @ 10020852  al = al + [eax].b
   2 @ 10020854  [edx + 0x40].d = [edx + 0x40].d + 0x40022d8b
   3 @ 1002085b  eax = [eax].d
   4 @ 1002085d  al, ah, eflags = __aad_immb(0x8b, al, ah)
   5 @ 1002085f  [edx].b = [edx].b + al
   6 @ 10020861  eax = eax + 1
   7 @ 10020862  al, eflags = __das(al, eflags)
   8 @ 10020863  temp0.d = pop
   9 @ 10020863  esp = esp + 0x8b8b
  10 @ 10020863  <return> jump(temp0.d)


10020866  int32_t __convention("regparm") sub_10020866(int32_t* arg1, int32_t* arg2, int32_t arg3 @ ebp)

   0 @ 10020866  temp0.d = [ebp + (edx << 3) - 0x3cbf7ed3].d
   1 @ 10020866  [ebp + (edx << 3) - 0x3cbf7ed3].d = [ebp + (edx << 3) - 0x3cbf7ed3].d & 0x2dc26400
   2 @ 10020866  flag:c = 0
   3 @ 10020871  ebp = sbb.d(ebp, -0x74bf63fd, flag:c)
   4 @ 10020877  eax = [eax].d
   5 @ 10020879  al, ah, eflags = __aad_immb(0x8b, al, ah)
   6 @ 1002087b  [edx].d = [edx].d - 0x22fc743d
   7 @ 10020881  eax = [eax].d
   8 @ 10020883  eax = eax - 0x40a0818b
   9 @ 10020888  <return> jump(pop)


10020889  int32_t __convention("regparm") sub_10020889(int32_t arg1, int32_t* arg2, int32_t arg3)

   0 @ 10020889  [ebx + (ecx << 2) + 0x2d40022d].b = [ebx + (ecx << 2) + 0x2d40022d].b + ah
   1 @ 10020890  [edx + (eax << 3) - 0x7474bf23].b = [edx + (eax << 3) - 0x7474bf23].b + bl
   2 @ 10020897  [edx].d = [edx].d - 0x2a9b743d
   3 @ 1002089d  eax = eax - -0x743d227f
   4 @ 100208a2  eax = eax + [eax].d
   5 @ 100208a4  [eax + 0x132c8b40].d = [eax + 0x132c8b40].d & 0xdd008b40
   6 @ 100208ae  eax = [eax].d
   7 @ 100208b0  eax = eax + [eax + 0x2d].d
   8 @ 100208b3  <return> jump(pop)

100208b4                                                              8b 8b 81 ff f0 62 81 40 c3 00 bf fe                      .....b.@....
100208c0  2d 8b dd 03 a4 69 8b 03 7a 03 79 6a bf 68 ff 33 6f 63 75 65 78 fe bf 61 03 db 06 2b 90 c2 33 90  -....i..z.yj.h.3ocuex..a...+..3.
100208e0  90 c1 8a 90 90 03 90 90 47 8b 90 90 2b 90 59 d0 90 e2 d9 07 c1 dd 88 46 66 69 c3 00 03 8b bf 67  ........G...+.Y........Ffi.....g
10020900  40 68 81 bf 2d 75 13 76 fe 90 67 6e bf 69 90 06 64 8a 66 ff 72 90 33 03 03 c1 c2 03 90 c1 2b 90  @h..-u.v..gn.i..d.f.r.3.......+.
10020920  90 d9 2b 33 90 90 90 db 64 83 90 47 88 e2 4c 45 46 6e 90 61 07 c6 d0 b8 85 ff 42 57 66 06 ff fe  ..+3....d..G..LEFn.a......BWf...

10020940  void __convention("regparm") sub_10020940(int32_t* arg1)

   0 @ 10020946  if (eax u> [ebx - 0x3cc1f9d8 {0xc33e0628}].d) then 1 @ 0x10020957 else 5 @ 0x10020948

   1 @ 10020957  [eax].d = [eax].d - 0x77e74b0
   2 @ 1002095d  temp0.d = pop
   3 @ 1002095d  esp = esp + 0x32ba
   4 @ 1002095d  <return> jump(temp0.d)

   5 @ 10020948  temp0.d = pop
   6 @ 10020948  esp = esp + 0x3100
   7 @ 10020948  <return> jump(temp0.d)


1002094b  void __convention("regparm") sub_1002094b(int32_t* arg1, int32_t arg2, int32_t arg3 @ esi)

   0 @ 1002094b  push(zx.d(0x31))
   1 @ 1002094d  [eax + 0x2d].b = [eax + 0x2d].b + al
   2 @ 10020950  esi = esi ^ edx
   3 @ 10020952  edx = 0x8bff31d5
   4 @ 10020957  [eax].d = [eax].d - 0x77e74b0
   5 @ 1002095d  temp0.d = pop
   6 @ 1002095d  esp = esp + 0x32ba
   7 @ 1002095d  <return> jump(temp0.d)


10020960  int32_t __convention("regparm") sub_10020960(int32_t arg1, int32_t, int32_t arg3, void** arg4 @ esi, int32_t arg5 @ edi)

   0 @ 10020960  al, ah, eflags = __aad_immb(0x8d, al, ah)
   1 @ 10020962  ch = adc.b(ch, [0x40da4f8b].b, flag:c)
   2 @ 10020968  [ebx + 0x3e044c {0x3e044c}].d = [ebx + 0x3e044c {0x3e044c}].d + ecx
   3 @ 1002096e  [esi].b = [esi].b + bh
   4 @ 10020972  edi = edi - 1
   5 @ 10020973  [ebx + 0x53000f1e {0x53000f1e}].b & al
   6 @ 10020979  temp0.d = pop
   7 @ 10020979  esp = esp + 0x2dd5
   8 @ 10020979  <return> jump(temp0.d)


1002097c  int32_t __convention("regparm") sub_1002097c(void* arg1, void** arg2, char arg3, int32_t* arg4 @ ebp, char* arg5 @ esi, char* arg6 @ edi, long double arg7 @ st0, void* arg8)

   0 @ 1002097c  [eax - 0x7f].d = [eax - 0x7f].d - 0x74745b2b
   1 @ 10020983  eax = eax + edx
   2 @ 10020985  al = [esi].b
   3 @ 10020985  if (flag:d) then 4 else 6

   4 @ 10020985  esi = esi - 1
   5 @ 10020985  goto 8 @ 0x10020986

   6 @ 10020985  esi = esi + 1
   7 @ 10020985  goto 8 @ 0x10020986

   8 @ 10020986  [edx].b = [edx].b + bl
   9 @ 10020988  edx = pop
  10 @ 10020989  [eax - 1].b = [eax - 1].b | al
  11 @ 1002098c  [edx].b = [edx].b + dl
  12 @ 1002098e  esi = esi - 1
  13 @ 1002098f  eax = [edx].d
  14 @ 10020991  eax = eax - 0x520b8b50
  15 @ 10020997  ebx = pop
  16 @ 10020998  [eax + 0x75].d = [eax + 0x75].d + 0x2d04044e
  17 @ 1002099f  if (flag:d) then 18 else 22

  18 @ 1002099f  [edi].b = [esi].b
  19 @ 1002099f  edi = edi - 1
  20 @ 1002099f  esi = esi - 1
  21 @ 1002099f  goto 26 @ 0x100209a0

  22 @ 1002099f  [edi].b = [esi].b
  23 @ 1002099f  edi = edi + 1
  24 @ 1002099f  esi = esi + 1
  25 @ 1002099f  goto 26 @ 0x100209a0

  26 @ 100209a0  eax = ebx
  27 @ 100209a2  esp = ebp
  28 @ 100209a2  ebp = pop
  29 @ 100209a3  edi = [esi].d
  30 @ 100209a5  [ebx - 0x23].b = [ebx - 0x23].b + dl
  31 @ 100209a8  eax = eax - 1
  32 @ 100209a9  eax = eax | [esi + edi].d
  33 @ 100209ad  ecx = ecx + [ebp + 0x41].d
  34 @ 100209b0  push(esi)
  35 @ 100209b1  esi = esi + 1
  36 @ 100209b2  temp1.d = ebx
  37 @ 100209b2  temp2.d = [ebx - 0x75].d
  38 @ 100209b2  ebx = ebx + [ebx - 0x75].d
  39 @ 100209b2  flag:c = temp1.d + temp2.d u< temp1.d
  40 @ 100209b5  [ebx].d = adc.d([ebx].d, -0x48, flag:c)
  41 @ 100209b8  [edi].b = [edi].b + cl
  42 @ 100209ba  [eax].b = [eax].b + al
  43 @ 100209bc  temp0 = __sldt_memw(ldtr)
  44 @ 100209bc  [eax + 0x39009e00].w = temp0.w
  45 @ 100209c3  temp3.d = [ebp + (eax << 2) - 0x3c9fff00].d
  46 @ 100209c3  flag:c = 0
  47 @ 100209ce  ebp = sbb.d(ebp, 0x2ee8b8b, flag:c)
  48 @ 100209d4  temp4.b = [edi].b
  49 @ 100209d4  [edi].b = [edi].b + al
  50 @ 100209d4  flag:c = temp4.b + al u< temp4.b
  51 @ 100209d6  [ebx + 0x2d].b = rlc.b([ebx + 0x2d].b, 0x13, flag:c)
  52 @ 100209da  eax = eax + 1
  53 @ 100209db  eax = [eax].d
  54 @ 100209dd  [ebx + 0x2d400300].q = int.q(ftrunc.t(x87.pop))
  55 @ 100209e3  <return> jump(pop)


100209e4  int32_t __convention("regparm") sub_100209e4(int32_t* arg1, int32_t arg2 @ ebp, long double arg3 @ st0)

   0 @ 100209e4  ecx = [ebx + 0x2ddd8a81 {0x2ddd8a81}].d
   1 @ 100209ea  temp0.d = [eax - 0x3d].d
   2 @ 100209ea  [eax - 0x3d].d = [eax - 0x3d].d + 0x2fc3a400
   3 @ 100209ea  flag:c = temp0.d u>= 0xd03c5c00
   4 @ 100209f1  temp1.d = ebp
   5 @ 100209f1  cond:0 = flag:c
   6 @ 100209f1  ebp = sbb.d(temp1.d, -0x74bfbdf5, cond:0)
   7 @ 100209f1  flag:c = unimplemented
   8 @ 100209f7  eax = [eax].d
   9 @ 100209f9  [ebx - 0x743cfc7f {0x8bc30381}].q = int.q(ftrunc.t(x87.pop))
  10 @ 100209ff  ebx = adc.d(ebx, ebp, flag:c)
  11 @ 10020a01  eax = [eax].d
  12 @ 10020a03  eax = eax - 0x409c818b
  13 @ 10020a08  <return> jump(pop)

10020a09                             00 64 8b 2d 3b 40 2d 00 a0 c3 dd 40 8b 8b 81 33 c3 8b ff dd                    .d.-;@-....@...3....

10020a1d  int32_t __convention("regparm") sub_10020a1d(int32_t arg1)

   0 @ 10020a1d  al = al - -0x7f
   1 @ 10020a1f  __free_slot(st3)
   2 @ 10020a21  ecx = [ebx {0}].d
   3 @ 10020a23  [ecx - 0x5b74bf5c].b = [ecx - 0x5b74bf5c].b + al
   4 @ 10020a29  eax = eax + [eax + 0x61].d
   5 @ 10020a2c  [ebx + 0x2d034000 {0x2d034000}].b = [ebx + 0x2d034000 {0x2d034000}].b + cl
   6 @ 10020a32  eax = eax - -0x22fc747f
   7 @ 10020a37  <return> jump(pop)

10020a38                                                                          d5 2d 50 52 58 51 b0 c2                          .-PRXQ..
10020a40  f8 81 5b 53 8b 40 50 8b 02 83 ff 75 12 00 04 c1 c0 83 00 5a 0b c2 59 89 49 4b e9 ff 53 b8 4d 53  ..[S.@P....u.......Z..Y.IK..S.MS
10020a60  ff b8 04 4d ff 49 53 4b fe 45 53 83 4d c6 b8 ff 49 ff b8 e9 4b 65 0c f0                          ...M.ISK.ES.M...I...Ke..

10020a78  int32_t sub_10020a78() __pure

   0 @ 10020a78  temp0.d = pop
   1 @ 10020a78  esp = esp + 0x7500
   2 @ 10020a78  <return> jump(temp0.d)


10020a7b  int32_t __convention("regparm") sub_10020a7b(int32_t arg1, int32_t, void* arg3)

   0 @ 10020a7b  esi = [ebx {0}].d
   1 @ 10020a7d  al, ah, eflags = __aad_immb(0x40, al, ah)
   2 @ 10020a7f  eax = eax - -0x229757c0
   3 @ 10020a84  [ecx + 0x5dc1818b].b = rol.b([ecx + 0x5dc1818b].b, 0xa4)
   4 @ 10020a8b  ebp = [0x5e5b02].d
   5 @ 10020a91  edi = pop
   6 @ 10020a92  <return> jump(pop)

10020a93                                                           0b 40 ff 8b 03 07 d8 8b 33 f8 db 03 e2                     .@......3....
10020aa0  c0 f7 e0 d2 33 42 33 8a c2 00 e2 50 f6 57 40 2f c3 bd 47 d5 93 ff 8b 81 01 00 58 52 b8 4f 00 00  ....3B3....P.W@/..G.......XR.O..
10020ac0  44 2d 12 51 49 80 52 8b ff ff 53 c2 8b b0 76 e9 81 12 50 40 d5 ff 2d 00 1b 00 cc 04 cc 13 00 3b  D-.QI.R...S...v...P@..-........;
10020ae0  cc de ff 00 cc 00 00 91 69 00 53 6e 65 64 00 69 45 6c 00 66 74 00 4f 46 6c 00 00 74 56 75 63 6f  ........i.Sned.iEl.ft.OFl..tVuco
10020b00  72 6c 00 6c 69 00 61 41 74 69 00 74 00 44 57 70 65 6f 00 73 47 6e 65 6b 74 64 6f 00 77 00 6e 69  rl.li.aAti.t.DWpeo.sGnektdo.w.ni
10020b20  00 57 64 47 00 6f 00 65 46 6e 52 00 65 ff 69 57 74 73 77 ff 63 64 ff                             .WdG.o.eFnR.e.iWtsw.cd.

10020b37  int32_t sub_10020b37()

   0 @ 10020b37  undefined

10020b3a                                                                                77 00 00 00 69 46                            w...iF
10020b40  00 64 6f 6c 00 6c 46 6f 00 00 47 32 64 2e 00 00 33 00 00 6c 69 00 64 6c 42 00 00 73 00 73 41 78  .dol.lFo..G2d...3..li.dlB..s.sAx
10020b60  65 6f 00 67 4d 00 61 65 6e 00 00 74 00 50 00 00 65 74 00 72 47 00 61 65 6c 55 47 6c 65 67 00 44  eo.gM.aen..t.P..et.rG.aelUGleg.D
10020b80  44 49 00 74 74 73 43 72 00 00 72 64 33 6c 00 00 2e 00 65 00 32 00 6c 00 73 6f 45 50 78 72 4c 00  DI.ttsCr..rd3l....e.2.l.soEPxrL.
10020ba0  74 73 00 63 69 61 6f 65 00 73 4c 61 69 72 49 00 72 00 64 00 62 44 79 00 73 00 62 65 75 72 74 6e  ts.ciaoe.sLairI.r.d.bDy.s.beurtn
10020bc0  67 65 65 72 67 00 50 65 7d a5 00 00 00 00 23 09 00 35 00 12 00 4c 79 3f d2 bd 40 01 00 3b f9 27  geerg.Pe}.....#..5...Ly?..@..;.'
10020be0  84 52 57 fb 3c cf 2f f5 91 cd 71 82 43 81 a6 74 ca 18 c8 6f 4c ac 51 1b 0f dc 40 3d 00 8a 2f 19  .RW.<./...q.C..t...oL.Q...@=../.
10020c00  2e ed 57 27 ad f6 00 bf 5f 8c 4a 50 47 9e 83 5e 16 9f 1c ab 4b 0f 3c 76 a0 69 40 57 00 e8 d5 9b  ..W'...._.JPG..^....K.<v.i@W....
10020c20  28 e4 58 d3 8b c1 c4 25 3f 9f 3c 47 28 3b 48 a8 5d da ca 92 bf 47 2f ef 72 00 74 74 4c 45 00 00  (.X....%?.<G(;H.]....G/.r.ttLE..
10020c40  73 00 65 72 61 00 72 6f 63 00 6f 65 61 73 00 00 52 65 4c 75 64 00 6f 72 75 41 00 64 46 52 65 63  s.era.roc.oeas..ReLud.oruA.dFRec
10020c60  6e 72 00 73 69 00 65 6f 03 40 00 ad 00 ff 00 00 38 00 00 c8 00 00 ff 78 00 72 57 00 00 00 65 4b  nr.si.eo.@......8......x.rW...eK
10020c80  00 00 6c 00 00 6e 00 00 00 65 6c 64 33 6c 47 00 2e 00 65 00 32 74 6c 00 6c 00 6f 65 64 48 00 41  ..l..n...eld3lG...e.2tl.l.oedH.A
10020ca0  6c 65 4d 6e 75 00 61 64 20 00 00 00 5c 20 00 03 03 05 00 03 05 00 05 00 00 00 00 00 00 00 00 00  leMnu.ad ...\ ..................
10020cc0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020ce0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020d00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020d20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020d40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020d60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020d80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020da0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020dc0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020de0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020e00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 72 63 00 74 56 75 65 74  ........................rc.tVuet
10020e20  72 6f 00 6c 69 74 61 50 65 00 43 74 72 65 00 00 61 41 00 69 65 00 46 6c 7a 00 47 69 65 6c 00 00  ro.litaPe.Ctre..aA.ie.Flz.Giel..
10020e40  46 65 00 53 74 00 65 69 6f 00 47 61 6c 6c 00 00 62 63 00 6c 6f 00 41 6c 00 00 52 46 65 69 00 00  Fe.St.eio.Gall..bc.lo.Al..RFei..
10020e60  64 00 00 65 61 00 6c 00 65 65 00 4d 47 6f 6c 69 74 46 00 75 65 4e 64 6c 6c 48 6d 00 65 00 65 73  d..ea.l.ee.MGolitF.ueNdllHm.e.es
10020e80  00 6f 61 00 41 61 00 43 00 00 64 00 6c 00 00 00 00 00 6e 00 65 00 00 00 00 00 00 00 00 00 00 00  .oa.Aa.C..d.l.....n.e...........
10020ea0  00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 c3 00 00 00 00 00 00 00 00  ....@...........................
10020ec0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020ee0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020f00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020f20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020f40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020f60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020f80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020fa0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020fc0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10020fe0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021040  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021060  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021080  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100210a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100210c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100210e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021100  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021120  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021140  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021160  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021180  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100211a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100211c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100211e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021200  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021220  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021240  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021260  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021280  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100212a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100212c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100212e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021300  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021320  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021340  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021360  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021380  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100213a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100213c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100213e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021400  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021420  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021440  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021460  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021480  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100214a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100214c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100214e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021500  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021520  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021540  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021560  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021580  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100215a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100215c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100215e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021600  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021620  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021640  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021660  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021680  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100216a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100216c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100216e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021700  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021720  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021740  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021760  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021780  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100217a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100217c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100217e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021800  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021820  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021840  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021860  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021880  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100218a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100218c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100218e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021900  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021920  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021940  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021960  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10021980  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100219a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100219c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100219e0  00 00 00 00 00 00 00 00 71 5e 97 9b 1d e3 79 f2 3c 61 73 73 65 6d 62 6c 79 20 78 6d 6c 6e 73 3d  ........q^....y.<assembly xmlns=
10021a00  22 75 72 6e 3a 73 63 68 65 6d 61 73 2d 6d 69 63 72 6f 73 6f 66 74 2d 63 6f 6d 3a 61 73 6d 2e 76  "urn:schemas-microsoft-com:asm.v
10021a20  31 22 20 6d 61 6e 69 66 65 73 74 56 65 72 73 69 6f 6e 3d 22 31 2e 30 22 3e 0d 0a 20 20 3c 64 65  1" manifestVersion="1.0">..  <de
10021a40  70 65 6e 64 65 6e 63 79 3e 0d 0a 20 20 20 20 3c 64 65 70 65 6e 64 65 6e 74 41 73 73 65 6d 62 6c  pendency>..    <dependentAssembl
10021a60  79 3e 0d 0a 20 20 20 20 20 20 3c 61 73 73 65 6d 62 6c 79 49 64 65 6e 74 69 74 79 20 74 79 70 65  y>..      <assemblyIdentity type
10021a80  3d 22 77 69 6e 33 32 22 20 6e 61 6d 65 3d 22 4d 69 63 72 6f 73 6f 66 74 2e 56 43 38 30 2e 43 52  ="win32" name="Microsoft.VC80.CR
10021aa0  54 22 20 76 65 72 73 69 6f 6e 3d 22 38 2e 30 2e 35 30 36 30 38 2e 30 22 20 70 72 6f 63 65 73 73  T" version="8.0.50608.0" process
10021ac0  6f 72 41 72 63 68 69 74 65 63 74 75 72 65 3d 22 78 38 36 22 20 70 75 62 6c 69 63 4b 65 79 54 6f  orArchitecture="x86" publicKeyTo
10021ae0  6b 65 6e 3d 22 31 66 63 38 62 33 62 39 61 31 65 31 38 65 33 62 22 3e 3c 2f 61 73 73 65 6d 62 6c  ken="1fc8b3b9a1e18e3b"></assembl
10021b00  79 49 64 65 6e 74 69 74 79 3e 0d 0a 20 20 20 20 3c 2f 64 65 70 65 6e 64 65 6e 74 41 73 73 65 6d  yIdentity>..    </dependentAssem
10021b20  62 6c 79 3e 0d 0a 20 20 3c 2f 64 65 70 65 6e 64 65 6e 63 79 3e 0d 0a 3c 2f 61 73 73 65 6d 62 6c  bly>..  </dependency>..</assembl
10021b40  79 3e 50 41 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  y>PAPADDINGXXPADDINGPADDINGXXPAD
10021b60  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021b80  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021ba0  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021bc0  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021be0  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021c00  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021c20  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021c40  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021c60  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021c80  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021ca0  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021cc0  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021ce0  44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44 44 49 4e 47 50 41 44 44 49 4e 47 58 58 50 41 44  DINGPADDINGXXPADDINGPADDINGXXPAD
10021d00  44 49 4e 47 50 41 44 44 00 10 00 00 5c 01 00 00 02 30 08 30 0e 30 14 30 1f 30 42 30 4f 30 5b 30  DINGPADD....\....0.0.0.0.0B0O0[0
10021d20  63 30 6b 30 77 30 9b 30 a3 30 b4 30 bd 30 c6 30 cb 30 df 30 eb 30 06 31 0e 31 17 31 22 31 37 31  c0k0w0.0.0.0.0.0.0.0.0.1.1.1"171
10021d40  40 31 58 31 70 31 85 31 8a 31 90 31 ab 31 b0 31 bc 31 cb 31 d1 31 d8 31 f1 31 f7 31 0a 32 0f 32  @1X1p1.1.1.1.1.1.1.1.1.1.1.1.2.2
10021d60  1c 32 2b 32 40 32 46 32 55 32 6d 32 8a 32 91 32 96 32 9b 32 a4 32 ae 32 bf 32 dc 32 e9 32 01 33  .2+2@2F2U2m2.2.2.2.2.2.2.2.2.2.3
10021d80  54 33 81 33 c9 33 f4 33 02 34 0d 34 13 34 27 34 3c 34 47 34 5f 34 75 34 82 34 b9 34 be 34 dd 34  T3.3.3.3.4.4.4'4<4G4_4u4.4.4.4.4
10021da0  e2 34 86 35 8b 35 9d 35 bb 35 cf 35 d5 35 3e 36 44 36 4a 36 50 36 5d 36 6a 36 75 36 92 36 de 36  .4.5.5.5.5.5.5>6D6J6P6]6j6u6.6.6
10021dc0  e3 36 f2 36 f8 36 fe 36 04 37 0a 37 1a 37 28 37 2e 37 34 37 3a 37 40 37 46 37 4d 37 54 37 5b 37  .6.6.6.6.7.7.7(7.747:7@7F7M7T7[7
10021de0  62 37 69 37 70 37 77 37 7f 37 87 37 8f                                                           b7i7p7w7.7.7.

10021ded  int32_t __convention("regparm") sub_10021ded(int32_t arg1, char* arg2 @ esi, char* arg3 @ edi)

   0 @ 10021ded  al, ah, eflags = __aaa(al, ah, eflags)
   1 @ 10021def  al, ah, eflags = __aaa(al, ah, eflags)
   2 @ 10021df0  if (flag:d) then 3 else 7

   3 @ 10021df0  [edi].b = [esi].b
   4 @ 10021df0  edi = edi - 1
   5 @ 10021df0  esi = esi - 1
   6 @ 10021df0  goto 11 @ 0x10021df1

   7 @ 10021df0  [edi].b = [esi].b
   8 @ 10021df0  edi = edi + 1
   9 @ 10021df0  esi = esi + 1
  10 @ 10021df0  goto 11 @ 0x10021df1

  11 @ 10021df1  al, ah, eflags = __aaa(al, ah, eflags)
  12 @ 10021df2  eax & 0xb937af37
  13 @ 10021df7  al, ah, eflags = __aaa(al, ah, eflags)
  14 @ 10021df8  temp0.d = pop
  15 @ 10021df8  esp = esp + 0xcd37
  16 @ 10021df8  <return> jump(temp0.d)


10021dfb  int32_t __convention("regparm") sub_10021dfb(int32_t arg1, uint16_t arg2, int32_t arg3 @ ebp, int32_t arg4 @ esi, char* arg5 @ edi, long double arg6 @ st0, char* arg7, int32_t arg8, int32_t arg9, int32_t arg10, int32_t arg11, int32_t arg12)

   0 @ 10021dfb  al, ah, eflags = __aaa(al, ah, eflags)
   1 @ 10021dfc  temp0, x87status = __fnstenv_memmem28()
   2 @ 10021dfc  [edi].28 = temp0.28
   3 @ 10021dfe  temp3.t = st0
   4 @ 10021dfe  temp4.t = float.t([edi].w)
   5 @ 10021dfe  st0 = temp3.t f/ temp4.t
   6 @ 10021dfe  flag:c1 = unimplemented
   7 @ 10021e00  __out_dx_al(dx, al, eflags)
   8 @ 10021e01  al, ah, eflags = __aaa(al, ah, eflags)
   9 @ 10021e02  al, ah, eflags = __aaa(al, ah, eflags)
  10 @ 10021e04  flag:c = 1
  11 @ 10021e05  al, ah, eflags = __aaa(al, ah, eflags)
  12 @ 10021e06  push([edi].d)
  13 @ 10021e08  eax = adc.d(eax, 0x24381c38, flag:c)
  14 @ 10021e0d  [eax + edi - 0x66].b - dl
  15 @ 10021e11  [esi + 0x27390a38].b - ah
  16 @ 10021e17  [edi].d - ebp
  17 @ 10021e19  [esi + 0x39].d - eax
  18 @ 10021e1c  edx = pop
  19 @ 10021e1d  [ebp - 0x26c649c7].d - edx
  20 @ 10021e23  edx - esp
  21 @ 10021e25  temp5.d = [edi + 0x3a].d
  22 @ 10021e25  flag:c = temp5.d u< edi
  23 @ 10021e28  ch = 0x3a
  24 @ 10021e2a  edi = sbb.d(edi, [ebx {0}].d, flag:c)
  25 @ 10021e2c  edi = pop
  26 @ 10021e2c  esi = pop
  27 @ 10021e2c  ebp = pop
  28 @ 10021e2c  esp = esp + 4
  29 @ 10021e2c  ebx = pop
  30 @ 10021e2c  edx = pop
  31 @ 10021e2c  ecx = pop
  32 @ 10021e2c  eax = pop
  33 @ 10021e2d  ebp - [ebx + 0x3b].d
  34 @ 10021e30  temp0.d = ebx
  35 @ 10021e30  ebx = eax
  36 @ 10021e30  eax = temp0.d
  37 @ 10021e31  ebx - [ecx - 0x2cc44ec5].d
  38 @ 10021e37  edi - ebx
  39 @ 10021e39  eax - [edx].d
  40 @ 10021e3b  al - 0x1f
  41 @ 10021e3d  al - -0x40
  42 @ 10021e3f  al - -0x29
  43 @ 10021e41  al - -9
  44 @ 10021e43  al - 5
  45 @ 10021e45  eax - 0x3d453d1b
  46 @ 10021e4a  ecx = pop
  47 @ 10021e4b  flag:c = eax u< 0x3e623e0e
  48 @ 10021e4b  flag:s = eax - 0x3e623e0e s< 0
  49 @ 10021e4b  flag:o = add_overflow(eax, -0x3e623e0e)
  50 @ 10021e50  if (flag:s == flag:o) then 51 @ 0x10021e90 else 53 @ 0x10021e52

  51 @ 10021e90  al = adc.b(al, 0x3b, flag:c)
  52 @ 10021e90  goto 68 @ 0x10021e92

  53 @ 10021e52  temp0.b = divs.dp.b(ax, [esi].b)
  54 @ 10021e52  temp1.b = mods.dp.b(ax, [esi].b)
  55 @ 10021e52  al = temp0.b
  56 @ 10021e52  ah = temp1.b
  57 @ 10021e54  [edi].d = [edi].d - edi
  58 @ 10021e56  push(ecx)
  59 @ 10021e57  al, ah, eflags = __aas(al, ah, eflags)
  60 @ 10021e58  push(edi)
  61 @ 10021e59  al, ah, eflags = __aas(al, ah, eflags)
  62 @ 10021e5a  al, ah, eflags = __aas(al, ah, eflags)
  63 @ 10021e5c  temp0.b = [edi].b
  64 @ 10021e5c  [edi].b = bh
  65 @ 10021e5c  bh = temp0.b
  66 @ 10021e5e  [esi].b - [edi].b
  67 @ 10021e5e  if (flag:d) then 99 else 102

  68 @ 10021e92  edi = [ebx].d * 0x79
  69 @ 10021e95  edx - [ebx + 0xc3c083b].d
  70 @ 10021e9b  al - 0x10
  71 @ 10021e9d  al - 0x14
  72 @ 10021e9f  al - 0x18
  73 @ 10021ea1  al - 0x1c
  74 @ 10021ea3  al - 0x20
  75 @ 10021ea5  al - 0x24
  76 @ 10021ea7  al - 0x28
  77 @ 10021ea9  al - 0x2c
  78 @ 10021eab  al - 0x30
  79 @ 10021ead  al - 0x34
  80 @ 10021eaf  al - 0x38
  81 @ 10021eb1  al - 0x3c
  82 @ 10021eb3  al - 0x40
  83 @ 10021eb5  al - 0x44
  84 @ 10021eb7  al - 0x48
  85 @ 10021eb9  al - 0x4c
  86 @ 10021ebb  al - 0x50
  87 @ 10021ebd  al - 0x54
  88 @ 10021ebf  al - 0x58
  89 @ 10021ec1  al - 0x5c
  90 @ 10021ec3  al - -4
  91 @ 10021ec5  al - 0x30
  92 @ 10021ec7  eax - 0x3d8f3d3b
  93 @ 10021ecc  temp0.d = esp
  94 @ 10021ecc  esp = eax
  95 @ 10021ecc  eax = temp0.d
  96 @ 10021ecd  cond:0 = eax == 0x3dd63da2
  97 @ 10021ed2  ecx = ecx - 1
  98 @ 10021ed2  if (cond:0 || ecx != 0) then 105 @ 0x10021f11 else 111 @ 0x10021ed4

  99 @ 10021e5e  esi = esi - 1
 100 @ 10021e5e  edi = edi - 1
 101 @ 10021e5e  goto 138 @ 0x10021e5f

 102 @ 10021e5e  esi = esi + 1
 103 @ 10021e5e  edi = edi + 1
 104 @ 10021e5e  goto 138 @ 0x10021e5f

 105 @ 10021f11  al = al ^ 0xd0
 106 @ 10021f13  eax = eax ^ 0x363e35e5
 107 @ 10021f13  cond:1 = eax s>= 0
 108 @ 10021f18  push(edi)
 109 @ 10021f19  al, ah, eflags = __aaa(al, ah, eflags)
 110 @ 10021f1a  if (flag:d) then 140 else 143

 111 @ 10021ed4  bh = bh - [esi].b
 112 @ 10021ed6  bh - [esi].b
 113 @ 10021ed8  ecx = ecx + 1
 114 @ 10021ed9  di = [esi].w * -0x6a
 115 @ 10021edf  [esi].b = [esi].b s>> cl
 116 @ 10021ee2  eip = __int1()
 117 @ 10021ee3  edi = edi + [edi].d
 118 @ 10021ee6  push(edx)
 119 @ 10021ee7  al, ah, eflags = __aas(al, ah, eflags)
 120 @ 10021ee8  push(0x3f)
 121 @ 10021eed  [eax].b = [eax].b ^ al
 122 @ 10021eef  [eax].b = [eax].b + ah
 123 @ 10021ef2  [eax].b = [eax].b + al
 124 @ 10021ef4  al, ah, eflags = __aaa(al, ah, eflags)
 125 @ 10021ef5  [esi - 0x1fcf3dd0].b = [esi - 0x1fcf3dd0].b ^ cl
 126 @ 10021efb  bh = bh ^ dh
 127 @ 10021efd  [-0xffffffff92316631].b = [-0xffffffff92316631].b ^ dl
 128 @ 10021f03  [ebx + esi].d = [ebx + esi].d ^ edi
 129 @ 10021f06  temp0.d = edi
 130 @ 10021f06  edi = eax
 131 @ 10021f06  eax = temp0.d
 132 @ 10021f07  ecx = 0
 133 @ 10021f09  ebp = ebp ^ ebx
 134 @ 10021f0b  edi = edi ^ edx
 135 @ 10021f0d  esp = esp ^ [edi].d
 136 @ 10021f0f  al = al ^ 0xad
 137 @ 10021f0f  goto 105 @ 0x10021f11

 138 @ 10021e5f  al, ah, eflags = __aas(al, ah, eflags)
 139 @ 10021e60  if (flag:d) then 146 else 149

 140 @ 10021f1a  [edi].d = eax
 141 @ 10021f1a  edi = edi - 4
 142 @ 10021f1a  goto 152 @ 0x10021f1b

 143 @ 10021f1a  [edi].d = eax
 144 @ 10021f1a  edi = edi + 4
 145 @ 10021f1a  goto 152 @ 0x10021f1b

 146 @ 10021e60  [edi].d = eax
 147 @ 10021e60  edi = edi - 4
 148 @ 10021e60  goto 161 @ 0x10021e61

 149 @ 10021e60  [edi].d = eax
 150 @ 10021e60  edi = edi + 4
 151 @ 10021e60  goto 161 @ 0x10021e61

 152 @ 10021f1b  al, ah, eflags = __aaa(al, ah, eflags)
 153 @ 10021f1c  temp0, x87status = __fnstenv_memmem28()
 154 @ 10021f1c  [edi].28 = temp0.28
 155 @ 10021f1e  temp2.d = [edi].d
 156 @ 10021f1e  temp0.d = divu.dp.d(edx:eax, temp2.d)
 157 @ 10021f1e  temp1.d = modu.dp.d(edx:eax, temp2.d)
 158 @ 10021f1e  eax = temp0.d
 159 @ 10021f1e  edx = temp1.d
 160 @ 10021f20  if (cond:1) then 183 @ 0x10021f5a else 194 @ 0x10021f22

 161 @ 10021e61  al, ah, eflags = __aas(al, ah, eflags)
 162 @ 10021e62  eflags = __sti(eflags)
 163 @ 10021e63  al, ah, eflags = __aas(al, ah, eflags)
 164 @ 10021e64  [eax].b = [eax].b + ah
 165 @ 10021e66  [eax].b = [eax].b + al
 166 @ 10021e68  [eax].b = al
 167 @ 10021e6a  [eax].b = [eax].b + al
 168 @ 10021e6c  dh = dh + [eax].b
 169 @ 10021e6e  al = al | 0x30
 170 @ 10021e70  dh = dh & [eax].b
 171 @ 10021e72  esi = pop
 172 @ 10021e73  [edi + 0x30].b = [edi + 0x30].b ^ ch
 173 @ 10021e76  push(zx.d(ds))
 174 @ 10021e77  [edi - 0x60cc3bce].d = [edi - 0x60cc3bce].d ^ ecx
 175 @ 10021e7d  al = al ^ 7
 176 @ 10021e7f  eax = eax ^ 0x3569355b
 177 @ 10021e84  [0x35e93594].b = [0x35e93594].b ^ 0xdd
 178 @ 10021e8b  al, ah, eflags = __aaa(al, ah, eflags)
 179 @ 10021e8c  edx = edx - 1
 180 @ 10021e8d  [ecx].d - ecx
 181 @ 10021e8f  dl - [ebx + edi].b
 182 @ 10021e8f  goto 68 @ 0x10021e92

 183 @ 10021f5a  flag:c = 1
 184 @ 10021f5b  ebx = ebx ^ esp
 185 @ 10021f5d  dh = dh ^ al
 186 @ 10021f5f  edi = edi ^ ebp
 187 @ 10021f61  edx = edx ^ [edx].d
 188 @ 10021f63  al = al ^ 0x32
 189 @ 10021f65  al = al ^ 0x57
 190 @ 10021f67  al = al ^ 0xb5
 191 @ 10021f69  al = al ^ 0xbf
 192 @ 10021f6b  al = al ^ 0xce
 193 @ 10021f6b  goto 201 @ 0x10021f6d

 194 @ 10021f22  al = [0x2f3a0839].b
 195 @ 10021f27  bl - [eax + 0x43aba3a].b
 196 @ 10021f2d  temp6.d = [ecx + 0x3b].d
 197 @ 10021f2d  flag:c = eax u< temp6.d
 198 @ 10021f2d  flag:z = eax == temp6.d
 199 @ 10021f2d  flag:o = add_overflow(eax, neg.d(temp6.d))
 200 @ 10021f30  if (not(flag:o)) then 201 @ 0x10021f6d else 203 @ 0x10021f32

 201 @ 10021f6d  al = al ^ 0xdf
 202 @ 10021f6d  goto 204 @ 0x10021f6f

 203 @ 10021f32  if (not(flag:z) && not(flag:c)) then 204 @ 0x10021f6f else 212 @ 0x10021f34

 204 @ 10021f6f  al = al ^ 0xe5
 205 @ 10021f71  al = al ^ 0xef
 206 @ 10021f73  al = al ^ 0xf5
 207 @ 10021f75  al = al ^ 0xff
 208 @ 10021f77  al = al ^ 9
 209 @ 10021f79  eax = eax ^ 0x35233513
 210 @ 10021f7e  eax = eax ^ 0x35423537
 211 @ 10021f7e  goto 219 @ 0x10021f84

 212 @ 10021f34  al = __in_al_dx(dx, eflags)
 213 @ 10021f35  ecx - [esp + edi].d
 214 @ 10021f38  al = al - 0x3d
 215 @ 10021f3a  edx = edx + 1
 216 @ 10021f3b  cond:2 = eax - 0x3ddc3d8c s>= 0
 217 @ 10021f40  ecx = ecx - 1
 218 @ 10021f40  if (ecx != 0) then 222 @ 0x10021f7f else 224 @ 0x10021f42

 219 @ 10021f84  push(ecx)
 220 @ 10021f85  eax = eax ^ 0x35733568
 221 @ 10021f85  goto 225 @ 0x10021f8a

 222 @ 10021f7f  eax = eax ^ 0x35423537
 223 @ 10021f7f  goto 219 @ 0x10021f84

 224 @ 10021f42  if (cond:2) then 230 @ 0x10021f82 else 233 @ 0x10021f44

 225 @ 10021f8a  edx:eax = sx.q(eax)
 226 @ 10021f8b  eax = eax ^ 0x360d35d6
 227 @ 10021f90  ch = 0x36
 228 @ 10021f92  [esi].b = [esi].b << cl
 229 @ 10021f94  undefined

 230 @ 10021f82  edx = edx + 1
 231 @ 10021f83  eax = eax ^ 0x35683551
 232 @ 10021f88  if (eax u>= 0) then 236 @ 0x10021fbf else 225 @ 0x10021f8a

 233 @ 10021f44  [edi].b - -0x32
 234 @ 10021f47  al, ah, eflags = __aas(al, ah, eflags)
 235 @ 10021f48  trap(0xd)
{ Does not return }

 236 @ 10021fbf  al - -0x28
 237 @ 10021fc1  al - -0x1c
 238 @ 10021fc3  al - 0x14
 239 @ 10021fc5  eax - 0x3e083dfe
 240 @ 10021fca  [esi].d = [esi].d & edi
 241 @ 10021fcc  temp7.d = ecx
 242 @ 10021fcc  ecx = ecx - 1
 243 @ 10021fcc  flag:z = temp7.d == 1
 244 @ 10021fcc  flag:o = add_overflow(temp7.d, -1)
 245 @ 10021fcd  push(ebp)
 246 @ 10021fcf  temp0, eflags = __arpl_memw_gpr16([esi].w, di)
 247 @ 10021fcf  [esi].w = temp0.w
 248 @ 10021fd2  if (not(flag:o)) then 249 @ 0x10022013 else 254 @ 0x10021fd4

 249 @ 10022013  push(zx.d(ss))
 250 @ 10022015  al, ah, eflags = __aaa(al, ah, eflags)
 251 @ 10022016  dh - [edi].b
 252 @ 10022018  esi = [edi].d * 0x392c37c7
 253 @ 10022018  goto 264 @ 0x1002201e

 254 @ 10021fd4  temp0.d = [esi].d
 255 @ 10021fd4  [esi].d = edi
 256 @ 10021fd4  edi = temp0.d
 257 @ 10021fd6  temp0.d = ebx
 258 @ 10021fd6  ebx = eax
 259 @ 10021fd6  eax = temp0.d
 260 @ 10021fd7  edi, es = __les_gprz_memp([esi].6)
 261 @ 10021fda  al = [ebx + al.d].b
 262 @ 10021fdb  ecx = ecx - 1
 263 @ 10021fdb  if (flag:z || ecx != 0) then 267 @ 0x1002201c else 269 @ 0x10021fde  {"5?Z?d?t?"}

 264 @ 1002201e  [ecx].b & bh
 265 @ 10022020  eax - [edi].d
 266 @ 10022020  if (flag:d) then 273 else 275

 267 @ 1002201c  al = al - 0x39
 268 @ 1002201c  goto 264 @ 0x1002201e

 269 @ 10021fde  eax = eax ^ 0x643f5a3f
 270 @ 10021fde  cond:3 = eax == 0
 271 @ 10021fe3  al, ah, eflags = __aas(al, ah, eflags)
 272 @ 10021fe4  if (cond:3) then 277 @ 0x10022025 else 300 @ 0x10021fe6

 273 @ 10022020  edi = edi - 4
 274 @ 10022020  goto 308 @ 0x10022021

 275 @ 10022020  edi = edi + 4
 276 @ 10022020  goto 308 @ 0x10022021

 277 @ 10022025  esp - [ebx + edi - 0x78].d
 278 @ 10022029  esi - [ecx - 0x1c331c4].d
 279 @ 1002202f  al - -0x6a
 280 @ 10022031  eax - 0x3dfd3dd1
 281 @ 10022036  [esi].d = [esi].d | edi
 282 @ 10022038  ss = pop.w
 283 @ 10022039  temp8.d = eax
 284 @ 10022039  eax = eax & 0x703e4f3e
 285 @ 10022039  flag:c = 0
 286 @ 1002203f  eax = [-0xffffffffd93ecd3e].d
 287 @ 10022045  __out_immb_oeax(0x3e, eax, eflags)
 288 @ 10022048  flag:c = flag:c ^ 1
 289 @ 10022049  temp9.b = bh
 290 @ 10022049  temp10.b = [edi].b
 291 @ 10022049  cond:4 = flag:c
 292 @ 10022049  bh = adc.b(temp9.b, temp10.b, cond:4)
 293 @ 10022049  flag:c = adc.b(temp9.b, temp10.b, cond:4) u< temp9.b || (cond:4 && adc.b(temp9.b, temp10.b, cond:4) == temp9.b)
 294 @ 1002204c  eax = sbb.d(eax, 0x513f433f, flag:c)
 295 @ 10022051  al, ah, eflags = __aas(al, ah, eflags)
 296 @ 10022052  [edi].d - 0x3fca3f8c
 297 @ 10022058  [edi].b = [edi].b s>> cl
 298 @ 1002205a  [edi].w = flagbit.w(flag:c0, 8) | flagbit.w(flag:c1, 9) | flagbit.w(flag:c2, 0xa) | flagbit.w(flag:c3, 0xe) | (top & 7) << 0xb
 299 @ 1002205c  trap(0xd)
{ Does not return }

 300 @ 10021fe6  [eax].b = [eax].b + al
 301 @ 10021fe8  [eax].b = [eax].b + dl
 302 @ 10021feb  [eax].b = [eax].b + bh
 303 @ 10021fee  [eax].b = [eax].b + al
 304 @ 10021ff0  call(0x6a332727)
 305 @ 10021ff7  [edi + 0x2c32fe32].d = [edi + 0x2c32fe32].d ^ esp
 306 @ 10021ffd  ecx = ecx ^ [edx + 0x33].d
 307 @ 10022000  undefined

 308 @ 10022021  [edi].d - eax
 309 @ 10022023  ebx - [ecx].d
 310 @ 10022023  goto 277 @ 0x10022025

10021f49                             3f 00 00 00 40 00 00 9c 00 00 00 0e 30 25 31 f0 31                             ?...@.......0%1.1
10021f95                                                                 36 14 37 60 37 d7 37 56 38 e1 38                       6.7`7.7V8.8
10021fa0  9a 39 a0 39 a8 39 bb 39 cc 39 11 3a 61 3b 89 3b 95 3b a3 3b b1 3b 04 3c 62 3c 76 3c b1 3c c9     .9.9.9.9.9.:a;.;.;.;.;.<b<v<.<.

10022001  int32_t __convention("regparm") sub_10022001(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4 @ esi, int32_t* arg5 @ edi) __noreturn

   0 @ 10022001  temp0.d = esi
   1 @ 10022001  temp1.d = [esp + esi + 0x350834c7].d
   2 @ 10022001  esi = esi ^ [esp + esi + 0x350834c7].d
   3 @ 10022001  flag:c = 0
   4 @ 10022008  eax = adc.d(eax, -0x52ca58cb, flag:c)
   5 @ 1002200d  eax = eax ^ 0x36373631
   6 @ 10022013  push(zx.d(ss))
   7 @ 10022015  al, ah, eflags = __aaa(al, ah, eflags)
   8 @ 10022016  dh - [edi].b
   9 @ 10022018  esi = [edi].d * 0x392c37c7
  10 @ 1002201e  [ecx].b & bh
  11 @ 10022020  eax - [edi].d
  12 @ 10022020  if (flag:d) then 13 else 15

  13 @ 10022020  edi = edi - 4
  14 @ 10022020  goto 17 @ 0x10022021

  15 @ 10022020  edi = edi + 4
  16 @ 10022020  goto 17 @ 0x10022021

  17 @ 10022021  [edi].d - eax
  18 @ 10022023  ebx - [ecx].d
  19 @ 10022025  esp - [ebx + edi - 0x78].d
  20 @ 10022029  esi - [ecx - 0x1c331c4].d
  21 @ 1002202f  al - -0x6a
  22 @ 10022031  eax - 0x3dfd3dd1
  23 @ 10022036  [esi].d = [esi].d | edi
  24 @ 10022038  ss = pop.w
  25 @ 10022039  temp2.d = eax
  26 @ 10022039  eax = eax & 0x703e4f3e
  27 @ 10022039  flag:c = 0
  28 @ 1002203f  eax = [-0xffffffffd93ecd3e].d
  29 @ 10022045  __out_immb_oeax(0x3e, eax, eflags)
  30 @ 10022048  flag:c = flag:c ^ 1
  31 @ 10022049  temp3.b = bh
  32 @ 10022049  temp4.b = [edi].b
  33 @ 10022049  cond:0 = flag:c
  34 @ 10022049  bh = adc.b(temp3.b, temp4.b, cond:0)
  35 @ 10022049  flag:c = adc.b(temp3.b, temp4.b, cond:0) u< temp3.b || (cond:0 && adc.b(temp3.b, temp4.b, cond:0) == temp3.b)
  36 @ 1002204c  eax = sbb.d(eax, 0x513f433f, flag:c)
  37 @ 10022051  al, ah, eflags = __aas(al, ah, eflags)
  38 @ 10022052  [edi].d - 0x3fca3f8c
  39 @ 10022058  [edi].b = [edi].b s>> cl
  40 @ 1002205a  [edi].w = flagbit.w(flag:c0, 8) | flagbit.w(flag:c1, 9) | flagbit.w(flag:c2, 0xa) | flagbit.w(flag:c3, 0xe) | (top & 7) << 0xb
  41 @ 1002205c  trap(0xd)
{ Does not return }

1002205d                                                                                         3f ff 3f                               ?.?
10022060  00 60 00 00 04 01 00 00 8b 30 b1 30 bd 30 eb 30 00 31 06 31 14 31 24 31 36 31 41 31 66 31 7b 31  .`.......0.0.0.0.1.1.1$161A1f1{1
10022080  81 31 8f 31 9e 31 10 32 83 32 96 32 e2 32 f7 32 fd 32 0b 33 19 33 24 33 75 33 7f 33 00 34 15 34  .1.1.1.2.2.2.2.2.2.3.3$3u3.3.4.4
100220a0  1b 34 29 34 38 34 4f 34 73 34 79 34 8b 34 a8 34 b9 34 ca 34 ee 34 f8 34 13 35 25 35 2d 35 55 35  .4)484O4s4y4.4.4.4.4.4.4.5%5-5U5
100220c0  5c 35 61 35 66 35 6d 35 79 35 7f 35 88 35 93 35 a1 35 b1 35 cf 35 f5 35 26 36 38 36 41 36 48 36  \5a5f5m5y5.5.5.5.5.5.5.5&686A6H6
100220e0  71 36 79 36 80 36 c0 36 c6 36 d0 36 d9 36 40 37 45 37 69 37 74 37 ad 37 b3 37 d9 37 e4 37 25 38  q6y6.6.6.6.6.6@7E7i7t7.7.7.7.7%8
10022100  2a 38 53 38 aa 38 09 39 0e 39 35 39 40 39 b8 39 dd 39 e3 39 01 3a 1c 3a 29 3a 4a 3a 54 3a aa 3a  *8S8.8.9.959@9.9.9.9.:.:):J:T:.:
10022120  b0 3a 52 3b 61 3b 73 3b 7f 3b ab 3b b2 3b c0 3b d9 3b 11 3c 1b 3c 5d 3c 63 3c 81 3c 96 3c a3 3c  .:R;a;s;.;.;.;.;.;.<.<]<c<.<.<.<
10022140  bb 3c c5 3c 56 3d 5c 3d 7a 3d a4 3d ae 3d dc 3d fd 3d 27 3e 31 3e cd 3e eb 3e 17 3f 2a 3f b5 3f  .<.<V=\=z=.=.=.=.='>1>.>.>.?*?.?
10022160  d3 3f 00 00 00 70 00 00 92 00 00 00 07 30 12 30 3d 30 52 30 58 30 66 30 75 30 d0 30 de 30 e4 30  .?...p.......0.0=0R0X0f0u0.0.0.0
10022180  ee 30 f7 30 40 31 eb 31 09 32 39 32 44 32 76 32 8b 32 91 32 9f 32 ad 32 50 33 6e 33 ab 33 c0 33  .0.0@1.1.292D2v2.2.2.2.2P3n3.3.3
100221a0  c6 33 d4 33 e3 33 6b 34 75 34 85 34 90 34 c1 34 c6 34 e2 34 ec 34 f5 34 00 35 fd 35 0f 36 15 36  .3.3.3k4u4.4.4.4.4.4.4.4.5.5.6.6
100221c0  1f 36 28 36 ed 36 44 37 4c 37 56 37 76 37 94 37 9d 37 a8 37 ca 37 ec 37 f2 37 f7 37 fd 37 09 38  .6(6.6D7L7V7v7.7.7.7.7.7.7.7.7.8
100221e0  16 38 20 38 50 38 61 38 ab 38 b7 38 c1 38 ca 38 d1 38 39 79 43 79 00 80 00 00 28 00 00 00 40 31  .8 8P8a8.8.8.8.8.89yCy....(...@1
10022200  44 31 8c 34 90 34 40 35 48 35 4c 35 68 35 84 35 88 35 94 35 98 35 a4 35 a8 35 00 00 00 90 00 00  D1.4.4@5H5L5h5.5.5.5.5.5.5......
10022220  68 00 00 00 10 30 1c 30 28 30 34 30 40 30 4c 30 58 30 64 30 7c 30 94 30 98 30 ac 31 b0 31 b4 31  h....0.0(040@0L0X0d0|0.0.0.1.1.1
10022240  b8 31 cc 32 d0 32 d4 32 d8 32 ec 33 f0 33 f4 33 f8 33 0c 35 10 35 14 35 18 35 2c 36 30 36 34 36  .1.2.2.2.2.3.3.3.3.5.5.5.5,60646
10022260  38 36 4c 37 50 37 54 37 58 37 6c 38 70 38 74 38 78 38 8c 39 90 39 94 39 98 39 ac 3a b0 3a b4 3a  86L7P7T7X7l8p8t8x8.9.9.9.9.:.:.:
10022280  d8 3b 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  .;..............................
100222a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100222c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100222e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022300  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022320  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022340  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022360  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022380  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100223a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100223c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100223e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022400  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022420  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022440  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022460  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022480  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100224a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100224c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
100224e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
10022500  00 00 00 00 00 00 00 00                                                                          ........

.synthetic_builtins section started  {0x10022510-0x10022524}
10022510  extern void* __builtin_memcpy(void* dest, void const* src, uint32_t n)
10022514  extern void* __builtin_memset(void* s, int32_t c, uint32_t n)
10022518  extern char* __builtin_strcpy(char* dest, char const* src)
1002251c  extern char* __builtin_strncpy(char* dest, char const* src, uint32_t n)
10022520  extern wchar32* __builtin_wcscpy(wchar32* dest, wchar32 const* src)
.synthetic_builtins section ended  {0x10022510-0x10022524}

